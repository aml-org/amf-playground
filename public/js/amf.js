if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.yaml = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';


var yaml = require('./lib/js-yaml.js');


module.exports = yaml;

},{"./lib/js-yaml.js":2}],2:[function(require,module,exports){
'use strict';


var loader = require('./js-yaml/loader');
var dumper = require('./js-yaml/dumper');


function deprecated(name) {
  return function () {
    throw new Error('Function ' + name + ' is deprecated and cannot be used.');
  };
}


module.exports.Type                = require('./js-yaml/type');
module.exports.Schema              = require('./js-yaml/schema');
module.exports.FAILSAFE_SCHEMA     = require('./js-yaml/schema/failsafe');
module.exports.JSON_SCHEMA         = require('./js-yaml/schema/json');
module.exports.CORE_SCHEMA         = require('./js-yaml/schema/core');
module.exports.DEFAULT_SAFE_SCHEMA = require('./js-yaml/schema/default_safe');
module.exports.DEFAULT_FULL_SCHEMA = require('./js-yaml/schema/default_full');
module.exports.load                = loader.load;
module.exports.loadAll             = loader.loadAll;
module.exports.safeLoad            = loader.safeLoad;
module.exports.safeLoadAll         = loader.safeLoadAll;
module.exports.dump                = dumper.dump;
module.exports.safeDump            = dumper.safeDump;
module.exports.YAMLException       = require('./js-yaml/exception');

// Deprecated schema names from JS-YAML 2.0.x
module.exports.MINIMAL_SCHEMA = require('./js-yaml/schema/failsafe');
module.exports.SAFE_SCHEMA    = require('./js-yaml/schema/default_safe');
module.exports.DEFAULT_SCHEMA = require('./js-yaml/schema/default_full');

// Deprecated functions from JS-YAML 1.x.x
module.exports.scan           = deprecated('scan');
module.exports.parse          = deprecated('parse');
module.exports.compose        = deprecated('compose');
module.exports.addConstructor = deprecated('addConstructor');

},{"./js-yaml/dumper":4,"./js-yaml/exception":5,"./js-yaml/loader":6,"./js-yaml/schema":8,"./js-yaml/schema/core":9,"./js-yaml/schema/default_full":10,"./js-yaml/schema/default_safe":11,"./js-yaml/schema/failsafe":12,"./js-yaml/schema/json":13,"./js-yaml/type":14}],3:[function(require,module,exports){
'use strict';


function isNothing(subject) {
  return (typeof subject === 'undefined') || (subject === null);
}


function isObject(subject) {
  return (typeof subject === 'object') && (subject !== null);
}


function toArray(sequence) {
  if (Array.isArray(sequence)) return sequence;
  else if (isNothing(sequence)) return [];

  return [ sequence ];
}


function extend(target, source) {
  var index, length, key, sourceKeys;

  if (source) {
    sourceKeys = Object.keys(source);

    for (index = 0, length = sourceKeys.length; index < length; index += 1) {
      key = sourceKeys[index];
      target[key] = source[key];
    }
  }

  return target;
}


function repeat(string, count) {
  var result = '', cycle;

  for (cycle = 0; cycle < count; cycle += 1) {
    result += string;
  }

  return result;
}


function isNegativeZero(number) {
  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);
}


module.exports.isNothing      = isNothing;
module.exports.isObject       = isObject;
module.exports.toArray        = toArray;
module.exports.repeat         = repeat;
module.exports.isNegativeZero = isNegativeZero;
module.exports.extend         = extend;

},{}],4:[function(require,module,exports){
'use strict';

/*eslint-disable no-use-before-define*/

var common              = require('./common');
var YAMLException       = require('./exception');
var DEFAULT_FULL_SCHEMA = require('./schema/default_full');
var DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');

var _toString       = Object.prototype.toString;
var _hasOwnProperty = Object.prototype.hasOwnProperty;

var CHAR_TAB                  = 0x09; /* Tab */
var CHAR_LINE_FEED            = 0x0A; /* LF */
var CHAR_SPACE                = 0x20; /* Space */
var CHAR_EXCLAMATION          = 0x21; /* ! */
var CHAR_DOUBLE_QUOTE         = 0x22; /* " */
var CHAR_SHARP                = 0x23; /* # */
var CHAR_PERCENT              = 0x25; /* % */
var CHAR_AMPERSAND            = 0x26; /* & */
var CHAR_SINGLE_QUOTE         = 0x27; /* ' */
var CHAR_ASTERISK             = 0x2A; /* * */
var CHAR_COMMA                = 0x2C; /* , */
var CHAR_MINUS                = 0x2D; /* - */
var CHAR_COLON                = 0x3A; /* : */
var CHAR_GREATER_THAN         = 0x3E; /* > */
var CHAR_QUESTION             = 0x3F; /* ? */
var CHAR_COMMERCIAL_AT        = 0x40; /* @ */
var CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */
var CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */
var CHAR_GRAVE_ACCENT         = 0x60; /* ` */
var CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */
var CHAR_VERTICAL_LINE        = 0x7C; /* | */
var CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */

var ESCAPE_SEQUENCES = {};

ESCAPE_SEQUENCES[0x00]   = '\\0';
ESCAPE_SEQUENCES[0x07]   = '\\a';
ESCAPE_SEQUENCES[0x08]   = '\\b';
ESCAPE_SEQUENCES[0x09]   = '\\t';
ESCAPE_SEQUENCES[0x0A]   = '\\n';
ESCAPE_SEQUENCES[0x0B]   = '\\v';
ESCAPE_SEQUENCES[0x0C]   = '\\f';
ESCAPE_SEQUENCES[0x0D]   = '\\r';
ESCAPE_SEQUENCES[0x1B]   = '\\e';
ESCAPE_SEQUENCES[0x22]   = '\\"';
ESCAPE_SEQUENCES[0x5C]   = '\\\\';
ESCAPE_SEQUENCES[0x85]   = '\\N';
ESCAPE_SEQUENCES[0xA0]   = '\\_';
ESCAPE_SEQUENCES[0x2028] = '\\L';
ESCAPE_SEQUENCES[0x2029] = '\\P';

var DEPRECATED_BOOLEANS_SYNTAX = [
  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',
  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'
];

function compileStyleMap(schema, map) {
  var result, keys, index, length, tag, style, type;

  if (map === null) return {};

  result = {};
  keys = Object.keys(map);

  for (index = 0, length = keys.length; index < length; index += 1) {
    tag = keys[index];
    style = String(map[tag]);

    if (tag.slice(0, 2) === '!!') {
      tag = 'tag:yaml.org,2002:' + tag.slice(2);
    }
    type = schema.compiledTypeMap['fallback'][tag];

    if (type && _hasOwnProperty.call(type.styleAliases, style)) {
      style = type.styleAliases[style];
    }

    result[tag] = style;
  }

  return result;
}

function encodeHex(character) {
  var string, handle, length;

  string = character.toString(16).toUpperCase();

  if (character <= 0xFF) {
    handle = 'x';
    length = 2;
  } else if (character <= 0xFFFF) {
    handle = 'u';
    length = 4;
  } else if (character <= 0xFFFFFFFF) {
    handle = 'U';
    length = 8;
  } else {
    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');
  }

  return '\\' + handle + common.repeat('0', length - string.length) + string;
}

function State(options) {
  this.schema       = options['schema'] || DEFAULT_FULL_SCHEMA;
  this.indent       = Math.max(1, (options['indent'] || 2));
  this.skipInvalid  = options['skipInvalid'] || false;
  this.flowLevel    = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);
  this.styleMap     = compileStyleMap(this.schema, options['styles'] || null);
  this.sortKeys     = options['sortKeys'] || false;
  this.lineWidth    = options['lineWidth'] || 80;
  this.noRefs       = options['noRefs'] || false;
  this.noCompatMode = options['noCompatMode'] || false;

  this.implicitTypes = this.schema.compiledImplicit;
  this.explicitTypes = this.schema.compiledExplicit;

  this.tag = null;
  this.result = '';

  this.duplicates = [];
  this.usedDuplicates = null;
}

// Indents every line in a string. Empty lines (\n only) are not indented.
function indentString(string, spaces) {
  var ind = common.repeat(' ', spaces),
      position = 0,
      next = -1,
      result = '',
      line,
      length = string.length;

  while (position < length) {
    next = string.indexOf('\n', position);
    if (next === -1) {
      line = string.slice(position);
      position = length;
    } else {
      line = string.slice(position, next + 1);
      position = next + 1;
    }

    if (line.length && line !== '\n') result += ind;

    result += line;
  }

  return result;
}

function generateNextLine(state, level) {
  return '\n' + common.repeat(' ', state.indent * level);
}

function testImplicitResolving(state, str) {
  var index, length, type;

  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {
    type = state.implicitTypes[index];

    if (type.resolve(str)) {
      return true;
    }
  }

  return false;
}

// [33] s-white ::= s-space | s-tab
function isWhitespace(c) {
  return c === CHAR_SPACE || c === CHAR_TAB;
}

// Returns true if the character can be printed without escaping.
// From YAML 1.2: "any allowed characters known to be non-printable
// should also be escaped. [However,] This isn’t mandatory"
// Derived from nb-char - \t - #x85 - #xA0 - #x2028 - #x2029.
function isPrintable(c) {
  return  (0x00020 <= c && c <= 0x00007E)
      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)
      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)
      ||  (0x10000 <= c && c <= 0x10FFFF);
}

// Simplified test for values allowed after the first character in plain style.
function isPlainSafe(c) {
  // Uses a subset of nb-char - c-flow-indicator - ":" - "#"
  // where nb-char ::= c-printable - b-char - c-byte-order-mark.
  return isPrintable(c) && c !== 0xFEFF
    // - c-flow-indicator
    && c !== CHAR_COMMA
    && c !== CHAR_LEFT_SQUARE_BRACKET
    && c !== CHAR_RIGHT_SQUARE_BRACKET
    && c !== CHAR_LEFT_CURLY_BRACKET
    && c !== CHAR_RIGHT_CURLY_BRACKET
    // - ":" - "#"
    && c !== CHAR_COLON
    && c !== CHAR_SHARP;
}

// Simplified test for values allowed as the first character in plain style.
function isPlainSafeFirst(c) {
  // Uses a subset of ns-char - c-indicator
  // where ns-char = nb-char - s-white.
  return isPrintable(c) && c !== 0xFEFF
    && !isWhitespace(c) // - s-white
    // - (c-indicator ::=
    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”
    && c !== CHAR_MINUS
    && c !== CHAR_QUESTION
    && c !== CHAR_COLON
    && c !== CHAR_COMMA
    && c !== CHAR_LEFT_SQUARE_BRACKET
    && c !== CHAR_RIGHT_SQUARE_BRACKET
    && c !== CHAR_LEFT_CURLY_BRACKET
    && c !== CHAR_RIGHT_CURLY_BRACKET
    // | “#” | “&” | “*” | “!” | “|” | “>” | “'” | “"”
    && c !== CHAR_SHARP
    && c !== CHAR_AMPERSAND
    && c !== CHAR_ASTERISK
    && c !== CHAR_EXCLAMATION
    && c !== CHAR_VERTICAL_LINE
    && c !== CHAR_GREATER_THAN
    && c !== CHAR_SINGLE_QUOTE
    && c !== CHAR_DOUBLE_QUOTE
    // | “%” | “@” | “`”)
    && c !== CHAR_PERCENT
    && c !== CHAR_COMMERCIAL_AT
    && c !== CHAR_GRAVE_ACCENT;
}

var STYLE_PLAIN   = 1,
    STYLE_SINGLE  = 2,
    STYLE_LITERAL = 3,
    STYLE_FOLDED  = 4,
    STYLE_DOUBLE  = 5;

// Determines which scalar styles are possible and returns the preferred style.
// lineWidth = -1 => no limit.
// Pre-conditions: str.length > 0.
// Post-conditions:
//    STYLE_PLAIN or STYLE_SINGLE => no \n are in the string.
//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).
//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).
function chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {
  var i;
  var char;
  var hasLineBreak = false;
  var hasFoldableLine = false; // only checked if shouldTrackWidth
  var shouldTrackWidth = lineWidth !== -1;
  var previousLineBreak = -1; // count the first line correctly
  var plain = isPlainSafeFirst(string.charCodeAt(0))
          && !isWhitespace(string.charCodeAt(string.length - 1));

  if (singleLineOnly) {
    // Case: no block styles.
    // Check for disallowed characters to rule out plain and single.
    for (i = 0; i < string.length; i++) {
      char = string.charCodeAt(i);
      if (!isPrintable(char)) {
        return STYLE_DOUBLE;
      }
      plain = plain && isPlainSafe(char);
    }
  } else {
    // Case: block styles permitted.
    for (i = 0; i < string.length; i++) {
      char = string.charCodeAt(i);
      if (char === CHAR_LINE_FEED) {
        hasLineBreak = true;
        // Check if any line can be folded.
        if (shouldTrackWidth) {
          hasFoldableLine = hasFoldableLine ||
            // Foldable line = too long, and not more-indented.
            (i - previousLineBreak - 1 > lineWidth &&
             string[previousLineBreak + 1] !== ' ');
          previousLineBreak = i;
        }
      } else if (!isPrintable(char)) {
        return STYLE_DOUBLE;
      }
      plain = plain && isPlainSafe(char);
    }
    // in case the end is missing a \n
    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&
      (i - previousLineBreak - 1 > lineWidth &&
       string[previousLineBreak + 1] !== ' '));
  }
  // Although every style can represent \n without escaping, prefer block styles
  // for multiline, since they're more readable and they don't add empty lines.
  // Also prefer folding a super-long line.
  if (!hasLineBreak && !hasFoldableLine) {
    // Strings interpretable as another type have to be quoted;
    // e.g. the string 'true' vs. the boolean true.
    return plain && !testAmbiguousType(string)
      ? STYLE_PLAIN : STYLE_SINGLE;
  }
  // Edge case: block indentation indicator can only have one digit.
  if (string[0] === ' ' && indentPerLevel > 9) {
    return STYLE_DOUBLE;
  }
  // At this point we know block styles are valid.
  // Prefer literal style unless we want to fold.
  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;
}

// Note: line breaking/folding is implemented for only the folded style.
// NB. We drop the last trailing newline (if any) of a returned block scalar
//  since the dumper adds its own newline. This always works:
//    • No ending newline => unaffected; already using strip "-" chomping.
//    • Ending newline    => removed then restored.
//  Importantly, this keeps the "+" chomp indicator from gaining an extra line.
function writeScalar(state, string, level, iskey) {
  state.dump = (function () {
    if (string.length === 0) {
      return "''";
    }
    if (!state.noCompatMode &&
        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {
      return "'" + string + "'";
    }

    var indent = state.indent * Math.max(1, level); // no 0-indent scalars
    // As indentation gets deeper, let the width decrease monotonically
    // to the lower bound min(state.lineWidth, 40).
    // Note that this implies
    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.
    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.
    // This behaves better than a constant minimum width which disallows narrower options,
    // or an indent threshold which causes the width to suddenly increase.
    var lineWidth = state.lineWidth === -1
      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);

    // Without knowing if keys are implicit/explicit, assume implicit for safety.
    var singleLineOnly = iskey
      // No block styles in flow mode.
      || (state.flowLevel > -1 && level >= state.flowLevel);
    function testAmbiguity(string) {
      return testImplicitResolving(state, string);
    }

    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {
      case STYLE_PLAIN:
        return string;
      case STYLE_SINGLE:
        return "'" + string.replace(/'/g, "''") + "'";
      case STYLE_LITERAL:
        return '|' + blockHeader(string, state.indent)
          + dropEndingNewline(indentString(string, indent));
      case STYLE_FOLDED:
        return '>' + blockHeader(string, state.indent)
          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));
      case STYLE_DOUBLE:
        return '"' + escapeString(string, lineWidth) + '"';
      default:
        throw new YAMLException('impossible error: invalid scalar style');
    }
  }());
}

// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.
function blockHeader(string, indentPerLevel) {
  var indentIndicator = (string[0] === ' ') ? String(indentPerLevel) : '';

  // note the special case: the string '\n' counts as a "trailing" empty line.
  var clip =          string[string.length - 1] === '\n';
  var keep = clip && (string[string.length - 2] === '\n' || string === '\n');
  var chomp = keep ? '+' : (clip ? '' : '-');

  return indentIndicator + chomp + '\n';
}

// (See the note for writeScalar.)
function dropEndingNewline(string) {
  return string[string.length - 1] === '\n' ? string.slice(0, -1) : string;
}

// Note: a long line without a suitable break point will exceed the width limit.
// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.
function foldString(string, width) {
  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—
  // unless they're before or after a more-indented line, or at the very
  // beginning or end, in which case $k$ maps to $k$.
  // Therefore, parse each chunk as newline(s) followed by a content line.
  var lineRe = /(\n+)([^\n]*)/g;

  // first line (possibly an empty line)
  var result = (function () {
    var nextLF = string.indexOf('\n');
    nextLF = nextLF !== -1 ? nextLF : string.length;
    lineRe.lastIndex = nextLF;
    return foldLine(string.slice(0, nextLF), width);
  }());
  // If we haven't reached the first content line yet, don't add an extra \n.
  var prevMoreIndented = string[0] === '\n' || string[0] === ' ';
  var moreIndented;

  // rest of the lines
  var match;
  while ((match = lineRe.exec(string))) {
    var prefix = match[1], line = match[2];
    moreIndented = (line[0] === ' ');
    result += prefix
      + (!prevMoreIndented && !moreIndented && line !== ''
        ? '\n' : '')
      + foldLine(line, width);
    prevMoreIndented = moreIndented;
  }

  return result;
}

// Greedy line breaking.
// Picks the longest line under the limit each time,
// otherwise settles for the shortest line over the limit.
// NB. More-indented lines *cannot* be folded, as that would add an extra \n.
function foldLine(line, width) {
  if (line === '' || line[0] === ' ') return line;

  // Since a more-indented line adds a \n, breaks can't be followed by a space.
  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.
  var match;
  // start is an inclusive index. end, curr, and next are exclusive.
  var start = 0, end, curr = 0, next = 0;
  var result = '';

  // Invariants: 0 <= start <= length-1.
  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.
  // Inside the loop:
  //   A match implies length >= 2, so curr and next are <= length-2.
  while ((match = breakRe.exec(line))) {
    next = match.index;
    // maintain invariant: curr - start <= width
    if (next - start > width) {
      end = (curr > start) ? curr : next; // derive end <= length-2
      result += '\n' + line.slice(start, end);
      // skip the space that was output as \n
      start = end + 1;                    // derive start <= length-1
    }
    curr = next;
  }

  // By the invariants, start <= length-1, so there is something left over.
  // It is either the whole string or a part starting from non-whitespace.
  result += '\n';
  // Insert a break if the remainder is too long and there is a break available.
  if (line.length - start > width && curr > start) {
    result += line.slice(start, curr) + '\n' + line.slice(curr + 1);
  } else {
    result += line.slice(start);
  }

  return result.slice(1); // drop extra \n joiner
}

// Escapes a double-quoted string.
function escapeString(string) {
  var result = '';
  var char;
  var escapeSeq;

  for (var i = 0; i < string.length; i++) {
    char = string.charCodeAt(i);
    escapeSeq = ESCAPE_SEQUENCES[char];
    result += !escapeSeq && isPrintable(char)
      ? string[i]
      : escapeSeq || encodeHex(char);
  }

  return result;
}

function writeFlowSequence(state, level, object) {
  var _result = '',
      _tag    = state.tag,
      index,
      length;

  for (index = 0, length = object.length; index < length; index += 1) {
    // Write only valid elements.
    if (writeNode(state, level, object[index], false, false)) {
      if (index !== 0) _result += ', ';
      _result += state.dump;
    }
  }

  state.tag = _tag;
  state.dump = '[' + _result + ']';
}

function writeBlockSequence(state, level, object, compact) {
  var _result = '',
      _tag    = state.tag,
      index,
      length;

  for (index = 0, length = object.length; index < length; index += 1) {
    // Write only valid elements.
    if (writeNode(state, level + 1, object[index], true, true)) {
      if (!compact || index !== 0) {
        _result += generateNextLine(state, level);
      }
      _result += '- ' + state.dump;
    }
  }

  state.tag = _tag;
  state.dump = _result || '[]'; // Empty sequence if no valid values.
}

function writeFlowMapping(state, level, object) {
  var _result       = '',
      _tag          = state.tag,
      objectKeyList = Object.keys(object),
      index,
      length,
      objectKey,
      objectValue,
      pairBuffer;

  for (index = 0, length = objectKeyList.length; index < length; index += 1) {
    pairBuffer = '';

    if (index !== 0) pairBuffer += ', ';

    objectKey = objectKeyList[index];
    objectValue = object[objectKey];

    if (!writeNode(state, level, objectKey, false, false)) {
      continue; // Skip this pair because of invalid key;
    }

    if (state.dump.length > 1024) pairBuffer += '? ';

    pairBuffer += state.dump + ': ';

    if (!writeNode(state, level, objectValue, false, false)) {
      continue; // Skip this pair because of invalid value.
    }

    pairBuffer += state.dump;

    // Both key and value are valid.
    _result += pairBuffer;
  }

  state.tag = _tag;
  state.dump = '{' + _result + '}';
}

function writeBlockMapping(state, level, object, compact) {
  var _result       = '',
      _tag          = state.tag,
      objectKeyList = Object.keys(object),
      index,
      length,
      objectKey,
      objectValue,
      explicitPair,
      pairBuffer;

  // Allow sorting keys so that the output file is deterministic
  if (state.sortKeys === true) {
    // Default sorting
    objectKeyList.sort();
  } else if (typeof state.sortKeys === 'function') {
    // Custom sort function
    objectKeyList.sort(state.sortKeys);
  } else if (state.sortKeys) {
    // Something is wrong
    throw new YAMLException('sortKeys must be a boolean or a function');
  }

  for (index = 0, length = objectKeyList.length; index < length; index += 1) {
    pairBuffer = '';

    if (!compact || index !== 0) {
      pairBuffer += generateNextLine(state, level);
    }

    objectKey = objectKeyList[index];
    objectValue = object[objectKey];

    if (!writeNode(state, level + 1, objectKey, true, true, true)) {
      continue; // Skip this pair because of invalid key.
    }

    explicitPair = (state.tag !== null && state.tag !== '?') ||
                   (state.dump && state.dump.length > 1024);

    if (explicitPair) {
      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
        pairBuffer += '?';
      } else {
        pairBuffer += '? ';
      }
    }

    pairBuffer += state.dump;

    if (explicitPair) {
      pairBuffer += generateNextLine(state, level);
    }

    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {
      continue; // Skip this pair because of invalid value.
    }

    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
      pairBuffer += ':';
    } else {
      pairBuffer += ': ';
    }

    pairBuffer += state.dump;

    // Both key and value are valid.
    _result += pairBuffer;
  }

  state.tag = _tag;
  state.dump = _result || '{}'; // Empty mapping if no valid pairs.
}

function detectType(state, object, explicit) {
  var _result, typeList, index, length, type, style;

  typeList = explicit ? state.explicitTypes : state.implicitTypes;

  for (index = 0, length = typeList.length; index < length; index += 1) {
    type = typeList[index];

    if ((type.instanceOf  || type.predicate) &&
        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&
        (!type.predicate  || type.predicate(object))) {

      state.tag = explicit ? type.tag : '?';

      if (type.represent) {
        style = state.styleMap[type.tag] || type.defaultStyle;

        if (_toString.call(type.represent) === '[object Function]') {
          _result = type.represent(object, style);
        } else if (_hasOwnProperty.call(type.represent, style)) {
          _result = type.represent[style](object, style);
        } else {
          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not "' + style + '" style');
        }

        state.dump = _result;
      }

      return true;
    }
  }

  return false;
}

// Serializes `object` and writes it to global `result`.
// Returns true on success, or false on invalid object.
//
function writeNode(state, level, object, block, compact, iskey) {
  state.tag = null;
  state.dump = object;

  if (!detectType(state, object, false)) {
    detectType(state, object, true);
  }

  var type = _toString.call(state.dump);

  if (block) {
    block = (state.flowLevel < 0 || state.flowLevel > level);
  }

  var objectOrArray = type === '[object Object]' || type === '[object Array]',
      duplicateIndex,
      duplicate;

  if (objectOrArray) {
    duplicateIndex = state.duplicates.indexOf(object);
    duplicate = duplicateIndex !== -1;
  }

  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {
    compact = false;
  }

  if (duplicate && state.usedDuplicates[duplicateIndex]) {
    state.dump = '*ref_' + duplicateIndex;
  } else {
    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {
      state.usedDuplicates[duplicateIndex] = true;
    }
    if (type === '[object Object]') {
      if (block && (Object.keys(state.dump).length !== 0)) {
        writeBlockMapping(state, level, state.dump, compact);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + state.dump;
        }
      } else {
        writeFlowMapping(state, level, state.dump);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;
        }
      }
    } else if (type === '[object Array]') {
      if (block && (state.dump.length !== 0)) {
        writeBlockSequence(state, level, state.dump, compact);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + state.dump;
        }
      } else {
        writeFlowSequence(state, level, state.dump);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;
        }
      }
    } else if (type === '[object String]') {
      if (state.tag !== '?') {
        writeScalar(state, state.dump, level, iskey);
      }
    } else {
      if (state.skipInvalid) return false;
      throw new YAMLException('unacceptable kind of an object to dump ' + type);
    }

    if (state.tag !== null && state.tag !== '?') {
      state.dump = '!<' + state.tag + '> ' + state.dump;
    }
  }

  return true;
}

function getDuplicateReferences(object, state) {
  var objects = [],
      duplicatesIndexes = [],
      index,
      length;

  inspectNode(object, objects, duplicatesIndexes);

  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {
    state.duplicates.push(objects[duplicatesIndexes[index]]);
  }
  state.usedDuplicates = new Array(length);
}

function inspectNode(object, objects, duplicatesIndexes) {
  var objectKeyList,
      index,
      length;

  if (object !== null && typeof object === 'object') {
    index = objects.indexOf(object);
    if (index !== -1) {
      if (duplicatesIndexes.indexOf(index) === -1) {
        duplicatesIndexes.push(index);
      }
    } else {
      objects.push(object);

      if (Array.isArray(object)) {
        for (index = 0, length = object.length; index < length; index += 1) {
          inspectNode(object[index], objects, duplicatesIndexes);
        }
      } else {
        objectKeyList = Object.keys(object);

        for (index = 0, length = objectKeyList.length; index < length; index += 1) {
          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);
        }
      }
    }
  }
}

function dump(input, options) {
  options = options || {};

  var state = new State(options);

  if (!state.noRefs) getDuplicateReferences(input, state);

  if (writeNode(state, 0, input, true, true)) return state.dump + '\n';

  return '';
}

function safeDump(input, options) {
  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));
}

module.exports.dump     = dump;
module.exports.safeDump = safeDump;

},{"./common":3,"./exception":5,"./schema/default_full":10,"./schema/default_safe":11}],5:[function(require,module,exports){
// YAML error class. http://stackoverflow.com/questions/8458984
//
'use strict';

function YAMLException(reason, mark) {
  // Super constructor
  Error.call(this);

  // Include stack trace in error object
  if (Error.captureStackTrace) {
    // Chrome and NodeJS
    Error.captureStackTrace(this, this.constructor);
  } else {
    // FF, IE 10+ and Safari 6+. Fallback for others
    this.stack = (new Error()).stack || '';
  }

  this.name = 'YAMLException';
  this.reason = reason;
  this.mark = mark;
  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');
}


// Inherit from Error
YAMLException.prototype = Object.create(Error.prototype);
YAMLException.prototype.constructor = YAMLException;


YAMLException.prototype.toString = function toString(compact) {
  var result = this.name + ': ';

  result += this.reason || '(unknown reason)';

  if (!compact && this.mark) {
    result += ' ' + this.mark.toString();
  }

  return result;
};


module.exports = YAMLException;

},{}],6:[function(require,module,exports){
'use strict';

/*eslint-disable max-len,no-use-before-define*/

var common = require('./common');
var YAMLException = require('./exception');
var Mark = require('./mark');
var DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');
var DEFAULT_FULL_SCHEMA = require('./schema/default_full');


var _hasOwnProperty = Object.prototype.hasOwnProperty;


var CONTEXT_FLOW_IN = 1;
var CONTEXT_FLOW_OUT = 2;
var CONTEXT_BLOCK_IN = 3;
var CONTEXT_BLOCK_OUT = 4;


var CHOMPING_CLIP = 1;
var CHOMPING_STRIP = 2;
var CHOMPING_KEEP = 3;


var PATTERN_NON_PRINTABLE = /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
var PATTERN_NON_ASCII_LINE_BREAKS = /[\x85\u2028\u2029]/;
var PATTERN_FLOW_INDICATORS = /[,\[\]\{\}]/;
var PATTERN_TAG_HANDLE = /^(?:!|!!|![a-z\-]+!)$/i;
var PATTERN_TAG_URI = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;


function is_EOL(c) {
    return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);
}

function is_WHITE_SPACE(c) {
    return (c === 0x09/* Tab */) || (c === 0x20/* Space */);
}

function is_WS_OR_EOL(c) {
    return (c === 0x09/* Tab */) ||
        (c === 0x20/* Space */) ||
        (c === 0x0A/* LF */) ||
        (c === 0x0D/* CR */);
}

function is_FLOW_INDICATOR(c) {
    return c === 0x2C/* , */ ||
        c === 0x5B/* [ */ ||
        c === 0x5D/* ] */ ||
        c === 0x7B/* { */ ||
        c === 0x7D/* } */;
}

function fromHexCode(c) {
    var lc;

    if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {
        return c - 0x30;
    }

    /*eslint-disable no-bitwise*/
    lc = c | 0x20;

    if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {
        return lc - 0x61 + 10;
    }

    return -1;
}

function escapedHexLen(c) {
    if (c === 0x78/* x */) { return 2; }
    if (c === 0x75/* u */) { return 4; }
    if (c === 0x55/* U */) { return 8; }
    return 0;
}

function fromDecimalCode(c) {
    if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {
        return c - 0x30;
    }

    return -1;
}

function simpleEscapeSequence(c) {
    return (c === 0x30/* 0 */) ? '\x00' :
        (c === 0x61/* a */) ? '\x07' :
            (c === 0x62/* b */) ? '\x08' :
                (c === 0x74/* t */) ? '\x09' :
                    (c === 0x09/* Tab */) ? '\x09' :
                        (c === 0x6E/* n */) ? '\x0A' :
                            (c === 0x76/* v */) ? '\x0B' :
                                (c === 0x66/* f */) ? '\x0C' :
                                    (c === 0x72/* r */) ? '\x0D' :
                                        (c === 0x65/* e */) ? '\x1B' :
                                            (c === 0x20/* Space */) ? ' ' :
                                                (c === 0x22/* " */) ? '\x22' :
                                                    (c === 0x2F/* / */) ? '/' :
                                                        (c === 0x5C/* \ */) ? '\x5C' :
                                                            (c === 0x4E/* N */) ? '\x85' :
                                                                (c === 0x5F/* _ */) ? '\xA0' :
                                                                    (c === 0x4C/* L */) ? '\u2028' :
                                                                        (c === 0x50/* P */) ? '\u2029' : '';
}

function charFromCodepoint(c) {
    if (c <= 0xFFFF) {
        return String.fromCharCode(c);
    }
    // Encode UTF-16 surrogate pair
    // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF
    return String.fromCharCode(((c - 0x010000) >> 10) + 0xD800,
        ((c - 0x010000) & 0x03FF) + 0xDC00);
}

var simpleEscapeCheck = new Array(256); // integer, for fast access
var simpleEscapeMap = new Array(256);
for (var i = 0; i < 256; i++) {
    simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;
    simpleEscapeMap[i] = simpleEscapeSequence(i);
}


function State(input, options) {
    this.input = input;

    this.filename = options['filename'] || null;
    this.schema = options['schema'] || DEFAULT_FULL_SCHEMA;
    this.onWarning = options['onWarning'] || null;
    this.legacy = options['legacy'] || false;
    this.json = options['json'] || false;
    this.listener = options['listener'] || null;

    this.implicitTypes = this.schema.compiledImplicit;
    this.typeMap = this.schema.compiledTypeMap;

    this.length = input.length;
    this.position = 0;
    this.line = 0;
    this.lineStart = 0;
    this.lineIndent = 0;

    this.documents = [];

    /*
    this.version;
    this.checkLineBreaks;
    this.tagMap;
    this.anchorMap;
    this.tag;
    this.anchor;
    this.kind;
    this.result;*/

}


function generateError(state, message) {
    console.log("ERROR: " + message);
    return new YAMLException(
        message,
        new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));
}

function throwError(state, message) {
    throw generateError(state, message);
}

function throwWarning(state, message) {
    if (state.onWarning) {
        state.onWarning.call(null, generateError(state, message));
    }
}


var directiveHandlers = {

    YAML: function handleYamlDirective(state, name, args) {

        var match, major, minor;

        if (state.version !== null) {
            throwError(state, 'duplication of %YAML directive');
        }

        if (args.length !== 1) {
            throwError(state, 'YAML directive accepts exactly one argument');
        }

        match = /^([0-9]+)\.([0-9]+)$/.exec(args[0]);

        if (match === null) {
            throwError(state, 'ill-formed argument of the YAML directive');
        }

        major = parseInt(match[1], 10);
        minor = parseInt(match[2], 10);

        if (major !== 1) {
            throwError(state, 'unacceptable YAML version of the document');
        }

        state.version = args[0];
        state.checkLineBreaks = (minor < 2);

        if (minor !== 1 && minor !== 2) {
            throwWarning(state, 'unsupported YAML version of the document');
        }
    },

    TAG: function handleTagDirective(state, name, args) {

        var handle, prefix;

        if (args.length !== 2) {
            throwError(state, 'TAG directive accepts exactly two arguments');
        }

        handle = args[0];
        prefix = args[1];

        if (!PATTERN_TAG_HANDLE.test(handle)) {
            throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');
        }

        if (_hasOwnProperty.call(state.tagMap, handle)) {
            throwError(state, 'there is a previously declared suffix for "' + handle + '" tag handle');
        }

        if (!PATTERN_TAG_URI.test(prefix)) {
            throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');
        }

        state.tagMap[handle] = prefix;
    }
};


function captureSegment(state, start, end, checkJson) {
    var _position, _length, _character, _result;

    if (start < end) {
        _result = state.input.slice(start, end);

        if (checkJson) {
            for (_position = 0, _length = _result.length;
                _position < _length;
                _position += 1) {
                _character = _result.charCodeAt(_position);
                if (!(_character === 0x09 ||
                    (0x20 <= _character && _character <= 0x10FFFF))) {
                    throwError(state, 'expected valid JSON character');
                }
            }
        } else if (PATTERN_NON_PRINTABLE.test(_result)) {
            throwError(state, 'the stream contains non-printable characters');
        }

        state.result += _result;
    }
}

function mergeMappings(state, destination, source, overridableKeys) {
    var sourceKeys, key, index, quantity;

    if (!common.isObject(source)) {
        throwError(state, 'cannot merge mappings; the provided source object is unacceptable');
    }

    sourceKeys = Object.keys(source);

    for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {
        key = sourceKeys[index];

        if (!_hasOwnProperty.call(destination, key)) {
            destination[key] = source[key];
            overridableKeys[key] = true;
        }
    }
}

function storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode) {
    var index, quantity;

    keyNode = String(keyNode["amf-lexical-token"]);

    if (_result === null) {
        _result = {};
    }

    if (keyTag === 'tag:yaml.org,2002:merge') {
        if (Array.isArray(valueNode)) {
            for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {
                mergeMappings(state, _result, valueNode[index], overridableKeys);
            }
        } else {
            mergeMappings(state, _result, valueNode, overridableKeys);
        }
    } else {
        if (!state.json &&
            !_hasOwnProperty.call(overridableKeys, keyNode) &&
            _hasOwnProperty.call(_result, keyNode)) {
            throwError(state, 'duplicated mapping key');
        }
        _result[keyNode] = valueNode;
        delete overridableKeys[keyNode];
    }

    return _result;
}

function readLineBreak(state) {
    var ch;

    ch = state.input.charCodeAt(state.position);

    if (ch === 0x0A/* LF */) {
        state.position++;
    } else if (ch === 0x0D/* CR */) {
        state.position++;
        if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {
            state.position++;
        }
    } else {
        throwError(state, 'a line break is expected');
    }

    state.line += 1;
    state.lineStart = state.position;
}

function skipSeparationSpace(state, allowComments, checkIndent) {
    var lineBreaks = 0,
        ch = state.input.charCodeAt(state.position);

    while (ch !== 0) {
        while (is_WHITE_SPACE(ch)) {
            ch = state.input.charCodeAt(++state.position);
        }

        if (allowComments && ch === 0x23/* # */) {
            do {
                ch = state.input.charCodeAt(++state.position);
            } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);
        }

        if (is_EOL(ch)) {
            readLineBreak(state);

            ch = state.input.charCodeAt(state.position);
            lineBreaks++;
            state.lineIndent = 0;

            while (ch === 0x20/* Space */) {
                state.lineIndent++;
                ch = state.input.charCodeAt(++state.position);
            }
        } else {
            break;
        }
    }

    if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {
        throwWarning(state, 'deficient indentation');
    }

    return lineBreaks;
}

function testDocumentSeparator(state) {
    var _position = state.position,
        ch;

    ch = state.input.charCodeAt(_position);

    // Condition state.position === state.lineStart is tested
    // in parent on each call, for efficiency. No needs to test here again.
    if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&
        ch === state.input.charCodeAt(_position + 1) &&
        ch === state.input.charCodeAt(_position + 2)) {

        _position += 3;

        ch = state.input.charCodeAt(_position);

        if (ch === 0 || is_WS_OR_EOL(ch)) {
            return true;
        }
    }
    return false;
}

function writeFoldedLines(state, count) {
    if (count === 1) {
        state.result += ' ';
    } else if (count > 1) {
        state.result += common.repeat('\n', count - 1);
    }
}


function readPlainScalar(state, nodeIndent, withinFlowCollection) {
    var preceding,
        following,
        captureStart,
        captureEnd,
        hasPendingContent,
        _line,
        _lineStart,
        _lineIndent,
        _kind = state.kind,
        _result = state.result,
        ch;

    var startLine = state.line;
    var startColumn = state.lineStart;
    var startIndex = state.position;

    ch = state.input.charCodeAt(state.position);

    if (is_WS_OR_EOL(ch) ||
        is_FLOW_INDICATOR(ch) ||
        ch === 0x23/* # */ ||
        ch === 0x26/* & */ ||
        ch === 0x2A/* * */ ||
        ch === 0x21/* ! */ ||
        ch === 0x7C/* | */ ||
        ch === 0x3E/* > */ ||
        ch === 0x27/* ' */ ||
        ch === 0x22/* " */ ||
        ch === 0x25/* % */ ||
        ch === 0x40/* @ */ ||
        ch === 0x60/* ` */) {
        return false;
    }

    if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {
        following = state.input.charCodeAt(state.position + 1);

        if (is_WS_OR_EOL(following) ||
            withinFlowCollection && is_FLOW_INDICATOR(following)) {
            return false;
        }
    }

    state.kind = 'scalar';
    state.result = '';
    captureStart = captureEnd = state.position;
    hasPendingContent = false;

    while (ch !== 0) {
        if (ch === 0x3A/* : */) {
            following = state.input.charCodeAt(state.position + 1);

            if (is_WS_OR_EOL(following) ||
                withinFlowCollection && is_FLOW_INDICATOR(following)) {
                break;
            }

        } else if (ch === 0x23/* # */) {
            preceding = state.input.charCodeAt(state.position - 1);

            if (is_WS_OR_EOL(preceding)) {
                break;
            }

        } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||
            withinFlowCollection && is_FLOW_INDICATOR(ch)) {
            break;

        } else if (is_EOL(ch)) {
            _line = state.line;
            _lineStart = state.lineStart;
            _lineIndent = state.lineIndent;
            skipSeparationSpace(state, false, -1);

            if (state.lineIndent >= nodeIndent) {
                hasPendingContent = true;
                ch = state.input.charCodeAt(state.position);
                continue;
            } else {
                state.position = captureEnd;
                state.line = _line;
                state.lineStart = _lineStart;
                state.lineIndent = _lineIndent;
                break;
            }
        }

        if (hasPendingContent) {
            captureSegment(state, captureStart, captureEnd, false);
            writeFoldedLines(state, state.line - _line);
            captureStart = captureEnd = state.position;
            hasPendingContent = false;
        }

        if (!is_WHITE_SPACE(ch)) {
            captureEnd = state.position + 1;
        }

        ch = state.input.charCodeAt(++state.position);
    }

    captureSegment(state, captureStart, captureEnd, false);

    if (state.result) {
        var endLine = state.line;
        var endColumn = state.position - state.lineStart;
        var endIndex = state.position;

        var positions = {
            "start-line": startLine + 1,
            "start-column": startColumn,
            "start-index": startIndex,
            "end-line": endLine + 1,
            "end-column": endColumn,
            "end-index": endIndex
        };
        state.kind = _kind;
        if (state.result === 'null') {
            state.result = null;
        }
        if (state.result === 'true') {
            state.result = true;
        }
        if (state.result === 'false') {
            state.result = false;
        }
        state.result = {
            "amf-lexical-token": state.result,
            "__location__": positions
        };

        return true;
    }
    return false;
}

function readSingleQuotedScalar(state, nodeIndent) {
    var ch,
        captureStart, captureEnd;

    var startLine = state.line;
    var startColumn = state.lineStart;
    var startIndex = state.position;

    ch = state.input.charCodeAt(state.position);

    if (ch !== 0x27/* ' */) {
        return false;
    }

    state.kind = 'scalar';
    state.result = '';
    state.position++;
    captureStart = captureEnd = state.position;

    while ((ch = state.input.charCodeAt(state.position)) !== 0) {
        if (ch === 0x27/* ' */) {
            captureSegment(state, captureStart, state.position, true);
            ch = state.input.charCodeAt(++state.position);

            if (ch === 0x27/* ' */) {
                captureStart = state.position;
                state.position++;
                captureEnd = state.position;
            } else {

                var endLine = state.line;
                var endColumn = state.position - state.lineStart;
                var endIndex = state.position;

                var positions = {
                    "start-line": startLine + 1,
                    "start-column": startColumn,
                    "start-index": startIndex,
                    "end-line": endLine + 1,
                    "end-column": endColumn,
                    "end-index": endIndex
                };

                state.result = {
                    "amf-lexical-token": state.result,
                    "__location__": positions
                };
                return true;
            }

        } else if (is_EOL(ch)) {
            captureSegment(state, captureStart, captureEnd, true);
            writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
            captureStart = captureEnd = state.position;

        } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
            throwError(state, 'unexpected end of the document within a single quoted scalar');

        } else {
            state.position++;
            captureEnd = state.position;
        }
    }

    throwError(state, 'unexpected end of the stream within a single quoted scalar');
}

function readDoubleQuotedScalar(state, nodeIndent) {
    var captureStart,
        captureEnd,
        hexLength,
        hexResult,
        tmp,
        ch;

    var startLine = state.line;
    var startColumn = state.lineStart;
    var startIndex = state.position;

    ch = state.input.charCodeAt(state.position);

    if (ch !== 0x22/* " */) {
        return false;
    }

    state.kind = 'scalar';
    state.result = '';
    state.position++;
    captureStart = captureEnd = state.position;

    while ((ch = state.input.charCodeAt(state.position)) !== 0) {
        if (ch === 0x22/* " */) {
            captureSegment(state, captureStart, state.position, true);
            state.position++;

            var endLine = state.line;
            var endColumn = state.position - state.lineStart;
            var endIndex = state.position;

            var positions = {
                "start-line": startLine + 1,
                "start-column": startColumn,
                "start-index": startIndex,
                "end-line": endLine + 1,
                "end-column": endColumn,
                "end-index": endIndex
            };

            state.result = {
                "amf-lexical-token": state.result,
                "__location__": positions
            };

            return true;

        } else if (ch === 0x5C/* \ */) {
            captureSegment(state, captureStart, state.position, true);
            ch = state.input.charCodeAt(++state.position);

            if (is_EOL(ch)) {
                skipSeparationSpace(state, false, nodeIndent);

                // TODO: rework to inline fn with no type cast?
            } else if (ch < 256 && simpleEscapeCheck[ch]) {
                state.result += simpleEscapeMap[ch];
                state.position++;

            } else if ((tmp = escapedHexLen(ch)) > 0) {
                hexLength = tmp;
                hexResult = 0;

                for (; hexLength > 0; hexLength--) {
                    ch = state.input.charCodeAt(++state.position);

                    if ((tmp = fromHexCode(ch)) >= 0) {
                        hexResult = (hexResult << 4) + tmp;

                    } else {
                        throwError(state, 'expected hexadecimal character');
                    }
                }

                state.result += charFromCodepoint(hexResult);

                state.position++;

            } else {
                throwError(state, 'unknown escape sequence');
            }

            captureStart = captureEnd = state.position;

        } else if (is_EOL(ch)) {
            captureSegment(state, captureStart, captureEnd, true);
            writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
            captureStart = captureEnd = state.position;

        } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
            throwError(state, 'unexpected end of the document within a double quoted scalar');

        } else {
            state.position++;
            captureEnd = state.position;
        }
    }

    throwError(state, 'unexpected end of the stream within a double quoted scalar');
}

function readFlowCollection(state, nodeIndent) {
    var readNext = true,
        _line,
        _tag = state.tag,
        _result,
        _anchor = state.anchor,
        following,
        terminator,
        isPair,
        isExplicitPair,
        isMapping,
        overridableKeys = {},
        keyNode,
        keyTag,
        valueNode,
        ch;

    ch = state.input.charCodeAt(state.position);

    if (ch === 0x5B/* [ */) {
        terminator = 0x5D;/* ] */
        isMapping = false;
        _result = [];
    } else if (ch === 0x7B/* { */) {
        terminator = 0x7D;/* } */
        isMapping = true;
        _result = {};
    } else {
        return false;
    }

    if (state.anchor !== null) {
        state.anchorMap[state.anchor] = _result;
    }

    ch = state.input.charCodeAt(++state.position);

    while (ch !== 0) {
        skipSeparationSpace(state, true, nodeIndent);

        ch = state.input.charCodeAt(state.position);

        if (ch === terminator) {
            state.position++;
            state.tag = _tag;
            state.anchor = _anchor;
            state.kind = isMapping ? 'mapping' : 'sequence';
            state.result = _result;
            return true;
        } else if (!readNext) {
            throwError(state, 'missed comma between flow collection entries');
        }

        keyTag = keyNode = valueNode = null;
        isPair = isExplicitPair = false;

        if (ch === 0x3F/* ? */) {
            following = state.input.charCodeAt(state.position + 1);

            if (is_WS_OR_EOL(following)) {
                isPair = isExplicitPair = true;
                state.position++;
                skipSeparationSpace(state, true, nodeIndent);
            }
        }

        _line = state.line;
        composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
        keyTag = state.tag;
        keyNode = state.result;
        skipSeparationSpace(state, true, nodeIndent);

        ch = state.input.charCodeAt(state.position);

        if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {
            isPair = true;
            ch = state.input.charCodeAt(++state.position);
            skipSeparationSpace(state, true, nodeIndent);
            composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
            valueNode = state.result;
        }

        if (isMapping) {
            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);
        } else if (isPair) {
            _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));
        } else {
            _result.push(keyNode);
        }

        skipSeparationSpace(state, true, nodeIndent);

        ch = state.input.charCodeAt(state.position);

        if (ch === 0x2C/* , */) {
            readNext = true;
            ch = state.input.charCodeAt(++state.position);
        } else {
            readNext = false;
        }
    }

    throwError(state, 'unexpected end of the stream within a flow collection');
}

function readBlockScalar(state, nodeIndent) {
    var captureStart,
        folding,
        chomping = CHOMPING_CLIP,
        didReadContent = false,
        detectedIndent = false,
        textIndent = nodeIndent,
        emptyLines = 0,
        atMoreIndented = false,
        tmp,
        ch;

    var startLine = state.line;
    var startColumn = state.lineStart;
    var startIndex = state.position;

    ch = state.input.charCodeAt(state.position);

    if (ch === 0x7C/* | */) {
        folding = false;
    } else if (ch === 0x3E/* > */) {
        folding = true;
    } else {
        return false;
    }

    state.kind = 'scalar';
    state.result = '';

    while (ch !== 0) {
        ch = state.input.charCodeAt(++state.position);

        if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {
            if (CHOMPING_CLIP === chomping) {
                chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;
            } else {
                throwError(state, 'repeat of a chomping mode identifier');
            }

        } else if ((tmp = fromDecimalCode(ch)) >= 0) {
            if (tmp === 0) {
                throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');
            } else if (!detectedIndent) {
                textIndent = nodeIndent + tmp - 1;
                detectedIndent = true;
            } else {
                throwError(state, 'repeat of an indentation width identifier');
            }

        } else {
            break;
        }
    }

    if (is_WHITE_SPACE(ch)) {
        do { ch = state.input.charCodeAt(++state.position); }
        while (is_WHITE_SPACE(ch));

        if (ch === 0x23/* # */) {
            do { ch = state.input.charCodeAt(++state.position); }
            while (!is_EOL(ch) && (ch !== 0));
        }
    }

    while (ch !== 0) {
        readLineBreak(state);
        state.lineIndent = 0;

        ch = state.input.charCodeAt(state.position);

        while ((!detectedIndent || state.lineIndent < textIndent) &&
            (ch === 0x20/* Space */)) {
            state.lineIndent++;
            ch = state.input.charCodeAt(++state.position);
        }

        if (!detectedIndent && state.lineIndent > textIndent) {
            textIndent = state.lineIndent;
        }

        if (is_EOL(ch)) {
            emptyLines++;
            continue;
        }

        // End of the scalar.
        if (state.lineIndent < textIndent) {

            // Perform the chomping.
            if (chomping === CHOMPING_KEEP) {
                state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);
            } else if (chomping === CHOMPING_CLIP) {
                if (didReadContent) { // i.e. only if the scalar is not empty.
                    state.result += '\n';
                }
            }

            // Break this `while` cycle and go to the funciton's epilogue.
            break;
        }

        // Folded style: use fancy rules to handle line breaks.
        if (folding) {

            // Lines starting with white space characters (more-indented lines) are not folded.
            if (is_WHITE_SPACE(ch)) {
                atMoreIndented = true;
                // except for the first content line (cf. Example 8.1)
                state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);

                // End of more-indented block.
            } else if (atMoreIndented) {
                atMoreIndented = false;
                state.result += common.repeat('\n', emptyLines + 1);

                // Just one line break - perceive as the same line.
            } else if (emptyLines === 0) {
                if (didReadContent) { // i.e. only if we have already read some scalar content.
                    state.result += ' ';
                }

                // Several line breaks - perceive as different lines.
            } else {
                state.result += common.repeat('\n', emptyLines);
            }

            // Literal style: just add exact number of line breaks between content lines.
        } else {
            // Keep all line breaks except the header line break.
            state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);
        }

        didReadContent = true;
        detectedIndent = true;
        emptyLines = 0;
        captureStart = state.position;

        while (!is_EOL(ch) && (ch !== 0)) {
            ch = state.input.charCodeAt(++state.position);
        }

        captureSegment(state, captureStart, state.position, false);
    }

    var endLine = state.line;
    var endColumn = state.position - state.lineStart;
    var endIndex = state.position;

    var positions = {
        "start-line": startLine,
        "start-column": startColumn,
        "start-index": startIndex,
        "end-line": endLine,
        "end-column": endColumn,
        "end-index": endIndex
    };

    state.result = {
        "amf-lexical-token": state.result,
        "__location__": positions
    };

    return true;
}

function readBlockSequence(state, nodeIndent) {
    var _line,
        _tag = state.tag,
        _anchor = state.anchor,
        _result = [],
        following,
        detected = false,
        ch;

    if (state.anchor !== null) {
        state.anchorMap[state.anchor] = _result;
    }

    ch = state.input.charCodeAt(state.position);

    while (ch !== 0) {

        if (ch !== 0x2D/* - */) {
            break;
        }

        following = state.input.charCodeAt(state.position + 1);

        if (!is_WS_OR_EOL(following)) {
            break;
        }

        detected = true;
        state.position++;

        if (skipSeparationSpace(state, true, -1)) {
            if (state.lineIndent <= nodeIndent) {
                _result.push(null);
                ch = state.input.charCodeAt(state.position);
                continue;
            }
        }

        _line = state.line;
        composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);
        _result.push(state.result);
        skipSeparationSpace(state, true, -1);

        ch = state.input.charCodeAt(state.position);

        if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {
            throwError(state, 'bad indentation of a sequence entry');
        } else if (state.lineIndent < nodeIndent) {
            break;
        }
    }

    if (detected) {
        state.tag = _tag;
        state.anchor = _anchor;
        state.kind = 'sequence';
        state.result = _result;
        return true;
    }
    return false;
}

function readBlockMapping(state, nodeIndent, flowIndent) {
    var following,
        allowCompact,
        _line,
        _tag = state.tag,
        _anchor = state.anchor,
        _result = {},
        overridableKeys = {},
        keyTag = null,
        keyNode = null,
        valueNode = null,
        atExplicitKey = false,
        detected = false,
        ch;

    var startLine = state.line;
    var startColumn = state.position - state.lineStart;
    var startIndex = state.position;
    //console.log("START...");
    //var cloned = JSON.parse(JSON.stringify(state));
    //delete cloned["typeMap"];
    //delete cloned["schema"];
    //delete cloned["implicitTypes"];
    //console.log(JSON.stringify(cloned, null, 2));
    if (state.anchor !== null) {
        state.anchorMap[state.anchor] = _result;
    }

    ch = state.input.charCodeAt(state.position);

    while (ch !== 0) {
        following = state.input.charCodeAt(state.position + 1);
        _line = state.line; // Save the current line.

        //
        // Explicit notation case. There are two separate blocks:
        // first for the key (denoted by "?") and second for the value (denoted by ":")
        //
        if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {

            if (ch === 0x3F/* ? */) {
                if (atExplicitKey) {
                    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
                    keyTag = keyNode = valueNode = null;
                }

                detected = true;
                atExplicitKey = true;
                allowCompact = true;

            } else if (atExplicitKey) {
                // i.e. 0x3A/* : */ === character after the explicit key.
                atExplicitKey = false;
                allowCompact = true;

            } else {
                throwError(state, 'incomplete explicit mapping pair; a key node is missed');
            }

            state.position += 1;
            ch = following;

            //
            // Implicit notation case. Flow-style node as the key first, then ":", and the value.
            //
        } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {

            var endLine = state.line;
            var endColumn = state.position - state.lineStart;
            var endIndex = state.position;
            //console.log("END...");
            //var cloned = JSON.parse(JSON.stringify(state));
            //delete cloned["typeMap"];
            //delete cloned["schema"];
            //delete cloned["implicitTypes"];
            //console.log(JSON.stringify(cloned, null, 2));

            if (state.line === _line) {
                ch = state.input.charCodeAt(state.position);

                while (is_WHITE_SPACE(ch)) {
                    ch = state.input.charCodeAt(++state.position);
                }

                if (ch === 0x3A/* : */) {
                    ch = state.input.charCodeAt(++state.position);

                    if (!is_WS_OR_EOL(ch)) {
                        throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');
                    }

                    if (atExplicitKey) {
                        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
                        keyTag = keyNode = valueNode = null;
                    }

                    detected = true;
                    atExplicitKey = false;
                    allowCompact = false;
                    keyTag = state.tag;
                    keyNode = state.result;

                } else if (detected) {
                    throwError(state, 'can not read an implicit mapping pair; a colon is missed');

                } else {
                    state.tag = _tag;
                    state.anchor = _anchor;
                    return true; // Keep the result of `composeNode`.
                }

            } else if (detected) {
                throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');

            } else {
                state.tag = _tag;
                state.anchor = _anchor;

                return true; // Keep the result of `composeNode`.
            }

        } else {
            break; // Reading is done. Go to the epilogue.
        }

        //
        // Common reading code for both explicit and implicit notations.
        //
        if (state.line === _line || state.lineIndent > nodeIndent) {
            if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {
                if (atExplicitKey) {
                    keyNode = state.result;
                } else {
                    valueNode = state.result;
                }
            }

            if (!atExplicitKey) {
                storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);
                keyTag = keyNode = valueNode = null;
            }

            skipSeparationSpace(state, true, -1);
            ch = state.input.charCodeAt(state.position);
        }

        if (state.lineIndent > nodeIndent && (ch !== 0)) {
            throwError(state, 'bad indentation of a mapping entry');
        } else if (state.lineIndent < nodeIndent) {
            break;
        }
    }

    //
    // Epilogue.
    //

    // Special case: last mapping's node contains only the key in explicit notation.
    if (atExplicitKey) {
        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
    }

    // Expose the resulting mapping.
    if (detected) {

        var endLine = state.line;
        var endColumn = state.position - state.lineStart;
        var endIndex = state.position;

        var positions = {
            "start-line": startLine,
            "start-column": startColumn,
            "start-index": startIndex,
            "end-line": endLine,
            "end-column": endColumn,
            "end-index": endIndex
        };
        _result["__location__"] = positions;
        state.tag = _tag;
        state.anchor = _anchor;
        state.kind = 'mapping';
        state.result = _result;
    }

    return detected;
}

function readTagProperty(state) {
    var _position,
        isVerbatim = false,
        isNamed = false,
        tagHandle,
        tagName,
        ch;

    ch = state.input.charCodeAt(state.position);

    if (ch !== 0x21/* ! */) return false;

    if (state.tag !== null) {
        throwError(state, 'duplication of a tag property');
    }

    ch = state.input.charCodeAt(++state.position);

    if (ch === 0x3C/* < */) {
        isVerbatim = true;
        ch = state.input.charCodeAt(++state.position);

    } else if (ch === 0x21/* ! */) {
        isNamed = true;
        tagHandle = '!!';
        ch = state.input.charCodeAt(++state.position);

    } else {
        tagHandle = '!';
    }

    _position = state.position;

    if (isVerbatim) {
        do { ch = state.input.charCodeAt(++state.position); }
        while (ch !== 0 && ch !== 0x3E/* > */);

        if (state.position < state.length) {
            tagName = state.input.slice(_position, state.position);
            ch = state.input.charCodeAt(++state.position);
        } else {
            throwError(state, 'unexpected end of the stream within a verbatim tag');
        }
    } else {
        while (ch !== 0 && !is_WS_OR_EOL(ch)) {

            if (ch === 0x21/* ! */) {
                if (!isNamed) {
                    tagHandle = state.input.slice(_position - 1, state.position + 1);

                    if (!PATTERN_TAG_HANDLE.test(tagHandle)) {
                        throwError(state, 'named tag handle cannot contain such characters');
                    }

                    isNamed = true;
                    _position = state.position + 1;
                } else {
                    throwError(state, 'tag suffix cannot contain exclamation marks');
                }
            }

            ch = state.input.charCodeAt(++state.position);
        }

        tagName = state.input.slice(_position, state.position);

        if (PATTERN_FLOW_INDICATORS.test(tagName)) {
            throwError(state, 'tag suffix cannot contain flow indicator characters');
        }
    }

    if (tagName && !PATTERN_TAG_URI.test(tagName)) {
        throwError(state, 'tag name cannot contain such characters: ' + tagName);
    }

    if (isVerbatim) {
        state.tag = tagName;

    } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {
        state.tag = state.tagMap[tagHandle] + tagName;

    } else if (tagHandle === '!') {
        state.tag = '!' + tagName;

    } else if (tagHandle === '!!') {
        state.tag = 'tag:yaml.org,2002:' + tagName;

    } else {
        throwError(state, 'undeclared tag handle "' + tagHandle + '"');
    }

    return true;
}

function readAnchorProperty(state) {
    var _position,
        ch;

    ch = state.input.charCodeAt(state.position);

    if (ch !== 0x26/* & */) return false;

    if (state.anchor !== null) {
        throwError(state, 'duplication of an anchor property');
    }

    ch = state.input.charCodeAt(++state.position);
    _position = state.position;

    while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
        ch = state.input.charCodeAt(++state.position);
    }

    if (state.position === _position) {
        throwError(state, 'name of an anchor node must contain at least one character');
    }

    state.anchor = state.input.slice(_position, state.position);
    return true;
}

function readAlias(state) {
    var _position, alias,
        ch;

    ch = state.input.charCodeAt(state.position);

    if (ch !== 0x2A/* * */) return false;

    ch = state.input.charCodeAt(++state.position);
    _position = state.position;

    while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
        ch = state.input.charCodeAt(++state.position);
    }

    if (state.position === _position) {
        throwError(state, 'name of an alias node must contain at least one character');
    }

    alias = state.input.slice(_position, state.position);

    if (!state.anchorMap.hasOwnProperty(alias)) {
        throwError(state, 'unidentified alias "' + alias + '"');
    }

    state.result = state.anchorMap[alias];
    skipSeparationSpace(state, true, -1);
    return true;
}

function composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {
    var allowBlockStyles,
        allowBlockScalars,
        allowBlockCollections,
        indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent
        atNewLine = false,
        hasContent = false,
        typeIndex,
        typeQuantity,
        type,
        flowIndent,
        blockIndent;

    if (state.listener !== null) {
        state.listener('open', state);
    }

    state.tag = null;
    state.anchor = null;
    state.kind = null;
    state.result = null;

    var startLine = state.line;
    var startColumn = state.lineStart;
    var startIndex = state.position;

    allowBlockStyles = allowBlockScalars = allowBlockCollections =
        CONTEXT_BLOCK_OUT === nodeContext ||
        CONTEXT_BLOCK_IN === nodeContext;

    if (allowToSeek) {
        if (skipSeparationSpace(state, true, -1)) {
            atNewLine = true;

            if (state.lineIndent > parentIndent) {
                indentStatus = 1;
            } else if (state.lineIndent === parentIndent) {
                indentStatus = 0;
            } else if (state.lineIndent < parentIndent) {
                indentStatus = -1;
            }
        }
    }

    if (indentStatus === 1) {
        while (readTagProperty(state) || readAnchorProperty(state)) {
            if (skipSeparationSpace(state, true, -1)) {
                atNewLine = true;
                allowBlockCollections = allowBlockStyles;

                if (state.lineIndent > parentIndent) {
                    indentStatus = 1;
                } else if (state.lineIndent === parentIndent) {
                    indentStatus = 0;
                } else if (state.lineIndent < parentIndent) {
                    indentStatus = -1;
                }
            } else {
                allowBlockCollections = false;
            }
        }
    }

    if (allowBlockCollections) {
        allowBlockCollections = atNewLine || allowCompact;
    }

    if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {
        if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {
            flowIndent = parentIndent;
        } else {
            flowIndent = parentIndent + 1;
        }

        blockIndent = state.position - state.lineStart;

        if (indentStatus === 1) {
            if (allowBlockCollections &&
                (readBlockSequence(state, blockIndent) ||
                    readBlockMapping(state, blockIndent, flowIndent)) ||
                readFlowCollection(state, flowIndent)) {
                hasContent = true;
            } else {
                if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||
                    readSingleQuotedScalar(state, flowIndent) ||
                    readDoubleQuotedScalar(state, flowIndent)) {
                    hasContent = true;

                } else if (readAlias(state)) {
                    hasContent = true;

                    if (state.tag !== null || state.anchor !== null) {
                        throwError(state, 'alias node should not have any properties');
                    }

                } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {
                    hasContent = true;

                    if (state.tag === null) {
                        state.tag = '?';
                    }
                }

                if (state.anchor !== null) {
                    state.anchorMap[state.anchor] = state.result;
                }
            }
        } else if (indentStatus === 0) {
            // Special case: block sequences are allowed to have same indentation level as the parent.
            // http://www.yaml.org/spec/1.2/spec.html#id2799784
            hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);
        }
    }

    if (state.tag !== null && state.tag !== '!') {
        if (state.tag === '?') {
            for (typeIndex = 0, typeQuantity = state.implicitTypes.length;
                typeIndex < typeQuantity;
                typeIndex += 1) {
                type = state.implicitTypes[typeIndex];

                // Implicit resolving is not allowed for non-scalar types, and '?'
                // non-specific tag is only assigned to plain scalars. So, it isn't
                // needed to check for 'kind' conformity.

                if (type.resolve(state.result)) { // `state.result` updated in resolver if matched
                    state.result = type.construct(state.result);
                    state.tag = type.tag;
                    if (state.anchor !== null) {
                        state.anchorMap[state.anchor] = state.result;
                    }
                    break;
                }
            }
        } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {
            var isLexicaltoken = false;
            var lexicalLocation = null;
            if (state.result && state.result["amf-lexical-token"]) {
                lexicalLocation = state.result["__location__"];
                state.result = state.result["amf-lexical-token"];
                isLexicaltoken = true;
            }
            type = state.typeMap[state.kind || 'fallback'][state.tag];

            if (!isLexicaltoken && state.result !== null && type.kind !== state.kind) {
                throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be "' + type.kind + '", not "' + state.kind + '"');
            }

            if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched
                throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');
            } else {
                state.result = type.construct(state.result);
                if (lexicalLocation != null) {
                    state.result["__location__"] = lexicalLocation;
                }
                if (state.anchor !== null) {
                    state.anchorMap[state.anchor] = state.result;
                }
            }
        } else {
            debugger;
            throwError(state, 'unknown tag !<' + state.tag + '>');
        }
    }

    if (state.listener !== null) {
        state.listener('close', state);
    }


    var endLine = state.line;
    var endColumn = state.position - state.lineStart;
    var endIndex = state.position;

    // console.log("RETURNINNG");
    // var cloned = JSON.parse(JSON.stringify(state));
    // delete cloned["schema"];
    // delete cloned["implicitTypes"];
    // delete cloned["typeMap"];
    // console.log(JSON.stringify(cloned, null, 2));
    return state.tag !== null || state.anchor !== null || hasContent;
}

function readDocument(state) {
    var documentStart = state.position,
        _position,
        directiveName,
        directiveArgs,
        hasDirectives = false,
        ch;

    state.version = null;
    state.checkLineBreaks = state.legacy;
    state.tagMap = {};
    state.anchorMap = {};

    while ((ch = state.input.charCodeAt(state.position)) !== 0) {
        skipSeparationSpace(state, true, -1);

        ch = state.input.charCodeAt(state.position);

        if (state.lineIndent > 0 || ch !== 0x25/* % */) {
            break;
        }

        hasDirectives = true;
        ch = state.input.charCodeAt(++state.position);
        _position = state.position;

        while (ch !== 0 && !is_WS_OR_EOL(ch)) {
            ch = state.input.charCodeAt(++state.position);
        }

        directiveName = state.input.slice(_position, state.position);
        directiveArgs = [];

        if (directiveName.length < 1) {
            throwError(state, 'directive name must not be less than one character in length');
        }

        while (ch !== 0) {
            while (is_WHITE_SPACE(ch)) {
                ch = state.input.charCodeAt(++state.position);
            }

            if (ch === 0x23/* # */) {
                do { ch = state.input.charCodeAt(++state.position); }
                while (ch !== 0 && !is_EOL(ch));
                break;
            }

            if (is_EOL(ch)) break;

            _position = state.position;

            while (ch !== 0 && !is_WS_OR_EOL(ch)) {
                ch = state.input.charCodeAt(++state.position);
            }

            directiveArgs.push(state.input.slice(_position, state.position));
        }

        if (ch !== 0) readLineBreak(state);

        if (_hasOwnProperty.call(directiveHandlers, directiveName)) {
            directiveHandlers[directiveName](state, directiveName, directiveArgs);
        } else {
            throwWarning(state, 'unknown document directive "' + directiveName + '"');
        }
    }

    skipSeparationSpace(state, true, -1);

    if (state.lineIndent === 0 &&
        state.input.charCodeAt(state.position) === 0x2D/* - */ &&
        state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&
        state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {
        state.position += 3;
        skipSeparationSpace(state, true, -1);

    } else if (hasDirectives) {
        throwError(state, 'directives end mark is expected');
    }

    composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);
    skipSeparationSpace(state, true, -1);

    if (state.checkLineBreaks &&
        PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {
        throwWarning(state, 'non-ASCII line breaks are interpreted as content');
    }

    state.documents.push(state.result);

    if (state.position === state.lineStart && testDocumentSeparator(state)) {

        if (state.input.charCodeAt(state.position) === 0x2E/* . */) {
            state.position += 3;
            skipSeparationSpace(state, true, -1);
        }
        return;
    }

    if (state.position < (state.length - 1)) {
        throwError(state, 'end of the stream or a document separator is expected');
    } else {
        return;
    }
}


function loadDocuments(input, options) {
    input = String(input);
    options = options || {};

    if (input.length !== 0) {

        // Add tailing `\n` if not exists
        if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&
            input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {
            input += '\n';
        }

        // Strip BOM
        if (input.charCodeAt(0) === 0xFEFF) {
            input = input.slice(1);
        }
    }

    var state = new State(input, options);

    // Use 0 as string terminator. That significantly simplifies bounds check.
    state.input += '\0';

    while (state.input.charCodeAt(state.position) === 0x20/* Space */) {
        state.lineIndent += 1;
        state.position += 1;
    }

    while (state.position < (state.length - 1)) {
        readDocument(state);
    }

    return state.documents;
}


function loadAll(input, iterator, options) {
    var documents = loadDocuments(input, options), index, length;

    for (index = 0, length = documents.length; index < length; index += 1) {
        iterator(documents[index]);
    }
}


function load(input, options) {
    var documents = loadDocuments(input, options);

    if (documents.length === 0) {
        /*eslint-disable no-undefined*/
        return undefined;
    } else if (documents.length === 1) {
        return documents[0];
    }
    throw new YAMLException('expected a single document in the stream, but found more');
}


function safeLoadAll(input, output, options) {
    loadAll(input, output, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));
}


function safeLoad(input, options) {
    return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));
}


module.exports.loadAll = loadAll;
module.exports.load = load;
module.exports.safeLoadAll = safeLoadAll;
module.exports.safeLoad = safeLoad;

},{"./common":3,"./exception":5,"./mark":7,"./schema/default_full":10,"./schema/default_safe":11}],7:[function(require,module,exports){
'use strict';


var common = require('./common');


function Mark(name, buffer, position, line, column) {
  this.name     = name;
  this.buffer   = buffer;
  this.position = position;
  this.line     = line;
  this.column   = column;
}


Mark.prototype.getSnippet = function getSnippet(indent, maxLength) {
  var head, start, tail, end, snippet;

  if (!this.buffer) return null;

  indent = indent || 4;
  maxLength = maxLength || 75;

  head = '';
  start = this.position;

  while (start > 0 && '\x00\r\n\x85\u2028\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {
    start -= 1;
    if (this.position - start > (maxLength / 2 - 1)) {
      head = ' ... ';
      start += 5;
      break;
    }
  }

  tail = '';
  end = this.position;

  while (end < this.buffer.length && '\x00\r\n\x85\u2028\u2029'.indexOf(this.buffer.charAt(end)) === -1) {
    end += 1;
    if (end - this.position > (maxLength / 2 - 1)) {
      tail = ' ... ';
      end -= 5;
      break;
    }
  }

  snippet = this.buffer.slice(start, end);

  return common.repeat(' ', indent) + head + snippet + tail + '\n' +
         common.repeat(' ', indent + this.position - start + head.length) + '^';
};


Mark.prototype.toString = function toString(compact) {
  var snippet, where = '';

  if (this.name) {
    where += 'in "' + this.name + '" ';
  }

  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);

  if (!compact) {
    snippet = this.getSnippet();

    if (snippet) {
      where += ':\n' + snippet;
    }
  }

  return where;
};


module.exports = Mark;

},{"./common":3}],8:[function(require,module,exports){
'use strict';

/*eslint-disable max-len*/

var common        = require('./common');
var YAMLException = require('./exception');
var Type          = require('./type');


function compileList(schema, name, result) {
  var exclude = [];

  schema.include.forEach(function (includedSchema) {
    result = compileList(includedSchema, name, result);
  });

  schema[name].forEach(function (currentType) {
    result.forEach(function (previousType, previousIndex) {
      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind) {
        exclude.push(previousIndex);
      }
    });

    result.push(currentType);
  });

  return result.filter(function (type, index) {
    return exclude.indexOf(index) === -1;
  });
}


function compileMap(/* lists... */) {
  var result = {
        scalar: {},
        sequence: {},
        mapping: {},
        fallback: {}
      }, index, length;

  function collectType(type) {
    result[type.kind][type.tag] = result['fallback'][type.tag] = type;
  }

  for (index = 0, length = arguments.length; index < length; index += 1) {
    arguments[index].forEach(collectType);
  }
  return result;
}


function Schema(definition) {
  this.include  = definition.include  || [];
  this.implicit = definition.implicit || [];
  this.explicit = definition.explicit || [];

  this.implicit.forEach(function (type) {
    if (type.loadKind && type.loadKind !== 'scalar') {
      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');
    }
  });

  this.compiledImplicit = compileList(this, 'implicit', []);
  this.compiledExplicit = compileList(this, 'explicit', []);
  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);
}


Schema.DEFAULT = null;


Schema.create = function createSchema() {
  var schemas, types;

  switch (arguments.length) {
    case 1:
      schemas = Schema.DEFAULT;
      types = arguments[0];
      break;

    case 2:
      schemas = arguments[0];
      types = arguments[1];
      break;

    default:
      throw new YAMLException('Wrong number of arguments for Schema.create function');
  }

  schemas = common.toArray(schemas);
  types = common.toArray(types);

  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {
    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');
  }

  if (!types.every(function (type) { return type instanceof Type; })) {
    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');
  }

  return new Schema({
    include: schemas,
    explicit: types
  });
};


module.exports = Schema;

},{"./common":3,"./exception":5,"./type":14}],9:[function(require,module,exports){
// Standard YAML's Core schema.
// http://www.yaml.org/spec/1.2/spec.html#id2804923
//
// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.
// So, Core schema has no distinctions from JSON schema is JS-YAML.


'use strict';


var Schema = require('../schema');


module.exports = new Schema({
  include: [
    require('./json')
  ]
});

},{"../schema":8,"./json":13}],10:[function(require,module,exports){
// JS-YAML's default schema for `load` function.
// It is not described in the YAML specification.
//
// This schema is based on JS-YAML's default safe schema and includes
// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.
//
// Also this schema is used as default base schema at `Schema.create` function.


'use strict';


var Schema = require('../schema');


module.exports = Schema.DEFAULT = new Schema({
  include: [
    require('./default_safe')
  ],
  explicit: [
    require('../type/js/undefined'),
    require('../type/js/regexp'),
    require('../type/js/function')
  ]
});

},{"../schema":8,"../type/js/function":19,"../type/js/regexp":20,"../type/js/undefined":21,"./default_safe":11}],11:[function(require,module,exports){
// JS-YAML's default schema for `safeLoad` function.
// It is not described in the YAML specification.
//
// This schema is based on standard YAML's Core schema and includes most of
// extra types described at YAML tag repository. (http://yaml.org/type/)


'use strict';


var Schema = require('../schema');


module.exports = new Schema({
  include: [
    require('./core')
  ],
  implicit: [
    require('../type/timestamp'),
    require('../type/merge')
  ],
  explicit: [
    require('../type/binary'),
    require('../type/omap'),
    require('../type/pairs'),
    require('../type/set')
  ]
});

},{"../schema":8,"../type/binary":15,"../type/merge":23,"../type/omap":25,"../type/pairs":26,"../type/set":28,"../type/timestamp":30,"./core":9}],12:[function(require,module,exports){
// Standard YAML's Failsafe schema.
// http://www.yaml.org/spec/1.2/spec.html#id2802346


'use strict';


var Schema = require('../schema');


module.exports = new Schema({
  explicit: [
    require('../type/str'),
    require('../type/seq'),
    require('../type/map')
  ]
});

},{"../schema":8,"../type/map":22,"../type/seq":27,"../type/str":29}],13:[function(require,module,exports){
// Standard YAML's JSON schema.
// http://www.yaml.org/spec/1.2/spec.html#id2803231
//
// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.
// So, this schema is not such strict as defined in the YAML specification.
// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.


'use strict';


var Schema = require('../schema');


module.exports = new Schema({
  include: [
    require('./failsafe')
  ],
  implicit: [
    require('../type/null'),
    require('../type/bool'),
    require('../type/int'),
    require('../type/float')
  ]
});

},{"../schema":8,"../type/bool":16,"../type/float":17,"../type/int":18,"../type/null":24,"./failsafe":12}],14:[function(require,module,exports){
'use strict';

var YAMLException = require('./exception');

var TYPE_CONSTRUCTOR_OPTIONS = [
  'kind',
  'resolve',
  'construct',
  'instanceOf',
  'predicate',
  'represent',
  'defaultStyle',
  'styleAliases'
];

var YAML_NODE_KINDS = [
  'scalar',
  'sequence',
  'mapping'
];

function compileStyleAliases(map) {
  var result = {};

  if (map !== null) {
    Object.keys(map).forEach(function (style) {
      map[style].forEach(function (alias) {
        result[String(alias)] = style;
      });
    });
  }

  return result;
}

function Type(tag, options) {
  options = options || {};

  Object.keys(options).forEach(function (name) {
    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {
      throw new YAMLException('Unknown option "' + name + '" is met in definition of "' + tag + '" YAML type.');
    }
  });

  // TODO: Add tag format check.
  this.tag          = tag;
  this.kind         = options['kind']         || null;
  this.resolve      = options['resolve']      || function () { return true; };
  this.construct    = options['construct']    || function (data) { return data; };
  this.instanceOf   = options['instanceOf']   || null;
  this.predicate    = options['predicate']    || null;
  this.represent    = options['represent']    || null;
  this.defaultStyle = options['defaultStyle'] || null;
  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);

  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {
    throw new YAMLException('Unknown kind "' + this.kind + '" is specified for "' + tag + '" YAML type.');
  }
}

module.exports = Type;

},{"./exception":5}],15:[function(require,module,exports){
'use strict';

/*eslint-disable no-bitwise*/

var NodeBuffer;

try {
  // A trick for browserified version, to not include `Buffer` shim
  var _require = require;
  NodeBuffer = _require('buffer').Buffer;
} catch (__) {}

var Type       = require('../type');


// [ 64, 65, 66 ] -> [ padding, CR, LF ]
var BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r';


function resolveYamlBinary(data) {
  if (data === null) return false;

  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;

  // Convert one by one.
  for (idx = 0; idx < max; idx++) {
    code = map.indexOf(data.charAt(idx));

    // Skip CR/LF
    if (code > 64) continue;

    // Fail on illegal characters
    if (code < 0) return false;

    bitlen += 6;
  }

  // If there are any bits left, source was corrupted
  return (bitlen % 8) === 0;
}

function constructYamlBinary(data) {
  var idx, tailbits,
      input = data.replace(/[\r\n=]/g, ''), // remove CR/LF & padding to simplify scan
      max = input.length,
      map = BASE64_MAP,
      bits = 0,
      result = [];

  // Collect by 6*4 bits (3 bytes)

  for (idx = 0; idx < max; idx++) {
    if ((idx % 4 === 0) && idx) {
      result.push((bits >> 16) & 0xFF);
      result.push((bits >> 8) & 0xFF);
      result.push(bits & 0xFF);
    }

    bits = (bits << 6) | map.indexOf(input.charAt(idx));
  }

  // Dump tail

  tailbits = (max % 4) * 6;

  if (tailbits === 0) {
    result.push((bits >> 16) & 0xFF);
    result.push((bits >> 8) & 0xFF);
    result.push(bits & 0xFF);
  } else if (tailbits === 18) {
    result.push((bits >> 10) & 0xFF);
    result.push((bits >> 2) & 0xFF);
  } else if (tailbits === 12) {
    result.push((bits >> 4) & 0xFF);
  }

  // Wrap into Buffer for NodeJS and leave Array for browser
  if (NodeBuffer) return new NodeBuffer(result);

  return result;
}

function representYamlBinary(object /*, style*/) {
  var result = '', bits = 0, idx, tail,
      max = object.length,
      map = BASE64_MAP;

  // Convert every three bytes to 4 ASCII characters.

  for (idx = 0; idx < max; idx++) {
    if ((idx % 3 === 0) && idx) {
      result += map[(bits >> 18) & 0x3F];
      result += map[(bits >> 12) & 0x3F];
      result += map[(bits >> 6) & 0x3F];
      result += map[bits & 0x3F];
    }

    bits = (bits << 8) + object[idx];
  }

  // Dump tail

  tail = max % 3;

  if (tail === 0) {
    result += map[(bits >> 18) & 0x3F];
    result += map[(bits >> 12) & 0x3F];
    result += map[(bits >> 6) & 0x3F];
    result += map[bits & 0x3F];
  } else if (tail === 2) {
    result += map[(bits >> 10) & 0x3F];
    result += map[(bits >> 4) & 0x3F];
    result += map[(bits << 2) & 0x3F];
    result += map[64];
  } else if (tail === 1) {
    result += map[(bits >> 2) & 0x3F];
    result += map[(bits << 4) & 0x3F];
    result += map[64];
    result += map[64];
  }

  return result;
}

function isBinary(object) {
  return NodeBuffer && NodeBuffer.isBuffer(object);
}

module.exports = new Type('tag:yaml.org,2002:binary', {
  kind: 'scalar',
  resolve: resolveYamlBinary,
  construct: constructYamlBinary,
  predicate: isBinary,
  represent: representYamlBinary
});

},{"../type":14}],16:[function(require,module,exports){
'use strict';

var Type = require('../type');

function resolveYamlBoolean(data) {
  if (data === null) return false;

  var max = data.length;

  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||
         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));
}

function constructYamlBoolean(data) {
  return data === 'true' ||
         data === 'True' ||
         data === 'TRUE';
}

function isBoolean(object) {
  return Object.prototype.toString.call(object) === '[object Boolean]';
}

module.exports = new Type('tag:yaml.org,2002:bool', {
  kind: 'scalar',
  resolve: resolveYamlBoolean,
  construct: constructYamlBoolean,
  predicate: isBoolean,
  represent: {
    lowercase: function (object) { return object ? 'true' : 'false'; },
    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },
    camelcase: function (object) { return object ? 'True' : 'False'; }
  },
  defaultStyle: 'lowercase'
});

},{"../type":14}],17:[function(require,module,exports){
'use strict';

var common = require('../common');
var Type   = require('../type');

var YAML_FLOAT_PATTERN = new RegExp(
  '^(?:[-+]?(?:[0-9][0-9_]*)\\.[0-9_]*(?:[eE][-+][0-9]+)?' +
  '|\\.[0-9_]+(?:[eE][-+][0-9]+)?' +
  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*' +
  '|[-+]?\\.(?:inf|Inf|INF)' +
  '|\\.(?:nan|NaN|NAN))$');

function resolveYamlFloat(data) {
  if (data === null) return false;

  if (!YAML_FLOAT_PATTERN.test(data)) return false;

  return true;
}

function constructYamlFloat(data) {
  var value, sign, base, digits;

  value  = data.replace(/_/g, '').toLowerCase();
  sign   = value[0] === '-' ? -1 : 1;
  digits = [];

  if ('+-'.indexOf(value[0]) >= 0) {
    value = value.slice(1);
  }

  if (value === '.inf') {
    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;

  } else if (value === '.nan') {
    return NaN;

  } else if (value.indexOf(':') >= 0) {
    value.split(':').forEach(function (v) {
      digits.unshift(parseFloat(v, 10));
    });

    value = 0.0;
    base = 1;

    digits.forEach(function (d) {
      value += d * base;
      base *= 60;
    });

    return sign * value;

  }
  return sign * parseFloat(value, 10);
}


var SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;

function representYamlFloat(object, style) {
  var res;

  if (isNaN(object)) {
    switch (style) {
      case 'lowercase': return '.nan';
      case 'uppercase': return '.NAN';
      case 'camelcase': return '.NaN';
    }
  } else if (Number.POSITIVE_INFINITY === object) {
    switch (style) {
      case 'lowercase': return '.inf';
      case 'uppercase': return '.INF';
      case 'camelcase': return '.Inf';
    }
  } else if (Number.NEGATIVE_INFINITY === object) {
    switch (style) {
      case 'lowercase': return '-.inf';
      case 'uppercase': return '-.INF';
      case 'camelcase': return '-.Inf';
    }
  } else if (common.isNegativeZero(object)) {
    return '-0.0';
  }

  res = object.toString(10);

  // JS stringifier can build scientific format without dots: 5e-100,
  // while YAML requres dot: 5.e-100. Fix it with simple hack

  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;
}

function isFloat(object) {
  return (Object.prototype.toString.call(object) === '[object Number]') &&
         (object % 1 !== 0 || common.isNegativeZero(object));
}

module.exports = new Type('tag:yaml.org,2002:float', {
  kind: 'scalar',
  resolve: resolveYamlFloat,
  construct: constructYamlFloat,
  predicate: isFloat,
  represent: representYamlFloat,
  defaultStyle: 'lowercase'
});

},{"../common":3,"../type":14}],18:[function(require,module,exports){
'use strict';

var common = require('../common');
var Type   = require('../type');

function isHexCode(c) {
  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||
         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||
         ((0x61/* a */ <= c) && (c <= 0x66/* f */));
}

function isOctCode(c) {
  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));
}

function isDecCode(c) {
  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));
}

function resolveYamlInteger(data) {
  if (data === null) return false;

  var max = data.length,
      index = 0,
      hasDigits = false,
      ch;

  if (!max) return false;

  ch = data[index];

  // sign
  if (ch === '-' || ch === '+') {
    ch = data[++index];
  }

  if (ch === '0') {
    // 0
    if (index + 1 === max) return true;
    ch = data[++index];

    // base 2, base 8, base 16

    if (ch === 'b') {
      // base 2
      index++;

      for (; index < max; index++) {
        ch = data[index];
        if (ch === '_') continue;
        if (ch !== '0' && ch !== '1') return false;
        hasDigits = true;
      }
      return hasDigits;
    }


    if (ch === 'x') {
      // base 16
      index++;

      for (; index < max; index++) {
        ch = data[index];
        if (ch === '_') continue;
        if (!isHexCode(data.charCodeAt(index))) return false;
        hasDigits = true;
      }
      return hasDigits;
    }

    // base 8
    for (; index < max; index++) {
      ch = data[index];
      if (ch === '_') continue;
      if (!isOctCode(data.charCodeAt(index))) return false;
      hasDigits = true;
    }
    return hasDigits;
  }

  // base 10 (except 0) or base 60

  for (; index < max; index++) {
    ch = data[index];
    if (ch === '_') continue;
    if (ch === ':') break;
    if (!isDecCode(data.charCodeAt(index))) {
      return false;
    }
    hasDigits = true;
  }

  if (!hasDigits) return false;

  // if !base60 - done;
  if (ch !== ':') return true;

  // base60 almost not used, no needs to optimize
  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));
}

function constructYamlInteger(data) {
  var value = data, sign = 1, ch, base, digits = [];

  if (value.indexOf('_') !== -1) {
    value = value.replace(/_/g, '');
  }

  ch = value[0];

  if (ch === '-' || ch === '+') {
    if (ch === '-') sign = -1;
    value = value.slice(1);
    ch = value[0];
  }

  if (value === '0') return 0;

  if (ch === '0') {
    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);
    if (value[1] === 'x') return sign * parseInt(value, 16);
    return sign * parseInt(value, 8);
  }

  if (value.indexOf(':') !== -1) {
    value.split(':').forEach(function (v) {
      digits.unshift(parseInt(v, 10));
    });

    value = 0;
    base = 1;

    digits.forEach(function (d) {
      value += (d * base);
      base *= 60;
    });

    return sign * value;

  }

  return sign * parseInt(value, 10);
}

function isInteger(object) {
  return (Object.prototype.toString.call(object)) === '[object Number]' &&
         (object % 1 === 0 && !common.isNegativeZero(object));
}

module.exports = new Type('tag:yaml.org,2002:int', {
  kind: 'scalar',
  resolve: resolveYamlInteger,
  construct: constructYamlInteger,
  predicate: isInteger,
  represent: {
    binary:      function (object) { return '0b' + object.toString(2); },
    octal:       function (object) { return '0'  + object.toString(8); },
    decimal:     function (object) { return        object.toString(10); },
    hexadecimal: function (object) { return '0x' + object.toString(16).toUpperCase(); }
  },
  defaultStyle: 'decimal',
  styleAliases: {
    binary:      [ 2,  'bin' ],
    octal:       [ 8,  'oct' ],
    decimal:     [ 10, 'dec' ],
    hexadecimal: [ 16, 'hex' ]
  }
});

},{"../common":3,"../type":14}],19:[function(require,module,exports){
'use strict';

var esprima;

// Browserified version does not have esprima
//
// 1. For node.js just require module as deps
// 2. For browser try to require mudule via external AMD system.
//    If not found - try to fallback to window.esprima. If not
//    found too - then fail to parse.
//
try {
  // workaround to exclude package from browserify list.
  var _require = require;
  esprima = _require('esprima');
} catch (_) {
  /*global window */
  if (typeof window !== 'undefined') esprima = window.esprima;
}

var Type = require('../../type');

function resolveJavascriptFunction(data) {
  if (data === null) return false;

  try {
    var source = '(' + data + ')',
        ast    = esprima.parse(source, { range: true });

    if (ast.type                    !== 'Program'             ||
        ast.body.length             !== 1                     ||
        ast.body[0].type            !== 'ExpressionStatement' ||
        ast.body[0].expression.type !== 'FunctionExpression') {
      return false;
    }

    return true;
  } catch (err) {
    return false;
  }
}

function constructJavascriptFunction(data) {
  /*jslint evil:true*/

  var source = '(' + data + ')',
      ast    = esprima.parse(source, { range: true }),
      params = [],
      body;

  if (ast.type                    !== 'Program'             ||
      ast.body.length             !== 1                     ||
      ast.body[0].type            !== 'ExpressionStatement' ||
      ast.body[0].expression.type !== 'FunctionExpression') {
    throw new Error('Failed to resolve function');
  }

  ast.body[0].expression.params.forEach(function (param) {
    params.push(param.name);
  });

  body = ast.body[0].expression.body.range;

  // Esprima's ranges include the first '{' and the last '}' characters on
  // function expressions. So cut them out.
  /*eslint-disable no-new-func*/
  return new Function(params, source.slice(body[0] + 1, body[1] - 1));
}

function representJavascriptFunction(object /*, style*/) {
  return object.toString();
}

function isFunction(object) {
  return Object.prototype.toString.call(object) === '[object Function]';
}

module.exports = new Type('tag:yaml.org,2002:js/function', {
  kind: 'scalar',
  resolve: resolveJavascriptFunction,
  construct: constructJavascriptFunction,
  predicate: isFunction,
  represent: representJavascriptFunction
});

},{"../../type":14}],20:[function(require,module,exports){
'use strict';

var Type = require('../../type');

function resolveJavascriptRegExp(data) {
  if (data === null) return false;
  if (data.length === 0) return false;

  var regexp = data,
      tail   = /\/([gim]*)$/.exec(data),
      modifiers = '';

  // if regexp starts with '/' it can have modifiers and must be properly closed
  // `/foo/gim` - modifiers tail can be maximum 3 chars
  if (regexp[0] === '/') {
    if (tail) modifiers = tail[1];

    if (modifiers.length > 3) return false;
    // if expression starts with /, is should be properly terminated
    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;
  }

  return true;
}

function constructJavascriptRegExp(data) {
  var regexp = data,
      tail   = /\/([gim]*)$/.exec(data),
      modifiers = '';

  // `/foo/gim` - tail can be maximum 4 chars
  if (regexp[0] === '/') {
    if (tail) modifiers = tail[1];
    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);
  }

  return new RegExp(regexp, modifiers);
}

function representJavascriptRegExp(object /*, style*/) {
  var result = '/' + object.source + '/';

  if (object.global) result += 'g';
  if (object.multiline) result += 'm';
  if (object.ignoreCase) result += 'i';

  return result;
}

function isRegExp(object) {
  return Object.prototype.toString.call(object) === '[object RegExp]';
}

module.exports = new Type('tag:yaml.org,2002:js/regexp', {
  kind: 'scalar',
  resolve: resolveJavascriptRegExp,
  construct: constructJavascriptRegExp,
  predicate: isRegExp,
  represent: representJavascriptRegExp
});

},{"../../type":14}],21:[function(require,module,exports){
'use strict';

var Type = require('../../type');

function resolveJavascriptUndefined() {
  return true;
}

function constructJavascriptUndefined() {
  /*eslint-disable no-undefined*/
  return undefined;
}

function representJavascriptUndefined() {
  return '';
}

function isUndefined(object) {
  return typeof object === 'undefined';
}

module.exports = new Type('tag:yaml.org,2002:js/undefined', {
  kind: 'scalar',
  resolve: resolveJavascriptUndefined,
  construct: constructJavascriptUndefined,
  predicate: isUndefined,
  represent: representJavascriptUndefined
});

},{"../../type":14}],22:[function(require,module,exports){
'use strict';

var Type = require('../type');

module.exports = new Type('tag:yaml.org,2002:map', {
  kind: 'mapping',
  construct: function (data) { return data !== null ? data : {}; }
});

},{"../type":14}],23:[function(require,module,exports){
'use strict';

var Type = require('../type');

function resolveYamlMerge(data) {
  return data === '<<' || data === null;
}

module.exports = new Type('tag:yaml.org,2002:merge', {
  kind: 'scalar',
  resolve: resolveYamlMerge
});

},{"../type":14}],24:[function(require,module,exports){
'use strict';

var Type = require('../type');

function resolveYamlNull(data) {
  if (data === null) return true;

  var max = data.length;

  return (max === 1 && data === '~') ||
         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));
}

function constructYamlNull() {
  return null;
}

function isNull(object) {
  return object === null;
}

module.exports = new Type('tag:yaml.org,2002:null', {
  kind: 'scalar',
  resolve: resolveYamlNull,
  construct: constructYamlNull,
  predicate: isNull,
  represent: {
    canonical: function () { return '~';    },
    lowercase: function () { return 'null'; },
    uppercase: function () { return 'NULL'; },
    camelcase: function () { return 'Null'; }
  },
  defaultStyle: 'lowercase'
});

},{"../type":14}],25:[function(require,module,exports){
'use strict';

var Type = require('../type');

var _hasOwnProperty = Object.prototype.hasOwnProperty;
var _toString       = Object.prototype.toString;

function resolveYamlOmap(data) {
  if (data === null) return true;

  var objectKeys = [], index, length, pair, pairKey, pairHasKey,
      object = data;

  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];
    pairHasKey = false;

    if (_toString.call(pair) !== '[object Object]') return false;

    for (pairKey in pair) {
      if (_hasOwnProperty.call(pair, pairKey)) {
        if (!pairHasKey) pairHasKey = true;
        else return false;
      }
    }

    if (!pairHasKey) return false;

    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);
    else return false;
  }

  return true;
}

function constructYamlOmap(data) {
  return data !== null ? data : [];
}

module.exports = new Type('tag:yaml.org,2002:omap', {
  kind: 'sequence',
  resolve: resolveYamlOmap,
  construct: constructYamlOmap
});

},{"../type":14}],26:[function(require,module,exports){
'use strict';

var Type = require('../type');

var _toString = Object.prototype.toString;

function resolveYamlPairs(data) {
  if (data === null) return true;

  var index, length, pair, keys, result,
      object = data;

  result = new Array(object.length);

  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];

    if (_toString.call(pair) !== '[object Object]') return false;

    keys = Object.keys(pair);

    if (keys.length !== 1) return false;

    result[index] = [ keys[0], pair[keys[0]] ];
  }

  return true;
}

function constructYamlPairs(data) {
  if (data === null) return [];

  var index, length, pair, keys, result,
      object = data;

  result = new Array(object.length);

  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];

    keys = Object.keys(pair);

    result[index] = [ keys[0], pair[keys[0]] ];
  }

  return result;
}

module.exports = new Type('tag:yaml.org,2002:pairs', {
  kind: 'sequence',
  resolve: resolveYamlPairs,
  construct: constructYamlPairs
});

},{"../type":14}],27:[function(require,module,exports){
'use strict';

var Type = require('../type');

module.exports = new Type('tag:yaml.org,2002:seq', {
  kind: 'sequence',
  construct: function (data) { return data !== null ? data : []; }
});

},{"../type":14}],28:[function(require,module,exports){
'use strict';

var Type = require('../type');

var _hasOwnProperty = Object.prototype.hasOwnProperty;

function resolveYamlSet(data) {
  if (data === null) return true;

  var key, object = data;

  for (key in object) {
    if (_hasOwnProperty.call(object, key)) {
      if (object[key] !== null) return false;
    }
  }

  return true;
}

function constructYamlSet(data) {
  return data !== null ? data : {};
}

module.exports = new Type('tag:yaml.org,2002:set', {
  kind: 'mapping',
  resolve: resolveYamlSet,
  construct: constructYamlSet
});

},{"../type":14}],29:[function(require,module,exports){
'use strict';

var Type = require('../type');

module.exports = new Type('tag:yaml.org,2002:str', {
  kind: 'scalar',
  construct: function (data) { return data !== null ? data : ''; }
});

},{"../type":14}],30:[function(require,module,exports){
'use strict';

var Type = require('../type');

var YAML_DATE_REGEXP = new RegExp(
  '^([0-9][0-9][0-9][0-9])'          + // [1] year
  '-([0-9][0-9])'                    + // [2] month
  '-([0-9][0-9])$');                   // [3] day

var YAML_TIMESTAMP_REGEXP = new RegExp(
  '^([0-9][0-9][0-9][0-9])'          + // [1] year
  '-([0-9][0-9]?)'                   + // [2] month
  '-([0-9][0-9]?)'                   + // [3] day
  '(?:[Tt]|[ \\t]+)'                 + // ...
  '([0-9][0-9]?)'                    + // [4] hour
  ':([0-9][0-9])'                    + // [5] minute
  ':([0-9][0-9])'                    + // [6] second
  '(?:\\.([0-9]*))?'                 + // [7] fraction
  '(?:[ \\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour
  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute

function resolveYamlTimestamp(data) {
  if (data === null) return false;
  if (YAML_DATE_REGEXP.exec(data) !== null) return true;
  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;
  return false;
}

function constructYamlTimestamp(data) {
  var match, year, month, day, hour, minute, second, fraction = 0,
      delta = null, tz_hour, tz_minute, date;

  match = YAML_DATE_REGEXP.exec(data);
  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);

  if (match === null) throw new Error('Date resolve error');

  // match: [1] year [2] month [3] day

  year = +(match[1]);
  month = +(match[2]) - 1; // JS month starts with 0
  day = +(match[3]);

  if (!match[4]) { // no hour
    return new Date(Date.UTC(year, month, day));
  }

  // match: [4] hour [5] minute [6] second [7] fraction

  hour = +(match[4]);
  minute = +(match[5]);
  second = +(match[6]);

  if (match[7]) {
    fraction = match[7].slice(0, 3);
    while (fraction.length < 3) { // milli-seconds
      fraction += '0';
    }
    fraction = +fraction;
  }

  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute

  if (match[9]) {
    tz_hour = +(match[10]);
    tz_minute = +(match[11] || 0);
    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds
    if (match[9] === '-') delta = -delta;
  }

  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));

  if (delta) date.setTime(date.getTime() - delta);

  return date;
}

function representYamlTimestamp(object /*, style*/) {
  return object.toISOString();
}

module.exports = new Type('tag:yaml.org,2002:timestamp', {
  kind: 'scalar',
  resolve: resolveYamlTimestamp,
  construct: constructYamlTimestamp,
  instanceOf: Date,
  represent: representYamlTimestamp
});

},{"../type":14}],31:[function(require,module,exports){
(function (global){
var parse = require("json-to-ast");

var reconstructNode = function (node, lexicalInfo) {
    var acc = {};
    node.children.forEach(function (child) {
        acc[child.key.value] = reconstruct(child.value);
    });
    acc['__location__'] = lexicalInfo;
    return acc;
};

var reconstructLiteral = function (node) {
    return node.value;
};

var reconstructArray = function (node) {
    var acc = [];
    node.children.forEach(function (child) {
        acc.push(reconstruct(child));
    });
    return acc;
};

var reconstruct = function (node) {
    var location = node.loc;
    var lexicalInfo = null;
    if (location != null) {
        lexicalInfo = {
            "start-line": location.start.line,
            "start-column": location.start.column,
            "start-index": -1,
            "end-line": location.end.line,
            "end-column": location.end.column,
            "end-index": -1
        };
    }

    switch (node.type) {
        case "object": return reconstructNode(node, lexicalInfo);
        case "literal": return reconstructLiteral(node);
        case "array": return reconstructArray(node);
    }
};

var ast = function (file, text) {
    var tree = parse(text, { source: file });
    return reconstruct(tree);
};


module.exports = ast;
global.JS_AST = ast;

//console.log(JSON.stringify(ast("test.yaml", '{"a":1,"b":[{"b":3,"d":{"e":3}}, true, false]}'), null, 2));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"json-to-ast":33}],32:[function(require,module,exports){
(function (global){
var fs = (typeof (NODE_FS) === 'undefined' ? { readFile: function () { throw new Error("readFile only supported in node.js") } } : NODE_FS);
var yaml = require('./js-yaml/index.js');
var path = require("path");
var rest = require("rest");
var json_ast = require("./json_ast");

global.FRAGMENTS_CACHE = {};
global.PENDING_LIBRARIES = [];
global.SHACL = require("shacl").validate;

var ensureFileUri = function (uri) {
    if (uri.indexOf("://") === -1) {
        uri = "file://" + uri;
    }
    return uri;
};

var startsWith = function (s, p) {
    return s.indexOf(p) === 0;
};

var isLocalFile = function (location) {
    return (startsWith(location, "file://") || location.indexOf("://") === -1);
};

var inCache = function (location, cacheDirs) {
    for (var domain in cacheDirs || {}) {
        if (startsWith(location, domain)) {
            return location.replace(domain, cacheDirs[domain]);
        }
    }
};

var resolveFile = function (location, cb) {
    if (isLocalFile(location)) {
        fs.readFile(location.replace("file://", ""), function (err, data) {
            if (err) {
                cb(err);
            } else {
                cb(null, data.toString());
            }
        });
    } else if (inCache(location, global.PARSING_OPTIONS.cacheDirs || {})) {
        resolveFile(inCache(location, global.PARSING_OPTIONS.cacheDirs || {}), cb);
    } else {
        global.JS_REST(location).then(function (response) {
            cb(null, response.entity);
        }).catch(function (err) {
            cb(err);
        });
    }
};

var resolvePath = function (location, path) {
    var lastComponent = location.split("/").pop();
    var base = location.replace(lastComponent, "");
    if (path.indexOf("/") === 0 || path.indexOf("://") !== -1) {
        //console.log("RESOLVING PATH (" + base + " + " + path + ") --> " + path);
        return path;
    } else {
        //console.log("RESOLVING PATH (" + base + " + " + path + ") --> " + (base + path));
        return base + path;
    }
};

var updateFragments = function (file, data, pending, cb) {
    var matches = data.match(/!include\s+(.+)/g) || [];
    var files = matches.map(function (f) {
        var filePath = f.split(/!include\s+/)[1];
        filePath = filePath.replace(/'|"$/, "");
        var location = resolvePath(file.location, filePath);
        return {
            "path": filePath,
            "location": location
        };
    });
    pending = pending.concat(files);

    FRAGMENTS_CACHE[file.path || file.location] = {
        "data": data,
        "location": file.location
    };

    if (pending.length === 0) {
        cb(null, FRAGMENTS_CACHE);
    } else {
        var next = pending.shift();
        cacheFragments(next, cb, pending);
    }
};

var cacheFragments = function (fileOrData, cb, pending) {
    if (pending == null) {
        pending = [];
    }

    if (fileOrData.data != null) {
        updateFragments(fileOrData, fileOrData.data, pending, cb);
    } else {
        // console.log(fileOrData);
        if (typeof (AMF_LOADING_EVENT) !== 'undefined') {
            try {
                AMF_LOADING_EVENT(fileOrData.location);
            } catch (e) { }
        }
        resolveFile(fileOrData.location, function (err, data) {
            if (err) {
                cb(err);
            } else {
                updateFragments(fileOrData, data, pending, cb);
            }
        });
    }

};

var loadLibraries = function (loaded, cb, pending) {
    if (pending == null) {
        pending = PENDING_LIBRARIES;
        PENDING_LIBRARIES = [];
        loadLibraries(loaded, cb, pending);
    } else {
        if (pending.length == 0) {
            cb(null, loaded);
        } else {
            var next = pending.shift();
            parseYamlFile(next.location, global.PARSING_OPTIONS, function (err, loadedFragment) {
                if (err) {
                    cb(err, loaded);
                } else {
                    loaded.uses[next.alias] = loadedFragment;
                    loadLibraries(loaded, cb, pending);
                }
            });
        }
    }
};

var getFragmentInfo = function (fragment) {
    var fragmentInfo = fragment.data.split("\n")[0];
    if (fragmentInfo.indexOf("#%RAML") === 0) {
        return fragmentInfo;

    } else {
        return null;
    }

};

var collectLibraries = function (fragment, location) {
    var libraries = fragment.uses || {};
    for (var p in libraries) {
        if (p !== "__location__") {
            var value = libraries[p];
            if (typeof (value) === "object" && value["amf-lexical-token"]) {
                value = value["amf-lexical-token"];
            }
            var resolvedLocation = resolvePath(location, value);
            PENDING_LIBRARIES.push({
                "path": libraries[p],
                "location": resolvedLocation,
                "alias": p
            });
        }
    }
};

var FragmentType = new yaml.Type("!include", {
    kind: "scalar",

    resolve: function (file) {
        return FRAGMENTS_CACHE[file] != null;
    },

    construct: function (file) {
        var fragment = FRAGMENTS_CACHE[file];
        var parsed = null;
        // console.log("Trying to parse inner '" + fragment.data.substr(0, 10) + "'");

        try {
            parsed = yaml.load(fragment.data, { schema: FRAGMENT_SCHEMA });
        } catch (e) {
            parsed = fragment.data;
        }
        var fragmentInfo = getFragmentInfo(fragment);

        var location = fragment.location;

        return {
            "@location": ensureFileUri(location),
            "@fragment": fragmentInfo,
            "@data": parsed,
            "@raw": fragment.data
        };
    }
});

var FRAGMENT_SCHEMA = yaml.Schema.create([FragmentType]);

var parseYamlFile = function (location, options, cb) {
    global.PARSING_OPTIONS = options || {};
    cacheFragments({ "location": location }, function (err, data) {
        try {
            var loaded = yaml.load(FRAGMENTS_CACHE[location].data, { schema: FRAGMENT_SCHEMA });
            collectLibraries(loaded, location);

            loadLibraries(loaded, function (err, loaded) {
                var result = { "@data": loaded };
                result["@location"] = ensureFileUri(location);
                result["@fragment"] = getFragmentInfo(FRAGMENTS_CACHE[location]);
                result["@raw"] = FRAGMENTS_CACHE[location].data;
                cb(null, result);
            });
        } catch (e) {
            cb(e);
        }
    });
};

var parseYamlString = function (location, data, options, cb) {
    global.PARSING_OPTIONS = options || {};
    cacheFragments({ "location": location, "data": data }, function (err, data) {
        try {
            var loaded = yaml.load(FRAGMENTS_CACHE[location].data, { schema: FRAGMENT_SCHEMA });
            collectLibraries(loaded, location);
            loadLibraries(loaded, function (err, loaded) {
                if (err == null) {
                    var result = { "@data": loaded };
                    result["@location"] = ensureFileUri(location);
                    result["@fragment"] = getFragmentInfo(FRAGMENTS_CACHE[location]);
                    result["@raw"] = FRAGMENTS_CACHE[location].data;
                    cb(null, result);
                } else {
                    cb(err);
                }

            });
        } catch (e) {
            cb(e);
        }
    });
};

module.exports.parseYamlFile = parseYamlFile;
module.exports.parseYamlString = parseYamlString;
module.exports.loadYaml = yaml.load;
module.exports.dump = yaml.dump;
global.JS_YAML = {};
global.JS_YAML.loadYaml = yaml.load;
global.JS_YAML.parseYamlFile = parseYamlFile;
global.JS_YAML.parseYamlString = parseYamlString;
global.JS_YAML.dump = yaml.dump;
global.JS_REST = function (location) {
    if (typeof (global.JS_USE_PROXY) !== "undefined") {
        location = global.JS_USE_PROXY.replace("$URL", encodeURIComponent(location));
    }
    return rest(location);
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./js-yaml/index.js":1,"./json_ast":31,"path":108,"rest":34,"shacl":93}],33:[function(require,module,exports){
(function (global, factory) {
	if (typeof define === "function" && define.amd) {
		define(['module'], factory);
	} else if (typeof exports !== "undefined") {
		factory(module);
	} else {
		var mod = {
			exports: {}
		};
		factory(mod);
		global.parse = mod.exports;
	}
})(this, function (module) {
	'use strict';

	var _extends = Object.assign || function (target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i];

			for (var key in source) {
				if (Object.prototype.hasOwnProperty.call(source, key)) {
					target[key] = source[key];
				}
			}
		}

		return target;
	};

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}

		return call && (typeof call === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		}

		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		});
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var location = function location(startLine, startColumn, startOffset, endLine, endColumn, endOffset, source) {
		return {
			start: {
				line: startLine,
				column: startColumn,
				offset: startOffset
			},
			end: {
				line: endLine,
				column: endColumn,
				offset: endOffset
			},
			source: source || null
		};
	};

	function showCodeFragment(source, linePosition, columnPosition) {
		var lines = source.split(/\n|\r\n?|\f/);
		var line = lines[linePosition - 1];
		var marker = new Array(columnPosition).join(' ') + '^';

		return line + '\n' + marker;
	}

	var ParseError = function (_SyntaxError) {
		_inherits(ParseError, _SyntaxError);

		function ParseError(message, source, linePosition, columnPosition) {
			_classCallCheck(this, ParseError);

			var fullMessage = linePosition ? message + '\n' + showCodeFragment(source, linePosition, columnPosition) : message;

			var _this = _possibleConstructorReturn(this, (ParseError.__proto__ || Object.getPrototypeOf(ParseError)).call(this, fullMessage));

			_this.rawMessage = message;
			return _this;
		}

		return ParseError;
	}(SyntaxError);

	var error = function error(message, source, line, column) {
		throw new ParseError(message, source, line, column);
	};

	var parseErrorTypes = {
		unexpectedEnd: function unexpectedEnd() {
			return 'Unexpected end of JSON input';
		},
		unexpectedToken: function unexpectedToken(token, line, column) {
			return 'Unexpected token <' + token + '> at ' + line + ':' + column;
		}
	};

	var tokenizeErrorTypes = {
		cannotTokenizeSymbol: function cannotTokenizeSymbol(symbol, line, column) {
			return 'Cannot tokenize symbol <' + symbol + '> at ' + line + ':' + column;
		}
	};

	var tokenTypes = {
		LEFT_BRACE: 0, // {
		RIGHT_BRACE: 1, // }
		LEFT_BRACKET: 2, // [
		RIGHT_BRACKET: 3, // ]
		COLON: 4, // :
		COMMA: 5, // ,
		STRING: 6, //
		NUMBER: 7, //
		TRUE: 8, // true
		FALSE: 9, // false
		NULL: 10 // null
	};

	var punctuatorTokensMap = { // Lexeme: Token
		'{': tokenTypes.LEFT_BRACE,
		'}': tokenTypes.RIGHT_BRACE,
		'[': tokenTypes.LEFT_BRACKET,
		']': tokenTypes.RIGHT_BRACKET,
		':': tokenTypes.COLON,
		',': tokenTypes.COMMA
	};

	var keywordTokensMap = { // Lexeme: Token config
		'true': { type: tokenTypes.TRUE, value: true },
		'false': { type: tokenTypes.FALSE, value: false },
		'null': { type: tokenTypes.NULL, value: null }
	};

	var stringStates = {
		_START_: 0,
		START_QUOTE_OR_CHAR: 1,
		ESCAPE: 2
	};

	var escapes = {
		'"': 0, // Quotation mask
		'\\': 1, // Reverse solidus
		'/': 2, // Solidus
		'b': 3, // Backspace
		'f': 4, // Form feed
		'n': 5, // New line
		'r': 6, // Carriage return
		't': 7, // Horizontal tab
		'u': 8 // 4 hexadecimal digits
	};

	var numberStates = {
		_START_: 0,
		MINUS: 1,
		ZERO: 2,
		DIGIT: 3,
		POINT: 4,
		DIGIT_FRACTION: 5,
		EXP: 6,
		EXP_DIGIT_OR_SIGN: 7
	};

	// HELPERS

	function isDigit1to9(char) {
		return char >= '1' && char <= '9';
	}

	function isDigit(char) {
		return char >= '0' && char <= '9';
	}

	function isHex(char) {
		return isDigit(char) || char >= 'a' && char <= 'f' || char >= 'A' && char <= 'F';
	}

	function isExp(char) {
		return char === 'e' || char === 'E';
	}

	// PARSERS

	function parseWhitespace(input, index, line, column) {
		var char = input.charAt(index);

		if (char === '\r') {
			// CR (Unix)
			index++;
			line++;
			column = 1;
			if (input.charAt(index) === '\n') {
				// CRLF (Windows)
				index++;
			}
		} else if (char === '\n') {
			// LF (MacOS)
			index++;
			line++;
			column = 1;
		} else if (char === '\t' || char === ' ') {
			index++;
			column++;
		} else {
			return null;
		}

		return {
			index: index,
			line: line,
			column: column
		};
	}

	function parseChar(input, index, line, column) {
		var char = input.charAt(index);

		if (char in punctuatorTokensMap) {
			return {
				type: punctuatorTokensMap[char],
				line: line,
				column: column + 1,
				index: index + 1,
				value: null
			};
		}

		return null;
	}

	function parseKeyword(input, index, line, column) {
		for (var name in keywordTokensMap) {
			if (keywordTokensMap.hasOwnProperty(name) && input.substr(index, name.length) === name) {
				var _keywordTokensMap$nam = keywordTokensMap[name],
				    type = _keywordTokensMap$nam.type,
				    value = _keywordTokensMap$nam.value;


				return {
					type: type,
					line: line,
					column: column + name.length,
					index: index + name.length,
					value: value
				};
			}
		}

		return null;
	}

	function parseString(input, index, line, column) {
		var startIndex = index;
		var buffer = '';
		var state = stringStates._START_;

		while (index < input.length) {
			var char = input.charAt(index);

			switch (state) {
				case stringStates._START_:
					{
						if (char === '"') {
							state = stringStates.START_QUOTE_OR_CHAR;
							index++;
						} else {
							return null;
						}
						break;
					}

				case stringStates.START_QUOTE_OR_CHAR:
					{
						if (char === '\\') {
							state = stringStates.ESCAPE;
							buffer += char;
							index++;
						} else if (char === '"') {
							index++;
							return {
								type: tokenTypes.STRING,
								line: line,
								column: column + index - startIndex,
								index: index,
								value: buffer
							};
						} else {
							buffer += char;
							index++;
						}
						break;
					}

				case stringStates.ESCAPE:
					{
						if (char in escapes) {
							buffer += char;
							index++;
							if (char === 'u') {
								for (var i = 0; i < 4; i++) {
									var curChar = input.charAt(index);
									if (curChar && isHex(curChar)) {
										buffer += curChar;
										index++;
									} else {
										return null;
									}
								}
							}
							state = stringStates.START_QUOTE_OR_CHAR;
						} else {
							return null;
						}
						break;
					}
			}
		}
	}

	function parseNumber(input, index, line, column) {
		var startIndex = index;
		var passedValueIndex = index;
		var state = numberStates._START_;

		iterator: while (index < input.length) {
			var char = input.charAt(index);

			switch (state) {
				case numberStates._START_:
					{
						if (char === '-') {
							state = numberStates.MINUS;
						} else if (char === '0') {
							passedValueIndex = index + 1;
							state = numberStates.ZERO;
						} else if (isDigit1to9(char)) {
							passedValueIndex = index + 1;
							state = numberStates.DIGIT;
						} else {
							return null;
						}
						break;
					}

				case numberStates.MINUS:
					{
						if (char === '0') {
							passedValueIndex = index + 1;
							state = numberStates.ZERO;
						} else if (isDigit1to9(char)) {
							passedValueIndex = index + 1;
							state = numberStates.DIGIT;
						} else {
							return null;
						}
						break;
					}

				case numberStates.ZERO:
					{
						if (char === '.') {
							state = numberStates.POINT;
						} else if (isExp(char)) {
							state = numberStates.EXP;
						} else {
							break iterator;
						}
						break;
					}

				case numberStates.DIGIT:
					{
						if (isDigit(char)) {
							passedValueIndex = index + 1;
						} else if (char === '.') {
							state = numberStates.POINT;
						} else if (isExp(char)) {
							state = numberStates.EXP;
						} else {
							break iterator;
						}
						break;
					}

				case numberStates.POINT:
					{
						if (isDigit(char)) {
							passedValueIndex = index + 1;
							state = numberStates.DIGIT_FRACTION;
						} else {
							break iterator;
						}
						break;
					}

				case numberStates.DIGIT_FRACTION:
					{
						if (isDigit(char)) {
							passedValueIndex = index + 1;
						} else if (isExp(char)) {
							state = numberStates.EXP;
						} else {
							break iterator;
						}
						break;
					}

				case numberStates.EXP:
					{
						if (char === '+' || char === '-') {
							state = numberStates.EXP_DIGIT_OR_SIGN;
						} else if (isDigit(char)) {
							passedValueIndex = index + 1;
							state = numberStates.EXP_DIGIT_OR_SIGN;
						} else {
							break iterator;
						}
						break;
					}

				case numberStates.EXP_DIGIT_OR_SIGN:
					{
						if (isDigit(char)) {
							passedValueIndex = index + 1;
						} else {
							break iterator;
						}
						break;
					}
			}

			index++;
		}

		if (passedValueIndex > 0) {
			return {
				type: tokenTypes.NUMBER,
				line: line,
				column: column + passedValueIndex - startIndex,
				index: passedValueIndex,
				value: parseFloat(input.substring(startIndex, passedValueIndex))
			};
		}

		return null;
	}

	function tokenize(input, settings) {
		var line = 1;
		var column = 1;
		var index = 0;
		var tokens = [];

		while (index < input.length) {
			var args = [input, index, line, column];
			var whitespace = parseWhitespace.apply(undefined, args);

			if (whitespace) {
				index = whitespace.index;
				line = whitespace.line;
				column = whitespace.column;
				continue;
			}

			var matched = parseChar.apply(undefined, args) || parseKeyword.apply(undefined, args) || parseString.apply(undefined, args) || parseNumber.apply(undefined, args);

			if (matched) {
				var token = {
					type: matched.type,
					value: matched.value,
					loc: location(line, column, index, matched.line, matched.column, matched.index, settings.source)
				};

				tokens.push(token);
				index = matched.index;
				line = matched.line;
				column = matched.column;
			} else {
				error(tokenizeErrorTypes.cannotTokenizeSymbol(input.charAt(index), line, column), input, line, column);
			}
		}

		return tokens;
	}

	var literals = [tokenTypes.STRING, tokenTypes.NUMBER, tokenTypes.TRUE, tokenTypes.FALSE, tokenTypes.NULL];

	var objectStates = {
		_START_: 0,
		OPEN_OBJECT: 1,
		PROPERTY: 2,
		COMMA: 3
	};

	var propertyStates = {
		_START_: 0,
		KEY: 1,
		COLON: 2
	};

	var arrayStates = {
		_START_: 0,
		OPEN_ARRAY: 1,
		VALUE: 2,
		COMMA: 3
	};

	var defaultSettings = {
		verbose: true,
		source: null
	};

	function parseObject(input, tokenList, index, settings) {
		// object: LEFT_BRACE (property (COMMA property)*)? RIGHT_BRACE
		var startToken = void 0;
		var object = {
			type: 'object',
			children: []
		};
		var state = objectStates._START_;

		while (index < tokenList.length) {
			var token = tokenList[index];

			switch (state) {
				case objectStates._START_:
					{
						if (token.type === tokenTypes.LEFT_BRACE) {
							startToken = token;
							state = objectStates.OPEN_OBJECT;
							index++;
						} else {
							return null;
						}
						break;
					}

				case objectStates.OPEN_OBJECT:
					{
						if (token.type === tokenTypes.RIGHT_BRACE) {
							if (settings.verbose) {
								object.loc = location(startToken.loc.start.line, startToken.loc.start.column, startToken.loc.start.offset, token.loc.end.line, token.loc.end.column, token.loc.end.offset, settings.source);
								return {
									value: object,
									index: index + 1
								};
							}
						} else {
							var property = parseProperty(input, tokenList, index, settings);
							object.children.push(property.value);
							state = objectStates.PROPERTY;
							index = property.index;
						}
						break;
					}

				case objectStates.PROPERTY:
					{
						if (token.type === tokenTypes.RIGHT_BRACE) {
							if (settings.verbose) {
								object.loc = location(startToken.loc.start.line, startToken.loc.start.column, startToken.loc.start.offset, token.loc.end.line, token.loc.end.column, token.loc.end.offset, settings.source);
							}
							return {
								value: object,
								index: index + 1
							};
						} else if (token.type === tokenTypes.COMMA) {
							state = objectStates.COMMA;
							index++;
						} else {
							error(parseErrorTypes.unexpectedToken(input.substring(token.loc.start.offset, token.loc.end.offset), token.loc.start.line, token.loc.start.column), input, token.loc.start.line, token.loc.start.column);
						}
						break;
					}

				case objectStates.COMMA:
					{
						var _property = parseProperty(input, tokenList, index, settings);
						if (_property) {
							index = _property.index;
							object.children.push(_property.value);
							state = objectStates.PROPERTY;
						} else {
							error(parseErrorTypes.unexpectedToken(input.substring(token.loc.start.offset, token.loc.end.offset), token.loc.start.line, token.loc.start.column), input, token.loc.start.line, token.loc.start.column);
						}
						break;
					}
			}
		}

		error(parseErrorTypes.unexpectedEnd());
	}

	function parseProperty(input, tokenList, index, settings) {
		// property: STRING COLON value
		var startToken = void 0;
		var property = {
			type: 'property',
			key: null,
			value: null
		};
		var state = objectStates._START_;

		while (index < tokenList.length) {
			var token = tokenList[index];

			switch (state) {
				case propertyStates._START_:
					{
						if (token.type === tokenTypes.STRING) {
							var key = {
								type: 'identifier',
								value: token.value
							};
							if (settings.verbose) {
								key.loc = token.loc;
							}
							startToken = token;
							property.key = key;
							state = propertyStates.KEY;
							index++;
						} else {
							return null;
						}
						break;
					}

				case propertyStates.KEY:
					{
						if (token.type === tokenTypes.COLON) {
							state = propertyStates.COLON;
							index++;
						} else {
							error(parseErrorTypes.unexpectedToken(input.substring(token.loc.start.offset, token.loc.end.offset), token.loc.start.line, token.loc.start.column), input, token.loc.start.line, token.loc.start.column);
						}
						break;
					}

				case propertyStates.COLON:
					{
						var value = parseValue(input, tokenList, index, settings);
						property.value = value.value;
						if (settings.verbose) {
							property.loc = location(startToken.loc.start.line, startToken.loc.start.column, startToken.loc.start.offset, value.value.loc.end.line, value.value.loc.end.column, value.value.loc.end.offset, settings.source);
						}
						return {
							value: property,
							index: value.index
						};
					}

			}
		}
	}

	function parseArray(input, tokenList, index, settings) {
		// array: LEFT_BRACKET (value (COMMA value)*)? RIGHT_BRACKET
		var startToken = void 0;
		var array = {
			type: 'array',
			children: []
		};
		var state = arrayStates._START_;
		var token = void 0;

		while (index < tokenList.length) {
			token = tokenList[index];

			switch (state) {
				case arrayStates._START_:
					{
						if (token.type === tokenTypes.LEFT_BRACKET) {
							startToken = token;
							state = arrayStates.OPEN_ARRAY;
							index++;
						} else {
							return null;
						}
						break;
					}

				case arrayStates.OPEN_ARRAY:
					{
						if (token.type === tokenTypes.RIGHT_BRACKET) {
							if (settings.verbose) {
								array.loc = location(startToken.loc.start.line, startToken.loc.start.column, startToken.loc.start.offset, token.loc.end.line, token.loc.end.column, token.loc.end.offset, settings.source);
							}
							return {
								value: array,
								index: index + 1
							};
						} else {
							var value = parseValue(input, tokenList, index, settings);
							index = value.index;
							array.children.push(value.value);
							state = arrayStates.VALUE;
						}
						break;
					}

				case arrayStates.VALUE:
					{
						if (token.type === tokenTypes.RIGHT_BRACKET) {
							if (settings.verbose) {
								array.loc = location(startToken.loc.start.line, startToken.loc.start.column, startToken.loc.start.offset, token.loc.end.line, token.loc.end.column, token.loc.end.offset, settings.source);
							}
							index++;
							return {
								value: array,
								index: index
							};
						} else if (token.type === tokenTypes.COMMA) {
							state = arrayStates.COMMA;
							index++;
						} else {
							error(parseErrorTypes.unexpectedToken(input.substring(token.loc.start.offset, token.loc.end.offset), token.loc.start.line, token.loc.start.column), input, token.loc.start.line, token.loc.start.column);
						}
						break;
					}

				case arrayStates.COMMA:
					{
						var _value = parseValue(input, tokenList, index, settings);
						index = _value.index;
						array.children.push(_value.value);
						state = arrayStates.VALUE;
						break;
					}
			}
		}

		error(parseErrorTypes.unexpectedEnd());
	}

	function parseLiteral(input, tokenList, index, settings) {
		// literal: STRING | NUMBER | TRUE | FALSE | NULL
		var token = tokenList[index];

		var isLiteral = literals.indexOf(token.type) !== -1;

		if (isLiteral) {
			var literal = {
				type: 'literal',
				value: token.value,
				rawValue: input.substring(token.loc.start.offset, token.loc.end.offset)
			};
			if (settings.verbose) {
				literal.loc = token.loc;
			}
			return {
				value: literal,
				index: index + 1
			};
		}

		return null;
	}

	function parseValue(input, tokenList, index, settings) {
		// value: literal | object | array
		var token = tokenList[index];

		var value = parseLiteral.apply(undefined, arguments) || parseObject.apply(undefined, arguments) || parseArray.apply(undefined, arguments);

		if (value) {
			return value;
		} else {
			error(parseErrorTypes.unexpectedToken(input.substring(token.loc.start.offset, token.loc.end.offset), token.loc.start.line, token.loc.start.column), input, token.loc.start.line, token.loc.start.column);
		}
	}

	var parse = function parse(input, settings) {
		settings = _extends({}, defaultSettings, settings);
		var tokenList = tokenize(input, settings);

		if (tokenList.length === 0) {
			error(parseErrorTypes.unexpectedEnd());
		}

		var value = parseValue(input, tokenList, 0, settings);

		if (value.index === tokenList.length) {
			return value.value;
		} else {
			var token = tokenList[value.index];
			error(parseErrorTypes.unexpectedToken(input.substring(token.loc.start.offset, token.loc.end.offset), token.loc.start.line, token.loc.start.column), input, token.loc.start.line, token.loc.start.column);
		}
	};

	module.exports = parse;
});
},{}],34:[function(require,module,exports){
/*
 * Copyright 2014-2016 the original author or authors
 * @license MIT, see LICENSE.txt for details
 *
 * @author Scott Andrews
 */

'use strict';

var rest = require('./client/default'),
    browser = require('./client/xhr');

rest.setPlatformDefaultClient(browser);

module.exports = rest;

},{"./client/default":36,"./client/xhr":37}],35:[function(require,module,exports){
/*
 * Copyright 2014-2016 the original author or authors
 * @license MIT, see LICENSE.txt for details
 *
 * @author Scott Andrews
 */

'use strict';

/**
 * Add common helper methods to a client impl
 *
 * @param {function} impl the client implementation
 * @param {Client} [target] target of this client, used when wrapping other clients
 * @returns {Client} the client impl with additional methods
 */
module.exports = function client(impl, target) {

	if (target) {

		/**
		 * @returns {Client} the target client
		 */
		impl.skip = function skip() {
			return target;
		};

	}

	/**
	 * Allow a client to easily be wrapped by an interceptor
	 *
	 * @param {Interceptor} interceptor the interceptor to wrap this client with
	 * @param [config] configuration for the interceptor
	 * @returns {Client} the newly wrapped client
	 */
	impl.wrap = function wrap(interceptor, config) {
		return interceptor(impl, config);
	};

	/**
	 * @deprecated
	 */
	impl.chain = function chain() {
		if (typeof console !== 'undefined') {
			console.log('rest.js: client.chain() is deprecated, use client.wrap() instead');
		}

		return impl.wrap.apply(this, arguments);
	};

	return impl;

};

},{}],36:[function(require,module,exports){
/*
 * Copyright 2014-2016 the original author or authors
 * @license MIT, see LICENSE.txt for details
 *
 * @author Scott Andrews
 */

'use strict';

/**
 * Plain JS Object containing properties that represent an HTTP request.
 *
 * Depending on the capabilities of the underlying client, a request
 * may be cancelable. If a request may be canceled, the client will add
 * a canceled flag and cancel function to the request object. Canceling
 * the request will put the response into an error state.
 *
 * @field {string} [method='GET'] HTTP method, commonly GET, POST, PUT, DELETE or HEAD
 * @field {string|UrlBuilder} [path=''] path template with optional path variables
 * @field {Object} [params] parameters for the path template and query string
 * @field {Object} [headers] custom HTTP headers to send, in addition to the clients default headers
 * @field [entity] the HTTP entity, common for POST or PUT requests
 * @field {boolean} [canceled] true if the request has been canceled, set by the client
 * @field {Function} [cancel] cancels the request if invoked, provided by the client
 * @field {Client} [originator] the client that first handled this request, provided by the interceptor
 *
 * @class Request
 */

/**
 * Plain JS Object containing properties that represent an HTTP response
 *
 * @field {Object} [request] the request object as received by the root client
 * @field {Object} [raw] the underlying request object, like XmlHttpRequest in a browser
 * @field {number} [status.code] status code of the response (i.e. 200, 404)
 * @field {string} [status.text] status phrase of the response
 * @field {Object] [headers] response headers hash of normalized name, value pairs
 * @field [entity] the response body
 *
 * @class Response
 */

/**
 * HTTP client particularly suited for RESTful operations.
 *
 * @field {function} wrap wraps this client with a new interceptor returning the wrapped client
 *
 * @param {Request} the HTTP request
 * @returns {ResponsePromise<Response>} a promise the resolves to the HTTP response
 *
 * @class Client
 */

 /**
  * Extended when.js Promises/A+ promise with HTTP specific helpers
  *q
  * @method entity promise for the HTTP entity
  * @method status promise for the HTTP status code
  * @method headers promise for the HTTP response headers
  * @method header promise for a specific HTTP response header
  *
  * @class ResponsePromise
  * @extends Promise
  */

var client, target, platformDefault;

client = require('../client');

if (typeof Promise !== 'function' && console && console.log) {
	console.log('An ES6 Promise implementation is required to use rest.js. See https://github.com/cujojs/when/blob/master/docs/es6-promise-shim.md for using when.js as a Promise polyfill.');
}

/**
 * Make a request with the default client
 * @param {Request} the HTTP request
 * @returns {Promise<Response>} a promise the resolves to the HTTP response
 */
function defaultClient() {
	return target.apply(void 0, arguments);
}

/**
 * Change the default client
 * @param {Client} client the new default client
 */
defaultClient.setDefaultClient = function setDefaultClient(client) {
	target = client;
};

/**
 * Obtain a direct reference to the current default client
 * @returns {Client} the default client
 */
defaultClient.getDefaultClient = function getDefaultClient() {
	return target;
};

/**
 * Reset the default client to the platform default
 */
defaultClient.resetDefaultClient = function resetDefaultClient() {
	target = platformDefault;
};

/**
 * @private
 */
defaultClient.setPlatformDefaultClient = function setPlatformDefaultClient(client) {
	if (platformDefault) {
		throw new Error('Unable to redefine platformDefaultClient');
	}
	target = platformDefault = client;
};

module.exports = client(defaultClient);

},{"../client":35}],37:[function(require,module,exports){
/*
 * Copyright 2012-2016 the original author or authors
 * @license MIT, see LICENSE.txt for details
 *
 * @author Scott Andrews
 */

'use strict';

var normalizeHeaderName, responsePromise, client, headerSplitRE;

normalizeHeaderName = require('../util/normalizeHeaderName');
responsePromise = require('../util/responsePromise');
client = require('../client');

// according to the spec, the line break is '\r\n', but doesn't hold true in practice
headerSplitRE = /[\r|\n]+/;

function parseHeaders(raw) {
	// Note: Set-Cookie will be removed by the browser
	var headers = {};

	if (!raw) { return headers; }

	raw.trim().split(headerSplitRE).forEach(function (header) {
		var boundary, name, value;
		boundary = header.indexOf(':');
		name = normalizeHeaderName(header.substring(0, boundary).trim());
		value = header.substring(boundary + 1).trim();
		if (headers[name]) {
			if (Array.isArray(headers[name])) {
				// add to an existing array
				headers[name].push(value);
			}
			else {
				// convert single value to array
				headers[name] = [headers[name], value];
			}
		}
		else {
			// new, single value
			headers[name] = value;
		}
	});

	return headers;
}

function safeMixin(target, source) {
	Object.keys(source || {}).forEach(function (prop) {
		// make sure the property already exists as
		// IE 6 will blow up if we add a new prop
		if (source.hasOwnProperty(prop) && prop in target) {
			try {
				target[prop] = source[prop];
			}
			catch (e) {
				// ignore, expected for some properties at some points in the request lifecycle
			}
		}
	});

	return target;
}

module.exports = client(function xhr(request) {
	return responsePromise.promise(function (resolve, reject) {
		/*jshint maxcomplexity:20 */

		var client, method, url, headers, entity, headerName, response, XHR;

		request = typeof request === 'string' ? { path: request } : request || {};
		response = { request: request };

		if (request.canceled) {
			response.error = 'precanceled';
			reject(response);
			return;
		}

		XHR = request.engine || XMLHttpRequest;
		if (!XHR) {
			reject({ request: request, error: 'xhr-not-available' });
			return;
		}

		entity = request.entity;
		request.method = request.method || (entity ? 'POST' : 'GET');
		method = request.method;
		url = response.url = request.path || '';

		try {
			client = response.raw = new XHR();

			// mixin extra request properties before and after opening the request as some properties require being set at different phases of the request
			safeMixin(client, request.mixin);
			client.open(method, url, true);
			safeMixin(client, request.mixin);

			headers = request.headers;
			for (headerName in headers) {
				/*jshint forin:false */
				if (headerName === 'Content-Type' && headers[headerName] === 'multipart/form-data') {
					// XMLHttpRequest generates its own Content-Type header with the
					// appropriate multipart boundary when sending multipart/form-data.
					continue;
				}

				client.setRequestHeader(headerName, headers[headerName]);
			}

			request.canceled = false;
			request.cancel = function cancel() {
				request.canceled = true;
				client.abort();
				reject(response);
			};

			client.onreadystatechange = function (/* e */) {
				if (request.canceled) { return; }
				if (client.readyState === (XHR.DONE || 4)) {
					response.status = {
						code: client.status,
						text: client.statusText
					};
					response.headers = parseHeaders(client.getAllResponseHeaders());
					response.entity = client.responseText;

					// #125 -- Sometimes IE8-9 uses 1223 instead of 204
					// http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request
					if (response.status.code === 1223) {
						response.status.code = 204;
					}

					if (response.status.code > 0) {
						// check status code as readystatechange fires before error event
						resolve(response);
					}
					else {
						// give the error callback a chance to fire before resolving
						// requests for file:// URLs do not have a status code
						setTimeout(function () {
							resolve(response);
						}, 0);
					}
				}
			};

			try {
				client.onerror = function (/* e */) {
					response.error = 'loaderror';
					reject(response);
				};
			}
			catch (e) {
				// IE 6 will not support error handling
			}

			client.send(entity);
		}
		catch (e) {
			response.error = 'loaderror';
			reject(response);
		}

	});
});

},{"../client":35,"../util/normalizeHeaderName":38,"../util/responsePromise":39}],38:[function(require,module,exports){
/*
 * Copyright 2012-2016 the original author or authors
 * @license MIT, see LICENSE.txt for details
 *
 * @author Scott Andrews
 */

'use strict';

/**
 * Normalize HTTP header names using the pseudo camel case.
 *
 * For example:
 *   content-type         -> Content-Type
 *   accepts              -> Accepts
 *   x-custom-header-name -> X-Custom-Header-Name
 *
 * @param {string} name the raw header name
 * @return {string} the normalized header name
 */
function normalizeHeaderName(name) {
	return name.toLowerCase()
		.split('-')
		.map(function (chunk) { return chunk.charAt(0).toUpperCase() + chunk.slice(1); })
		.join('-');
}

module.exports = normalizeHeaderName;

},{}],39:[function(require,module,exports){
/*
 * Copyright 2014-2016 the original author or authors
 * @license MIT, see LICENSE.txt for details
 *
 * @author Scott Andrews
 */

'use strict';

/*jshint latedef: nofunc */

var normalizeHeaderName = require('./normalizeHeaderName');

function property(promise, name) {
	return promise.then(
		function (value) {
			return value && value[name];
		},
		function (value) {
			return Promise.reject(value && value[name]);
		}
	);
}

/**
 * Obtain the response entity
 *
 * @returns {Promise} for the response entity
 */
function entity() {
	/*jshint validthis:true */
	return property(this, 'entity');
}

/**
 * Obtain the response status
 *
 * @returns {Promise} for the response status
 */
function status() {
	/*jshint validthis:true */
	return property(property(this, 'status'), 'code');
}

/**
 * Obtain the response headers map
 *
 * @returns {Promise} for the response headers map
 */
function headers() {
	/*jshint validthis:true */
	return property(this, 'headers');
}

/**
 * Obtain a specific response header
 *
 * @param {String} headerName the header to retrieve
 * @returns {Promise} for the response header's value
 */
function header(headerName) {
	/*jshint validthis:true */
	headerName = normalizeHeaderName(headerName);
	return property(this.headers(), headerName);
}

/**
 * Follow a related resource
 *
 * The relationship to follow may be define as a plain string, an object
 * with the rel and params, or an array containing one or more entries
 * with the previous forms.
 *
 * Examples:
 *   response.follow('next')
 *
 *   response.follow({ rel: 'next', params: { pageSize: 100 } })
 *
 *   response.follow([
 *       { rel: 'items', params: { projection: 'noImages' } },
 *       'search',
 *       { rel: 'findByGalleryIsNull', params: { projection: 'noImages' } },
 *       'items'
 *   ])
 *
 * @param {String|Object|Array} rels one, or more, relationships to follow
 * @returns ResponsePromise<Response> related resource
 */
function follow(rels) {
	/*jshint validthis:true */
	rels = [].concat(rels);

	return make(rels.reduce(function (response, rel) {
		return response.then(function (response) {
			if (typeof rel === 'string') {
				rel = { rel: rel };
			}
			if (typeof response.entity.clientFor !== 'function') {
				throw new Error('Hypermedia response expected');
			}
			var client = response.entity.clientFor(rel.rel);
			return client({ params: rel.params });
		});
	}, this));
}

/**
 * Wrap a Promise as an ResponsePromise
 *
 * @param {Promise<Response>} promise the promise for an HTTP Response
 * @returns {ResponsePromise<Response>} wrapped promise for Response with additional helper methods
 */
function make(promise) {
	promise.status = status;
	promise.headers = headers;
	promise.header = header;
	promise.entity = entity;
	promise.follow = follow;
	return promise;
}

function responsePromise(obj, callback, errback) {
	return make(Promise.resolve(obj).then(callback, errback));
}

responsePromise.make = make;
responsePromise.reject = function (val) {
	return make(Promise.reject(val));
};
responsePromise.promise = function (func) {
	return make(new Promise(func));
};

module.exports = responsePromise;

},{"./normalizeHeaderName":38}],40:[function(require,module,exports){
// Functions implementing the validators of SHACL-JS
// Also include validators for the constraint components of the DASH namespace

// There is no validator for sh:property as this is expected to be
// natively implemented by the surrounding engine.

var rdfquery = require("./rdfquery");
var validator = require("./shacl-validator");

var XSDIntegerTypes = new rdfquery.NodeSet();
XSDIntegerTypes.add(T("xsd:integer"));

var XSDDecimalTypes = new rdfquery.NodeSet();
XSDDecimalTypes.addAll(XSDIntegerTypes.toArray());
XSDDecimalTypes.add(T("xsd:decimal"));
XSDDecimalTypes.add(T("xsd:float"));

var validateAnd = function ($value, $and) {
    var shapes = new rdfquery.RDFQueryUtil($shapes).rdfListToArray($and);
    for (var i = 0; i < shapes.length; i++) {
        if (!validator.SHACL.nodeConformsToShape($value, shapes[i])) {
            return false;
        }
    }
    return true;
};

var validateClass = function ($value, $class) {
    return new rdfquery.RDFQueryUtil($data).isInstanceOf($value, $class);
};

var validateClosed = function ($value, $closed, $ignoredProperties, $currentShape) {
    if (!T("true").equals($closed)) {
        return;
    }
    var allowed = $shapes.query().
        match($currentShape, "sh:property", "?propertyShape").
        match("?propertyShape", "sh:path", "?path").
        filter(function (solution) { return solution.path.isURI() }).
        getNodeSet("?path");
    if ($ignoredProperties) {
        allowed.addAll(new rdfquery.RDFQueryUtil($shapes).rdfListToArray($ignoredProperties));
    }
    var results = [];
    $data.query().
        match($value, "?predicate", "?object").
        filter(function (sol) { return !allowed.contains(sol.predicate) }).
        forEach(function (sol) {
            results.push({
                path: sol.predicate,
                value: sol.object
            });
        });
    return results;
};

var validateClosedByTypesNode = function ($this, $closedByTypes) {
    if (!T("true").equals($closedByTypes)) {
        return;
    }
    var results = [];
    var allowedProperties = new rdfquery.NodeSet();
    $data.query().
        match($this, "rdf:type", "?directType").
        path("?directType", { zeroOrMore: T("rdfs:subClassOf") }, "?type").
        forEachNode("?type", function (type) {
            $shapes.query().
                match(type, "sh:property", "?pshape").
                match("?pshape", "sh:path", "?path").
                filter(function (sol) { return sol.path.isURI() }).
                addAllNodes("?path", allowedProperties);
        });
    $data.query().
        match($this, "?predicate", "?object").
        filter(function (sol) { return !T("rdf:type").equals(sol.predicate) }).
        filter(function (sol) { return !allowedProperties.contains(sol.predicate) }).
        forEach(function (sol) {
            results.push({
                path: sol.predicate,
                value: sol.object
            });
        })
    return results;
};

var validateDatatype = function ($value, $datatype) {
    if ($value.isLiteral()) {
        return $datatype.equals($value.datatype) && isValidForDatatype($value.lex, $datatype);
    }
    else {
        return false;
    }
};

var validateDisjoint = function ($this, $value, $disjoint) {
    return !$data.query().match($this, $disjoint, $value).hasSolution();
};

var validateEqualsProperty = function ($this, $path, $equals) {
    var results = [];
    var path = rdfquery.toRDFQueryPath($path);
    $data.query().path($this, path, "?value").forEach(
        function (solution) {
            if (!$data.query().match($this, $equals, solution.value).hasSolution()) {
                results.push({
                    value: solution.value
                });
            }
        });
    $data.query().match($this, $equals, "?value").forEach(
        function (solution) {
            if (!$data.query().path($this, path, solution.value).hasSolution()) {
                results.push({
                    value: solution.value
                });
            }
        });
    return results;
};

var validateHasValueNode = function ($this, $hasValue) {
    return $this.equals($hasValue);
};

var validateHasValueProperty = function ($this, $path, $hasValue) {
    var count = $data.query().path($this, rdfquery.toRDFQueryPath($path), $hasValue).getCount();
    return count > 0;
};

var validateIn = function ($value, $in) {
    var set = new rdfquery.NodeSet();
    set.addAll(new rdfquery.RDFQueryUtil($shapes).rdfListToArray($in));
    return set.contains($value);
}

var validateLanguageIn = function ($value, $languageIn) {
    if (!$value.isLiteral()) {
        return false;
    }
    var lang = $value.language;
    if (!lang || lang === "") {
        return false;
    }
    var ls = new rdfquery.RDFQueryUtil($shapes).rdfListToArray($languageIn);
    for (var i = 0; i < ls.length; i++) {
        if (lang.startsWith(ls[i].lex)) {
            return true;
        }
    }
    return false;
}

var validateLessThanProperty = function ($this, $path, $lessThan) {
    var results = [];
    $data.query().
        path($this, rdfquery.toRDFQueryPath($path), "?value").
        match($this, $lessThan, "?otherValue").
        forEach(function (sol) {
            var c = validator.SHACL.compareNodes(sol.value, sol.otherValue);
            if (c == null || c >= 0) {
                results.push({
                    value: sol.value
                });
            }
        });
    return results;
}

var validateLessThanOrEqualsProperty = function ($this, $path, $lessThanOrEquals) {
    var results = [];
    $data.query().
        path($this, rdfquery.toRDFQueryPath($path), "?value").
        match($this, $lessThanOrEquals, "?otherValue").
        forEach(function (sol) {
            var c = validator.SHACL.compareNodes(sol.value, sol.otherValue);
            if (c == null || c > 0) {
                results.push({
                    value: sol.value
                });
            }
        });
    return results;
}

var validateMaxCountProperty = function ($this, $path, $maxCount) {
    var count = $data.query().path($this, rdfquery.toRDFQueryPath($path), "?any").getCount();
    return count <= Number($maxCount.value);
}

var validateMaxExclusive = function ($value, $maxExclusive) {
    return $value.isLiteral() && Number($value.lex) < Number($maxExclusive.lex);
}

var validateMaxInclusive = function ($value, $maxInclusive) {
    return $value.isLiteral() && Number($value.lex) <= Number($maxInclusive.lex);
}

var validateMaxLength = function ($value, $maxLength) {
    if ($value.isBlankNode()) {
        return false;
    }
    return $value.value.length <= Number($maxLength.lex);
}

var validateMinCountProperty = function ($this, $path, $minCount) {
    var count = $data.query().path($this, rdfquery.toRDFQueryPath($path), "?any").getCount();
    return count >= Number($minCount.value);
}

var validateMinExclusive = function ($value, $minExclusive) {
    return $value.isLiteral() && Number($value.lex) > Number($minExclusive.lex);
}

var validateMinInclusive = function ($value, $minInclusive) {
    return $value.isLiteral() && Number($value.lex) >= Number($minInclusive.lex);
}

var validateMinLength = function ($value, $minLength) {
    if ($value.isBlankNode()) {
        return false;
    }
    return $value.value.length >= Number($minLength.lex);
}

var validateNodeKind = function ($value, $nodeKind) {
    if ($value.isBlankNode()) {
        return T("sh:BlankNode").equals($nodeKind) ||
            T("sh:BlankNodeOrIRI").equals($nodeKind) ||
            T("sh:BlankNodeOrLiteral").equals($nodeKind);
    }
    else if ($value.isURI()) {
        return T("sh:IRI").equals($nodeKind) ||
            T("sh:BlankNodeOrIRI").equals($nodeKind) ||
            T("sh:IRIOrLiteral").equals($nodeKind);
    }
    else if ($value.isLiteral()) {
        return T("sh:Literal").equals($nodeKind) ||
            T("sh:BlankNodeOrLiteral").equals($nodeKind) ||
            T("sh:IRIOrLiteral").equals($nodeKind);
    }
}

var validateNode = function ($value, $node) {
    console.log("validateNode...");
    return validator.SHACL.nodeConformsToShape($value, $node);
}

var validateNonRecursiveProperty = function ($this, $path, $nonRecursive) {
    if (T("true").equals($nonRecursive)) {
        if ($data.query().path($this, rdfquery.toRDFQueryPath($path), $this).hasSolution()) {
            return {
                path: $path,
                value: $this
            }
        }
    }
}

var validateNot = function ($value, $not) {
    return !validator.SHACL.nodeConformsToShape($value, $not);
}

var validateOr = function ($value, $or) {
    var shapes = new rdfquery.RDFQueryUtil($shapes).rdfListToArray($or);
    for (var i = 0; i < shapes.length; i++) {
        if (validator.SHACL.nodeConformsToShape($value, shapes[i])) {
            return true;
        }
    }
    return false;
}

var validatePattern = function ($value, $pattern, $flags) {
    if ($value.isBlankNode()) {
        return false;
    }
    var re = $flags ? new RegExp($pattern.lex, $flags.lex) : new RegExp($pattern.lex);
    return re.test($value.value);
}

var validatePrimaryKeyProperty = function ($this, $path, $uriStart) {
    if (!$this.isURI()) {
        return "Must be an IRI";
    }
    if ($data.query().path($this, rdfquery.toRDFQueryPath($path), null).getCount() != 1) {
        return "Must have exactly one value";
    }
    var value = $data.query().path($this, rdfquery.toRDFQueryPath($path), "?value").getNode("?value");
    var uri = $uriStart.lex + encodeURIComponent(value.value);
    if (!$this.uri.equals(uri)) {
        return "Does not have URI " + uri;
    }
}

var validateQualifiedMaxCountProperty = function ($this, $path, $qualifiedValueShape, $qualifiedValueShapesDisjoint, $qualifiedMaxCount, $currentShape) {
    var c = validateQualifiedHelper($this, $path, $qualifiedValueShape, $qualifiedValueShapesDisjoint, $currentShape);
    return c <= Number($qualifiedMaxCount.lex);
}

var validateQualifiedMinCountProperty = function ($this, $path, $qualifiedValueShape, $qualifiedValueShapesDisjoint, $qualifiedMinCount, $currentShape) {
    var c = validateQualifiedHelper($this, $path, $qualifiedValueShape, $qualifiedValueShapesDisjoint, $currentShape);
    return c >= Number($qualifiedMinCount.lex);
}

var validateQualifiedHelper = function ($this, $path, $qualifiedValueShape, $qualifiedValueShapesDisjoint, $currentShape) {
    var siblingShapes = new rdfquery.NodeSet();
    if (T("true").equals($qualifiedValueShapesDisjoint)) {
        $shapes.query().
            match("?parentShape", "sh:property", $currentShape).
            match("?parentShape", "sh:property", "?sibling").
            match("?sibling", "sh:qualifiedValueShape", "?siblingShape").
            filter(exprNotEquals("?siblingShape", $qualifiedValueShape)).
            addAllNodes("?siblingShape", siblingShapes);
    }
    return $data.query().
        path($this, rdfquery.toRDFQueryPath($path), "?value").
        filter(function (sol) {
            return validator.SHACL.nodeConformsToShape(sol.value, $qualifiedValueShape) &&
                !validateQualifiedConformsToASibling(sol.value, siblingShapes.toArray());
        }).
        getCount();
}

var validateQualifiedConformsToASibling = function (value, siblingShapes) {
    for (var i = 0; i < siblingShapes.length; i++) {
        if (validator.SHACL.nodeConformsToShape(value, siblingShapes[i])) {
            return true;
        }
    }
    return false;
}

var validateRootClass = function ($value, $rootClass) {
    return $data.query().path($value, { zeroOrMore: T("rdfs:subClassOf") }, $rootClass).hasSolution();
}

var validateStem = function ($value, $stem) {
    return $value.isURI() && $value.uri.startsWith($stem.lex);
}

var validateSubSetOf = function ($this, $subSetOf, $value) {
    return $data.query().match($this, $subSetOf, $value).hasSolution();
}

var validateUniqueLangProperty = function ($this, $uniqueLang, $path) {
    if (!T("true").equals($uniqueLang)) {
        return;
    }
    var map = {};
    $data.query().path($this, rdfquery.toRDFQueryPath($path), "?value").forEach(function (sol) {
        var lang = sol.value.language;
        if (lang && lang != "") {
            var old = map[lang];
            if (!old) {
                map[lang] = 1;
            }
            else {
                map[lang] = old + 1;
            }
        }
    });
    var results = [];
    for (var lang in map) {
        if (map.hasOwnProperty(lang)) {
            var count = map[lang];
            if (count > 1) {
                results.push("Language \"" + lang + "\" has been used by " + count + " values");
            }
        }
    }
    return results;
}

var validateXone = function ($value, $xone) {
    var shapes = new rdfquery.RDFQueryUtil($shapes).rdfListToArray($xone);
    var count = 0;
    for (var i = 0; i < shapes.length; i++) {
        if (validator.SHACL.nodeConformsToShape($value, shapes[i])) {
            count++;
        }
    }
    return count == 1;
}




// Private helper functions

//TODO: Support more datatypes
var isValidForDatatype = function (lex, datatype) {
    if (XSDIntegerTypes.contains(datatype)) {
        var r = parseInt(lex);
        return !isNaN(r);
    }
    else if (XSDDecimalTypes.contains(datatype)) {
        var r = parseFloat(lex);
        return !isNan(r);
    }
    else {
        return true;
    }
}


validator.ValidationFunction.functionRegistry.validateAnd = validateAnd;
validator.ValidationFunction.functionRegistry.validateClass = validateClass;
validator.ValidationFunction.functionRegistry.validateClosed = validateClosed;
validator.ValidationFunction.functionRegistry.validateClosedByTypesNode = validateClosedByTypesNode;
validator.ValidationFunction.functionRegistry.validateDatatype = validateDatatype;
validator.ValidationFunction.functionRegistry.validateDisjoint = validateDisjoint;
validator.ValidationFunction.functionRegistry.validateEqualsProperty = validateEqualsProperty;
validator.ValidationFunction.functionRegistry.validateHasValueNode = validateHasValueNode;
validator.ValidationFunction.functionRegistry.validateHasValueProperty = validateHasValueProperty;
validator.ValidationFunction.functionRegistry.validateIn = validateIn;
validator.ValidationFunction.functionRegistry.validateLanguageIn = validateLanguageIn;
validator.ValidationFunction.functionRegistry.validateLessThanProperty = validateLessThanProperty;
validator.ValidationFunction.functionRegistry.validateLessThanOrEqualsProperty = validateLessThanOrEqualsProperty;
validator.ValidationFunction.functionRegistry.validateMaxCountProperty = validateMaxCountProperty;
validator.ValidationFunction.functionRegistry.validateMaxExclusive = validateMaxExclusive;
validator.ValidationFunction.functionRegistry.validateMaxInclusive = validateMaxInclusive;
validator.ValidationFunction.functionRegistry.validateMaxLength = validateMaxLength;
validator.ValidationFunction.functionRegistry.validateMinCountProperty = validateMinCountProperty;
validator.ValidationFunction.functionRegistry.validateMinExclusive = validateMinExclusive;
validator.ValidationFunction.functionRegistry.validateMinInclusive = validateMinInclusive;
validator.ValidationFunction.functionRegistry.validateMinLength = validateMinLength;
validator.ValidationFunction.functionRegistry.validateNodeKind = validateNodeKind;
validator.ValidationFunction.functionRegistry.validateNode = validateNode;
validator.ValidationFunction.functionRegistry.validateNonRecursiveProperty = validateNonRecursiveProperty;
validator.ValidationFunction.functionRegistry.validateNot = validateNot;
validator.ValidationFunction.functionRegistry.validateOr = validateOr;
validator.ValidationFunction.functionRegistry.validatePattern = validatePattern;
validator.ValidationFunction.functionRegistry.validatePrimaryKeyProperty = validatePrimaryKeyProperty;
validator.ValidationFunction.functionRegistry.validateQualifiedMaxCountProperty = validateQualifiedMaxCountProperty;
validator.ValidationFunction.functionRegistry.validateQualifiedMinCountProperty = validateQualifiedMinCountProperty;
validator.ValidationFunction.functionRegistry.validateQualifiedHelper = validateQualifiedHelper;
validator.ValidationFunction.functionRegistry.validateQualifiedConformsToASibling = validateQualifiedConformsToASibling;
validator.ValidationFunction.functionRegistry.validateRootClass = validateRootClass;
validator.ValidationFunction.functionRegistry.validateStem = validateStem;
validator.ValidationFunction.functionRegistry.validateSubSetOf = validateSubSetOf;
validator.ValidationFunction.functionRegistry.validateUniqueLangProperty = validateUniqueLangProperty;
validator.ValidationFunction.functionRegistry.validateXone = validateXone;

},{"./rdfquery":91,"./shacl-validator":92}],41:[function(require,module,exports){
(function (process){
/*!
 * async
 * https://github.com/caolan/async
 *
 * Copyright 2010-2014 Caolan McMahon
 * Released under the MIT license
 */
/*jshint onevar: false, indent:4 */
/*global setImmediate: false, setTimeout: false, console: false */
(function () {

    var async = {};

    // global on the server, window in the browser
    var root, previous_async;

    root = this;
    if (root != null) {
      previous_async = root.async;
    }

    async.noConflict = function () {
        root.async = previous_async;
        return async;
    };

    function only_once(fn) {
        var called = false;
        return function() {
            if (called) throw new Error("Callback was already called.");
            called = true;
            fn.apply(root, arguments);
        }
    }

    //// cross-browser compatiblity functions ////

    var _toString = Object.prototype.toString;

    var _isArray = Array.isArray || function (obj) {
        return _toString.call(obj) === '[object Array]';
    };

    var _each = function (arr, iterator) {
        for (var i = 0; i < arr.length; i += 1) {
            iterator(arr[i], i, arr);
        }
    };

    var _map = function (arr, iterator) {
        if (arr.map) {
            return arr.map(iterator);
        }
        var results = [];
        _each(arr, function (x, i, a) {
            results.push(iterator(x, i, a));
        });
        return results;
    };

    var _reduce = function (arr, iterator, memo) {
        if (arr.reduce) {
            return arr.reduce(iterator, memo);
        }
        _each(arr, function (x, i, a) {
            memo = iterator(memo, x, i, a);
        });
        return memo;
    };

    var _keys = function (obj) {
        if (Object.keys) {
            return Object.keys(obj);
        }
        var keys = [];
        for (var k in obj) {
            if (obj.hasOwnProperty(k)) {
                keys.push(k);
            }
        }
        return keys;
    };

    //// exported async module functions ////

    //// nextTick implementation with browser-compatible fallback ////
    if (typeof process === 'undefined' || !(process.nextTick)) {
        if (typeof setImmediate === 'function') {
            async.nextTick = function (fn) {
                // not a direct alias for IE10 compatibility
                setImmediate(fn);
            };
            async.setImmediate = async.nextTick;
        }
        else {
            async.nextTick = function (fn) {
                setTimeout(fn, 0);
            };
            async.setImmediate = async.nextTick;
        }
    }
    else {
        async.nextTick = process.nextTick;
        if (typeof setImmediate !== 'undefined') {
            async.setImmediate = function (fn) {
              // not a direct alias for IE10 compatibility
              setImmediate(fn);
            };
        }
        else {
            async.setImmediate = async.nextTick;
        }
    }

    async.each = function (arr, iterator, callback) {
        callback = callback || function () {};
        if (!arr.length) {
            return callback();
        }
        var completed = 0;
        _each(arr, function (x) {
            iterator(x, only_once(done) );
        });
        function done(err) {
          if (err) {
              callback(err);
              callback = function () {};
          }
          else {
              completed += 1;
              if (completed >= arr.length) {
                  callback();
              }
          }
        }
    };
    async.forEach = async.each;

    async.eachSeries = function (arr, iterator, callback) {
        callback = callback || function () {};
        if (!arr.length) {
            return callback();
        }
        var completed = 0;
        var iterate = function () {
            iterator(arr[completed], function (err) {
                if (err) {
                    callback(err);
                    callback = function () {};
                }
                else {
                    completed += 1;
                    if (completed >= arr.length) {
                        callback();
                    }
                    else {
                        iterate();
                    }
                }
            });
        };
        iterate();
    };
    async.forEachSeries = async.eachSeries;

    async.eachLimit = function (arr, limit, iterator, callback) {
        var fn = _eachLimit(limit);
        fn.apply(null, [arr, iterator, callback]);
    };
    async.forEachLimit = async.eachLimit;

    var _eachLimit = function (limit) {

        return function (arr, iterator, callback) {
            callback = callback || function () {};
            if (!arr.length || limit <= 0) {
                return callback();
            }
            var completed = 0;
            var started = 0;
            var running = 0;

            (function replenish () {
                if (completed >= arr.length) {
                    return callback();
                }

                while (running < limit && started < arr.length) {
                    started += 1;
                    running += 1;
                    iterator(arr[started - 1], function (err) {
                        if (err) {
                            callback(err);
                            callback = function () {};
                        }
                        else {
                            completed += 1;
                            running -= 1;
                            if (completed >= arr.length) {
                                callback();
                            }
                            else {
                                replenish();
                            }
                        }
                    });
                }
            })();
        };
    };


    var doParallel = function (fn) {
        return function () {
            var args = Array.prototype.slice.call(arguments);
            return fn.apply(null, [async.each].concat(args));
        };
    };
    var doParallelLimit = function(limit, fn) {
        return function () {
            var args = Array.prototype.slice.call(arguments);
            return fn.apply(null, [_eachLimit(limit)].concat(args));
        };
    };
    var doSeries = function (fn) {
        return function () {
            var args = Array.prototype.slice.call(arguments);
            return fn.apply(null, [async.eachSeries].concat(args));
        };
    };


    var _asyncMap = function (eachfn, arr, iterator, callback) {
        arr = _map(arr, function (x, i) {
            return {index: i, value: x};
        });
        if (!callback) {
            eachfn(arr, function (x, callback) {
                iterator(x.value, function (err) {
                    callback(err);
                });
            });
        } else {
            var results = [];
            eachfn(arr, function (x, callback) {
                iterator(x.value, function (err, v) {
                    results[x.index] = v;
                    callback(err);
                });
            }, function (err) {
                callback(err, results);
            });
        }
    };
    async.map = doParallel(_asyncMap);
    async.mapSeries = doSeries(_asyncMap);
    async.mapLimit = function (arr, limit, iterator, callback) {
        return _mapLimit(limit)(arr, iterator, callback);
    };

    var _mapLimit = function(limit) {
        return doParallelLimit(limit, _asyncMap);
    };

    // reduce only has a series version, as doing reduce in parallel won't
    // work in many situations.
    async.reduce = function (arr, memo, iterator, callback) {
        async.eachSeries(arr, function (x, callback) {
            iterator(memo, x, function (err, v) {
                memo = v;
                callback(err);
            });
        }, function (err) {
            callback(err, memo);
        });
    };
    // inject alias
    async.inject = async.reduce;
    // foldl alias
    async.foldl = async.reduce;

    async.reduceRight = function (arr, memo, iterator, callback) {
        var reversed = _map(arr, function (x) {
            return x;
        }).reverse();
        async.reduce(reversed, memo, iterator, callback);
    };
    // foldr alias
    async.foldr = async.reduceRight;

    var _filter = function (eachfn, arr, iterator, callback) {
        var results = [];
        arr = _map(arr, function (x, i) {
            return {index: i, value: x};
        });
        eachfn(arr, function (x, callback) {
            iterator(x.value, function (v) {
                if (v) {
                    results.push(x);
                }
                callback();
            });
        }, function (err) {
            callback(_map(results.sort(function (a, b) {
                return a.index - b.index;
            }), function (x) {
                return x.value;
            }));
        });
    };
    async.filter = doParallel(_filter);
    async.filterSeries = doSeries(_filter);
    // select alias
    async.select = async.filter;
    async.selectSeries = async.filterSeries;

    var _reject = function (eachfn, arr, iterator, callback) {
        var results = [];
        arr = _map(arr, function (x, i) {
            return {index: i, value: x};
        });
        eachfn(arr, function (x, callback) {
            iterator(x.value, function (v) {
                if (!v) {
                    results.push(x);
                }
                callback();
            });
        }, function (err) {
            callback(_map(results.sort(function (a, b) {
                return a.index - b.index;
            }), function (x) {
                return x.value;
            }));
        });
    };
    async.reject = doParallel(_reject);
    async.rejectSeries = doSeries(_reject);

    var _detect = function (eachfn, arr, iterator, main_callback) {
        eachfn(arr, function (x, callback) {
            iterator(x, function (result) {
                if (result) {
                    main_callback(x);
                    main_callback = function () {};
                }
                else {
                    callback();
                }
            });
        }, function (err) {
            main_callback();
        });
    };
    async.detect = doParallel(_detect);
    async.detectSeries = doSeries(_detect);

    async.some = function (arr, iterator, main_callback) {
        async.each(arr, function (x, callback) {
            iterator(x, function (v) {
                if (v) {
                    main_callback(true);
                    main_callback = function () {};
                }
                callback();
            });
        }, function (err) {
            main_callback(false);
        });
    };
    // any alias
    async.any = async.some;

    async.every = function (arr, iterator, main_callback) {
        async.each(arr, function (x, callback) {
            iterator(x, function (v) {
                if (!v) {
                    main_callback(false);
                    main_callback = function () {};
                }
                callback();
            });
        }, function (err) {
            main_callback(true);
        });
    };
    // all alias
    async.all = async.every;

    async.sortBy = function (arr, iterator, callback) {
        async.map(arr, function (x, callback) {
            iterator(x, function (err, criteria) {
                if (err) {
                    callback(err);
                }
                else {
                    callback(null, {value: x, criteria: criteria});
                }
            });
        }, function (err, results) {
            if (err) {
                return callback(err);
            }
            else {
                var fn = function (left, right) {
                    var a = left.criteria, b = right.criteria;
                    return a < b ? -1 : a > b ? 1 : 0;
                };
                callback(null, _map(results.sort(fn), function (x) {
                    return x.value;
                }));
            }
        });
    };

    async.auto = function (tasks, callback) {
        callback = callback || function () {};
        var keys = _keys(tasks);
        var remainingTasks = keys.length
        if (!remainingTasks) {
            return callback();
        }

        var results = {};

        var listeners = [];
        var addListener = function (fn) {
            listeners.unshift(fn);
        };
        var removeListener = function (fn) {
            for (var i = 0; i < listeners.length; i += 1) {
                if (listeners[i] === fn) {
                    listeners.splice(i, 1);
                    return;
                }
            }
        };
        var taskComplete = function () {
            remainingTasks--
            _each(listeners.slice(0), function (fn) {
                fn();
            });
        };

        addListener(function () {
            if (!remainingTasks) {
                var theCallback = callback;
                // prevent final callback from calling itself if it errors
                callback = function () {};

                theCallback(null, results);
            }
        });

        _each(keys, function (k) {
            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];
            var taskCallback = function (err) {
                var args = Array.prototype.slice.call(arguments, 1);
                if (args.length <= 1) {
                    args = args[0];
                }
                if (err) {
                    var safeResults = {};
                    _each(_keys(results), function(rkey) {
                        safeResults[rkey] = results[rkey];
                    });
                    safeResults[k] = args;
                    callback(err, safeResults);
                    // stop subsequent errors hitting callback multiple times
                    callback = function () {};
                }
                else {
                    results[k] = args;
                    async.setImmediate(taskComplete);
                }
            };
            var requires = task.slice(0, Math.abs(task.length - 1)) || [];
            var ready = function () {
                return _reduce(requires, function (a, x) {
                    return (a && results.hasOwnProperty(x));
                }, true) && !results.hasOwnProperty(k);
            };
            if (ready()) {
                task[task.length - 1](taskCallback, results);
            }
            else {
                var listener = function () {
                    if (ready()) {
                        removeListener(listener);
                        task[task.length - 1](taskCallback, results);
                    }
                };
                addListener(listener);
            }
        });
    };

    async.retry = function(times, task, callback) {
        var DEFAULT_TIMES = 5;
        var attempts = [];
        // Use defaults if times not passed
        if (typeof times === 'function') {
            callback = task;
            task = times;
            times = DEFAULT_TIMES;
        }
        // Make sure times is a number
        times = parseInt(times, 10) || DEFAULT_TIMES;
        var wrappedTask = function(wrappedCallback, wrappedResults) {
            var retryAttempt = function(task, finalAttempt) {
                return function(seriesCallback) {
                    task(function(err, result){
                        seriesCallback(!err || finalAttempt, {err: err, result: result});
                    }, wrappedResults);
                };
            };
            while (times) {
                attempts.push(retryAttempt(task, !(times-=1)));
            }
            async.series(attempts, function(done, data){
                data = data[data.length - 1];
                (wrappedCallback || callback)(data.err, data.result);
            });
        }
        // If a callback is passed, run this as a controll flow
        return callback ? wrappedTask() : wrappedTask
    };

    async.waterfall = function (tasks, callback) {
        callback = callback || function () {};
        if (!_isArray(tasks)) {
          var err = new Error('First argument to waterfall must be an array of functions');
          return callback(err);
        }
        if (!tasks.length) {
            return callback();
        }
        var wrapIterator = function (iterator) {
            return function (err) {
                if (err) {
                    callback.apply(null, arguments);
                    callback = function () {};
                }
                else {
                    var args = Array.prototype.slice.call(arguments, 1);
                    var next = iterator.next();
                    if (next) {
                        args.push(wrapIterator(next));
                    }
                    else {
                        args.push(callback);
                    }
                    async.setImmediate(function () {
                        iterator.apply(null, args);
                    });
                }
            };
        };
        wrapIterator(async.iterator(tasks))();
    };

    var _parallel = function(eachfn, tasks, callback) {
        callback = callback || function () {};
        if (_isArray(tasks)) {
            eachfn.map(tasks, function (fn, callback) {
                if (fn) {
                    fn(function (err) {
                        var args = Array.prototype.slice.call(arguments, 1);
                        if (args.length <= 1) {
                            args = args[0];
                        }
                        callback.call(null, err, args);
                    });
                }
            }, callback);
        }
        else {
            var results = {};
            eachfn.each(_keys(tasks), function (k, callback) {
                tasks[k](function (err) {
                    var args = Array.prototype.slice.call(arguments, 1);
                    if (args.length <= 1) {
                        args = args[0];
                    }
                    results[k] = args;
                    callback(err);
                });
            }, function (err) {
                callback(err, results);
            });
        }
    };

    async.parallel = function (tasks, callback) {
        _parallel({ map: async.map, each: async.each }, tasks, callback);
    };

    async.parallelLimit = function(tasks, limit, callback) {
        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);
    };

    async.series = function (tasks, callback) {
        callback = callback || function () {};
        if (_isArray(tasks)) {
            async.mapSeries(tasks, function (fn, callback) {
                if (fn) {
                    fn(function (err) {
                        var args = Array.prototype.slice.call(arguments, 1);
                        if (args.length <= 1) {
                            args = args[0];
                        }
                        callback.call(null, err, args);
                    });
                }
            }, callback);
        }
        else {
            var results = {};
            async.eachSeries(_keys(tasks), function (k, callback) {
                tasks[k](function (err) {
                    var args = Array.prototype.slice.call(arguments, 1);
                    if (args.length <= 1) {
                        args = args[0];
                    }
                    results[k] = args;
                    callback(err);
                });
            }, function (err) {
                callback(err, results);
            });
        }
    };

    async.iterator = function (tasks) {
        var makeCallback = function (index) {
            var fn = function () {
                if (tasks.length) {
                    tasks[index].apply(null, arguments);
                }
                return fn.next();
            };
            fn.next = function () {
                return (index < tasks.length - 1) ? makeCallback(index + 1): null;
            };
            return fn;
        };
        return makeCallback(0);
    };

    async.apply = function (fn) {
        var args = Array.prototype.slice.call(arguments, 1);
        return function () {
            return fn.apply(
                null, args.concat(Array.prototype.slice.call(arguments))
            );
        };
    };

    var _concat = function (eachfn, arr, fn, callback) {
        var r = [];
        eachfn(arr, function (x, cb) {
            fn(x, function (err, y) {
                r = r.concat(y || []);
                cb(err);
            });
        }, function (err) {
            callback(err, r);
        });
    };
    async.concat = doParallel(_concat);
    async.concatSeries = doSeries(_concat);

    async.whilst = function (test, iterator, callback) {
        if (test()) {
            iterator(function (err) {
                if (err) {
                    return callback(err);
                }
                async.whilst(test, iterator, callback);
            });
        }
        else {
            callback();
        }
    };

    async.doWhilst = function (iterator, test, callback) {
        iterator(function (err) {
            if (err) {
                return callback(err);
            }
            var args = Array.prototype.slice.call(arguments, 1);
            if (test.apply(null, args)) {
                async.doWhilst(iterator, test, callback);
            }
            else {
                callback();
            }
        });
    };

    async.until = function (test, iterator, callback) {
        if (!test()) {
            iterator(function (err) {
                if (err) {
                    return callback(err);
                }
                async.until(test, iterator, callback);
            });
        }
        else {
            callback();
        }
    };

    async.doUntil = function (iterator, test, callback) {
        iterator(function (err) {
            if (err) {
                return callback(err);
            }
            var args = Array.prototype.slice.call(arguments, 1);
            if (!test.apply(null, args)) {
                async.doUntil(iterator, test, callback);
            }
            else {
                callback();
            }
        });
    };

    async.queue = function (worker, concurrency) {
        if (concurrency === undefined) {
            concurrency = 1;
        }
        function _insert(q, data, pos, callback) {
          if (!q.started){
            q.started = true;
          }
          if (!_isArray(data)) {
              data = [data];
          }
          if(data.length == 0) {
             // call drain immediately if there are no tasks
             return async.setImmediate(function() {
                 if (q.drain) {
                     q.drain();
                 }
             });
          }
          _each(data, function(task) {
              var item = {
                  data: task,
                  callback: typeof callback === 'function' ? callback : null
              };

              if (pos) {
                q.tasks.unshift(item);
              } else {
                q.tasks.push(item);
              }

              if (q.saturated && q.tasks.length === q.concurrency) {
                  q.saturated();
              }
              async.setImmediate(q.process);
          });
        }

        var workers = 0;
        var q = {
            tasks: [],
            concurrency: concurrency,
            saturated: null,
            empty: null,
            drain: null,
            started: false,
            paused: false,
            push: function (data, callback) {
              _insert(q, data, false, callback);
            },
            kill: function () {
              q.drain = null;
              q.tasks = [];
            },
            unshift: function (data, callback) {
              _insert(q, data, true, callback);
            },
            process: function () {
                if (!q.paused && workers < q.concurrency && q.tasks.length) {
                    var task = q.tasks.shift();
                    if (q.empty && q.tasks.length === 0) {
                        q.empty();
                    }
                    workers += 1;
                    var next = function () {
                        workers -= 1;
                        if (task.callback) {
                            task.callback.apply(task, arguments);
                        }
                        if (q.drain && q.tasks.length + workers === 0) {
                            q.drain();
                        }
                        q.process();
                    };
                    var cb = only_once(next);
                    worker(task.data, cb);
                }
            },
            length: function () {
                return q.tasks.length;
            },
            running: function () {
                return workers;
            },
            idle: function() {
                return q.tasks.length + workers === 0;
            },
            pause: function () {
                if (q.paused === true) { return; }
                q.paused = true;
            },
            resume: function () {
                if (q.paused === false) { return; }
                q.paused = false;
                // Need to call q.process once per concurrent
                // worker to preserve full concurrency after pause
                for (var w = 1; w <= q.concurrency; w++) {
                    async.setImmediate(q.process);
                }
            }
        };
        return q;
    };

    async.priorityQueue = function (worker, concurrency) {

        function _compareTasks(a, b){
          return a.priority - b.priority;
        };

        function _binarySearch(sequence, item, compare) {
          var beg = -1,
              end = sequence.length - 1;
          while (beg < end) {
            var mid = beg + ((end - beg + 1) >>> 1);
            if (compare(item, sequence[mid]) >= 0) {
              beg = mid;
            } else {
              end = mid - 1;
            }
          }
          return beg;
        }

        function _insert(q, data, priority, callback) {
          if (!q.started){
            q.started = true;
          }
          if (!_isArray(data)) {
              data = [data];
          }
          if(data.length == 0) {
             // call drain immediately if there are no tasks
             return async.setImmediate(function() {
                 if (q.drain) {
                     q.drain();
                 }
             });
          }
          _each(data, function(task) {
              var item = {
                  data: task,
                  priority: priority,
                  callback: typeof callback === 'function' ? callback : null
              };

              q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);

              if (q.saturated && q.tasks.length === q.concurrency) {
                  q.saturated();
              }
              async.setImmediate(q.process);
          });
        }

        // Start with a normal queue
        var q = async.queue(worker, concurrency);

        // Override push to accept second parameter representing priority
        q.push = function (data, priority, callback) {
          _insert(q, data, priority, callback);
        };

        // Remove unshift function
        delete q.unshift;

        return q;
    };

    async.cargo = function (worker, payload) {
        var working     = false,
            tasks       = [];

        var cargo = {
            tasks: tasks,
            payload: payload,
            saturated: null,
            empty: null,
            drain: null,
            drained: true,
            push: function (data, callback) {
                if (!_isArray(data)) {
                    data = [data];
                }
                _each(data, function(task) {
                    tasks.push({
                        data: task,
                        callback: typeof callback === 'function' ? callback : null
                    });
                    cargo.drained = false;
                    if (cargo.saturated && tasks.length === payload) {
                        cargo.saturated();
                    }
                });
                async.setImmediate(cargo.process);
            },
            process: function process() {
                if (working) return;
                if (tasks.length === 0) {
                    if(cargo.drain && !cargo.drained) cargo.drain();
                    cargo.drained = true;
                    return;
                }

                var ts = typeof payload === 'number'
                            ? tasks.splice(0, payload)
                            : tasks.splice(0, tasks.length);

                var ds = _map(ts, function (task) {
                    return task.data;
                });

                if(cargo.empty) cargo.empty();
                working = true;
                worker(ds, function () {
                    working = false;

                    var args = arguments;
                    _each(ts, function (data) {
                        if (data.callback) {
                            data.callback.apply(null, args);
                        }
                    });

                    process();
                });
            },
            length: function () {
                return tasks.length;
            },
            running: function () {
                return working;
            }
        };
        return cargo;
    };

    var _console_fn = function (name) {
        return function (fn) {
            var args = Array.prototype.slice.call(arguments, 1);
            fn.apply(null, args.concat([function (err) {
                var args = Array.prototype.slice.call(arguments, 1);
                if (typeof console !== 'undefined') {
                    if (err) {
                        if (console.error) {
                            console.error(err);
                        }
                    }
                    else if (console[name]) {
                        _each(args, function (x) {
                            console[name](x);
                        });
                    }
                }
            }]));
        };
    };
    async.log = _console_fn('log');
    async.dir = _console_fn('dir');
    /*async.info = _console_fn('info');
    async.warn = _console_fn('warn');
    async.error = _console_fn('error');*/

    async.memoize = function (fn, hasher) {
        var memo = {};
        var queues = {};
        hasher = hasher || function (x) {
            return x;
        };
        var memoized = function () {
            var args = Array.prototype.slice.call(arguments);
            var callback = args.pop();
            var key = hasher.apply(null, args);
            if (key in memo) {
                async.nextTick(function () {
                    callback.apply(null, memo[key]);
                });
            }
            else if (key in queues) {
                queues[key].push(callback);
            }
            else {
                queues[key] = [callback];
                fn.apply(null, args.concat([function () {
                    memo[key] = arguments;
                    var q = queues[key];
                    delete queues[key];
                    for (var i = 0, l = q.length; i < l; i++) {
                      q[i].apply(null, arguments);
                    }
                }]));
            }
        };
        memoized.memo = memo;
        memoized.unmemoized = fn;
        return memoized;
    };

    async.unmemoize = function (fn) {
      return function () {
        return (fn.unmemoized || fn).apply(null, arguments);
      };
    };

    async.times = function (count, iterator, callback) {
        var counter = [];
        for (var i = 0; i < count; i++) {
            counter.push(i);
        }
        return async.map(counter, iterator, callback);
    };

    async.timesSeries = function (count, iterator, callback) {
        var counter = [];
        for (var i = 0; i < count; i++) {
            counter.push(i);
        }
        return async.mapSeries(counter, iterator, callback);
    };

    async.seq = function (/* functions... */) {
        var fns = arguments;
        return function () {
            var that = this;
            var args = Array.prototype.slice.call(arguments);
            var callback = args.pop();
            async.reduce(fns, args, function (newargs, fn, cb) {
                fn.apply(that, newargs.concat([function () {
                    var err = arguments[0];
                    var nextargs = Array.prototype.slice.call(arguments, 1);
                    cb(err, nextargs);
                }]))
            },
            function (err, results) {
                callback.apply(that, [err].concat(results));
            });
        };
    };

    async.compose = function (/* functions... */) {
      return async.seq.apply(null, Array.prototype.reverse.call(arguments));
    };

    var _applyEach = function (eachfn, fns /*args...*/) {
        var go = function () {
            var that = this;
            var args = Array.prototype.slice.call(arguments);
            var callback = args.pop();
            return eachfn(fns, function (fn, cb) {
                fn.apply(that, args.concat([cb]));
            },
            callback);
        };
        if (arguments.length > 2) {
            var args = Array.prototype.slice.call(arguments, 2);
            return go.apply(this, args);
        }
        else {
            return go;
        }
    };
    async.applyEach = doParallel(_applyEach);
    async.applyEachSeries = doSeries(_applyEach);

    async.forever = function (fn, callback) {
        function next(err) {
            if (err) {
                if (callback) {
                    return callback(err);
                }
                throw err;
            }
            fn(next);
        }
        next();
    };

    // Node.js
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = async;
    }
    // AMD / RequireJS
    else if (typeof define !== 'undefined' && define.amd) {
        define([], function () {
            return async;
        });
    }
    // included directly via <script> tag
    else {
        root.async = async;
    }

}());

}).call(this,require('_process'))
},{"_process":110}],42:[function(require,module,exports){
(function (process,global){
/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE
 * @version   2.3.0
 */

(function() {
    "use strict";
    function lib$es6$promise$utils$$objectOrFunction(x) {
      return typeof x === 'function' || (typeof x === 'object' && x !== null);
    }

    function lib$es6$promise$utils$$isFunction(x) {
      return typeof x === 'function';
    }

    function lib$es6$promise$utils$$isMaybeThenable(x) {
      return typeof x === 'object' && x !== null;
    }

    var lib$es6$promise$utils$$_isArray;
    if (!Array.isArray) {
      lib$es6$promise$utils$$_isArray = function (x) {
        return Object.prototype.toString.call(x) === '[object Array]';
      };
    } else {
      lib$es6$promise$utils$$_isArray = Array.isArray;
    }

    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;
    var lib$es6$promise$asap$$len = 0;
    var lib$es6$promise$asap$$toString = {}.toString;
    var lib$es6$promise$asap$$vertxNext;
    var lib$es6$promise$asap$$customSchedulerFn;

    var lib$es6$promise$asap$$asap = function asap(callback, arg) {
      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;
      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;
      lib$es6$promise$asap$$len += 2;
      if (lib$es6$promise$asap$$len === 2) {
        // If len is 2, that means that we need to schedule an async flush.
        // If additional callbacks are queued before the queue is flushed, they
        // will be processed by this flush that we are scheduling.
        if (lib$es6$promise$asap$$customSchedulerFn) {
          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);
        } else {
          lib$es6$promise$asap$$scheduleFlush();
        }
      }
    }

    function lib$es6$promise$asap$$setScheduler(scheduleFn) {
      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;
    }

    function lib$es6$promise$asap$$setAsap(asapFn) {
      lib$es6$promise$asap$$asap = asapFn;
    }

    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;
    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};
    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;
    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';

    // test for web worker but not in IE10
    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&
      typeof importScripts !== 'undefined' &&
      typeof MessageChannel !== 'undefined';

    // node
    function lib$es6$promise$asap$$useNextTick() {
      var nextTick = process.nextTick;
      // node version 0.10.x displays a deprecation warning when nextTick is used recursively
      // setImmediate should be used instead instead
      var version = process.versions.node.match(/^(?:(\d+)\.)?(?:(\d+)\.)?(\*|\d+)$/);
      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {
        nextTick = setImmediate;
      }
      return function() {
        nextTick(lib$es6$promise$asap$$flush);
      };
    }

    // vertx
    function lib$es6$promise$asap$$useVertxTimer() {
      return function() {
        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);
      };
    }

    function lib$es6$promise$asap$$useMutationObserver() {
      var iterations = 0;
      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);
      var node = document.createTextNode('');
      observer.observe(node, { characterData: true });

      return function() {
        node.data = (iterations = ++iterations % 2);
      };
    }

    // web worker
    function lib$es6$promise$asap$$useMessageChannel() {
      var channel = new MessageChannel();
      channel.port1.onmessage = lib$es6$promise$asap$$flush;
      return function () {
        channel.port2.postMessage(0);
      };
    }

    function lib$es6$promise$asap$$useSetTimeout() {
      return function() {
        setTimeout(lib$es6$promise$asap$$flush, 1);
      };
    }

    var lib$es6$promise$asap$$queue = new Array(1000);
    function lib$es6$promise$asap$$flush() {
      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {
        var callback = lib$es6$promise$asap$$queue[i];
        var arg = lib$es6$promise$asap$$queue[i+1];

        callback(arg);

        lib$es6$promise$asap$$queue[i] = undefined;
        lib$es6$promise$asap$$queue[i+1] = undefined;
      }

      lib$es6$promise$asap$$len = 0;
    }

    function lib$es6$promise$asap$$attemptVertex() {
      try {
        var r = require;
        var vertx = r('vertx');
        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;
        return lib$es6$promise$asap$$useVertxTimer();
      } catch(e) {
        return lib$es6$promise$asap$$useSetTimeout();
      }
    }

    var lib$es6$promise$asap$$scheduleFlush;
    // Decide what async method to use to triggering processing of queued callbacks:
    if (lib$es6$promise$asap$$isNode) {
      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();
    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {
      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();
    } else if (lib$es6$promise$asap$$isWorker) {
      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();
    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {
      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertex();
    } else {
      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();
    }

    function lib$es6$promise$$internal$$noop() {}

    var lib$es6$promise$$internal$$PENDING   = void 0;
    var lib$es6$promise$$internal$$FULFILLED = 1;
    var lib$es6$promise$$internal$$REJECTED  = 2;

    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();

    function lib$es6$promise$$internal$$selfFullfillment() {
      return new TypeError("You cannot resolve a promise with itself");
    }

    function lib$es6$promise$$internal$$cannotReturnOwn() {
      return new TypeError('A promises callback cannot return that same promise.');
    }

    function lib$es6$promise$$internal$$getThen(promise) {
      try {
        return promise.then;
      } catch(error) {
        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;
        return lib$es6$promise$$internal$$GET_THEN_ERROR;
      }
    }

    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {
      try {
        then.call(value, fulfillmentHandler, rejectionHandler);
      } catch(e) {
        return e;
      }
    }

    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {
       lib$es6$promise$asap$$asap(function(promise) {
        var sealed = false;
        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {
          if (sealed) { return; }
          sealed = true;
          if (thenable !== value) {
            lib$es6$promise$$internal$$resolve(promise, value);
          } else {
            lib$es6$promise$$internal$$fulfill(promise, value);
          }
        }, function(reason) {
          if (sealed) { return; }
          sealed = true;

          lib$es6$promise$$internal$$reject(promise, reason);
        }, 'Settle: ' + (promise._label || ' unknown promise'));

        if (!sealed && error) {
          sealed = true;
          lib$es6$promise$$internal$$reject(promise, error);
        }
      }, promise);
    }

    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {
      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {
        lib$es6$promise$$internal$$fulfill(promise, thenable._result);
      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {
        lib$es6$promise$$internal$$reject(promise, thenable._result);
      } else {
        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {
          lib$es6$promise$$internal$$resolve(promise, value);
        }, function(reason) {
          lib$es6$promise$$internal$$reject(promise, reason);
        });
      }
    }

    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {
      if (maybeThenable.constructor === promise.constructor) {
        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);
      } else {
        var then = lib$es6$promise$$internal$$getThen(maybeThenable);

        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {
          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);
        } else if (then === undefined) {
          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);
        } else if (lib$es6$promise$utils$$isFunction(then)) {
          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);
        } else {
          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);
        }
      }
    }

    function lib$es6$promise$$internal$$resolve(promise, value) {
      if (promise === value) {
        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFullfillment());
      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {
        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);
      } else {
        lib$es6$promise$$internal$$fulfill(promise, value);
      }
    }

    function lib$es6$promise$$internal$$publishRejection(promise) {
      if (promise._onerror) {
        promise._onerror(promise._result);
      }

      lib$es6$promise$$internal$$publish(promise);
    }

    function lib$es6$promise$$internal$$fulfill(promise, value) {
      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }

      promise._result = value;
      promise._state = lib$es6$promise$$internal$$FULFILLED;

      if (promise._subscribers.length !== 0) {
        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);
      }
    }

    function lib$es6$promise$$internal$$reject(promise, reason) {
      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }
      promise._state = lib$es6$promise$$internal$$REJECTED;
      promise._result = reason;

      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);
    }

    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {
      var subscribers = parent._subscribers;
      var length = subscribers.length;

      parent._onerror = null;

      subscribers[length] = child;
      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;
      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;

      if (length === 0 && parent._state) {
        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);
      }
    }

    function lib$es6$promise$$internal$$publish(promise) {
      var subscribers = promise._subscribers;
      var settled = promise._state;

      if (subscribers.length === 0) { return; }

      var child, callback, detail = promise._result;

      for (var i = 0; i < subscribers.length; i += 3) {
        child = subscribers[i];
        callback = subscribers[i + settled];

        if (child) {
          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);
        } else {
          callback(detail);
        }
      }

      promise._subscribers.length = 0;
    }

    function lib$es6$promise$$internal$$ErrorObject() {
      this.error = null;
    }

    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();

    function lib$es6$promise$$internal$$tryCatch(callback, detail) {
      try {
        return callback(detail);
      } catch(e) {
        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;
        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;
      }
    }

    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {
      var hasCallback = lib$es6$promise$utils$$isFunction(callback),
          value, error, succeeded, failed;

      if (hasCallback) {
        value = lib$es6$promise$$internal$$tryCatch(callback, detail);

        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {
          failed = true;
          error = value.error;
          value = null;
        } else {
          succeeded = true;
        }

        if (promise === value) {
          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());
          return;
        }

      } else {
        value = detail;
        succeeded = true;
      }

      if (promise._state !== lib$es6$promise$$internal$$PENDING) {
        // noop
      } else if (hasCallback && succeeded) {
        lib$es6$promise$$internal$$resolve(promise, value);
      } else if (failed) {
        lib$es6$promise$$internal$$reject(promise, error);
      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {
        lib$es6$promise$$internal$$fulfill(promise, value);
      } else if (settled === lib$es6$promise$$internal$$REJECTED) {
        lib$es6$promise$$internal$$reject(promise, value);
      }
    }

    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {
      try {
        resolver(function resolvePromise(value){
          lib$es6$promise$$internal$$resolve(promise, value);
        }, function rejectPromise(reason) {
          lib$es6$promise$$internal$$reject(promise, reason);
        });
      } catch(e) {
        lib$es6$promise$$internal$$reject(promise, e);
      }
    }

    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {
      var enumerator = this;

      enumerator._instanceConstructor = Constructor;
      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);

      if (enumerator._validateInput(input)) {
        enumerator._input     = input;
        enumerator.length     = input.length;
        enumerator._remaining = input.length;

        enumerator._init();

        if (enumerator.length === 0) {
          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);
        } else {
          enumerator.length = enumerator.length || 0;
          enumerator._enumerate();
          if (enumerator._remaining === 0) {
            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);
          }
        }
      } else {
        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());
      }
    }

    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {
      return lib$es6$promise$utils$$isArray(input);
    };

    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {
      return new Error('Array Methods must be provided an Array');
    };

    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {
      this._result = new Array(this.length);
    };

    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;

    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {
      var enumerator = this;

      var length  = enumerator.length;
      var promise = enumerator.promise;
      var input   = enumerator._input;

      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {
        enumerator._eachEntry(input[i], i);
      }
    };

    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {
      var enumerator = this;
      var c = enumerator._instanceConstructor;

      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {
        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {
          entry._onerror = null;
          enumerator._settledAt(entry._state, i, entry._result);
        } else {
          enumerator._willSettleAt(c.resolve(entry), i);
        }
      } else {
        enumerator._remaining--;
        enumerator._result[i] = entry;
      }
    };

    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {
      var enumerator = this;
      var promise = enumerator.promise;

      if (promise._state === lib$es6$promise$$internal$$PENDING) {
        enumerator._remaining--;

        if (state === lib$es6$promise$$internal$$REJECTED) {
          lib$es6$promise$$internal$$reject(promise, value);
        } else {
          enumerator._result[i] = value;
        }
      }

      if (enumerator._remaining === 0) {
        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);
      }
    };

    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {
      var enumerator = this;

      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {
        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);
      }, function(reason) {
        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);
      });
    };
    function lib$es6$promise$promise$all$$all(entries) {
      return new lib$es6$promise$enumerator$$default(this, entries).promise;
    }
    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;
    function lib$es6$promise$promise$race$$race(entries) {
      /*jshint validthis:true */
      var Constructor = this;

      var promise = new Constructor(lib$es6$promise$$internal$$noop);

      if (!lib$es6$promise$utils$$isArray(entries)) {
        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));
        return promise;
      }

      var length = entries.length;

      function onFulfillment(value) {
        lib$es6$promise$$internal$$resolve(promise, value);
      }

      function onRejection(reason) {
        lib$es6$promise$$internal$$reject(promise, reason);
      }

      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {
        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);
      }

      return promise;
    }
    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;
    function lib$es6$promise$promise$resolve$$resolve(object) {
      /*jshint validthis:true */
      var Constructor = this;

      if (object && typeof object === 'object' && object.constructor === Constructor) {
        return object;
      }

      var promise = new Constructor(lib$es6$promise$$internal$$noop);
      lib$es6$promise$$internal$$resolve(promise, object);
      return promise;
    }
    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;
    function lib$es6$promise$promise$reject$$reject(reason) {
      /*jshint validthis:true */
      var Constructor = this;
      var promise = new Constructor(lib$es6$promise$$internal$$noop);
      lib$es6$promise$$internal$$reject(promise, reason);
      return promise;
    }
    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;

    var lib$es6$promise$promise$$counter = 0;

    function lib$es6$promise$promise$$needsResolver() {
      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
    }

    function lib$es6$promise$promise$$needsNew() {
      throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
    }

    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;
    /**
      Promise objects represent the eventual result of an asynchronous operation. The
      primary way of interacting with a promise is through its `then` method, which
      registers callbacks to receive either a promise's eventual value or the reason
      why the promise cannot be fulfilled.

      Terminology
      -----------

      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
      - `thenable` is an object or function that defines a `then` method.
      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
      - `exception` is a value that is thrown using the throw statement.
      - `reason` is a value that indicates why a promise was rejected.
      - `settled` the final resting state of a promise, fulfilled or rejected.

      A promise can be in one of three states: pending, fulfilled, or rejected.

      Promises that are fulfilled have a fulfillment value and are in the fulfilled
      state.  Promises that are rejected have a rejection reason and are in the
      rejected state.  A fulfillment value is never a thenable.

      Promises can also be said to *resolve* a value.  If this value is also a
      promise, then the original promise's settled state will match the value's
      settled state.  So a promise that *resolves* a promise that rejects will
      itself reject, and a promise that *resolves* a promise that fulfills will
      itself fulfill.


      Basic Usage:
      ------------

      ```js
      var promise = new Promise(function(resolve, reject) {
        // on success
        resolve(value);

        // on failure
        reject(reason);
      });

      promise.then(function(value) {
        // on fulfillment
      }, function(reason) {
        // on rejection
      });
      ```

      Advanced Usage:
      ---------------

      Promises shine when abstracting away asynchronous interactions such as
      `XMLHttpRequest`s.

      ```js
      function getJSON(url) {
        return new Promise(function(resolve, reject){
          var xhr = new XMLHttpRequest();

          xhr.open('GET', url);
          xhr.onreadystatechange = handler;
          xhr.responseType = 'json';
          xhr.setRequestHeader('Accept', 'application/json');
          xhr.send();

          function handler() {
            if (this.readyState === this.DONE) {
              if (this.status === 200) {
                resolve(this.response);
              } else {
                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
              }
            }
          };
        });
      }

      getJSON('/posts.json').then(function(json) {
        // on fulfillment
      }, function(reason) {
        // on rejection
      });
      ```

      Unlike callbacks, promises are great composable primitives.

      ```js
      Promise.all([
        getJSON('/posts'),
        getJSON('/comments')
      ]).then(function(values){
        values[0] // => postsJSON
        values[1] // => commentsJSON

        return values;
      });
      ```

      @class Promise
      @param {function} resolver
      Useful for tooling.
      @constructor
    */
    function lib$es6$promise$promise$$Promise(resolver) {
      this._id = lib$es6$promise$promise$$counter++;
      this._state = undefined;
      this._result = undefined;
      this._subscribers = [];

      if (lib$es6$promise$$internal$$noop !== resolver) {
        if (!lib$es6$promise$utils$$isFunction(resolver)) {
          lib$es6$promise$promise$$needsResolver();
        }

        if (!(this instanceof lib$es6$promise$promise$$Promise)) {
          lib$es6$promise$promise$$needsNew();
        }

        lib$es6$promise$$internal$$initializePromise(this, resolver);
      }
    }

    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;
    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;
    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;
    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;
    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;
    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;
    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;

    lib$es6$promise$promise$$Promise.prototype = {
      constructor: lib$es6$promise$promise$$Promise,

    /**
      The primary way of interacting with a promise is through its `then` method,
      which registers callbacks to receive either a promise's eventual value or the
      reason why the promise cannot be fulfilled.

      ```js
      findUser().then(function(user){
        // user is available
      }, function(reason){
        // user is unavailable, and you are given the reason why
      });
      ```

      Chaining
      --------

      The return value of `then` is itself a promise.  This second, 'downstream'
      promise is resolved with the return value of the first promise's fulfillment
      or rejection handler, or rejected if the handler throws an exception.

      ```js
      findUser().then(function (user) {
        return user.name;
      }, function (reason) {
        return 'default name';
      }).then(function (userName) {
        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
        // will be `'default name'`
      });

      findUser().then(function (user) {
        throw new Error('Found user, but still unhappy');
      }, function (reason) {
        throw new Error('`findUser` rejected and we're unhappy');
      }).then(function (value) {
        // never reached
      }, function (reason) {
        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
      });
      ```
      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.

      ```js
      findUser().then(function (user) {
        throw new PedagogicalException('Upstream error');
      }).then(function (value) {
        // never reached
      }).then(function (value) {
        // never reached
      }, function (reason) {
        // The `PedgagocialException` is propagated all the way down to here
      });
      ```

      Assimilation
      ------------

      Sometimes the value you want to propagate to a downstream promise can only be
      retrieved asynchronously. This can be achieved by returning a promise in the
      fulfillment or rejection handler. The downstream promise will then be pending
      until the returned promise is settled. This is called *assimilation*.

      ```js
      findUser().then(function (user) {
        return findCommentsByAuthor(user);
      }).then(function (comments) {
        // The user's comments are now available
      });
      ```

      If the assimliated promise rejects, then the downstream promise will also reject.

      ```js
      findUser().then(function (user) {
        return findCommentsByAuthor(user);
      }).then(function (comments) {
        // If `findCommentsByAuthor` fulfills, we'll have the value here
      }, function (reason) {
        // If `findCommentsByAuthor` rejects, we'll have the reason here
      });
      ```

      Simple Example
      --------------

      Synchronous Example

      ```javascript
      var result;

      try {
        result = findResult();
        // success
      } catch(reason) {
        // failure
      }
      ```

      Errback Example

      ```js
      findResult(function(result, err){
        if (err) {
          // failure
        } else {
          // success
        }
      });
      ```

      Promise Example;

      ```javascript
      findResult().then(function(result){
        // success
      }, function(reason){
        // failure
      });
      ```

      Advanced Example
      --------------

      Synchronous Example

      ```javascript
      var author, books;

      try {
        author = findAuthor();
        books  = findBooksByAuthor(author);
        // success
      } catch(reason) {
        // failure
      }
      ```

      Errback Example

      ```js

      function foundBooks(books) {

      }

      function failure(reason) {

      }

      findAuthor(function(author, err){
        if (err) {
          failure(err);
          // failure
        } else {
          try {
            findBoooksByAuthor(author, function(books, err) {
              if (err) {
                failure(err);
              } else {
                try {
                  foundBooks(books);
                } catch(reason) {
                  failure(reason);
                }
              }
            });
          } catch(error) {
            failure(err);
          }
          // success
        }
      });
      ```

      Promise Example;

      ```javascript
      findAuthor().
        then(findBooksByAuthor).
        then(function(books){
          // found books
      }).catch(function(reason){
        // something went wrong
      });
      ```

      @method then
      @param {Function} onFulfilled
      @param {Function} onRejected
      Useful for tooling.
      @return {Promise}
    */
      then: function(onFulfillment, onRejection) {
        var parent = this;
        var state = parent._state;

        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {
          return this;
        }

        var child = new this.constructor(lib$es6$promise$$internal$$noop);
        var result = parent._result;

        if (state) {
          var callback = arguments[state - 1];
          lib$es6$promise$asap$$asap(function(){
            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);
          });
        } else {
          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);
        }

        return child;
      },

    /**
      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
      as the catch block of a try/catch statement.

      ```js
      function findAuthor(){
        throw new Error('couldn't find that author');
      }

      // synchronous
      try {
        findAuthor();
      } catch(reason) {
        // something went wrong
      }

      // async with promises
      findAuthor().catch(function(reason){
        // something went wrong
      });
      ```

      @method catch
      @param {Function} onRejection
      Useful for tooling.
      @return {Promise}
    */
      'catch': function(onRejection) {
        return this.then(null, onRejection);
      }
    };
    function lib$es6$promise$polyfill$$polyfill() {
      var local;

      if (typeof global !== 'undefined') {
          local = global;
      } else if (typeof self !== 'undefined') {
          local = self;
      } else {
          try {
              local = Function('return this')();
          } catch (e) {
              throw new Error('polyfill failed because global object is unavailable in this environment');
          }
      }

      var P = local.Promise;

      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {
        return;
      }

      local.Promise = lib$es6$promise$promise$$default;
    }
    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;

    var lib$es6$promise$umd$$ES6Promise = {
      'Promise': lib$es6$promise$promise$$default,
      'polyfill': lib$es6$promise$polyfill$$default
    };

    /* global define:true module:true window: true */
    if (typeof define === 'function' && define['amd']) {
      define(function() { return lib$es6$promise$umd$$ES6Promise; });
    } else if (typeof module !== 'undefined' && module['exports']) {
      module['exports'] = lib$es6$promise$umd$$ES6Promise;
    } else if (typeof this !== 'undefined') {
      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;
    }

    lib$es6$promise$polyfill$$default();
}).call(this);


}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":110}],43:[function(require,module,exports){
// Ignore module for browserify (see package.json)
},{}],44:[function(require,module,exports){
(function (process,global,__dirname){
/**
 * A JavaScript implementation of the JSON-LD API.
 *
 * @author Dave Longley
 *
 * @license BSD 3-Clause License
 * Copyright (c) 2011-2015 Digital Bazaar, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 *
 * Neither the name of the Digital Bazaar, Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
(function() {

// determine if in-browser or using node.js
var _nodejs = (
  typeof process !== 'undefined' && process.versions && process.versions.node);
var _browser = !_nodejs &&
  (typeof window !== 'undefined' || typeof self !== 'undefined');
if(_browser) {
  if(typeof global === 'undefined') {
    if(typeof window !== 'undefined') {
      global = window;
    } else if(typeof self !== 'undefined') {
      global = self;
    } else if(typeof $ !== 'undefined') {
      global = $;
    }
  }
}

// attaches jsonld API to the given object
var wrapper = function(jsonld) {

/* Core API */

/**
 * Performs JSON-LD compaction.
 *
 * @param input the JSON-LD input to compact.
 * @param ctx the context to compact with.
 * @param [options] options to use:
 *          [base] the base IRI to use.
 *          [compactArrays] true to compact arrays to single values when
 *            appropriate, false not to (default: true).
 *          [graph] true to always output a top-level graph (default: false).
 *          [expandContext] a context to expand with.
 *          [skipExpansion] true to assume the input is expanded and skip
 *            expansion, false not to, defaults to false.
 *          [documentLoader(url, callback(err, remoteDoc))] the document loader.
 * @param callback(err, compacted, ctx) called once the operation completes.
 */
jsonld.compact = function(input, ctx, options, callback) {
  if(arguments.length < 2) {
    return jsonld.nextTick(function() {
      callback(new TypeError('Could not compact, too few arguments.'));
    });
  }

  // get arguments
  if(typeof options === 'function') {
    callback = options;
    options = {};
  }
  options = options || {};

  if(ctx === null) {
    return jsonld.nextTick(function() {
      callback(new JsonLdError(
        'The compaction context must not be null.',
        'jsonld.CompactError', {code: 'invalid local context'}));
    });
  }

  // nothing to compact
  if(input === null) {
    return jsonld.nextTick(function() {
      callback(null, null);
    });
  }

  // set default options
  if(!('base' in options)) {
    options.base = (typeof input === 'string') ? input : '';
  }
  if(!('compactArrays' in options)) {
    options.compactArrays = true;
  }
  if(!('graph' in options)) {
    options.graph = false;
  }
  if(!('skipExpansion' in options)) {
    options.skipExpansion = false;
  }
  if(!('documentLoader' in options)) {
    options.documentLoader = jsonld.loadDocument;
  }
  if(!('link' in options)) {
    options.link = false;
  }
  if(options.link) {
    // force skip expansion when linking, "link" is not part of the public
    // API, it should only be called from framing
    options.skipExpansion = true;
  }

  var expand = function(input, options, callback) {
    if(options.skipExpansion) {
      return jsonld.nextTick(function() {
        callback(null, input);
      });
    }
    jsonld.expand(input, options, callback);
  };

  // expand input then do compaction
  expand(input, options, function(err, expanded) {
    if(err) {
      return callback(new JsonLdError(
        'Could not expand input before compaction.',
        'jsonld.CompactError', {cause: err}));
    }

    // process context
    var activeCtx = _getInitialContext(options);
    jsonld.processContext(activeCtx, ctx, options, function(err, activeCtx) {
      if(err) {
        return callback(new JsonLdError(
          'Could not process context before compaction.',
          'jsonld.CompactError', {cause: err}));
      }

      var compacted;
      try {
        // do compaction
        compacted = new Processor().compact(activeCtx, null, expanded, options);
      } catch(ex) {
        return callback(ex);
      }

      cleanup(null, compacted, activeCtx, options);
    });
  });

  // performs clean up after compaction
  function cleanup(err, compacted, activeCtx, options) {
    if(err) {
      return callback(err);
    }

    if(options.compactArrays && !options.graph && _isArray(compacted)) {
      if(compacted.length === 1) {
        // simplify to a single item
        compacted = compacted[0];
      } else if(compacted.length === 0) {
        // simplify to an empty object
        compacted = {};
      }
    } else if(options.graph && _isObject(compacted)) {
      // always use array if graph option is on
      compacted = [compacted];
    }

    // follow @context key
    if(_isObject(ctx) && '@context' in ctx) {
      ctx = ctx['@context'];
    }

    // build output context
    ctx = _clone(ctx);
    if(!_isArray(ctx)) {
      ctx = [ctx];
    }
    // remove empty contexts
    var tmp = ctx;
    ctx = [];
    for(var i = 0; i < tmp.length; ++i) {
      if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {
        ctx.push(tmp[i]);
      }
    }

    // remove array if only one context
    var hasContext = (ctx.length > 0);
    if(ctx.length === 1) {
      ctx = ctx[0];
    }

    // add context and/or @graph
    if(_isArray(compacted)) {
      // use '@graph' keyword
      var kwgraph = _compactIri(activeCtx, '@graph');
      var graph = compacted;
      compacted = {};
      if(hasContext) {
        compacted['@context'] = ctx;
      }
      compacted[kwgraph] = graph;
    } else if(_isObject(compacted) && hasContext) {
      // reorder keys so @context is first
      var graph = compacted;
      compacted = {'@context': ctx};
      for(var key in graph) {
        compacted[key] = graph[key];
      }
    }

    callback(null, compacted, activeCtx);
  }
};

/**
 * Performs JSON-LD expansion.
 *
 * @param input the JSON-LD input to expand.
 * @param [options] the options to use:
 *          [base] the base IRI to use.
 *          [expandContext] a context to expand with.
 *          [keepFreeFloatingNodes] true to keep free-floating nodes,
 *            false not to, defaults to false.
 *          [documentLoader(url, callback(err, remoteDoc))] the document loader.
 * @param callback(err, expanded) called once the operation completes.
 */
jsonld.expand = function(input, options, callback) {
  if(arguments.length < 1) {
    return jsonld.nextTick(function() {
      callback(new TypeError('Could not expand, too few arguments.'));
    });
  }

  // get arguments
  if(typeof options === 'function') {
    callback = options;
    options = {};
  }
  options = options || {};

  // set default options
  if(!('documentLoader' in options)) {
    options.documentLoader = jsonld.loadDocument;
  }
  if(!('keepFreeFloatingNodes' in options)) {
    options.keepFreeFloatingNodes = false;
  }

  jsonld.nextTick(function() {
    // if input is a string, attempt to dereference remote document
    if(typeof input === 'string') {
      var done = function(err, remoteDoc) {
        if(err) {
          return callback(err);
        }
        try {
          if(!remoteDoc.document) {
            throw new JsonLdError(
              'No remote document found at the given URL.',
              'jsonld.NullRemoteDocument');
          }
          if(typeof remoteDoc.document === 'string') {
            remoteDoc.document = JSON.parse(remoteDoc.document);
          }
        } catch(ex) {
          return callback(new JsonLdError(
            'Could not retrieve a JSON-LD document from the URL. URL ' +
            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {
              code: 'loading document failed',
              cause: ex,
              remoteDoc: remoteDoc
          }));
        }
        expand(remoteDoc);
      };
      var promise = options.documentLoader(input, done);
      if(promise && 'then' in promise) {
        promise.then(done.bind(null, null), done);
      }
      return;
    }
    // nothing to load
    expand({contextUrl: null, documentUrl: null, document: input});
  });

  function expand(remoteDoc) {
    // set default base
    if(!('base' in options)) {
      options.base = remoteDoc.documentUrl || '';
    }
    // build meta-object and retrieve all @context URLs
    var input = {
      document: _clone(remoteDoc.document),
      remoteContext: {'@context': remoteDoc.contextUrl}
    };
    if('expandContext' in options) {
      var expandContext = _clone(options.expandContext);
      if(typeof expandContext === 'object' && '@context' in expandContext) {
        input.expandContext = expandContext;
      } else {
        input.expandContext = {'@context': expandContext};
      }
    }
    _retrieveContextUrls(input, options, function(err, input) {
      if(err) {
        return callback(err);
      }

      var expanded;
      try {
        var processor = new Processor();
        var activeCtx = _getInitialContext(options);
        var document = input.document;
        var remoteContext = input.remoteContext['@context'];

        // process optional expandContext
        if(input.expandContext) {
          activeCtx = processor.processContext(
            activeCtx, input.expandContext['@context'], options);
        }

        // process remote context from HTTP Link Header
        if(remoteContext) {
          activeCtx = processor.processContext(
            activeCtx, remoteContext, options);
        }

        // expand document
        expanded = processor.expand(
          activeCtx, null, document, options, false);

        // optimize away @graph with no other properties
        if(_isObject(expanded) && ('@graph' in expanded) &&
          Object.keys(expanded).length === 1) {
          expanded = expanded['@graph'];
        } else if(expanded === null) {
          expanded = [];
        }

        // normalize to an array
        if(!_isArray(expanded)) {
          expanded = [expanded];
        }
      } catch(ex) {
        return callback(ex);
      }
      callback(null, expanded);
    });
  }
};

/**
 * Performs JSON-LD flattening.
 *
 * @param input the JSON-LD to flatten.
 * @param ctx the context to use to compact the flattened output, or null.
 * @param [options] the options to use:
 *          [base] the base IRI to use.
 *          [expandContext] a context to expand with.
 *          [documentLoader(url, callback(err, remoteDoc))] the document loader.
 * @param callback(err, flattened) called once the operation completes.
 */
jsonld.flatten = function(input, ctx, options, callback) {
  if(arguments.length < 1) {
    return jsonld.nextTick(function() {
      callback(new TypeError('Could not flatten, too few arguments.'));
    });
  }

  // get arguments
  if(typeof options === 'function') {
    callback = options;
    options = {};
  } else if(typeof ctx === 'function') {
    callback = ctx;
    ctx = null;
    options = {};
  }
  options = options || {};

  // set default options
  if(!('base' in options)) {
    options.base = (typeof input === 'string') ? input : '';
  }
  if(!('documentLoader' in options)) {
    options.documentLoader = jsonld.loadDocument;
  }

  // expand input
  jsonld.expand(input, options, function(err, _input) {
    if(err) {
      return callback(new JsonLdError(
        'Could not expand input before flattening.',
        'jsonld.FlattenError', {cause: err}));
    }

    var flattened;
    try {
      // do flattening
      flattened = new Processor().flatten(_input);
    } catch(ex) {
      return callback(ex);
    }

    if(ctx === null) {
      return callback(null, flattened);
    }

    // compact result (force @graph option to true, skip expansion)
    options.graph = true;
    options.skipExpansion = true;
    jsonld.compact(flattened, ctx, options, function(err, compacted) {
      if(err) {
        return callback(new JsonLdError(
          'Could not compact flattened output.',
          'jsonld.FlattenError', {cause: err}));
      }
      callback(null, compacted);
    });
  });
};

/**
 * Performs JSON-LD framing.
 *
 * @param input the JSON-LD input to frame.
 * @param frame the JSON-LD frame to use.
 * @param [options] the framing options.
 *          [base] the base IRI to use.
 *          [expandContext] a context to expand with.
 *          [embed] default @embed flag: '@last', '@always', '@never', '@link'
 *            (default: '@last').
 *          [explicit] default @explicit flag (default: false).
 *          [requireAll] default @requireAll flag (default: true).
 *          [omitDefault] default @omitDefault flag (default: false).
 *          [documentLoader(url, callback(err, remoteDoc))] the document loader.
 * @param callback(err, framed) called once the operation completes.
 */
jsonld.frame = function(input, frame, options, callback) {
  if(arguments.length < 2) {
    return jsonld.nextTick(function() {
      callback(new TypeError('Could not frame, too few arguments.'));
    });
  }

  // get arguments
  if(typeof options === 'function') {
    callback = options;
    options = {};
  }
  options = options || {};

  // set default options
  if(!('base' in options)) {
    options.base = (typeof input === 'string') ? input : '';
  }
  if(!('documentLoader' in options)) {
    options.documentLoader = jsonld.loadDocument;
  }
  if(!('embed' in options)) {
    options.embed = '@last';
  }
  options.explicit = options.explicit || false;
  if(!('requireAll' in options)) {
    options.requireAll = true;
  }
  options.omitDefault = options.omitDefault || false;

  jsonld.nextTick(function() {
    // if frame is a string, attempt to dereference remote document
    if(typeof frame === 'string') {
      var done = function(err, remoteDoc) {
        if(err) {
          return callback(err);
        }
        try {
          if(!remoteDoc.document) {
            throw new JsonLdError(
              'No remote document found at the given URL.',
              'jsonld.NullRemoteDocument');
          }
          if(typeof remoteDoc.document === 'string') {
            remoteDoc.document = JSON.parse(remoteDoc.document);
          }
        } catch(ex) {
          return callback(new JsonLdError(
            'Could not retrieve a JSON-LD document from the URL. URL ' +
            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {
              code: 'loading document failed',
              cause: ex,
              remoteDoc: remoteDoc
          }));
        }
        doFrame(remoteDoc);
      };
      var promise = options.documentLoader(frame, done);
      if(promise && 'then' in promise) {
        promise.then(done.bind(null, null), done);
      }
      return;
    }
    // nothing to load
    doFrame({contextUrl: null, documentUrl: null, document: frame});
  });

  function doFrame(remoteFrame) {
    // preserve frame context and add any Link header context
    var frame = remoteFrame.document;
    var ctx;
    if(frame) {
      ctx = frame['@context'];
      if(remoteFrame.contextUrl) {
        if(!ctx) {
          ctx = remoteFrame.contextUrl;
        } else if(_isArray(ctx)) {
          ctx.push(remoteFrame.contextUrl);
        } else {
          ctx = [ctx, remoteFrame.contextUrl];
        }
        frame['@context'] = ctx;
      } else {
        ctx = ctx || {};
      }
    } else {
      ctx = {};
    }

    // expand input
    jsonld.expand(input, options, function(err, expanded) {
      if(err) {
        return callback(new JsonLdError(
          'Could not expand input before framing.',
          'jsonld.FrameError', {cause: err}));
      }

      // expand frame
      var opts = _clone(options);
      opts.isFrame = true;
      opts.keepFreeFloatingNodes = true;
      jsonld.expand(frame, opts, function(err, expandedFrame) {
        if(err) {
          return callback(new JsonLdError(
            'Could not expand frame before framing.',
            'jsonld.FrameError', {cause: err}));
        }

        var framed;
        try {
          // do framing
          framed = new Processor().frame(expanded, expandedFrame, opts);
        } catch(ex) {
          return callback(ex);
        }

        // compact result (force @graph option to true, skip expansion,
        // check for linked embeds)
        opts.graph = true;
        opts.skipExpansion = true;
        opts.link = {};
        jsonld.compact(framed, ctx, opts, function(err, compacted, ctx) {
          if(err) {
            return callback(new JsonLdError(
              'Could not compact framed output.',
              'jsonld.FrameError', {cause: err}));
          }
          // get graph alias
          var graph = _compactIri(ctx, '@graph');
          // remove @preserve from results
          opts.link = {};
          compacted[graph] = _removePreserve(ctx, compacted[graph], opts);
          callback(null, compacted);
        });
      });
    });
  }
};

/**
 * **Experimental**
 *
 * Links a JSON-LD document's nodes in memory.
 *
 * @param input the JSON-LD document to link.
 * @param ctx the JSON-LD context to apply.
 * @param [options] the options to use:
 *          [base] the base IRI to use.
 *          [expandContext] a context to expand with.
 *          [documentLoader(url, callback(err, remoteDoc))] the document loader.
 * @param callback(err, linked) called once the operation completes.
 */
jsonld.link = function(input, ctx, options, callback) {
  // API matches running frame with a wildcard frame and embed: '@link'
  // get arguments
  var frame = {};
  if(ctx) {
    frame['@context'] = ctx;
  }
  frame['@embed'] = '@link';
  jsonld.frame(input, frame, options, callback);
};

/**
 * **Deprecated**
 *
 * Performs JSON-LD objectification.
 *
 * @param input the JSON-LD document to objectify.
 * @param ctx the JSON-LD context to apply.
 * @param [options] the options to use:
 *          [base] the base IRI to use.
 *          [expandContext] a context to expand with.
 *          [documentLoader(url, callback(err, remoteDoc))] the document loader.
 * @param callback(err, linked) called once the operation completes.
 */
jsonld.objectify = function(input, ctx, options, callback) {
  if(typeof options === 'function') {
    callback = options;
    options = {};
  }
  options = options || {};

  // set default options
  if(!('base' in options)) {
    options.base = (typeof input === 'string') ? input : '';
  }
  if(!('documentLoader' in options)) {
    options.documentLoader = jsonld.loadDocument;
  }

  // expand input
  jsonld.expand(input, options, function(err, _input) {
    if(err) {
      return callback(new JsonLdError(
        'Could not expand input before linking.',
        'jsonld.LinkError', {cause: err}));
    }

    var flattened;
    try {
      // flatten the graph
      flattened = new Processor().flatten(_input);
    } catch(ex) {
      return callback(ex);
    }

    // compact result (force @graph option to true, skip expansion)
    options.graph = true;
    options.skipExpansion = true;
    jsonld.compact(flattened, ctx, options, function(err, compacted, ctx) {
      if(err) {
        return callback(new JsonLdError(
          'Could not compact flattened output before linking.',
          'jsonld.LinkError', {cause: err}));
      }
      // get graph alias
      var graph = _compactIri(ctx, '@graph');
      var top = compacted[graph][0];

      var recurse = function(subject) {
        // can't replace just a string
        if(!_isObject(subject) && !_isArray(subject)) {
          return;
        }

        // bottom out recursion on re-visit
        if(_isObject(subject)) {
          if(recurse.visited[subject['@id']]) {
            return;
          }
          recurse.visited[subject['@id']] = true;
        }

        // each array element *or* object key
        for(var k in subject) {
          var obj = subject[k];
          var isid = (jsonld.getContextValue(ctx, k, '@type') === '@id');

          // can't replace a non-object or non-array unless it's an @id
          if(!_isArray(obj) && !_isObject(obj) && !isid) {
            continue;
          }

          if(_isString(obj) && isid) {
            subject[k] = obj = top[obj];
            recurse(obj);
          } else if(_isArray(obj)) {
            for(var i = 0; i < obj.length; ++i) {
              if(_isString(obj[i]) && isid) {
                obj[i] = top[obj[i]];
              } else if(_isObject(obj[i]) && '@id' in obj[i]) {
                obj[i] = top[obj[i]['@id']];
              }
              recurse(obj[i]);
            }
          } else if(_isObject(obj)) {
            var sid = obj['@id'];
            subject[k] = obj = top[sid];
            recurse(obj);
          }
        }
      };
      recurse.visited = {};
      recurse(top);

      compacted.of_type = {};
      for(var s in top) {
        if(!('@type' in top[s])) {
          continue;
        }
        var types = top[s]['@type'];
        if(!_isArray(types)) {
          types = [types];
        }
        for(var t = 0; t < types.length; ++t) {
          if(!(types[t] in compacted.of_type)) {
            compacted.of_type[types[t]] = [];
          }
          compacted.of_type[types[t]].push(top[s]);
        }
      }
      callback(null, compacted);
    });
  });
};

/**
 * Performs RDF dataset normalization on the given input. The input is JSON-LD
 * unless the 'inputFormat' option is used. The output is an RDF dataset
 * unless the 'format' option is used.
 *
 * @param input the input to normalize as JSON-LD or as a format specified by
 *          the 'inputFormat' option.
 * @param [options] the options to use:
 *          [algorithm] the normalization algorithm to use, `URDNA2015` or
 *            `URGNA2012` (default: `URGNA2012`).
 *          [base] the base IRI to use.
 *          [expandContext] a context to expand with.
 *          [inputFormat] the format if input is not JSON-LD:
 *            'application/nquads' for N-Quads.
 *          [format] the format if output is a string:
 *            'application/nquads' for N-Quads.
 *          [documentLoader(url, callback(err, remoteDoc))] the document loader.
 * @param callback(err, normalized) called once the operation completes.
 */
jsonld.normalize = function(input, options, callback) {
  if(arguments.length < 1) {
    return jsonld.nextTick(function() {
      callback(new TypeError('Could not normalize, too few arguments.'));
    });
  }

  // get arguments
  if(typeof options === 'function') {
    callback = options;
    options = {};
  }
  options = options || {};

  // set default options
  if(!('algorithm' in options)) {
    options.algorithm = 'URGNA2012';
  }
  if(!('base' in options)) {
    options.base = (typeof input === 'string') ? input : '';
  }
  if(!('documentLoader' in options)) {
    options.documentLoader = jsonld.loadDocument;
  }

  if('inputFormat' in options) {
    if(options.inputFormat !== 'application/nquads') {
      return callback(new JsonLdError(
        'Unknown normalization input format.',
        'jsonld.NormalizeError'));
    }
    var parsedInput = _parseNQuads(input);
    // do normalization
    new Processor().normalize(parsedInput, options, callback);
  } else {
    // convert to RDF dataset then do normalization
    var opts = _clone(options);
    delete opts.format;
    opts.produceGeneralizedRdf = false;
    jsonld.toRDF(input, opts, function(err, dataset) {
      if(err) {
        return callback(new JsonLdError(
          'Could not convert input to RDF dataset before normalization.',
          'jsonld.NormalizeError', {cause: err}));
      }
      // do normalization
      new Processor().normalize(dataset, options, callback);
    });
  }
};

/**
 * Converts an RDF dataset to JSON-LD.
 *
 * @param dataset a serialized string of RDF in a format specified by the
 *          format option or an RDF dataset to convert.
 * @param [options] the options to use:
 *          [format] the format if dataset param must first be parsed:
 *            'application/nquads' for N-Quads (default).
 *          [rdfParser] a custom RDF-parser to use to parse the dataset.
 *          [useRdfType] true to use rdf:type, false to use @type
 *            (default: false).
 *          [useNativeTypes] true to convert XSD types into native types
 *            (boolean, integer, double), false not to (default: false).
 * @param callback(err, output) called once the operation completes.
 */
jsonld.fromRDF = function(dataset, options, callback) {
  if(arguments.length < 1) {
    return jsonld.nextTick(function() {
      callback(new TypeError('Could not convert from RDF, too few arguments.'));
    });
  }

  // get arguments
  if(typeof options === 'function') {
    callback = options;
    options = {};
  }
  options = options || {};

  // set default options
  if(!('useRdfType' in options)) {
    options.useRdfType = false;
  }
  if(!('useNativeTypes' in options)) {
    options.useNativeTypes = false;
  }

  if(!('format' in options) && _isString(dataset)) {
    // set default format to nquads
    if(!('format' in options)) {
      options.format = 'application/nquads';
    }
  }

  jsonld.nextTick(function() {
    // handle special format
    var rdfParser;
    if(options.format) {
      // check supported formats
      rdfParser = options.rdfParser || _rdfParsers[options.format];
      if(!rdfParser) {
        return callback(new JsonLdError(
          'Unknown input format.',
          'jsonld.UnknownFormat', {format: options.format}));
      }
    } else {
      // no-op parser, assume dataset already parsed
      rdfParser = function() {
        return dataset;
      };
    }

    var callbackCalled = false;
    try {
      // rdf parser may be async or sync, always pass callback
      dataset = rdfParser(dataset, function(err, dataset) {
        callbackCalled = true;
        if(err) {
          return callback(err);
        }
        fromRDF(dataset, options, callback);
      });
    } catch(e) {
      if(!callbackCalled) {
        return callback(e);
      }
      throw e;
    }
    // handle synchronous or promise-based parser
    if(dataset) {
      // if dataset is actually a promise
      if('then' in dataset) {
        return dataset.then(function(dataset) {
          fromRDF(dataset, options, callback);
        }, callback);
      }
      // parser is synchronous
      fromRDF(dataset, options, callback);
    }

    function fromRDF(dataset, options, callback) {
      // convert from RDF
      new Processor().fromRDF(dataset, options, callback);
    }
  });
};

/**
 * Outputs the RDF dataset found in the given JSON-LD object.
 *
 * @param input the JSON-LD input.
 * @param [options] the options to use:
 *          [base] the base IRI to use.
 *          [expandContext] a context to expand with.
 *          [format] the format to use to output a string:
 *            'application/nquads' for N-Quads.
 *          [produceGeneralizedRdf] true to output generalized RDF, false
 *            to produce only standard RDF (default: false).
 *          [documentLoader(url, callback(err, remoteDoc))] the document loader.
 * @param callback(err, dataset) called once the operation completes.
 */
jsonld.toRDF = function(input, options, callback) {
  if(arguments.length < 1) {
    return jsonld.nextTick(function() {
      callback(new TypeError('Could not convert to RDF, too few arguments.'));
    });
  }

  // get arguments
  if(typeof options === 'function') {
    callback = options;
    options = {};
  }
  options = options || {};

  // set default options
  if(!('base' in options)) {
    options.base = (typeof input === 'string') ? input : '';
  }
  if(!('documentLoader' in options)) {
    options.documentLoader = jsonld.loadDocument;
  }

  // expand input
  jsonld.expand(input, options, function(err, expanded) {
    if(err) {
      return callback(new JsonLdError(
        'Could not expand input before serialization to RDF.',
        'jsonld.RdfError', {cause: err}));
    }

    var dataset;
    try {
      // output RDF dataset
      dataset = Processor.prototype.toRDF(expanded, options);
      if(options.format) {
        if(options.format === 'application/nquads') {
          return callback(null, _toNQuads(dataset));
        }
        throw new JsonLdError(
          'Unknown output format.',
          'jsonld.UnknownFormat', {format: options.format});
      }
    } catch(ex) {
      return callback(ex);
    }
    callback(null, dataset);
  });
};

/**
 * **Experimental**
 *
 * Recursively flattens the nodes in the given JSON-LD input into a map of
 * node ID => node.
 *
 * @param input the JSON-LD input.
 * @param [options] the options to use:
 *          [base] the base IRI to use.
 *          [expandContext] a context to expand with.
 *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.
 *          [namer] (deprecated)
 *          [documentLoader(url, callback(err, remoteDoc))] the document loader.
 * @param callback(err, nodeMap) called once the operation completes.
 */
jsonld.createNodeMap = function(input, options, callback) {
  if(arguments.length < 1) {
    return jsonld.nextTick(function() {
      callback(new TypeError('Could not create node map, too few arguments.'));
    });
  }

  // get arguments
  if(typeof options === 'function') {
    callback = options;
    options = {};
  }
  options = options || {};

  // set default options
  if(!('base' in options)) {
    options.base = (typeof input === 'string') ? input : '';
  }
  if(!('documentLoader' in options)) {
    options.documentLoader = jsonld.loadDocument;
  }

  // expand input
  jsonld.expand(input, options, function(err, _input) {
    if(err) {
      return callback(new JsonLdError(
        'Could not expand input before creating node map.',
        'jsonld.CreateNodeMapError', {cause: err}));
    }

    var nodeMap;
    try {
      nodeMap = new Processor().createNodeMap(_input, options);
    } catch(ex) {
      return callback(ex);
    }

    callback(null, nodeMap);
  });
};

/**
 * **Experimental**
 *
 * Merges two or more JSON-LD documents into a single flattened document.
 *
 * @param docs the JSON-LD documents to merge together.
 * @param ctx the context to use to compact the merged result, or null.
 * @param [options] the options to use:
 *          [base] the base IRI to use.
 *          [expandContext] a context to expand with.
 *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.
 *          [namer] (deprecated).
 *          [mergeNodes] true to merge properties for nodes with the same ID,
 *            false to ignore new properties for nodes with the same ID once
 *            the ID has been defined; note that this may not prevent merging
 *            new properties where a node is in the `object` position
 *            (default: true).
 *          [documentLoader(url, callback(err, remoteDoc))] the document loader.
 * @param callback(err, merged) called once the operation completes.
 */
jsonld.merge = function(docs, ctx, options, callback) {
  if(arguments.length < 1) {
    return jsonld.nextTick(function() {
      callback(new TypeError('Could not merge, too few arguments.'));
    });
  }
  if(!_isArray(docs)) {
    return jsonld.nextTick(function() {
      callback(new TypeError('Could not merge, "docs" must be an array.'));
    });
  }

  // get arguments
  if(typeof options === 'function') {
    callback = options;
    options = {};
  } else if(typeof ctx === 'function') {
    callback = ctx;
    ctx = null;
    options = {};
  }
  options = options || {};

  // expand all documents
  var expanded = [];
  var error = null;
  var count = docs.length;
  for(var i = 0; i < docs.length; ++i) {
    var opts = {};
    for(var key in options) {
      opts[key] = options[key];
    }
    jsonld.expand(docs[i], opts, expandComplete);
  }

  function expandComplete(err, _input) {
    if(error) {
      return;
    }
    if(err) {
      error = err;
      return callback(new JsonLdError(
        'Could not expand input before flattening.',
        'jsonld.FlattenError', {cause: err}));
    }
    expanded.push(_input);
    if(--count === 0) {
      merge(expanded);
    }
  }

  function merge(expanded) {
    var mergeNodes = true;
    if('mergeNodes' in options) {
      mergeNodes = options.mergeNodes;
    }

    var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');
    var graphs = {'@default': {}};

    var defaultGraph;
    try {
      for(var i = 0; i < expanded.length; ++i) {
        // uniquely relabel blank nodes
        var doc = expanded[i];
        doc = jsonld.relabelBlankNodes(doc, {
          issuer: new IdentifierIssuer('_:b' + i + '-')
        });

        // add nodes to the shared node map graphs if merging nodes, to a
        // separate graph set if not
        var _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};
        _createNodeMap(doc, _graphs, '@default', issuer);

        if(_graphs !== graphs) {
          // merge document graphs but don't merge existing nodes
          for(var graphName in _graphs) {
            var _nodeMap = _graphs[graphName];
            if(!(graphName in graphs)) {
              graphs[graphName] = _nodeMap;
              continue;
            }
            var nodeMap = graphs[graphName];
            for(var key in _nodeMap) {
              if(!(key in nodeMap)) {
                nodeMap[key] = _nodeMap[key];
              }
            }
          }
        }
      }

      // add all non-default graphs to default graph
      defaultGraph = _mergeNodeMaps(graphs);
    } catch(ex) {
      return callback(ex);
    }

    // produce flattened output
    var flattened = [];
    var keys = Object.keys(defaultGraph).sort();
    for(var ki = 0; ki < keys.length; ++ki) {
      var node = defaultGraph[keys[ki]];
      // only add full subjects to top-level
      if(!_isSubjectReference(node)) {
        flattened.push(node);
      }
    }

    if(ctx === null) {
      return callback(null, flattened);
    }

    // compact result (force @graph option to true, skip expansion)
    options.graph = true;
    options.skipExpansion = true;
    jsonld.compact(flattened, ctx, options, function(err, compacted) {
      if(err) {
        return callback(new JsonLdError(
          'Could not compact merged output.',
          'jsonld.MergeError', {cause: err}));
      }
      callback(null, compacted);
    });
  }
};

/**
 * Relabels all blank nodes in the given JSON-LD input.
 *
 * @param input the JSON-LD input.
 * @param [options] the options to use:
 *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.
 *          [namer] (deprecated).
 */
jsonld.relabelBlankNodes = function(input, options) {
  options = options || {};
  var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');
  return _labelBlankNodes(issuer, input);
};

/**
 * Prepends a base IRI to the given relative IRI.
 *
 * @param base the base IRI.
 * @param iri the relative IRI.
 *
 * @return the absolute IRI.
 */
jsonld.prependBase = function(base, iri) {
  return _prependBase(base, iri);
};

/**
 * The default document loader for external documents. If the environment
 * is node.js, a callback-continuation-style document loader is used; otherwise,
 * a promises-style document loader is used.
 *
 * @param url the URL to load.
 * @param callback(err, remoteDoc) called once the operation completes,
 *          if using a non-promises API.
 *
 * @return a promise, if using a promises API.
 */
jsonld.documentLoader = function(url, callback) {
  var err = new JsonLdError(
    'Could not retrieve a JSON-LD document from the URL. URL ' +
    'dereferencing not implemented.', 'jsonld.LoadDocumentError',
    {code: 'loading document failed'});
  if(_nodejs) {
    return callback(err, {contextUrl: null, documentUrl: url, document: null});
  }
  return jsonld.promisify(function(callback) {
    callback(err);
  });
};

/**
 * Deprecated default document loader. Use or override jsonld.documentLoader
 * instead.
 */
jsonld.loadDocument = function(url, callback) {
  var promise = jsonld.documentLoader(url, callback);
  if(promise && 'then' in promise) {
    promise.then(callback.bind(null, null), callback);
  }
};

/* Promises API */

/**
 * Creates a new promises API object.
 *
 * @param [options] the options to use:
 *          [api] an object to attach the API to.
 *          [version] 'json-ld-1.0' to output a standard JSON-LD 1.0 promises
 *            API, 'jsonld.js' to output the same with augmented proprietary
 *            methods (default: 'jsonld.js')
 *
 * @return the promises API object.
 */
jsonld.promises = function(options) {
  options = options || {};
  var slice = Array.prototype.slice;
  var promisify = jsonld.promisify;

  // handle 'api' option as version, set defaults
  var api = options.api || {};
  var version = options.version || 'jsonld.js';
  if(typeof options.api === 'string') {
    if(!options.version) {
      version = options.api;
    }
    api = {};
  }

  // The Web IDL test harness will check the number of parameters defined in
  // the functions below. The number of parameters must exactly match the
  // required (non-optional) parameters of the JsonLdProcessor interface as
  // defined here:
  // https://www.w3.org/TR/json-ld-api/#the-jsonldprocessor-interface

  api.expand = function(input) {
    if(arguments.length < 1) {
      throw new TypeError('Could not expand, too few arguments.');
    }
    return promisify.apply(null, [jsonld.expand].concat(slice.call(arguments)));
  };
  api.compact = function(input, ctx) {
    if(arguments.length < 2) {
      throw new TypeError('Could not compact, too few arguments.');
    }
    var compact = function(input, ctx, options, callback) {
      if(typeof options === 'function') {
        callback = options;
        options = {};
      }
      options = options || {};
      // ensure only one value is returned in callback
      jsonld.compact(input, ctx, options, function(err, compacted) {
        callback(err, compacted);
      });
    };
    return promisify.apply(null, [compact].concat(slice.call(arguments)));
  };
  api.flatten = function(input) {
    if(arguments.length < 1) {
      throw new TypeError('Could not flatten, too few arguments.');
    }
    return promisify.apply(
      null, [jsonld.flatten].concat(slice.call(arguments)));
  };
  api.frame = function(input, frame) {
    if(arguments.length < 2) {
      throw new TypeError('Could not frame, too few arguments.');
    }
    return promisify.apply(null, [jsonld.frame].concat(slice.call(arguments)));
  };
  api.fromRDF = function(dataset) {
    if(arguments.length < 1) {
      throw new TypeError('Could not convert from RDF, too few arguments.');
    }
    return promisify.apply(
      null, [jsonld.fromRDF].concat(slice.call(arguments)));
  };
  api.toRDF = function(input) {
    if(arguments.length < 1) {
      throw new TypeError('Could not convert to RDF, too few arguments.');
    }
    return promisify.apply(null, [jsonld.toRDF].concat(slice.call(arguments)));
  };
  api.normalize = function(input) {
    if(arguments.length < 1) {
      throw new TypeError('Could not normalize, too few arguments.');
    }
    return promisify.apply(
      null, [jsonld.normalize].concat(slice.call(arguments)));
  };

  if(version === 'jsonld.js') {
    api.link = function(input, ctx) {
      if(arguments.length < 2) {
        throw new TypeError('Could not link, too few arguments.');
      }
      return promisify.apply(
        null, [jsonld.link].concat(slice.call(arguments)));
    };
    api.objectify = function(input) {
      return promisify.apply(
        null, [jsonld.objectify].concat(slice.call(arguments)));
    };
    api.createNodeMap = function(input) {
      return promisify.apply(
        null, [jsonld.createNodeMap].concat(slice.call(arguments)));
    };
    api.merge = function(input) {
      return promisify.apply(
        null, [jsonld.merge].concat(slice.call(arguments)));
    };
  }

  try {
    jsonld.Promise = global.Promise || require('es6-promise').Promise;
  } catch(e) {
    var f = function() {
      throw new Error('Unable to find a Promise implementation.');
    };
    for(var method in api) {
      api[method] = f;
    }
  }

  return api;
};

/**
 * Converts a node.js async op into a promise w/boxed resolved value(s).
 *
 * @param op the operation to convert.
 *
 * @return the promise.
 */
jsonld.promisify = function(op) {
  if(!jsonld.Promise) {
    try {
      jsonld.Promise = global.Promise || require('es6-promise').Promise;
    } catch(e) {
      throw new Error('Unable to find a Promise implementation.');
    }
  }
  var args = Array.prototype.slice.call(arguments, 1);
  return new jsonld.Promise(function(resolve, reject) {
    op.apply(null, args.concat(function(err, value) {
      if(!err) {
        resolve(value);
      } else {
        reject(err);
      }
    }));
  });
};

// extend jsonld.promises w/jsonld.js methods
jsonld.promises({api: jsonld.promises});

/* WebIDL API */

function JsonLdProcessor() {}
JsonLdProcessor.prototype = jsonld.promises({version: 'json-ld-1.0'});
JsonLdProcessor.prototype.toString = function() {
  if(this instanceof JsonLdProcessor) {
    return '[object JsonLdProcessor]';
  }
  return '[object JsonLdProcessorPrototype]';
};
jsonld.JsonLdProcessor = JsonLdProcessor;

// IE8 has Object.defineProperty but it only
// works on DOM nodes -- so feature detection
// requires try/catch :-(
var canDefineProperty = !!Object.defineProperty;
if(canDefineProperty) {
  try {
    Object.defineProperty({}, 'x', {});
  } catch(e) {
    canDefineProperty = false;
  }
}

if(canDefineProperty) {
  Object.defineProperty(JsonLdProcessor, 'prototype', {
    writable: false,
    enumerable: false
  });
  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {
    writable: true,
    enumerable: false,
    configurable: true,
    value: JsonLdProcessor
  });
}

// setup browser global JsonLdProcessor
if(_browser && typeof global.JsonLdProcessor === 'undefined') {
  if(canDefineProperty) {
    Object.defineProperty(global, 'JsonLdProcessor', {
      writable: true,
      enumerable: false,
      configurable: true,
      value: JsonLdProcessor
    });
  } else {
    global.JsonLdProcessor = JsonLdProcessor;
  }
}

/* Utility API */

// define setImmediate and nextTick
//// nextTick implementation with browser-compatible fallback ////
// from https://github.com/caolan/async/blob/master/lib/async.js

// capture the global reference to guard against fakeTimer mocks
var _setImmediate = typeof setImmediate === 'function' && setImmediate;

var _delay = _setImmediate ? function(fn) {
  // not a direct alias (for IE10 compatibility)
  _setImmediate(fn);
} : function(fn) {
  setTimeout(fn, 0);
};

if(typeof process === 'object' && typeof process.nextTick === 'function') {
  jsonld.nextTick = process.nextTick;
} else {
  jsonld.nextTick = _delay;
}
jsonld.setImmediate = _setImmediate ? _delay : jsonld.nextTick;

/**
 * Parses a link header. The results will be key'd by the value of "rel".
 *
 * Link: <http://json-ld.org/contexts/person.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
 *
 * Parses as: {
 *   'http://www.w3.org/ns/json-ld#context': {
 *     target: http://json-ld.org/contexts/person.jsonld,
 *     type: 'application/ld+json'
 *   }
 * }
 *
 * If there is more than one "rel" with the same IRI, then entries in the
 * resulting map for that "rel" will be arrays.
 *
 * @param header the link header to parse.
 */
jsonld.parseLinkHeader = function(header) {
  var rval = {};
  // split on unbracketed/unquoted commas
  var entries = header.match(/(?:<[^>]*?>|"[^"]*?"|[^,])+/g);
  var rLinkHeader = /\s*<([^>]*?)>\s*(?:;\s*(.*))?/;
  for(var i = 0; i < entries.length; ++i) {
    var match = entries[i].match(rLinkHeader);
    if(!match) {
      continue;
    }
    var result = {target: match[1]};
    var params = match[2];
    var rParams = /(.*?)=(?:(?:"([^"]*?)")|([^"]*?))\s*(?:(?:;\s*)|$)/g;
    while(match = rParams.exec(params)) {
      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];
    }
    var rel = result['rel'] || '';
    if(_isArray(rval[rel])) {
      rval[rel].push(result);
    } else if(rel in rval) {
      rval[rel] = [rval[rel], result];
    } else {
      rval[rel] = result;
    }
  }
  return rval;
};

/**
 * Creates a simple queue for requesting documents.
 */
jsonld.RequestQueue = function() {
  this._requests = {};
};
jsonld.RequestQueue.prototype.wrapLoader = function(loader) {
  this._loader = loader;
  this._usePromise = (loader.length === 1);
  return this.add.bind(this);
};
jsonld.RequestQueue.prototype.add = function(url, callback) {
  var self = this;

  // callback must be given if not using promises
  if(!callback && !self._usePromise) {
    throw new Error('callback must be specified.');
  }

  // Promise-based API
  if(self._usePromise) {
    return new jsonld.Promise(function(resolve, reject) {
      var load = self._requests[url];
      if(!load) {
        // load URL then remove from queue
        load = self._requests[url] = self._loader(url)
          .then(function(remoteDoc) {
            delete self._requests[url];
            return remoteDoc;
          }).catch(function(err) {
            delete self._requests[url];
            throw err;
          });
      }
      // resolve/reject promise once URL has been loaded
      load.then(function(remoteDoc) {
        resolve(remoteDoc);
      }).catch(function(err) {
        reject(err);
      });
    });
  }

  // callback-based API
  if(url in self._requests) {
    self._requests[url].push(callback);
  } else {
    self._requests[url] = [callback];
    self._loader(url, function(err, remoteDoc) {
      var callbacks = self._requests[url];
      delete self._requests[url];
      for(var i = 0; i < callbacks.length; ++i) {
        callbacks[i](err, remoteDoc);
      }
    });
  }
};

/**
 * Creates a simple document cache that retains documents for a short
 * period of time.
 *
 * FIXME: Implement simple HTTP caching instead.
 *
 * @param size the maximum size of the cache.
 */
jsonld.DocumentCache = function(size) {
  this.order = [];
  this.cache = {};
  this.size = size || 50;
  this.expires = 30 * 1000;
};
jsonld.DocumentCache.prototype.get = function(url) {
  if(url in this.cache) {
    var entry = this.cache[url];
    if(entry.expires >= +new Date()) {
      return entry.ctx;
    }
    delete this.cache[url];
    this.order.splice(this.order.indexOf(url), 1);
  }
  return null;
};
jsonld.DocumentCache.prototype.set = function(url, ctx) {
  if(this.order.length === this.size) {
    delete this.cache[this.order.shift()];
  }
  this.order.push(url);
  this.cache[url] = {ctx: ctx, expires: (+new Date() + this.expires)};
};

/**
 * Creates an active context cache.
 *
 * @param size the maximum size of the cache.
 */
jsonld.ActiveContextCache = function(size) {
  this.order = [];
  this.cache = {};
  this.size = size || 100;
};
jsonld.ActiveContextCache.prototype.get = function(activeCtx, localCtx) {
  var key1 = JSON.stringify(activeCtx);
  var key2 = JSON.stringify(localCtx);
  var level1 = this.cache[key1];
  if(level1 && key2 in level1) {
    return level1[key2];
  }
  return null;
};
jsonld.ActiveContextCache.prototype.set = function(
  activeCtx, localCtx, result) {
  if(this.order.length === this.size) {
    var entry = this.order.shift();
    delete this.cache[entry.activeCtx][entry.localCtx];
  }
  var key1 = JSON.stringify(activeCtx);
  var key2 = JSON.stringify(localCtx);
  this.order.push({activeCtx: key1, localCtx: key2});
  if(!(key1 in this.cache)) {
    this.cache[key1] = {};
  }
  this.cache[key1][key2] = _clone(result);
};

/**
 * Default JSON-LD cache.
 */
jsonld.cache = {
  activeCtx: new jsonld.ActiveContextCache()
};

/**
 * Document loaders.
 */
jsonld.documentLoaders = {};

/**
 * Creates a built-in jquery document loader.
 *
 * @param $ the jquery instance to use.
 * @param options the options to use:
 *          secure: require all URLs to use HTTPS.
 *          usePromise: true to use a promises API, false for a
 *            callback-continuation-style API; defaults to true if Promise
 *            is globally defined, false if not.
 *
 * @return the jquery document loader.
 */
jsonld.documentLoaders.jquery = function($, options) {
  options = options || {};
  var queue = new jsonld.RequestQueue();

  // use option or, by default, use Promise when its defined
  var usePromise = ('usePromise' in options ?
    options.usePromise : (typeof Promise !== 'undefined'));
  if(usePromise) {
    return queue.wrapLoader(function(url) {
      return jsonld.promisify(loader, url);
    });
  }
  return queue.wrapLoader(loader);

  function loader(url, callback) {
    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {
      return callback(new JsonLdError(
        'URL could not be dereferenced; only "http" and "https" URLs are ' +
        'supported.',
        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),
        {contextUrl: null, documentUrl: url, document: null});
    }
    if(options.secure && url.indexOf('https') !== 0) {
      return callback(new JsonLdError(
        'URL could not be dereferenced; secure mode is enabled and ' +
        'the URL\'s scheme is not "https".',
        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),
        {contextUrl: null, documentUrl: url, document: null});
    }
    $.ajax({
      url: url,
      accepts: {
        json: 'application/ld+json, application/json'
      },
      // ensure Accept header is very specific for JSON-LD/JSON
      headers: {
        'Accept': 'application/ld+json, application/json'
      },
      dataType: 'json',
      crossDomain: true,
      success: function(data, textStatus, jqXHR) {
        var doc = {contextUrl: null, documentUrl: url, document: data};

        // handle Link Header
        var contentType = jqXHR.getResponseHeader('Content-Type');
        var linkHeader = jqXHR.getResponseHeader('Link');
        if(linkHeader && contentType !== 'application/ld+json') {
          // only 1 related link header permitted
          linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];
          if(_isArray(linkHeader)) {
            return callback(new JsonLdError(
              'URL could not be dereferenced, it has more than one ' +
              'associated HTTP Link Header.',
              'jsonld.InvalidUrl',
              {code: 'multiple context link headers', url: url}), doc);
          }
          if(linkHeader) {
            doc.contextUrl = linkHeader.target;
          }
        }

        callback(null, doc);
      },
      error: function(jqXHR, textStatus, err) {
        callback(new JsonLdError(
          'URL could not be dereferenced, an error occurred.',
          'jsonld.LoadDocumentError',
          {code: 'loading document failed', url: url, cause: err}),
          {contextUrl: null, documentUrl: url, document: null});
      }
    });
  }
};

/**
 * Creates a built-in node document loader.
 *
 * @param options the options to use:
 *          secure: require all URLs to use HTTPS.
 *          strictSSL: true to require SSL certificates to be valid,
 *            false not to (default: true).
 *          maxRedirects: the maximum number of redirects to permit, none by
 *            default.
 *          request: the object which will make the request, default is
 *            provided by `https://www.npmjs.com/package/request`.
 *          headers: an array of headers which will be passed as request
 *            headers for the requested document. Accept is not allowed.
 *          usePromise: true to use a promises API, false for a
 *            callback-continuation-style API; false by default.
 *
 * @return the node document loader.
 */
jsonld.documentLoaders.node = function(options) {
  options = options || {};
  var strictSSL = ('strictSSL' in options) ? options.strictSSL : true;
  var maxRedirects = ('maxRedirects' in options) ? options.maxRedirects : -1;
  var request = ('request' in options) ? options.request : require('request');
  var acceptHeader = 'application/ld+json, application/json';
  var http = require('http');
  // TODO: disable cache until HTTP caching implemented
  //var cache = new jsonld.DocumentCache();

  var queue = new jsonld.RequestQueue();
  if(options.usePromise) {
    return queue.wrapLoader(function(url) {
      return jsonld.promisify(loadDocument, url, []);
    });
  }
  var headers = options.headers || {};
  if('Accept' in headers || 'accept' in headers) {
    throw new RangeError(
      'Accept header may not be specified as an option; only "' +
      acceptHeader + '" is supported.');
  }
  return queue.wrapLoader(function(url, callback) {
    loadDocument(url, [], callback);
  });

  function loadDocument(url, redirects, callback) {
    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {
      return callback(new JsonLdError(
        'URL could not be dereferenced; only "http" and "https" URLs are ' +
        'supported.',
        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),
        {contextUrl: null, documentUrl: url, document: null});
    }
    if(options.secure && url.indexOf('https') !== 0) {
      return callback(new JsonLdError(
        'URL could not be dereferenced; secure mode is enabled and ' +
        'the URL\'s scheme is not "https".',
        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),
        {contextUrl: null, documentUrl: url, document: null});
    }
    // TODO: disable cache until HTTP caching implemented
    var doc = null;//cache.get(url);
    if(doc !== null) {
      return callback(null, doc);
    }
    var headers = {'Accept': acceptHeader};
    for(var k in options.headers) { headers[k] = options.headers[k]; }
    request({
      url: url,
      headers: headers,
      strictSSL: strictSSL,
      followRedirect: false
    }, handleResponse);

    function handleResponse(err, res, body) {
      doc = {contextUrl: null, documentUrl: url, document: body || null};

      // handle error
      if(err) {
        return callback(new JsonLdError(
          'URL could not be dereferenced, an error occurred.',
          'jsonld.LoadDocumentError',
          {code: 'loading document failed', url: url, cause: err}), doc);
      }
      var statusText = http.STATUS_CODES[res.statusCode];
      if(res.statusCode >= 400) {
        return callback(new JsonLdError(
          'URL could not be dereferenced: ' + statusText,
          'jsonld.InvalidUrl', {
            code: 'loading document failed',
            url: url,
            httpStatusCode: res.statusCode
          }), doc);
      }

      // handle Link Header
      if(res.headers.link &&
        res.headers['content-type'] !== 'application/ld+json') {
        // only 1 related link header permitted
        var linkHeader = jsonld.parseLinkHeader(
          res.headers.link)[LINK_HEADER_REL];
        if(_isArray(linkHeader)) {
          return callback(new JsonLdError(
            'URL could not be dereferenced, it has more than one associated ' +
            'HTTP Link Header.',
            'jsonld.InvalidUrl',
            {code: 'multiple context link headers', url: url}), doc);
        }
        if(linkHeader) {
          doc.contextUrl = linkHeader.target;
        }
      }

      // handle redirect
      if(res.statusCode >= 300 && res.statusCode < 400 &&
        res.headers.location) {
        if(redirects.length === maxRedirects) {
          return callback(new JsonLdError(
            'URL could not be dereferenced; there were too many redirects.',
            'jsonld.TooManyRedirects', {
              code: 'loading document failed',
              url: url,
              httpStatusCode: res.statusCode,
              redirects: redirects
            }), doc);
        }
        if(redirects.indexOf(url) !== -1) {
          return callback(new JsonLdError(
            'URL could not be dereferenced; infinite redirection was detected.',
            'jsonld.InfiniteRedirectDetected', {
              code: 'recursive context inclusion',
              url: url,
              httpStatusCode: res.statusCode,
              redirects: redirects
            }), doc);
        }
        redirects.push(url);
        return loadDocument(res.headers.location, redirects, callback);
      }
      // cache for each redirected URL
      redirects.push(url);
      // TODO: disable cache until HTTP caching implemented
      /*for(var i = 0; i < redirects.length; ++i) {
        cache.set(
          redirects[i],
          {contextUrl: null, documentUrl: redirects[i], document: body});
      }*/
      callback(err, doc);
    }
  }
};

/**
 * Creates a built-in XMLHttpRequest document loader.
 *
 * @param options the options to use:
 *          secure: require all URLs to use HTTPS.
 *          usePromise: true to use a promises API, false for a
 *            callback-continuation-style API; defaults to true if Promise
 *            is globally defined, false if not.
 *          [xhr]: the XMLHttpRequest API to use.
 *
 * @return the XMLHttpRequest document loader.
 */
jsonld.documentLoaders.xhr = function(options) {
  options = options || {};
  var rlink = /(^|(\r\n))link:/i;
  var queue = new jsonld.RequestQueue();

  // use option or, by default, use Promise when its defined
  var usePromise = ('usePromise' in options ?
    options.usePromise : (typeof Promise !== 'undefined'));
  if(usePromise) {
    return queue.wrapLoader(function(url) {
      return jsonld.promisify(loader, url);
    });
  }
  return queue.wrapLoader(loader);

  function loader(url, callback) {
    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {
      return callback(new JsonLdError(
        'URL could not be dereferenced; only "http" and "https" URLs are ' +
        'supported.',
        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),
        {contextUrl: null, documentUrl: url, document: null});
    }
    if(options.secure && url.indexOf('https') !== 0) {
      return callback(new JsonLdError(
        'URL could not be dereferenced; secure mode is enabled and ' +
        'the URL\'s scheme is not "https".',
        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),
        {contextUrl: null, documentUrl: url, document: null});
    }
    var xhr = options.xhr || XMLHttpRequest;
    var req = new xhr();
    req.onload = function() {
      if(req.status >= 400) {
        return callback(new JsonLdError(
          'URL could not be dereferenced: ' + req.statusText,
          'jsonld.LoadDocumentError', {
            code: 'loading document failed',
            url: url,
            httpStatusCode: req.status
          }), {contextUrl: null, documentUrl: url, document: null});
      }

      var doc = {contextUrl: null, documentUrl: url, document: req.response};

      // handle Link Header (avoid unsafe header warning by existence testing)
      var contentType = req.getResponseHeader('Content-Type');
      var linkHeader;
      if(rlink.test(req.getAllResponseHeaders())) {
        linkHeader = req.getResponseHeader('Link');
      }
      if(linkHeader && contentType !== 'application/ld+json') {
        // only 1 related link header permitted
        linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];
        if(_isArray(linkHeader)) {
          return callback(new JsonLdError(
            'URL could not be dereferenced, it has more than one ' +
            'associated HTTP Link Header.',
            'jsonld.InvalidUrl',
            {code: 'multiple context link headers', url: url}), doc);
        }
        if(linkHeader) {
          doc.contextUrl = linkHeader.target;
        }
      }

      callback(null, doc);
    };
    req.onerror = function() {
      callback(new JsonLdError(
        'URL could not be dereferenced, an error occurred.',
        'jsonld.LoadDocumentError',
        {code: 'loading document failed', url: url}),
        {contextUrl: null, documentUrl: url, document: null});
    };
    req.open('GET', url, true);
    req.setRequestHeader('Accept', 'application/ld+json, application/json');
    req.send();
  }
};

/**
 * Assigns the default document loader for external document URLs to a built-in
 * default. Supported types currently include: 'jquery' and 'node'.
 *
 * To use the jquery document loader, the first parameter must be a reference
 * to the main jquery object.
 *
 * @param type the type to set.
 * @param [params] the parameters required to use the document loader.
 */
jsonld.useDocumentLoader = function(type) {
  if(!(type in jsonld.documentLoaders)) {
    throw new JsonLdError(
      'Unknown document loader type: "' + type + '"',
      'jsonld.UnknownDocumentLoader',
      {type: type});
  }

  // set document loader
  jsonld.documentLoader = jsonld.documentLoaders[type].apply(
    jsonld, Array.prototype.slice.call(arguments, 1));
};

/**
 * Processes a local context, resolving any URLs as necessary, and returns a
 * new active context in its callback.
 *
 * @param activeCtx the current active context.
 * @param localCtx the local context to process.
 * @param [options] the options to use:
 *          [documentLoader(url, callback(err, remoteDoc))] the document loader.
 * @param callback(err, ctx) called once the operation completes.
 */
jsonld.processContext = function(activeCtx, localCtx) {
  // get arguments
  var options = {};
  var callbackArg = 2;
  if(arguments.length > 3) {
    options = arguments[2] || {};
    callbackArg += 1;
  }
  var callback = arguments[callbackArg];

  // set default options
  if(!('base' in options)) {
    options.base = '';
  }
  if(!('documentLoader' in options)) {
    options.documentLoader = jsonld.loadDocument;
  }

  // return initial context early for null context
  if(localCtx === null) {
    return callback(null, _getInitialContext(options));
  }

  // retrieve URLs in localCtx
  localCtx = _clone(localCtx);
  if(!(_isObject(localCtx) && '@context' in localCtx)) {
    localCtx = {'@context': localCtx};
  }
  _retrieveContextUrls(localCtx, options, function(err, ctx) {
    if(err) {
      return callback(err);
    }
    try {
      // process context
      ctx = new Processor().processContext(activeCtx, ctx, options);
    } catch(ex) {
      return callback(ex);
    }
    callback(null, ctx);
  });
};

/**
 * Returns true if the given subject has the given property.
 *
 * @param subject the subject to check.
 * @param property the property to look for.
 *
 * @return true if the subject has the given property, false if not.
 */
jsonld.hasProperty = function(subject, property) {
  var rval = false;
  if(property in subject) {
    var value = subject[property];
    rval = (!_isArray(value) || value.length > 0);
  }
  return rval;
};

/**
 * Determines if the given value is a property of the given subject.
 *
 * @param subject the subject to check.
 * @param property the property to check.
 * @param value the value to check.
 *
 * @return true if the value exists, false if not.
 */
jsonld.hasValue = function(subject, property, value) {
  var rval = false;
  if(jsonld.hasProperty(subject, property)) {
    var val = subject[property];
    var isList = _isList(val);
    if(_isArray(val) || isList) {
      if(isList) {
        val = val['@list'];
      }
      for(var i = 0; i < val.length; ++i) {
        if(jsonld.compareValues(value, val[i])) {
          rval = true;
          break;
        }
      }
    } else if(!_isArray(value)) {
      // avoid matching the set of values with an array value parameter
      rval = jsonld.compareValues(value, val);
    }
  }
  return rval;
};

/**
 * Adds a value to a subject. If the value is an array, all values in the
 * array will be added.
 *
 * @param subject the subject to add the value to.
 * @param property the property that relates the value to the subject.
 * @param value the value to add.
 * @param [options] the options to use:
 *        [propertyIsArray] true if the property is always an array, false
 *          if not (default: false).
 *        [allowDuplicate] true to allow duplicates, false not to (uses a
 *          simple shallow comparison of subject ID or value) (default: true).
 */
jsonld.addValue = function(subject, property, value, options) {
  options = options || {};
  if(!('propertyIsArray' in options)) {
    options.propertyIsArray = false;
  }
  if(!('allowDuplicate' in options)) {
    options.allowDuplicate = true;
  }

  if(_isArray(value)) {
    if(value.length === 0 && options.propertyIsArray &&
      !(property in subject)) {
      subject[property] = [];
    }
    for(var i = 0; i < value.length; ++i) {
      jsonld.addValue(subject, property, value[i], options);
    }
  } else if(property in subject) {
    // check if subject already has value if duplicates not allowed
    var hasValue = (!options.allowDuplicate &&
      jsonld.hasValue(subject, property, value));

    // make property an array if value not present or always an array
    if(!_isArray(subject[property]) &&
      (!hasValue || options.propertyIsArray)) {
      subject[property] = [subject[property]];
    }

    // add new value
    if(!hasValue) {
      subject[property].push(value);
    }
  } else {
    // add new value as set or single value
    subject[property] = options.propertyIsArray ? [value] : value;
  }
};

/**
 * Gets all of the values for a subject's property as an array.
 *
 * @param subject the subject.
 * @param property the property.
 *
 * @return all of the values for a subject's property as an array.
 */
jsonld.getValues = function(subject, property) {
  var rval = subject[property] || [];
  if(!_isArray(rval)) {
    rval = [rval];
  }
  return rval;
};

/**
 * Removes a property from a subject.
 *
 * @param subject the subject.
 * @param property the property.
 */
jsonld.removeProperty = function(subject, property) {
  delete subject[property];
};

/**
 * Removes a value from a subject.
 *
 * @param subject the subject.
 * @param property the property that relates the value to the subject.
 * @param value the value to remove.
 * @param [options] the options to use:
 *          [propertyIsArray] true if the property is always an array, false
 *            if not (default: false).
 */
jsonld.removeValue = function(subject, property, value, options) {
  options = options || {};
  if(!('propertyIsArray' in options)) {
    options.propertyIsArray = false;
  }

  // filter out value
  var values = jsonld.getValues(subject, property).filter(function(e) {
    return !jsonld.compareValues(e, value);
  });

  if(values.length === 0) {
    jsonld.removeProperty(subject, property);
  } else if(values.length === 1 && !options.propertyIsArray) {
    subject[property] = values[0];
  } else {
    subject[property] = values;
  }
};

/**
 * Compares two JSON-LD values for equality. Two JSON-LD values will be
 * considered equal if:
 *
 * 1. They are both primitives of the same type and value.
 * 2. They are both @values with the same @value, @type, @language,
 *   and @index, OR
 * 3. They both have @ids they are the same.
 *
 * @param v1 the first value.
 * @param v2 the second value.
 *
 * @return true if v1 and v2 are considered equal, false if not.
 */
jsonld.compareValues = function(v1, v2) {
  // 1. equal primitives
  if(v1 === v2) {
    return true;
  }

  // 2. equal @values
  if(_isValue(v1) && _isValue(v2) &&
    v1['@value'] === v2['@value'] &&
    v1['@type'] === v2['@type'] &&
    v1['@language'] === v2['@language'] &&
    v1['@index'] === v2['@index']) {
    return true;
  }

  // 3. equal @ids
  if(_isObject(v1) && ('@id' in v1) && _isObject(v2) && ('@id' in v2)) {
    return v1['@id'] === v2['@id'];
  }

  return false;
};

/**
 * Gets the value for the given active context key and type, null if none is
 * set.
 *
 * @param ctx the active context.
 * @param key the context key.
 * @param [type] the type of value to get (eg: '@id', '@type'), if not
 *          specified gets the entire entry for a key, null if not found.
 *
 * @return the value.
 */
jsonld.getContextValue = function(ctx, key, type) {
  var rval = null;

  // return null for invalid key
  if(key === null) {
    return rval;
  }

  // get default language
  if(type === '@language' && (type in ctx)) {
    rval = ctx[type];
  }

  // get specific entry information
  if(ctx.mappings[key]) {
    var entry = ctx.mappings[key];

    if(_isUndefined(type)) {
      // return whole entry
      rval = entry;
    } else if(type in entry) {
      // return entry value for type
      rval = entry[type];
    }
  }

  return rval;
};

/** Registered RDF dataset parsers hashed by content-type. */
var _rdfParsers = {};

/**
 * Registers an RDF dataset parser by content-type, for use with
 * jsonld.fromRDF. An RDF dataset parser will always be given two parameters,
 * a string of input and a callback. An RDF dataset parser can be synchronous
 * or asynchronous.
 *
 * If the parser function returns undefined or null then it will be assumed to
 * be asynchronous w/a continuation-passing style and the callback parameter
 * given to the parser MUST be invoked.
 *
 * If it returns a Promise, then it will be assumed to be asynchronous, but the
 * callback parameter MUST NOT be invoked. It should instead be ignored.
 *
 * If it returns an RDF dataset, it will be assumed to be synchronous and the
 * callback parameter MUST NOT be invoked. It should instead be ignored.
 *
 * @param contentType the content-type for the parser.
 * @param parser(input, callback(err, dataset)) the parser function (takes a
 *          string as a parameter and either returns null/undefined and uses
 *          the given callback, returns a Promise, or returns an RDF dataset).
 */
jsonld.registerRDFParser = function(contentType, parser) {
  _rdfParsers[contentType] = parser;
};

/**
 * Unregisters an RDF dataset parser by content-type.
 *
 * @param contentType the content-type for the parser.
 */
jsonld.unregisterRDFParser = function(contentType) {
  delete _rdfParsers[contentType];
};

if(_nodejs) {
  // needed for serialization of XML literals
  if(typeof XMLSerializer === 'undefined') {
    var XMLSerializer = null;
  }
  if(typeof Node === 'undefined') {
    var Node = {
      ELEMENT_NODE: 1,
      ATTRIBUTE_NODE: 2,
      TEXT_NODE: 3,
      CDATA_SECTION_NODE: 4,
      ENTITY_REFERENCE_NODE: 5,
      ENTITY_NODE: 6,
      PROCESSING_INSTRUCTION_NODE: 7,
      COMMENT_NODE: 8,
      DOCUMENT_NODE: 9,
      DOCUMENT_TYPE_NODE: 10,
      DOCUMENT_FRAGMENT_NODE: 11,
      NOTATION_NODE:12
    };
  }
}

// constants
var XSD_BOOLEAN = 'http://www.w3.org/2001/XMLSchema#boolean';
var XSD_DOUBLE = 'http://www.w3.org/2001/XMLSchema#double';
var XSD_INTEGER = 'http://www.w3.org/2001/XMLSchema#integer';
var XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';

var RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';
var RDF_LIST = RDF + 'List';
var RDF_FIRST = RDF + 'first';
var RDF_REST = RDF + 'rest';
var RDF_NIL = RDF + 'nil';
var RDF_TYPE = RDF + 'type';
var RDF_PLAIN_LITERAL = RDF + 'PlainLiteral';
var RDF_XML_LITERAL = RDF + 'XMLLiteral';
var RDF_OBJECT = RDF + 'object';
var RDF_LANGSTRING = RDF + 'langString';

var LINK_HEADER_REL = 'http://www.w3.org/ns/json-ld#context';
var MAX_CONTEXT_URLS = 10;

/**
 * A JSON-LD Error.
 *
 * @param msg the error message.
 * @param type the error type.
 * @param details the error details.
 */
var JsonLdError = function(msg, type, details) {
  if(_nodejs) {
    Error.call(this);
    Error.captureStackTrace(this, this.constructor);
  } else if(typeof Error !== 'undefined') {
    this.stack = (new Error()).stack;
  }
  this.name = type || 'jsonld.Error';
  this.message = msg || 'An unspecified JSON-LD error occurred.';
  this.details = details || {};
};
if(_nodejs) {
  require('util').inherits(JsonLdError, Error);
} else if(typeof Error !== 'undefined') {
  JsonLdError.prototype = new Error();
}

/**
 * Constructs a new JSON-LD Processor.
 */
var Processor = function() {};

/**
 * Recursively compacts an element using the given active context. All values
 * must be in expanded form before this method is called.
 *
 * @param activeCtx the active context to use.
 * @param activeProperty the compacted property associated with the element
 *          to compact, null for none.
 * @param element the element to compact.
 * @param options the compaction options.
 *
 * @return the compacted value.
 */
Processor.prototype.compact = function(
  activeCtx, activeProperty, element, options) {
  // recursively compact array
  if(_isArray(element)) {
    var rval = [];
    for(var i = 0; i < element.length; ++i) {
      // compact, dropping any null values
      var compacted = this.compact(
        activeCtx, activeProperty, element[i], options);
      if(compacted !== null) {
        rval.push(compacted);
      }
    }
    if(options.compactArrays && rval.length === 1) {
      // use single element if no container is specified
      var container = jsonld.getContextValue(
        activeCtx, activeProperty, '@container');
      if(container === null) {
        rval = rval[0];
      }
    }
    return rval;
  }

  // recursively compact object
  if(_isObject(element)) {
    if(options.link && '@id' in element && element['@id'] in options.link) {
      // check for a linked element to reuse
      var linked = options.link[element['@id']];
      for(var i = 0; i < linked.length; ++i) {
        if(linked[i].expanded === element) {
          return linked[i].compacted;
        }
      }
    }

    // do value compaction on @values and subject references
    if(_isValue(element) || _isSubjectReference(element)) {
      var rval = _compactValue(activeCtx, activeProperty, element);
      if(options.link && _isSubjectReference(element)) {
        // store linked element
        if(!(element['@id'] in options.link)) {
          options.link[element['@id']] = [];
        }
        options.link[element['@id']].push({expanded: element, compacted: rval});
      }
      return rval;
    }

    // FIXME: avoid misuse of active property as an expanded property?
    var insideReverse = (activeProperty === '@reverse');

    var rval = {};

    if(options.link && '@id' in element) {
      // store linked element
      if(!(element['@id'] in options.link)) {
        options.link[element['@id']] = [];
      }
      options.link[element['@id']].push({expanded: element, compacted: rval});
    }

    // process element keys in order
    var keys = Object.keys(element).sort();
    for(var ki = 0; ki < keys.length; ++ki) {
      var expandedProperty = keys[ki];
      var expandedValue = element[expandedProperty];

      // compact @id and @type(s)
      if(expandedProperty === '@id' || expandedProperty === '@type') {
        var compactedValue;

        // compact single @id
        if(_isString(expandedValue)) {
          compactedValue = _compactIri(
            activeCtx, expandedValue, null,
            {vocab: (expandedProperty === '@type')});
        } else {
          // expanded value must be a @type array
          compactedValue = [];
          for(var vi = 0; vi < expandedValue.length; ++vi) {
            compactedValue.push(_compactIri(
              activeCtx, expandedValue[vi], null, {vocab: true}));
          }
        }

        // use keyword alias and add value
        var alias = _compactIri(activeCtx, expandedProperty);
        var isArray = (_isArray(compactedValue) && expandedValue.length === 0);
        jsonld.addValue(
          rval, alias, compactedValue, {propertyIsArray: isArray});
        continue;
      }

      // handle @reverse
      if(expandedProperty === '@reverse') {
        // recursively compact expanded value
        var compactedValue = this.compact(
          activeCtx, '@reverse', expandedValue, options);

        // handle double-reversed properties
        for(var compactedProperty in compactedValue) {
          if(activeCtx.mappings[compactedProperty] &&
            activeCtx.mappings[compactedProperty].reverse) {
            var value = compactedValue[compactedProperty];
            var container = jsonld.getContextValue(
              activeCtx, compactedProperty, '@container');
            var useArray = (container === '@set' || !options.compactArrays);
            jsonld.addValue(
              rval, compactedProperty, value, {propertyIsArray: useArray});
            delete compactedValue[compactedProperty];
          }
        }

        if(Object.keys(compactedValue).length > 0) {
          // use keyword alias and add value
          var alias = _compactIri(activeCtx, expandedProperty);
          jsonld.addValue(rval, alias, compactedValue);
        }

        continue;
      }

      // handle @index property
      if(expandedProperty === '@index') {
        // drop @index if inside an @index container
        var container = jsonld.getContextValue(
          activeCtx, activeProperty, '@container');
        if(container === '@index') {
          continue;
        }

        // use keyword alias and add value
        var alias = _compactIri(activeCtx, expandedProperty);
        jsonld.addValue(rval, alias, expandedValue);
        continue;
      }

      // skip array processing for keywords that aren't @graph or @list
      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&
        _isKeyword(expandedProperty)) {
        // use keyword alias and add value as is
        var alias = _compactIri(activeCtx, expandedProperty);
        jsonld.addValue(rval, alias, expandedValue);
        continue;
      }

      // Note: expanded value must be an array due to expansion algorithm.

      // preserve empty arrays
      if(expandedValue.length === 0) {
        var itemActiveProperty = _compactIri(
          activeCtx, expandedProperty, expandedValue, {vocab: true},
          insideReverse);
        jsonld.addValue(
          rval, itemActiveProperty, expandedValue, {propertyIsArray: true});
      }

      // recusively process array values
      for(var vi = 0; vi < expandedValue.length; ++vi) {
        var expandedItem = expandedValue[vi];

        // compact property and get container type
        var itemActiveProperty = _compactIri(
          activeCtx, expandedProperty, expandedItem, {vocab: true},
          insideReverse);
        var container = jsonld.getContextValue(
          activeCtx, itemActiveProperty, '@container');

        // get @list value if appropriate
        var isList = _isList(expandedItem);
        var list = null;
        if(isList) {
          list = expandedItem['@list'];
        }

        // recursively compact expanded item
        var compactedItem = this.compact(
          activeCtx, itemActiveProperty, isList ? list : expandedItem, options);

        // handle @list
        if(isList) {
          // ensure @list value is an array
          if(!_isArray(compactedItem)) {
            compactedItem = [compactedItem];
          }

          if(container !== '@list') {
            // wrap using @list alias
            var wrapper = {};
            wrapper[_compactIri(activeCtx, '@list')] = compactedItem;
            compactedItem = wrapper;

            // include @index from expanded @list, if any
            if('@index' in expandedItem) {
              compactedItem[_compactIri(activeCtx, '@index')] =
                expandedItem['@index'];
            }
          } else if(itemActiveProperty in rval) {
            // can't use @list container for more than 1 list
            throw new JsonLdError(
              'JSON-LD compact error; property has a "@list" @container ' +
              'rule but there is more than a single @list that matches ' +
              'the compacted term in the document. Compaction might mix ' +
              'unwanted items into the list.',
              'jsonld.SyntaxError', {code: 'compaction to list of lists'});
          }
        }

        // handle language and index maps
        if(container === '@language' || container === '@index') {
          // get or create the map object
          var mapObject;
          if(itemActiveProperty in rval) {
            mapObject = rval[itemActiveProperty];
          } else {
            rval[itemActiveProperty] = mapObject = {};
          }

          // if container is a language map, simplify compacted value to
          // a simple string
          if(container === '@language' && _isValue(compactedItem)) {
            compactedItem = compactedItem['@value'];
          }

          // add compact value to map object using key from expanded value
          // based on the container type
          jsonld.addValue(mapObject, expandedItem[container], compactedItem);
        } else {
          // use an array if: compactArrays flag is false,
          // @container is @set or @list , value is an empty
          // array, or key is @graph
          var isArray = (!options.compactArrays || container === '@set' ||
            container === '@list' ||
            (_isArray(compactedItem) && compactedItem.length === 0) ||
            expandedProperty === '@list' || expandedProperty === '@graph');

          // add compact value
          jsonld.addValue(
            rval, itemActiveProperty, compactedItem,
            {propertyIsArray: isArray});
        }
      }
    }

    return rval;
  }

  // only primitives remain which are already compact
  return element;
};

/**
 * Recursively expands an element using the given context. Any context in
 * the element will be removed. All context URLs must have been retrieved
 * before calling this method.
 *
 * @param activeCtx the context to use.
 * @param activeProperty the property for the element, null for none.
 * @param element the element to expand.
 * @param options the expansion options.
 * @param insideList true if the element is a list, false if not.
 *
 * @return the expanded value.
 */
Processor.prototype.expand = function(
  activeCtx, activeProperty, element, options, insideList) {
  var self = this;

  // nothing to expand
  if(element === null || element === undefined) {
    return null;
  }

  if(!_isArray(element) && !_isObject(element)) {
    // drop free-floating scalars that are not in lists
    if(!insideList && (activeProperty === null ||
      _expandIri(activeCtx, activeProperty, {vocab: true}) === '@graph')) {
      return null;
    }

    // expand element according to value expansion rules
    return _expandValue(activeCtx, activeProperty, element);
  }

  // recursively expand array
  if(_isArray(element)) {
    var rval = [];
    var container = jsonld.getContextValue(
      activeCtx, activeProperty, '@container');
    insideList = insideList || container === '@list';
    for(var i = 0; i < element.length; ++i) {
      // expand element
      var e = self.expand(activeCtx, activeProperty, element[i], options);
      if(insideList && (_isArray(e) || _isList(e))) {
        // lists of lists are illegal
        throw new JsonLdError(
          'Invalid JSON-LD syntax; lists of lists are not permitted.',
          'jsonld.SyntaxError', {code: 'list of lists'});
      }
      // drop null values
      if(e !== null) {
        if(_isArray(e)) {
          rval = rval.concat(e);
        } else {
          rval.push(e);
        }
      }
    }
    return rval;
  }

  // recursively expand object:

  // if element has a context, process it
  if('@context' in element) {
    activeCtx = self.processContext(activeCtx, element['@context'], options);
  }

  // expand the active property
  var expandedActiveProperty = _expandIri(
    activeCtx, activeProperty, {vocab: true});

  var rval = {};
  var keys = Object.keys(element).sort();
  for(var ki = 0; ki < keys.length; ++ki) {
    var key = keys[ki];
    var value = element[key];
    var expandedValue;

    // skip @context
    if(key === '@context') {
      continue;
    }

    // expand property
    var expandedProperty = _expandIri(activeCtx, key, {vocab: true});

    // drop non-absolute IRI keys that aren't keywords
    if(expandedProperty === null ||
      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {
      continue;
    }

    if(_isKeyword(expandedProperty)) {
      if(expandedActiveProperty === '@reverse') {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +
          'property.', 'jsonld.SyntaxError',
          {code: 'invalid reverse property map', value: value});
      }
      if(expandedProperty in rval) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; colliding keywords detected.',
          'jsonld.SyntaxError',
          {code: 'colliding keywords', keyword: expandedProperty});
      }
    }

    // syntax error if @id is not a string
    if(expandedProperty === '@id' && !_isString(value)) {
      if(!options.isFrame) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; "@id" value must a string.',
          'jsonld.SyntaxError', {code: 'invalid @id value', value: value});
      }
      if(!_isObject(value)) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; "@id" value must be a string or an ' +
          'object.', 'jsonld.SyntaxError',
          {code: 'invalid @id value', value: value});
      }
    }

    if(expandedProperty === '@type') {
      _validateTypeValue(value);
    }

    // @graph must be an array or an object
    if(expandedProperty === '@graph' &&
      !(_isObject(value) || _isArray(value))) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; "@graph" value must not be an ' +
        'object or an array.',
        'jsonld.SyntaxError', {code: 'invalid @graph value', value: value});
    }

    // @value must not be an object or an array
    if(expandedProperty === '@value' &&
      (_isObject(value) || _isArray(value))) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; "@value" value must not be an ' +
        'object or an array.',
        'jsonld.SyntaxError',
        {code: 'invalid value object value', value: value});
    }

    // @language must be a string
    if(expandedProperty === '@language') {
      if(value === null) {
        // drop null @language values, they expand as if they didn't exist
        continue;
      }
      if(!_isString(value)) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; "@language" value must be a string.',
          'jsonld.SyntaxError',
          {code: 'invalid language-tagged string', value: value});
      }
      // ensure language value is lowercase
      value = value.toLowerCase();
    }

    // @index must be a string
    if(expandedProperty === '@index') {
      if(!_isString(value)) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; "@index" value must be a string.',
          'jsonld.SyntaxError',
          {code: 'invalid @index value', value: value});
      }
    }

    // @reverse must be an object
    if(expandedProperty === '@reverse') {
      if(!_isObject(value)) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; "@reverse" value must be an object.',
          'jsonld.SyntaxError', {code: 'invalid @reverse value', value: value});
      }

      expandedValue = self.expand(activeCtx, '@reverse', value, options);

      // properties double-reversed
      if('@reverse' in expandedValue) {
        for(var property in expandedValue['@reverse']) {
          jsonld.addValue(
            rval, property, expandedValue['@reverse'][property],
            {propertyIsArray: true});
        }
      }

      // FIXME: can this be merged with code below to simplify?
      // merge in all reversed properties
      var reverseMap = rval['@reverse'] || null;
      for(var property in expandedValue) {
        if(property === '@reverse') {
          continue;
        }
        if(reverseMap === null) {
          reverseMap = rval['@reverse'] = {};
        }
        jsonld.addValue(reverseMap, property, [], {propertyIsArray: true});
        var items = expandedValue[property];
        for(var ii = 0; ii < items.length; ++ii) {
          var item = items[ii];
          if(_isValue(item) || _isList(item)) {
            throw new JsonLdError(
              'Invalid JSON-LD syntax; "@reverse" value must not be a ' +
              '@value or an @list.', 'jsonld.SyntaxError',
              {code: 'invalid reverse property value', value: expandedValue});
          }
          jsonld.addValue(
            reverseMap, property, item, {propertyIsArray: true});
        }
      }

      continue;
    }

    var container = jsonld.getContextValue(activeCtx, key, '@container');

    if(container === '@language' && _isObject(value)) {
      // handle language map container (skip if value is not an object)
      expandedValue = _expandLanguageMap(value);
    } else if(container === '@index' && _isObject(value)) {
      // handle index container (skip if value is not an object)
      expandedValue = (function _expandIndexMap(activeProperty) {
        var rval = [];
        var keys = Object.keys(value).sort();
        for(var ki = 0; ki < keys.length; ++ki) {
          var key = keys[ki];
          var val = value[key];
          if(!_isArray(val)) {
            val = [val];
          }
          val = self.expand(activeCtx, activeProperty, val, options, false);
          for(var vi = 0; vi < val.length; ++vi) {
            var item = val[vi];
            if(!('@index' in item)) {
              item['@index'] = key;
            }
            rval.push(item);
          }
        }
        return rval;
      })(key);
    } else {
      // recurse into @list or @set
      var isList = (expandedProperty === '@list');
      if(isList || expandedProperty === '@set') {
        var nextActiveProperty = activeProperty;
        if(isList && expandedActiveProperty === '@graph') {
          nextActiveProperty = null;
        }
        expandedValue = self.expand(
          activeCtx, nextActiveProperty, value, options, isList);
        if(isList && _isList(expandedValue)) {
          throw new JsonLdError(
            'Invalid JSON-LD syntax; lists of lists are not permitted.',
            'jsonld.SyntaxError', {code: 'list of lists'});
        }
      } else {
        // recursively expand value with key as new active property
        expandedValue = self.expand(activeCtx, key, value, options, false);
      }
    }

    // drop null values if property is not @value
    if(expandedValue === null && expandedProperty !== '@value') {
      continue;
    }

    // convert expanded value to @list if container specifies it
    if(expandedProperty !== '@list' && !_isList(expandedValue) &&
      container === '@list') {
      // ensure expanded value is an array
      expandedValue = (_isArray(expandedValue) ?
        expandedValue : [expandedValue]);
      expandedValue = {'@list': expandedValue};
    }

    // FIXME: can this be merged with code above to simplify?
    // merge in reverse properties
    if(activeCtx.mappings[key] && activeCtx.mappings[key].reverse) {
      var reverseMap = rval['@reverse'] = rval['@reverse'] || {};
      if(!_isArray(expandedValue)) {
        expandedValue = [expandedValue];
      }
      for(var ii = 0; ii < expandedValue.length; ++ii) {
        var item = expandedValue[ii];
        if(_isValue(item) || _isList(item)) {
          throw new JsonLdError(
            'Invalid JSON-LD syntax; "@reverse" value must not be a ' +
            '@value or an @list.', 'jsonld.SyntaxError',
            {code: 'invalid reverse property value', value: expandedValue});
        }
        jsonld.addValue(
          reverseMap, expandedProperty, item, {propertyIsArray: true});
      }
      continue;
    }

    // add value for property
    // use an array except for certain keywords
    var useArray =
      ['@index', '@id', '@type', '@value', '@language'].indexOf(
        expandedProperty) === -1;
    jsonld.addValue(
      rval, expandedProperty, expandedValue, {propertyIsArray: useArray});
  }

  // get property count on expanded output
  keys = Object.keys(rval);
  var count = keys.length;

  if('@value' in rval) {
    // @value must only have @language or @type
    if('@type' in rval && '@language' in rval) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; an element containing "@value" may not ' +
        'contain both "@type" and "@language".',
        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});
    }
    var validCount = count - 1;
    if('@type' in rval) {
      validCount -= 1;
    }
    if('@index' in rval) {
      validCount -= 1;
    }
    if('@language' in rval) {
      validCount -= 1;
    }
    if(validCount !== 0) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; an element containing "@value" may only ' +
        'have an "@index" property and at most one other property ' +
        'which can be "@type" or "@language".',
        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});
    }
    // drop null @values
    if(rval['@value'] === null) {
      rval = null;
    } else if('@language' in rval && !_isString(rval['@value'])) {
      // if @language is present, @value must be a string
      throw new JsonLdError(
        'Invalid JSON-LD syntax; only strings may be language-tagged.',
        'jsonld.SyntaxError',
        {code: 'invalid language-tagged value', element: rval});
    } else if('@type' in rval && (!_isAbsoluteIri(rval['@type']) ||
      rval['@type'].indexOf('_:') === 0)) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; an element containing "@value" and "@type" ' +
        'must have an absolute IRI for the value of "@type".',
        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});
    }
  } else if('@type' in rval && !_isArray(rval['@type'])) {
    // convert @type to an array
    rval['@type'] = [rval['@type']];
  } else if('@set' in rval || '@list' in rval) {
    // handle @set and @list
    if(count > 1 && !(count === 2 && '@index' in rval)) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; if an element has the property "@set" ' +
        'or "@list", then it can have at most one other property that is ' +
        '"@index".', 'jsonld.SyntaxError',
        {code: 'invalid set or list object', element: rval});
    }
    // optimize away @set
    if('@set' in rval) {
      rval = rval['@set'];
      keys = Object.keys(rval);
      count = keys.length;
    }
  } else if(count === 1 && '@language' in rval) {
    // drop objects with only @language
    rval = null;
  }

  // drop certain top-level objects that do not occur in lists
  if(_isObject(rval) &&
    !options.keepFreeFloatingNodes && !insideList &&
    (activeProperty === null || expandedActiveProperty === '@graph')) {
    // drop empty object, top-level @value/@list, or object with only @id
    if(count === 0 || '@value' in rval || '@list' in rval ||
      (count === 1 && '@id' in rval)) {
      rval = null;
    }
  }

  return rval;
};

/**
 * Creates a JSON-LD node map (node ID => node).
 *
 * @param input the expanded JSON-LD to create a node map of.
 * @param [options] the options to use:
 *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.
 *          [namer] (deprecated).
 *
 * @return the node map.
 */
Processor.prototype.createNodeMap = function(input, options) {
  options = options || {};

  // produce a map of all subjects and name each bnode
  var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');
  var graphs = {'@default': {}};
  _createNodeMap(input, graphs, '@default', issuer);

  // add all non-default graphs to default graph
  return _mergeNodeMaps(graphs);
};

/**
 * Performs JSON-LD flattening.
 *
 * @param input the expanded JSON-LD to flatten.
 *
 * @return the flattened output.
 */
Processor.prototype.flatten = function(input) {
  var defaultGraph = this.createNodeMap(input);

  // produce flattened output
  var flattened = [];
  var keys = Object.keys(defaultGraph).sort();
  for(var ki = 0; ki < keys.length; ++ki) {
    var node = defaultGraph[keys[ki]];
    // only add full subjects to top-level
    if(!_isSubjectReference(node)) {
      flattened.push(node);
    }
  }
  return flattened;
};

/**
 * Performs JSON-LD framing.
 *
 * @param input the expanded JSON-LD to frame.
 * @param frame the expanded JSON-LD frame to use.
 * @param options the framing options.
 *
 * @return the framed output.
 */
Processor.prototype.frame = function(input, frame, options) {
  // create framing state
  var state = {
    options: options,
    graphs: {'@default': {}, '@merged': {}},
    subjectStack: [],
    link: {}
  };

  // produce a map of all graphs and name each bnode
  // FIXME: currently uses subjects from @merged graph only
  var issuer = new IdentifierIssuer('_:b');
  _createNodeMap(input, state.graphs, '@merged', issuer);
  state.subjects = state.graphs['@merged'];

  // frame the subjects
  var framed = [];
  _frame(state, Object.keys(state.subjects).sort(), frame, framed, null);
  return framed;
};

/**
 * Performs normalization on the given RDF dataset.
 *
 * @param dataset the RDF dataset to normalize.
 * @param options the normalization options.
 * @param callback(err, normalized) called once the operation completes.
 */
Processor.prototype.normalize = function(dataset, options, callback) {
  if(options.algorithm === 'URDNA2015') {
    return new URDNA2015(options).main(dataset, callback);
  }
  if(options.algorithm === 'URGNA2012') {
    return new URGNA2012(options).main(dataset, callback);
  }
  callback(new Error(
    'Invalid RDF Dataset Normalization algorithm: ' + options.algorithm));
};

/**
 * Converts an RDF dataset to JSON-LD.
 *
 * @param dataset the RDF dataset.
 * @param options the RDF serialization options.
 * @param callback(err, output) called once the operation completes.
 */
Processor.prototype.fromRDF = function(dataset, options, callback) {
  var defaultGraph = {};
  var graphMap = {'@default': defaultGraph};
  var referencedOnce = {};

  for(var name in dataset) {
    var graph = dataset[name];
    if(!(name in graphMap)) {
      graphMap[name] = {};
    }
    if(name !== '@default' && !(name in defaultGraph)) {
      defaultGraph[name] = {'@id': name};
    }
    var nodeMap = graphMap[name];
    for(var ti = 0; ti < graph.length; ++ti) {
      var triple = graph[ti];

      // get subject, predicate, object
      var s = triple.subject.value;
      var p = triple.predicate.value;
      var o = triple.object;

      if(!(s in nodeMap)) {
        nodeMap[s] = {'@id': s};
      }
      var node = nodeMap[s];

      var objectIsId = (o.type === 'IRI' || o.type === 'blank node');
      if(objectIsId && !(o.value in nodeMap)) {
        nodeMap[o.value] = {'@id': o.value};
      }

      if(p === RDF_TYPE && !options.useRdfType && objectIsId) {
        jsonld.addValue(node, '@type', o.value, {propertyIsArray: true});
        continue;
      }

      var value = _RDFToObject(o, options.useNativeTypes);
      jsonld.addValue(node, p, value, {propertyIsArray: true});

      // object may be an RDF list/partial list node but we can't know easily
      // until all triples are read
      if(objectIsId) {
        if(o.value === RDF_NIL) {
          // track rdf:nil uniquely per graph
          var object = nodeMap[o.value];
          if(!('usages' in object)) {
            object.usages = [];
          }
          object.usages.push({
            node: node,
            property: p,
            value: value
          });
        } else if(o.value in referencedOnce) {
          // object referenced more than once
          referencedOnce[o.value] = false;
        } else {
          // keep track of single reference
          referencedOnce[o.value] = {
            node: node,
            property: p,
            value: value
          };
        }
      }
    }
  }

  // convert linked lists to @list arrays
  for(var name in graphMap) {
    var graphObject = graphMap[name];

    // no @lists to be converted, continue
    if(!(RDF_NIL in graphObject)) {
      continue;
    }

    // iterate backwards through each RDF list
    var nil = graphObject[RDF_NIL];
    for(var i = 0; i < nil.usages.length; ++i) {
      var usage = nil.usages[i];
      var node = usage.node;
      var property = usage.property;
      var head = usage.value;
      var list = [];
      var listNodes = [];

      // ensure node is a well-formed list node; it must:
      // 1. Be referenced only once.
      // 2. Have an array for rdf:first that has 1 item.
      // 3. Have an array for rdf:rest that has 1 item.
      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,
      //   optionally, @type where the value is rdf:List.
      var nodeKeyCount = Object.keys(node).length;
      while(property === RDF_REST &&
        _isObject(referencedOnce[node['@id']]) &&
        _isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&
        _isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&
        (nodeKeyCount === 3 || (nodeKeyCount === 4 && _isArray(node['@type']) &&
          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {
        list.push(node[RDF_FIRST][0]);
        listNodes.push(node['@id']);

        // get next node, moving backwards through list
        usage = referencedOnce[node['@id']];
        node = usage.node;
        property = usage.property;
        head = usage.value;
        nodeKeyCount = Object.keys(node).length;

        // if node is not a blank node, then list head found
        if(node['@id'].indexOf('_:') !== 0) {
          break;
        }
      }

      // the list is nested in another list
      if(property === RDF_FIRST) {
        // empty list
        if(node['@id'] === RDF_NIL) {
          // can't convert rdf:nil to a @list object because it would
          // result in a list of lists which isn't supported
          continue;
        }

        // preserve list head
        head = graphObject[head['@id']][RDF_REST][0];
        list.pop();
        listNodes.pop();
      }

      // transform list into @list object
      delete head['@id'];
      head['@list'] = list.reverse();
      for(var j = 0; j < listNodes.length; ++j) {
        delete graphObject[listNodes[j]];
      }
    }

    delete nil.usages;
  }

  var result = [];
  var subjects = Object.keys(defaultGraph).sort();
  for(var i = 0; i < subjects.length; ++i) {
    var subject = subjects[i];
    var node = defaultGraph[subject];
    if(subject in graphMap) {
      var graph = node['@graph'] = [];
      var graphObject = graphMap[subject];
      var subjects_ = Object.keys(graphObject).sort();
      for(var si = 0; si < subjects_.length; ++si) {
        var node_ = graphObject[subjects_[si]];
        // only add full subjects to top-level
        if(!_isSubjectReference(node_)) {
          graph.push(node_);
        }
      }
    }
    // only add full subjects to top-level
    if(!_isSubjectReference(node)) {
      result.push(node);
    }
  }

  callback(null, result);
};

/**
 * Outputs an RDF dataset for the expanded JSON-LD input.
 *
 * @param input the expanded JSON-LD input.
 * @param options the RDF serialization options.
 *
 * @return the RDF dataset.
 */
Processor.prototype.toRDF = function(input, options) {
  // create node map for default graph (and any named graphs)
  var issuer = new IdentifierIssuer('_:b');
  var nodeMap = {'@default': {}};
  _createNodeMap(input, nodeMap, '@default', issuer);

  var dataset = {};
  var graphNames = Object.keys(nodeMap).sort();
  for(var i = 0; i < graphNames.length; ++i) {
    var graphName = graphNames[i];
    // skip relative IRIs
    if(graphName === '@default' || _isAbsoluteIri(graphName)) {
      dataset[graphName] = _graphToRDF(nodeMap[graphName], issuer, options);
    }
  }
  return dataset;
};

/**
 * Processes a local context and returns a new active context.
 *
 * @param activeCtx the current active context.
 * @param localCtx the local context to process.
 * @param options the context processing options.
 *
 * @return the new active context.
 */
Processor.prototype.processContext = function(activeCtx, localCtx, options) {
  // normalize local context to an array of @context objects
  if(_isObject(localCtx) && '@context' in localCtx &&
    _isArray(localCtx['@context'])) {
    localCtx = localCtx['@context'];
  }
  var ctxs = _isArray(localCtx) ? localCtx : [localCtx];

  // no contexts in array, clone existing context
  if(ctxs.length === 0) {
    return activeCtx.clone();
  }

  // process each context in order, update active context
  // on each iteration to ensure proper caching
  var rval = activeCtx;
  for(var i = 0; i < ctxs.length; ++i) {
    var ctx = ctxs[i];

    // reset to initial context
    if(ctx === null) {
      rval = activeCtx = _getInitialContext(options);
      continue;
    }

    // dereference @context key if present
    if(_isObject(ctx) && '@context' in ctx) {
      ctx = ctx['@context'];
    }

    // context must be an object by now, all URLs retrieved before this call
    if(!_isObject(ctx)) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; @context must be an object.',
        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});
    }

    // get context from cache if available
    if(jsonld.cache.activeCtx) {
      var cached = jsonld.cache.activeCtx.get(activeCtx, ctx);
      if(cached) {
        rval = activeCtx = cached;
        continue;
      }
    }

    // update active context and clone new one before updating
    activeCtx = rval;
    rval = rval.clone();

    // define context mappings for keys in local context
    var defined = {};

    // handle @base
    if('@base' in ctx) {
      var base = ctx['@base'];

      // clear base
      if(base === null) {
        base = null;
      } else if(!_isString(base)) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; the value of "@base" in a ' +
          '@context must be a string or null.',
          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});
      } else if(base !== '' && !_isAbsoluteIri(base)) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; the value of "@base" in a ' +
          '@context must be an absolute IRI or the empty string.',
          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});
      }

      if(base !== null) {
        base = jsonld.url.parse(base || '');
      }
      rval['@base'] = base;
      defined['@base'] = true;
    }

    // handle @vocab
    if('@vocab' in ctx) {
      var value = ctx['@vocab'];
      if(value === null) {
        delete rval['@vocab'];
      } else if(!_isString(value)) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; the value of "@vocab" in a ' +
          '@context must be a string or null.',
          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});
      } else if(!_isAbsoluteIri(value)) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; the value of "@vocab" in a ' +
          '@context must be an absolute IRI.',
          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});
      } else {
        rval['@vocab'] = value;
      }
      defined['@vocab'] = true;
    }

    // handle @language
    if('@language' in ctx) {
      var value = ctx['@language'];
      if(value === null) {
        delete rval['@language'];
      } else if(!_isString(value)) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; the value of "@language" in a ' +
          '@context must be a string or null.',
          'jsonld.SyntaxError',
          {code: 'invalid default language', context: ctx});
      } else {
        rval['@language'] = value.toLowerCase();
      }
      defined['@language'] = true;
    }

    // process all other keys
    for(var key in ctx) {
      _createTermDefinition(rval, ctx, key, defined);
    }

    // cache result
    if(jsonld.cache.activeCtx) {
      jsonld.cache.activeCtx.set(activeCtx, ctx, rval);
    }
  }

  return rval;
};

/**
 * Expands a language map.
 *
 * @param languageMap the language map to expand.
 *
 * @return the expanded language map.
 */
function _expandLanguageMap(languageMap) {
  var rval = [];
  var keys = Object.keys(languageMap).sort();
  for(var ki = 0; ki < keys.length; ++ki) {
    var key = keys[ki];
    var val = languageMap[key];
    if(!_isArray(val)) {
      val = [val];
    }
    for(var vi = 0; vi < val.length; ++vi) {
      var item = val[vi];
      if(item === null) {
          // null values are allowed (8.5) but ignored (3.1)
          continue;
      }
      if(!_isString(item)) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; language map values must be strings.',
          'jsonld.SyntaxError',
          {code: 'invalid language map value', languageMap: languageMap});
      }
      rval.push({
        '@value': item,
        '@language': key.toLowerCase()
      });
    }
  }
  return rval;
}

/**
 * Labels the blank nodes in the given value using the given IdentifierIssuer.
 *
 * @param issuer the IdentifierIssuer to use.
 * @param element the element with blank nodes to rename.
 *
 * @return the element.
 */
function _labelBlankNodes(issuer, element) {
  if(_isArray(element)) {
    for(var i = 0; i < element.length; ++i) {
      element[i] = _labelBlankNodes(issuer, element[i]);
    }
  } else if(_isList(element)) {
    element['@list'] = _labelBlankNodes(issuer, element['@list']);
  } else if(_isObject(element)) {
    // relabel blank node
    if(_isBlankNode(element)) {
      element['@id'] = issuer.getId(element['@id']);
    }

    // recursively apply to all keys
    var keys = Object.keys(element).sort();
    for(var ki = 0; ki < keys.length; ++ki) {
      var key = keys[ki];
      if(key !== '@id') {
        element[key] = _labelBlankNodes(issuer, element[key]);
      }
    }
  }

  return element;
}

/**
 * Expands the given value by using the coercion and keyword rules in the
 * given context.
 *
 * @param activeCtx the active context to use.
 * @param activeProperty the active property the value is associated with.
 * @param value the value to expand.
 *
 * @return the expanded value.
 */
function _expandValue(activeCtx, activeProperty, value) {
  // nothing to expand
  if(value === null || value === undefined) {
    return null;
  }

  // special-case expand @id and @type (skips '@id' expansion)
  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});
  if(expandedProperty === '@id') {
    return _expandIri(activeCtx, value, {base: true});
  } else if(expandedProperty === '@type') {
    return _expandIri(activeCtx, value, {vocab: true, base: true});
  }

  // get type definition from context
  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');

  // do @id expansion (automatic for @graph)
  if(type === '@id' || (expandedProperty === '@graph' && _isString(value))) {
    return {'@id': _expandIri(activeCtx, value, {base: true})};
  }
  // do @id expansion w/vocab
  if(type === '@vocab') {
    return {'@id': _expandIri(activeCtx, value, {vocab: true, base: true})};
  }

  // do not expand keyword values
  if(_isKeyword(expandedProperty)) {
    return value;
  }

  var rval = {};

  if(type !== null) {
    // other type
    rval['@type'] = type;
  } else if(_isString(value)) {
    // check for language tagging for strings
    var language = jsonld.getContextValue(
      activeCtx, activeProperty, '@language');
    if(language !== null) {
      rval['@language'] = language;
    }
  }
  // do conversion of values that aren't basic JSON types to strings
  if(['boolean', 'number', 'string'].indexOf(typeof value) === -1) {
    value = value.toString();
  }
  rval['@value'] = value;

  return rval;
}

/**
 * Creates an array of RDF triples for the given graph.
 *
 * @param graph the graph to create RDF triples for.
 * @param issuer a IdentifierIssuer for assigning blank node names.
 * @param options the RDF serialization options.
 *
 * @return the array of RDF triples for the given graph.
 */
function _graphToRDF(graph, issuer, options) {
  var rval = [];

  var ids = Object.keys(graph).sort();
  for(var i = 0; i < ids.length; ++i) {
    var id = ids[i];
    var node = graph[id];
    var properties = Object.keys(node).sort();
    for(var pi = 0; pi < properties.length; ++pi) {
      var property = properties[pi];
      var items = node[property];
      if(property === '@type') {
        property = RDF_TYPE;
      } else if(_isKeyword(property)) {
        continue;
      }

      for(var ii = 0; ii < items.length; ++ii) {
        var item = items[ii];

        // RDF subject
        var subject = {};
        subject.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';
        subject.value = id;

        // skip relative IRI subjects
        if(!_isAbsoluteIri(id)) {
          continue;
        }

        // RDF predicate
        var predicate = {};
        predicate.type = (property.indexOf('_:') === 0) ? 'blank node' : 'IRI';
        predicate.value = property;

        // skip relative IRI predicates
        if(!_isAbsoluteIri(property)) {
          continue;
        }

        // skip blank node predicates unless producing generalized RDF
        if(predicate.type === 'blank node' && !options.produceGeneralizedRdf) {
          continue;
        }

        // convert @list to triples
        if(_isList(item)) {
          _listToRDF(item['@list'], issuer, subject, predicate, rval);
        } else {
          // convert value or node object to triple
          var object = _objectToRDF(item);
          // skip null objects (they are relative IRIs)
          if(object) {
            rval.push({subject: subject, predicate: predicate, object: object});
          }
        }
      }
    }
  }

  return rval;
}

/**
 * Converts a @list value into linked list of blank node RDF triples
 * (an RDF collection).
 *
 * @param list the @list value.
 * @param issuer a IdentifierIssuer for assigning blank node names.
 * @param subject the subject for the head of the list.
 * @param predicate the predicate for the head of the list.
 * @param triples the array of triples to append to.
 */
function _listToRDF(list, issuer, subject, predicate, triples) {
  var first = {type: 'IRI', value: RDF_FIRST};
  var rest = {type: 'IRI', value: RDF_REST};
  var nil = {type: 'IRI', value: RDF_NIL};

  for(var i = 0; i < list.length; ++i) {
    var item = list[i];

    var blankNode = {type: 'blank node', value: issuer.getId()};
    triples.push({subject: subject, predicate: predicate, object: blankNode});

    subject = blankNode;
    predicate = first;
    var object = _objectToRDF(item);

    // skip null objects (they are relative IRIs)
    if(object) {
      triples.push({subject: subject, predicate: predicate, object: object});
    }

    predicate = rest;
  }

  triples.push({subject: subject, predicate: predicate, object: nil});
}

/**
 * Converts a JSON-LD value object to an RDF literal or a JSON-LD string or
 * node object to an RDF resource.
 *
 * @param item the JSON-LD value or node object.
 *
 * @return the RDF literal or RDF resource.
 */
function _objectToRDF(item) {
  var object = {};

  // convert value object to RDF
  if(_isValue(item)) {
    object.type = 'literal';
    var value = item['@value'];
    var datatype = item['@type'] || null;

    // convert to XSD datatypes as appropriate
    if(_isBoolean(value)) {
      object.value = value.toString();
      object.datatype = datatype || XSD_BOOLEAN;
    } else if(_isDouble(value) || datatype === XSD_DOUBLE) {
      if(!_isDouble(value)) {
        value = parseFloat(value);
      }
      // canonical double representation
      object.value = value.toExponential(15).replace(/(\d)0*e\+?/, '$1E');
      object.datatype = datatype || XSD_DOUBLE;
    } else if(_isNumber(value)) {
      object.value = value.toFixed(0);
      object.datatype = datatype || XSD_INTEGER;
    } else if('@language' in item) {
      object.value = value;
      object.datatype = datatype || RDF_LANGSTRING;
      object.language = item['@language'];
    } else {
      object.value = value;
      object.datatype = datatype || XSD_STRING;
    }
  } else {
    // convert string/node object to RDF
    var id = _isObject(item) ? item['@id'] : item;
    object.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';
    object.value = id;
  }

  // skip relative IRIs
  if(object.type === 'IRI' && !_isAbsoluteIri(object.value)) {
    return null;
  }

  return object;
}

/**
 * Converts an RDF triple object to a JSON-LD object.
 *
 * @param o the RDF triple object to convert.
 * @param useNativeTypes true to output native types, false not to.
 *
 * @return the JSON-LD object.
 */
function _RDFToObject(o, useNativeTypes) {
  // convert IRI/blank node object to JSON-LD
  if(o.type === 'IRI' || o.type === 'blank node') {
    return {'@id': o.value};
  }

  // convert literal to JSON-LD
  var rval = {'@value': o.value};

  // add language
  if(o.language) {
    rval['@language'] = o.language;
  } else {
    var type = o.datatype;
    if(!type) {
      type = XSD_STRING;
    }
    // use native types for certain xsd types
    if(useNativeTypes) {
      if(type === XSD_BOOLEAN) {
        if(rval['@value'] === 'true') {
          rval['@value'] = true;
        } else if(rval['@value'] === 'false') {
          rval['@value'] = false;
        }
      } else if(_isNumeric(rval['@value'])) {
        if(type === XSD_INTEGER) {
          var i = parseInt(rval['@value'], 10);
          if(i.toFixed(0) === rval['@value']) {
            rval['@value'] = i;
          }
        } else if(type === XSD_DOUBLE) {
          rval['@value'] = parseFloat(rval['@value']);
        }
      }
      // do not add native type
      if([XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING]
        .indexOf(type) === -1) {
        rval['@type'] = type;
      }
    } else if(type !== XSD_STRING) {
      rval['@type'] = type;
    }
  }

  return rval;
}

/**
 * Compares two RDF triples for equality.
 *
 * @param t1 the first triple.
 * @param t2 the second triple.
 *
 * @return true if the triples are the same, false if not.
 */
function _compareRDFTriples(t1, t2) {
  var attrs = ['subject', 'predicate', 'object'];
  for(var i = 0; i < attrs.length; ++i) {
    var attr = attrs[i];
    if(t1[attr].type !== t2[attr].type || t1[attr].value !== t2[attr].value) {
      return false;
    }
  }
  if(t1.object.language !== t2.object.language) {
    return false;
  }
  if(t1.object.datatype !== t2.object.datatype) {
    return false;
  }
  return true;
}

/////////////////////////////// DEFINE URDNA2015 //////////////////////////////

var URDNA2015 = (function() {

var POSITIONS = {'subject': 's', 'object': 'o', 'name': 'g'};

var Normalize = function(options) {
  options = options || {};
  this.name = 'URDNA2015';
  this.options = options;
  this.blankNodeInfo = {};
  this.hashToBlankNodes = {};
  this.canonicalIssuer = new IdentifierIssuer('_:c14n');
  this.quads = [];
  this.schedule = {};
  if('maxCallStackDepth' in options) {
    this.schedule.MAX_DEPTH = options.maxCallStackDepth;
  } else {
    this.schedule.MAX_DEPTH = 500;
  }
  if('maxTotalCallStackDepth' in options) {
    this.schedule.MAX_TOTAL_DEPTH = options.maxCallStackDepth;
  } else {
    this.schedule.MAX_TOTAL_DEPTH = 0xFFFFFFFF;
  }
  this.schedule.depth = 0;
  this.schedule.totalDepth = 0;
  if('timeSlice' in options) {
    this.schedule.timeSlice = options.timeSlice;
  } else {
    // milliseconds
    this.schedule.timeSlice = 10;
  }
};

// do some work in a time slice, but in serial
Normalize.prototype.doWork = function(fn, callback) {
  var schedule = this.schedule;

  if(schedule.totalDepth >= schedule.MAX_TOTAL_DEPTH) {
    return callback(new Error(
      'Maximum total call stack depth exceeded; normalization aborting.'));
  }

  (function work() {
    if(schedule.depth === schedule.MAX_DEPTH) {
      // stack too deep, run on next tick
      schedule.depth = 0;
      schedule.running = false;
      return jsonld.nextTick(work);
    }

    // if not yet running, force run
    var now = new Date().getTime();
    if(!schedule.running) {
      schedule.start = new Date().getTime();
      schedule.deadline = schedule.start + schedule.timeSlice;
    }

    // TODO: should also include an estimate of expectedWorkTime
    if(now < schedule.deadline) {
      schedule.running = true;
      schedule.depth++;
      schedule.totalDepth++;
      return fn(function(err, result) {
        schedule.depth--;
        schedule.totalDepth--;
        callback(err, result);
      });
    }

    // not enough time left in this slice, run after letting browser
    // do some other things
    schedule.depth = 0;
    schedule.running = false;
    jsonld.setImmediate(work);
  })();
};

// asynchronously loop
Normalize.prototype.forEach = function(iterable, fn, callback) {
  var self = this;
  var iterator;
  var idx = 0;
  var length;
  if(_isArray(iterable)) {
    length = iterable.length;
    iterator = function() {
      if(idx === length) {
        return false;
      }
      iterator.value = iterable[idx++];
      iterator.key = idx;
      return true;
    };
  } else {
    var keys = Object.keys(iterable);
    length = keys.length;
    iterator = function() {
      if(idx === length) {
        return false;
      }
      iterator.key = keys[idx++];
      iterator.value = iterable[iterator.key];
      return true;
    };
  }

  (function iterate(err, result) {
    if(err) {
      return callback(err);
    }
    if(iterator()) {
      return self.doWork(function() {
        fn(iterator.value, iterator.key, iterate);
      });
    }
    callback();
  })();
};

// asynchronous waterfall
Normalize.prototype.waterfall = function(fns, callback) {
  var self = this;
  self.forEach(fns, function(fn, idx, callback) {
    self.doWork(fn, callback);
  }, callback);
};

// asynchronous while
Normalize.prototype.whilst = function(condition, fn, callback) {
  var self = this;
  (function loop(err) {
    if(err) {
      return callback(err);
    }
    if(!condition()) {
      return callback();
    }
    self.doWork(fn, loop);
  })();
};

// 4.4) Normalization Algorithm
Normalize.prototype.main = function(dataset, callback) {
  var self = this;
  self.schedule.start = new Date().getTime();
  var result;

  // handle invalid output format
  if(self.options.format) {
    if(self.options.format !== 'application/nquads') {
      return callback(new JsonLdError(
        'Unknown output format.',
        'jsonld.UnknownFormat', {format: self.options.format}));
    }
  }

  // 1) Create the normalization state.

  // Note: Optimize by generating non-normalized blank node map concurrently.
  var nonNormalized = {};

  self.waterfall([
    function(callback) {
      // 2) For every quad in input dataset:
      self.forEach(dataset, function(triples, graphName, callback) {
        if(graphName === '@default') {
          graphName = null;
        }
        self.forEach(triples, function(quad, idx, callback) {
          if(graphName !== null) {
            if(graphName.indexOf('_:') === 0) {
              quad.name = {type: 'blank node', value: graphName};
            } else {
              quad.name = {type: 'IRI', value: graphName};
            }
          }
          self.quads.push(quad);

          // 2.1) For each blank node that occurs in the quad, add a reference
          // to the quad using the blank node identifier in the blank node to
          // quads map, creating a new entry if necessary.
          self.forEachComponent(quad, function(component) {
            if(component.type !== 'blank node') {
              return;
            }
            var id = component.value;
            if(id in self.blankNodeInfo) {
              self.blankNodeInfo[id].quads.push(quad);
            } else {
              nonNormalized[id] = true;
              self.blankNodeInfo[id] = {quads: [quad]};
            }
          });
          callback();
        }, callback);
      }, callback);
    },
    function(callback) {
      // 3) Create a list of non-normalized blank node identifiers
      // non-normalized identifiers and populate it using the keys from the
      // blank node to quads map.
      // Note: We use a map here and it was generated during step 2.

      // 4) Initialize simple, a boolean flag, to true.
      var simple = true;

      // 5) While simple is true, issue canonical identifiers for blank nodes:
      self.whilst(function() { return simple; }, function(callback) {
        // 5.1) Set simple to false.
        simple = false;

        // 5.2) Clear hash to blank nodes map.
        self.hashToBlankNodes = {};

        self.waterfall([
          function(callback) {
            // 5.3) For each blank node identifier identifier in non-normalized
            // identifiers:
            self.forEach(nonNormalized, function(value, id, callback) {
              // 5.3.1) Create a hash, hash, according to the Hash First Degree
              // Quads algorithm.
              self.hashFirstDegreeQuads(id, function(err, hash) {
                if(err) {
                  return callback(err);
                }
                // 5.3.2) Add hash and identifier to hash to blank nodes map,
                // creating a new entry if necessary.
                if(hash in self.hashToBlankNodes) {
                  self.hashToBlankNodes[hash].push(id);
                } else {
                  self.hashToBlankNodes[hash] = [id];
                }
                callback();
              });
            }, callback);
          },
          function(callback) {
            // 5.4) For each hash to identifier list mapping in hash to blank
            // nodes map, lexicographically-sorted by hash:
            var hashes = Object.keys(self.hashToBlankNodes).sort();
            self.forEach(hashes, function(hash, i, callback) {
              // 5.4.1) If the length of identifier list is greater than 1,
              // continue to the next mapping.
              var idList = self.hashToBlankNodes[hash];
              if(idList.length > 1) {
                return callback();
              }

              // 5.4.2) Use the Issue Identifier algorithm, passing canonical
              // issuer and the single blank node identifier in identifier
              // list, identifier, to issue a canonical replacement identifier
              // for identifier.
              // TODO: consider changing `getId` to `issue`
              var id = idList[0];
              self.canonicalIssuer.getId(id);

              // 5.4.3) Remove identifier from non-normalized identifiers.
              delete nonNormalized[id];

              // 5.4.4) Remove hash from the hash to blank nodes map.
              delete self.hashToBlankNodes[hash];

              // 5.4.5) Set simple to true.
              simple = true;
              callback();
            }, callback);
          }
        ], callback);
      }, callback);
    },
    function(callback) {
      // 6) For each hash to identifier list mapping in hash to blank nodes map,
      // lexicographically-sorted by hash:
      var hashes = Object.keys(self.hashToBlankNodes).sort();
      self.forEach(hashes, function(hash, idx, callback) {
        // 6.1) Create hash path list where each item will be a result of
        // running the Hash N-Degree Quads algorithm.
        var hashPathList = [];

        // 6.2) For each blank node identifier identifier in identifier list:
        var idList = self.hashToBlankNodes[hash];
        self.waterfall([
          function(callback) {
            self.forEach(idList, function(id, idx, callback) {
              // 6.2.1) If a canonical identifier has already been issued for
              // identifier, continue to the next identifier.
              if(self.canonicalIssuer.hasId(id)) {
                return callback();
              }

              // 6.2.2) Create temporary issuer, an identifier issuer
              // initialized with the prefix _:b.
              var issuer = new IdentifierIssuer('_:b');

              // 6.2.3) Use the Issue Identifier algorithm, passing temporary
              // issuer and identifier, to issue a new temporary blank node
              // identifier for identifier.
              issuer.getId(id);

              // 6.2.4) Run the Hash N-Degree Quads algorithm, passing
              // temporary issuer, and append the result to the hash path list.
              self.hashNDegreeQuads(id, issuer, function(err, result) {
                if(err) {
                  return callback(err);
                }
                hashPathList.push(result);
                callback();
              });
            }, callback);
          },
          function(callback) {
            // 6.3) For each result in the hash path list,
            // lexicographically-sorted by the hash in result:
            hashPathList.sort(function(a, b) {
              return (a.hash < b.hash) ? -1 : ((a.hash > b.hash) ? 1 : 0);
            });
            self.forEach(hashPathList, function(result, idx, callback) {
              // 6.3.1) For each blank node identifier, existing identifier,
              // that was issued a temporary identifier by identifier issuer
              // in result, issue a canonical identifier, in the same order,
              // using the Issue Identifier algorithm, passing canonical
              // issuer and existing identifier.
              for(var existing in result.issuer.existing) {
                self.canonicalIssuer.getId(existing);
              }
              callback();
            }, callback);
          }
        ], callback);
      }, callback);
    }, function(callback) {
      /* Note: At this point all blank nodes in the set of RDF quads have been
      assigned canonical identifiers, which have been stored in the canonical
      issuer. Here each quad is updated by assigning each of its blank nodes
      its new identifier. */

      // 7) For each quad, quad, in input dataset:
      var normalized = [];
      self.waterfall([
        function(callback) {
          self.forEach(self.quads, function(quad, idx, callback) {
            // 7.1) Create a copy, quad copy, of quad and replace any existing
            // blank node identifiers using the canonical identifiers
            // previously issued by canonical issuer.
            // Note: We optimize away the copy here.
            self.forEachComponent(quad, function(component) {
              if(component.type === 'blank node' &&
                component.value.indexOf(self.canonicalIssuer.prefix) !== 0) {
                component.value = self.canonicalIssuer.getId(component.value);
              }
            });
            // 7.2) Add quad copy to the normalized dataset.
            normalized.push(_toNQuad(quad));
            callback();
          }, callback);
        },
        function(callback) {
          // sort normalized output
          normalized.sort();

          // 8) Return the normalized dataset.
          if(self.options.format === 'application/nquads') {
            result = normalized.join('');
            return callback();
          }

          result = _parseNQuads(normalized.join(''));
          callback();
        }
      ], callback);
    }
  ], function(err) {
    callback(err, result);
  });
};

// 4.6) Hash First Degree Quads
Normalize.prototype.hashFirstDegreeQuads = function(id, callback) {
  var self = this;

  // return cached hash
  var info = self.blankNodeInfo[id];
  if('hash' in info) {
    return callback(null, info.hash);
  }

  // 1) Initialize nquads to an empty list. It will be used to store quads in
  // N-Quads format.
  var nquads = [];

  // 2) Get the list of quads quads associated with the reference blank node
  // identifier in the blank node to quads map.
  var quads = info.quads;

  // 3) For each quad quad in quads:
  self.forEach(quads, function(quad, idx, callback) {
    // 3.1) Serialize the quad in N-Quads format with the following special
    // rule:

    // 3.1.1) If any component in quad is an blank node, then serialize it
    // using a special identifier as follows:
    var copy = {predicate: quad.predicate};
    self.forEachComponent(quad, function(component, key) {
      // 3.1.2) If the blank node's existing blank node identifier matches the
      // reference blank node identifier then use the blank node identifier _:a,
      // otherwise, use the blank node identifier _:z.
      copy[key] = self.modifyFirstDegreeComponent(id, component, key);
    });
    nquads.push(_toNQuad(copy));
    callback();
  }, function(err) {
    if(err) {
      return callback(err);
    }
    // 4) Sort nquads in lexicographical order.
    nquads.sort();

    // 5) Return the hash that results from passing the sorted, joined nquads
    // through the hash algorithm.
    info.hash = NormalizeHash.hashNQuads(self.name, nquads);
    callback(null, info.hash);
  });
};

// helper for modifying component during Hash First Degree Quads
Normalize.prototype.modifyFirstDegreeComponent = function(id, component) {
  if(component.type !== 'blank node') {
    return component;
  }
  component = _clone(component);
  component.value = (component.value === id ? '_:a' : '_:z');
  return component;
};

// 4.7) Hash Related Blank Node
Normalize.prototype.hashRelatedBlankNode = function(
  related, quad, issuer, position, callback) {
  var self = this;

  // 1) Set the identifier to use for related, preferring first the canonical
  // identifier for related if issued, second the identifier issued by issuer
  // if issued, and last, if necessary, the result of the Hash First Degree
  // Quads algorithm, passing related.
  var id;
  self.waterfall([
    function(callback) {
      if(self.canonicalIssuer.hasId(related)) {
        id = self.canonicalIssuer.getId(related);
        return callback();
      }
      if(issuer.hasId(related)) {
        id = issuer.getId(related);
        return callback();
      }
      self.hashFirstDegreeQuads(related, function(err, hash) {
        if(err) {
          return callback(err);
        }
        id = hash;
        callback();
      });
    }
  ], function(err) {
    if(err) {
      return callback(err);
    }

    // 2) Initialize a string input to the value of position.
    // Note: We use a hash object instead.
    var md = new NormalizeHash(self.name);
    md.update(position);

    // 3) If position is not g, append <, the value of the predicate in quad,
    // and > to input.
    if(position !== 'g') {
      md.update(self.getRelatedPredicate(quad));
    }

    // 4) Append identifier to input.
    md.update(id);

    // 5) Return the hash that results from passing input through the hash
    // algorithm.
    return callback(null, md.digest());
  });
};

// helper for getting a related predicate
Normalize.prototype.getRelatedPredicate = function(quad) {
  return '<' + quad.predicate.value + '>';
};

// 4.8) Hash N-Degree Quads
Normalize.prototype.hashNDegreeQuads = function(id, issuer, callback) {
  var self = this;

  // 1) Create a hash to related blank nodes map for storing hashes that
  // identify related blank nodes.
  // Note: 2) and 3) handled within `createHashToRelated`
  var hashToRelated;
  var md = new NormalizeHash(self.name);
  self.waterfall([
    function(callback) {
      self.createHashToRelated(id, issuer, function(err, result) {
        if(err) {
          return callback(err);
        }
        hashToRelated = result;
        callback();
      });
    },
    function(callback) {
      // 4) Create an empty string, data to hash.
      // Note: We created a hash object `md` above instead.

      // 5) For each related hash to blank node list mapping in hash to related
      // blank nodes map, sorted lexicographically by related hash:
      var hashes = Object.keys(hashToRelated).sort();
      self.forEach(hashes, function(hash, idx, callback) {
        // 5.1) Append the related hash to the data to hash.
        md.update(hash);

        // 5.2) Create a string chosen path.
        var chosenPath = '';

        // 5.3) Create an unset chosen issuer variable.
        var chosenIssuer;

        // 5.4) For each permutation of blank node list:
        var permutator = new Permutator(hashToRelated[hash]);
        self.whilst(
          function() { return permutator.hasNext(); },
          function(nextPermutation) {
          var permutation = permutator.next();

          // 5.4.1) Create a copy of issuer, issuer copy.
          var issuerCopy = issuer.clone();

          // 5.4.2) Create a string path.
          var path = '';

          // 5.4.3) Create a recursion list, to store blank node identifiers
          // that must be recursively processed by this algorithm.
          var recursionList = [];

          self.waterfall([
            function(callback) {
              // 5.4.4) For each related in permutation:
              self.forEach(permutation, function(related, idx, callback) {
                // 5.4.4.1) If a canonical identifier has been issued for
                // related, append it to path.
                if(self.canonicalIssuer.hasId(related)) {
                  path += self.canonicalIssuer.getId(related);
                } else {
                  // 5.4.4.2) Otherwise:
                  // 5.4.4.2.1) If issuer copy has not issued an identifier for
                  // related, append related to recursion list.
                  if(!issuerCopy.hasId(related)) {
                    recursionList.push(related);
                  }
                  // 5.4.4.2.2) Use the Issue Identifier algorithm, passing
                  // issuer copy and related and append the result to path.
                  path += issuerCopy.getId(related);
                }

                // 5.4.4.3) If chosen path is not empty and the length of path
                // is greater than or equal to the length of chosen path and
                // path is lexicographically greater than chosen path, then
                // skip to the next permutation.
                if(chosenPath.length !== 0 &&
                  path.length >= chosenPath.length && path > chosenPath) {
                  // FIXME: may cause inaccurate total depth calculation
                  return nextPermutation();
                }
                callback();
              }, callback);
            },
            function(callback) {
              // 5.4.5) For each related in recursion list:
              self.forEach(recursionList, function(related, idx, callback) {
                // 5.4.5.1) Set result to the result of recursively executing
                // the Hash N-Degree Quads algorithm, passing related for
                // identifier and issuer copy for path identifier issuer.
                self.hashNDegreeQuads(
                  related, issuerCopy, function(err, result) {
                  if(err) {
                    return callback(err);
                  }

                  // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer
                  // copy and related and append the result to path.
                  path += issuerCopy.getId(related);

                  // 5.4.5.3) Append <, the hash in result, and > to path.
                  path += '<' + result.hash + '>';

                  // 5.4.5.4) Set issuer copy to the identifier issuer in
                  // result.
                  issuerCopy = result.issuer;

                  // 5.4.5.5) If chosen path is not empty and the length of path
                  // is greater than or equal to the length of chosen path and
                  // path is lexicographically greater than chosen path, then
                  // skip to the next permutation.
                  if(chosenPath.length !== 0 &&
                    path.length >= chosenPath.length && path > chosenPath) {
                    // FIXME: may cause inaccurate total depth calculation
                    return nextPermutation();
                  }
                  callback();
                });
              }, callback);
            },
            function(callback) {
              // 5.4.6) If chosen path is empty or path is lexicographically
              // less than chosen path, set chosen path to path and chosen
              // issuer to issuer copy.
              if(chosenPath.length === 0 || path < chosenPath) {
                chosenPath = path;
                chosenIssuer = issuerCopy;
              }
              callback();
            }
          ], nextPermutation);
        }, function(err) {
          if(err) {
            return callback(err);
          }

          // 5.5) Append chosen path to data to hash.
          md.update(chosenPath);

          // 5.6) Replace issuer, by reference, with chosen issuer.
          issuer = chosenIssuer;
          callback();
        });
      }, callback);
    }
  ], function(err) {
    // 6) Return issuer and the hash that results from passing data to hash
    // through the hash algorithm.
    callback(err, {hash: md.digest(), issuer: issuer});
  });
};

// helper for creating hash to related blank nodes map
Normalize.prototype.createHashToRelated = function(id, issuer, callback) {
  var self = this;

  // 1) Create a hash to related blank nodes map for storing hashes that
  // identify related blank nodes.
  var hashToRelated = {};

  // 2) Get a reference, quads, to the list of quads in the blank node to
  // quads map for the key identifier.
  var quads = self.blankNodeInfo[id].quads;

  // 3) For each quad in quads:
  self.forEach(quads, function(quad, idx, callback) {
    // 3.1) For each component in quad, if component is the subject, object,
    // and graph name and it is a blank node that is not identified by
    // identifier:
    self.forEach(quad, function(component, key, callback) {
      if(key === 'predicate' ||
        !(component.type === 'blank node' && component.value !== id)) {
        return callback();
      }
      // 3.1.1) Set hash to the result of the Hash Related Blank Node
      // algorithm, passing the blank node identifier for component as
      // related, quad, path identifier issuer as issuer, and position as
      // either s, o, or g based on whether component is a subject, object,
      // graph name, respectively.
      var related = component.value;
      var position = POSITIONS[key];
      self.hashRelatedBlankNode(
        related, quad, issuer, position, function(err, hash) {
        if(err) {
          return callback(err);
        }
        // 3.1.2) Add a mapping of hash to the blank node identifier for
        // component to hash to related blank nodes map, adding an entry as
        // necessary.
        if(hash in hashToRelated) {
          hashToRelated[hash].push(related);
        } else {
          hashToRelated[hash] = [related];
        }
        callback();
      });
    }, callback);
  }, function(err) {
    callback(err, hashToRelated);
  });
};

// helper that iterates over quad components (skips predicate)
Normalize.prototype.forEachComponent = function(quad, op) {
  for(var key in quad) {
    // skip `predicate`
    if(key === 'predicate') {
      continue;
    }
    op(quad[key], key, quad);
  }
};

return Normalize;

})(); // end of define URDNA2015

/////////////////////////////// DEFINE URGNA2012 //////////////////////////////

var URGNA2012 = (function() {

var Normalize = function(options) {
  URDNA2015.call(this, options);
  this.name = 'URGNA2012';
};
Normalize.prototype = new URDNA2015();

// helper for modifying component during Hash First Degree Quads
Normalize.prototype.modifyFirstDegreeComponent = function(id, component, key) {
  if(component.type !== 'blank node') {
    return component;
  }
  component = _clone(component);
  if(key === 'name') {
    component.value = '_:g';
  } else {
    component.value = (component.value === id ? '_:a' : '_:z');
  }
  return component;
};

// helper for getting a related predicate
Normalize.prototype.getRelatedPredicate = function(quad) {
  return quad.predicate.value;
};

// helper for creating hash to related blank nodes map
Normalize.prototype.createHashToRelated = function(id, issuer, callback) {
  var self = this;

  // 1) Create a hash to related blank nodes map for storing hashes that
  // identify related blank nodes.
  var hashToRelated = {};

  // 2) Get a reference, quads, to the list of quads in the blank node to
  // quads map for the key identifier.
  var quads = self.blankNodeInfo[id].quads;

  // 3) For each quad in quads:
  self.forEach(quads, function(quad, idx, callback) {
    // 3.1) If the quad's subject is a blank node that does not match
    // identifier, set hash to the result of the Hash Related Blank Node
    // algorithm, passing the blank node identifier for subject as related,
    // quad, path identifier issuer as issuer, and p as position.
    var position;
    var related;
    if(quad.subject.type === 'blank node' && quad.subject.value !== id) {
      related = quad.subject.value;
      position = 'p';
    } else if(quad.object.type === 'blank node' && quad.object.value !== id) {
      // 3.2) Otherwise, if quad's object is a blank node that does not match
      // identifier, to the result of the Hash Related Blank Node algorithm,
      // passing the blank node identifier for object as related, quad, path
      // identifier issuer as issuer, and r as position.
      related = quad.object.value;
      position = 'r';
    } else {
      // 3.3) Otherwise, continue to the next quad.
      return callback();
    }
    // 3.4) Add a mapping of hash to the blank node identifier for the
    // component that matched (subject or object) to hash to related blank
    // nodes map, adding an entry as necessary.
    self.hashRelatedBlankNode(
      related, quad, issuer, position, function(err, hash) {
      if(hash in hashToRelated) {
        hashToRelated[hash].push(related);
      } else {
        hashToRelated[hash] = [related];
      }
      callback();
    });
  }, function(err) {
    callback(err, hashToRelated);
  });
};

return Normalize;

})(); // end of define URGNA2012

/**
 * Recursively flattens the subjects in the given JSON-LD expanded input
 * into a node map.
 *
 * @param input the JSON-LD expanded input.
 * @param graphs a map of graph name to subject map.
 * @param graph the name of the current graph.
 * @param issuer the blank node identifier issuer.
 * @param name the name assigned to the current input if it is a bnode.
 * @param list the list to append to, null for none.
 */
function _createNodeMap(input, graphs, graph, issuer, name, list) {
  // recurse through array
  if(_isArray(input)) {
    for(var i = 0; i < input.length; ++i) {
      _createNodeMap(input[i], graphs, graph, issuer, undefined, list);
    }
    return;
  }

  // add non-object to list
  if(!_isObject(input)) {
    if(list) {
      list.push(input);
    }
    return;
  }

  // add values to list
  if(_isValue(input)) {
    if('@type' in input) {
      var type = input['@type'];
      // rename @type blank node
      if(type.indexOf('_:') === 0) {
        input['@type'] = type = issuer.getId(type);
      }
    }
    if(list) {
      list.push(input);
    }
    return;
  }

  // Note: At this point, input must be a subject.

  // spec requires @type to be named first, so assign names early
  if('@type' in input) {
    var types = input['@type'];
    for(var i = 0; i < types.length; ++i) {
      var type = types[i];
      if(type.indexOf('_:') === 0) {
        issuer.getId(type);
      }
    }
  }

  // get name for subject
  if(_isUndefined(name)) {
    name = _isBlankNode(input) ? issuer.getId(input['@id']) : input['@id'];
  }

  // add subject reference to list
  if(list) {
    list.push({'@id': name});
  }

  // create new subject or merge into existing one
  var subjects = graphs[graph];
  var subject = subjects[name] = subjects[name] || {};
  subject['@id'] = name;
  var properties = Object.keys(input).sort();
  for(var pi = 0; pi < properties.length; ++pi) {
    var property = properties[pi];

    // skip @id
    if(property === '@id') {
      continue;
    }

    // handle reverse properties
    if(property === '@reverse') {
      var referencedNode = {'@id': name};
      var reverseMap = input['@reverse'];
      for(var reverseProperty in reverseMap) {
        var items = reverseMap[reverseProperty];
        for(var ii = 0; ii < items.length; ++ii) {
          var item = items[ii];
          var itemName = item['@id'];
          if(_isBlankNode(item)) {
            itemName = issuer.getId(itemName);
          }
          _createNodeMap(item, graphs, graph, issuer, itemName);
          jsonld.addValue(
            subjects[itemName], reverseProperty, referencedNode,
            {propertyIsArray: true, allowDuplicate: false});
        }
      }
      continue;
    }

    // recurse into graph
    if(property === '@graph') {
      // add graph subjects map entry
      if(!(name in graphs)) {
        graphs[name] = {};
      }
      var g = (graph === '@merged') ? graph : name;
      _createNodeMap(input[property], graphs, g, issuer);
      continue;
    }

    // copy non-@type keywords
    if(property !== '@type' && _isKeyword(property)) {
      if(property === '@index' && property in subject &&
        (input[property] !== subject[property] ||
        input[property]['@id'] !== subject[property]['@id'])) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; conflicting @index property detected.',
          'jsonld.SyntaxError',
          {code: 'conflicting indexes', subject: subject});
      }
      subject[property] = input[property];
      continue;
    }

    // iterate over objects
    var objects = input[property];

    // if property is a bnode, assign it a new id
    if(property.indexOf('_:') === 0) {
      property = issuer.getId(property);
    }

    // ensure property is added for empty arrays
    if(objects.length === 0) {
      jsonld.addValue(subject, property, [], {propertyIsArray: true});
      continue;
    }
    for(var oi = 0; oi < objects.length; ++oi) {
      var o = objects[oi];

      if(property === '@type') {
        // rename @type blank nodes
        o = (o.indexOf('_:') === 0) ? issuer.getId(o) : o;
      }

      // handle embedded subject or subject reference
      if(_isSubject(o) || _isSubjectReference(o)) {
        // relabel blank node @id
        var id = _isBlankNode(o) ? issuer.getId(o['@id']) : o['@id'];

        // add reference and recurse
        jsonld.addValue(
          subject, property, {'@id': id},
          {propertyIsArray: true, allowDuplicate: false});
        _createNodeMap(o, graphs, graph, issuer, id);
      } else if(_isList(o)) {
        // handle @list
        var _list = [];
        _createNodeMap(o['@list'], graphs, graph, issuer, name, _list);
        o = {'@list': _list};
        jsonld.addValue(
          subject, property, o,
          {propertyIsArray: true, allowDuplicate: false});
      } else {
        // handle @value
        _createNodeMap(o, graphs, graph, issuer, name);
        jsonld.addValue(
          subject, property, o, {propertyIsArray: true, allowDuplicate: false});
      }
    }
  }
}

function _mergeNodeMaps(graphs) {
  // add all non-default graphs to default graph
  var defaultGraph = graphs['@default'];
  var graphNames = Object.keys(graphs).sort();
  for(var i = 0; i < graphNames.length; ++i) {
    var graphName = graphNames[i];
    if(graphName === '@default') {
      continue;
    }
    var nodeMap = graphs[graphName];
    var subject = defaultGraph[graphName];
    if(!subject) {
      defaultGraph[graphName] = subject = {
        '@id': graphName,
        '@graph': []
      };
    } else if(!('@graph' in subject)) {
      subject['@graph'] = [];
    }
    var graph = subject['@graph'];
    var ids = Object.keys(nodeMap).sort();
    for(var ii = 0; ii < ids.length; ++ii) {
      var node = nodeMap[ids[ii]];
      // only add full subjects
      if(!_isSubjectReference(node)) {
        graph.push(node);
      }
    }
  }
  return defaultGraph;
}

/**
 * Frames subjects according to the given frame.
 *
 * @param state the current framing state.
 * @param subjects the subjects to filter.
 * @param frame the frame.
 * @param parent the parent subject or top-level array.
 * @param property the parent property, initialized to null.
 */
function _frame(state, subjects, frame, parent, property) {
  // validate the frame
  _validateFrame(frame);
  frame = frame[0];

  // get flags for current frame
  var options = state.options;
  var flags = {
    embed: _getFrameFlag(frame, options, 'embed'),
    explicit: _getFrameFlag(frame, options, 'explicit'),
    requireAll: _getFrameFlag(frame, options, 'requireAll')
  };

  // filter out subjects that match the frame
  var matches = _filterSubjects(state, subjects, frame, flags);

  // add matches to output
  var ids = Object.keys(matches).sort();
  for(var idx = 0; idx < ids.length; ++idx) {
    var id = ids[idx];
    var subject = matches[id];

    if(flags.embed === '@link' && id in state.link) {
      // TODO: may want to also match an existing linked subject against
      // the current frame ... so different frames could produce different
      // subjects that are only shared in-memory when the frames are the same

      // add existing linked subject
      _addFrameOutput(parent, property, state.link[id]);
      continue;
    }

    /* Note: In order to treat each top-level match as a compartmentalized
    result, clear the unique embedded subjects map when the property is null,
    which only occurs at the top-level. */
    if(property === null) {
      state.uniqueEmbeds = {};
    }

    // start output for subject
    var output = {};
    output['@id'] = id;
    state.link[id] = output;

    // if embed is @never or if a circular reference would be created by an
    // embed, the subject cannot be embedded, just add the reference;
    // note that a circular reference won't occur when the embed flag is
    // `@link` as the above check will short-circuit before reaching this point
    if(flags.embed === '@never' ||
      _createsCircularReference(subject, state.subjectStack)) {
      _addFrameOutput(parent, property, output);
      continue;
    }

    // if only the last match should be embedded
    if(flags.embed === '@last') {
      // remove any existing embed
      if(id in state.uniqueEmbeds) {
        _removeEmbed(state, id);
      }
      state.uniqueEmbeds[id] = {parent: parent, property: property};
    }

    // push matching subject onto stack to enable circular embed checks
    state.subjectStack.push(subject);

    // iterate over subject properties
    var props = Object.keys(subject).sort();
    for(var i = 0; i < props.length; i++) {
      var prop = props[i];

      // copy keywords to output
      if(_isKeyword(prop)) {
        output[prop] = _clone(subject[prop]);
        continue;
      }

      // explicit is on and property isn't in the frame, skip processing
      if(flags.explicit && !(prop in frame)) {
        continue;
      }

      // add objects
      var objects = subject[prop];
      for(var oi = 0; oi < objects.length; ++oi) {
        var o = objects[oi];

        // recurse into list
        if(_isList(o)) {
          // add empty list
          var list = {'@list': []};
          _addFrameOutput(output, prop, list);

          // add list objects
          var src = o['@list'];
          for(var n in src) {
            o = src[n];
            if(_isSubjectReference(o)) {
              var subframe = (prop in frame ?
                frame[prop][0]['@list'] : _createImplicitFrame(flags));
              // recurse into subject reference
              _frame(state, [o['@id']], subframe, list, '@list');
            } else {
              // include other values automatically
              _addFrameOutput(list, '@list', _clone(o));
            }
          }
          continue;
        }

        if(_isSubjectReference(o)) {
          // recurse into subject reference
          var subframe = (prop in frame ?
            frame[prop] : _createImplicitFrame(flags));
          _frame(state, [o['@id']], subframe, output, prop);
        } else {
          // include other values automatically
          _addFrameOutput(output, prop, _clone(o));
        }
      }
    }

    // handle defaults
    var props = Object.keys(frame).sort();
    for(var i = 0; i < props.length; ++i) {
      var prop = props[i];

      // skip keywords
      if(_isKeyword(prop)) {
        continue;
      }

      // if omit default is off, then include default values for properties
      // that appear in the next frame but are not in the matching subject
      var next = frame[prop][0];
      var omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');
      if(!omitDefaultOn && !(prop in output)) {
        var preserve = '@null';
        if('@default' in next) {
          preserve = _clone(next['@default']);
        }
        if(!_isArray(preserve)) {
          preserve = [preserve];
        }
        output[prop] = [{'@preserve': preserve}];
      }
    }

    // add output to parent
    _addFrameOutput(parent, property, output);

    // pop matching subject from circular ref-checking stack
    state.subjectStack.pop();
  }
}

/**
 * Creates an implicit frame when recursing through subject matches. If
 * a frame doesn't have an explicit frame for a particular property, then
 * a wildcard child frame will be created that uses the same flags that the
 * parent frame used.
 *
 * @param flags the current framing flags.
 *
 * @return the implicit frame.
 */
function _createImplicitFrame(flags) {
  var frame = {};
  for(var key in flags) {
    if(flags[key] !== undefined) {
      frame['@' + key] = [flags[key]];
    }
  }
  return [frame];
}

/**
 * Checks the current subject stack to see if embedding the given subject
 * would cause a circular reference.
 *
 * @param subjectToEmbed the subject to embed.
 * @param subjectStack the current stack of subjects.
 *
 * @return true if a circular reference would be created, false if not.
 */
function _createsCircularReference(subjectToEmbed, subjectStack) {
  for(var i = subjectStack.length - 1; i >= 0; --i) {
    if(subjectStack[i]['@id'] === subjectToEmbed['@id']) {
      return true;
    }
  }
  return false;
}

/**
 * Gets the frame flag value for the given flag name.
 *
 * @param frame the frame.
 * @param options the framing options.
 * @param name the flag name.
 *
 * @return the flag value.
 */
function _getFrameFlag(frame, options, name) {
  var flag = '@' + name;
  var rval = (flag in frame ? frame[flag][0] : options[name]);
  if(name === 'embed') {
    // default is "@last"
    // backwards-compatibility support for "embed" maps:
    // true => "@last"
    // false => "@never"
    if(rval === true) {
      rval = '@last';
    } else if(rval === false) {
      rval = '@never';
    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link') {
      rval = '@last';
    }
  }
  return rval;
}

/**
 * Validates a JSON-LD frame, throwing an exception if the frame is invalid.
 *
 * @param frame the frame to validate.
 */
function _validateFrame(frame) {
  if(!_isArray(frame) || frame.length !== 1 || !_isObject(frame[0])) {
    throw new JsonLdError(
      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',
      'jsonld.SyntaxError', {frame: frame});
  }
}

/**
 * Returns a map of all of the subjects that match a parsed frame.
 *
 * @param state the current framing state.
 * @param subjects the set of subjects to filter.
 * @param frame the parsed frame.
 * @param flags the frame flags.
 *
 * @return all of the matched subjects.
 */
function _filterSubjects(state, subjects, frame, flags) {
  // filter subjects in @id order
  var rval = {};
  for(var i = 0; i < subjects.length; ++i) {
    var id = subjects[i];
    var subject = state.subjects[id];
    if(_filterSubject(subject, frame, flags)) {
      rval[id] = subject;
    }
  }
  return rval;
}

/**
 * Returns true if the given subject matches the given frame.
 *
 * @param subject the subject to check.
 * @param frame the frame to check.
 * @param flags the frame flags.
 *
 * @return true if the subject matches, false if not.
 */
function _filterSubject(subject, frame, flags) {
  // check @type (object value means 'any' type, fall through to ducktyping)
  if('@type' in frame &&
    !(frame['@type'].length === 1 && _isObject(frame['@type'][0]))) {
    var types = frame['@type'];
    for(var i = 0; i < types.length; ++i) {
      // any matching @type is a match
      if(jsonld.hasValue(subject, '@type', types[i])) {
        return true;
      }
    }
    return false;
  }

  // check ducktype
  var wildcard = true;
  var matchesSome = false;
  for(var key in frame) {
    if(_isKeyword(key)) {
      // skip non-@id and non-@type
      if(key !== '@id' && key !== '@type') {
        continue;
      }
      wildcard = false;

      // check @id for a specific @id value
      if(key === '@id' && _isString(frame[key])) {
        if(subject[key] !== frame[key]) {
          return false;
        }
        matchesSome = true;
        continue;
      }
    }

    wildcard = false;

    if(key in subject) {
      // frame[key] === [] means do not match if property is present
      if(_isArray(frame[key]) && frame[key].length === 0 &&
        subject[key] !== undefined) {
        return false;
      }
      matchesSome = true;
      continue;
    }

    // all properties must match to be a duck unless a @default is specified
    var hasDefault = (_isArray(frame[key]) && _isObject(frame[key][0]) &&
      '@default' in frame[key][0]);
    if(flags.requireAll && !hasDefault) {
      return false;
    }
  }

  // return true if wildcard or subject matches some properties
  return wildcard || matchesSome;
}

/**
 * Removes an existing embed.
 *
 * @param state the current framing state.
 * @param id the @id of the embed to remove.
 */
function _removeEmbed(state, id) {
  // get existing embed
  var embeds = state.uniqueEmbeds;
  var embed = embeds[id];
  var parent = embed.parent;
  var property = embed.property;

  // create reference to replace embed
  var subject = {'@id': id};

  // remove existing embed
  if(_isArray(parent)) {
    // replace subject with reference
    for(var i = 0; i < parent.length; ++i) {
      if(jsonld.compareValues(parent[i], subject)) {
        parent[i] = subject;
        break;
      }
    }
  } else {
    // replace subject with reference
    var useArray = _isArray(parent[property]);
    jsonld.removeValue(parent, property, subject, {propertyIsArray: useArray});
    jsonld.addValue(parent, property, subject, {propertyIsArray: useArray});
  }

  // recursively remove dependent dangling embeds
  var removeDependents = function(id) {
    // get embed keys as a separate array to enable deleting keys in map
    var ids = Object.keys(embeds);
    for(var i = 0; i < ids.length; ++i) {
      var next = ids[i];
      if(next in embeds && _isObject(embeds[next].parent) &&
        embeds[next].parent['@id'] === id) {
        delete embeds[next];
        removeDependents(next);
      }
    }
  };
  removeDependents(id);
}

/**
 * Adds framing output to the given parent.
 *
 * @param parent the parent to add to.
 * @param property the parent property.
 * @param output the output to add.
 */
function _addFrameOutput(parent, property, output) {
  if(_isObject(parent)) {
    jsonld.addValue(parent, property, output, {propertyIsArray: true});
  } else {
    parent.push(output);
  }
}

/**
 * Removes the @preserve keywords as the last step of the framing algorithm.
 *
 * @param ctx the active context used to compact the input.
 * @param input the framed, compacted output.
 * @param options the compaction options used.
 *
 * @return the resulting output.
 */
function _removePreserve(ctx, input, options) {
  // recurse through arrays
  if(_isArray(input)) {
    var output = [];
    for(var i = 0; i < input.length; ++i) {
      var result = _removePreserve(ctx, input[i], options);
      // drop nulls from arrays
      if(result !== null) {
        output.push(result);
      }
    }
    input = output;
  } else if(_isObject(input)) {
    // remove @preserve
    if('@preserve' in input) {
      if(input['@preserve'] === '@null') {
        return null;
      }
      return input['@preserve'];
    }

    // skip @values
    if(_isValue(input)) {
      return input;
    }

    // recurse through @lists
    if(_isList(input)) {
      input['@list'] = _removePreserve(ctx, input['@list'], options);
      return input;
    }

    // handle in-memory linked nodes
    var idAlias = _compactIri(ctx, '@id');
    if(idAlias in input) {
      var id = input[idAlias];
      if(id in options.link) {
        var idx = options.link[id].indexOf(input);
        if(idx === -1) {
          // prevent circular visitation
          options.link[id].push(input);
        } else {
          // already visited
          return options.link[id][idx];
        }
      } else {
        // prevent circular visitation
        options.link[id] = [input];
      }
    }

    // recurse through properties
    for(var prop in input) {
      var result = _removePreserve(ctx, input[prop], options);
      var container = jsonld.getContextValue(ctx, prop, '@container');
      if(options.compactArrays && _isArray(result) && result.length === 1 &&
        container === null) {
        result = result[0];
      }
      input[prop] = result;
    }
  }
  return input;
}

/**
 * Compares two strings first based on length and then lexicographically.
 *
 * @param a the first string.
 * @param b the second string.
 *
 * @return -1 if a < b, 1 if a > b, 0 if a == b.
 */
function _compareShortestLeast(a, b) {
  if(a.length < b.length) {
    return -1;
  }
  if(b.length < a.length) {
    return 1;
  }
  if(a === b) {
    return 0;
  }
  return (a < b) ? -1 : 1;
}

/**
 * Picks the preferred compaction term from the given inverse context entry.
 *
 * @param activeCtx the active context.
 * @param iri the IRI to pick the term for.
 * @param value the value to pick the term for.
 * @param containers the preferred containers.
 * @param typeOrLanguage either '@type' or '@language'.
 * @param typeOrLanguageValue the preferred value for '@type' or '@language'.
 *
 * @return the preferred term.
 */
function _selectTerm(
  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {
  if(typeOrLanguageValue === null) {
    typeOrLanguageValue = '@null';
  }

  // preferences for the value of @type or @language
  var prefs = [];

  // determine prefs for @id based on whether or not value compacts to a term
  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&
    _isSubjectReference(value)) {
    // prefer @reverse first
    if(typeOrLanguageValue === '@reverse') {
      prefs.push('@reverse');
    }
    // try to compact value to a term
    var term = _compactIri(activeCtx, value['@id'], null, {vocab: true});
    if(term in activeCtx.mappings &&
      activeCtx.mappings[term] &&
      activeCtx.mappings[term]['@id'] === value['@id']) {
      // prefer @vocab
      prefs.push.apply(prefs, ['@vocab', '@id']);
    } else {
      // prefer @id
      prefs.push.apply(prefs, ['@id', '@vocab']);
    }
  } else {
    prefs.push(typeOrLanguageValue);
  }
  prefs.push('@none');

  var containerMap = activeCtx.inverse[iri];
  for(var ci = 0; ci < containers.length; ++ci) {
    // if container not available in the map, continue
    var container = containers[ci];
    if(!(container in containerMap)) {
      continue;
    }

    var typeOrLanguageValueMap = containerMap[container][typeOrLanguage];
    for(var pi = 0; pi < prefs.length; ++pi) {
      // if type/language option not available in the map, continue
      var pref = prefs[pi];
      if(!(pref in typeOrLanguageValueMap)) {
        continue;
      }

      // select term
      return typeOrLanguageValueMap[pref];
    }
  }

  return null;
}

/**
 * Compacts an IRI or keyword into a term or prefix if it can be. If the
 * IRI has an associated value it may be passed.
 *
 * @param activeCtx the active context to use.
 * @param iri the IRI to compact.
 * @param value the value to check or null.
 * @param relativeTo options for how to compact IRIs:
 *          vocab: true to split after @vocab, false not to.
 * @param reverse true if a reverse property is being compacted, false if not.
 *
 * @return the compacted term, prefix, keyword alias, or the original IRI.
 */
function _compactIri(activeCtx, iri, value, relativeTo, reverse) {
  // can't compact null
  if(iri === null) {
    return iri;
  }

  // default value and parent to null
  if(_isUndefined(value)) {
    value = null;
  }
  // default reverse to false
  if(_isUndefined(reverse)) {
    reverse = false;
  }
  relativeTo = relativeTo || {};

  var inverseCtx = activeCtx.getInverse();

  // if term is a keyword, it can only be compacted to a simple alias
  if(_isKeyword(iri)) {
    if(iri in inverseCtx) {
      return inverseCtx[iri]['@none']['@type']['@none'];
    }
    return iri;
  }

  // use inverse context to pick a term if iri is relative to vocab
  if(relativeTo.vocab && iri in inverseCtx) {
    var defaultLanguage = activeCtx['@language'] || '@none';

    // prefer @index if available in value
    var containers = [];
    if(_isObject(value) && '@index' in value) {
      containers.push('@index');
    }

    // defaults for term selection based on type/language
    var typeOrLanguage = '@language';
    var typeOrLanguageValue = '@null';

    if(reverse) {
      typeOrLanguage = '@type';
      typeOrLanguageValue = '@reverse';
      containers.push('@set');
    } else if(_isList(value)) {
      // choose the most specific term that works for all elements in @list
      // only select @list containers if @index is NOT in value
      if(!('@index' in value)) {
        containers.push('@list');
      }
      var list = value['@list'];
      var commonLanguage = (list.length === 0) ? defaultLanguage : null;
      var commonType = null;
      for(var i = 0; i < list.length; ++i) {
        var item = list[i];
        var itemLanguage = '@none';
        var itemType = '@none';
        if(_isValue(item)) {
          if('@language' in item) {
            itemLanguage = item['@language'];
          } else if('@type' in item) {
            itemType = item['@type'];
          } else {
            // plain literal
            itemLanguage = '@null';
          }
        } else {
          itemType = '@id';
        }
        if(commonLanguage === null) {
          commonLanguage = itemLanguage;
        } else if(itemLanguage !== commonLanguage && _isValue(item)) {
          commonLanguage = '@none';
        }
        if(commonType === null) {
          commonType = itemType;
        } else if(itemType !== commonType) {
          commonType = '@none';
        }
        // there are different languages and types in the list, so choose
        // the most generic term, no need to keep iterating the list
        if(commonLanguage === '@none' && commonType === '@none') {
          break;
        }
      }
      commonLanguage = commonLanguage || '@none';
      commonType = commonType || '@none';
      if(commonType !== '@none') {
        typeOrLanguage = '@type';
        typeOrLanguageValue = commonType;
      } else {
        typeOrLanguageValue = commonLanguage;
      }
    } else {
      if(_isValue(value)) {
        if('@language' in value && !('@index' in value)) {
          containers.push('@language');
          typeOrLanguageValue = value['@language'];
        } else if('@type' in value) {
          typeOrLanguage = '@type';
          typeOrLanguageValue = value['@type'];
        }
      } else {
        typeOrLanguage = '@type';
        typeOrLanguageValue = '@id';
      }
      containers.push('@set');
    }

    // do term selection
    containers.push('@none');
    var term = _selectTerm(
      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);
    if(term !== null) {
      return term;
    }
  }

  // no term match, use @vocab if available
  if(relativeTo.vocab) {
    if('@vocab' in activeCtx) {
      // determine if vocab is a prefix of the iri
      var vocab = activeCtx['@vocab'];
      if(iri.indexOf(vocab) === 0 && iri !== vocab) {
        // use suffix as relative iri if it is not a term in the active context
        var suffix = iri.substr(vocab.length);
        if(!(suffix in activeCtx.mappings)) {
          return suffix;
        }
      }
    }
  }

  // no term or @vocab match, check for possible CURIEs
  var choice = null;
  var idx = 0;
  var partialMatches = [];
  var iriMap = activeCtx.fastCurieMap;
  // check for partial matches of against `iri`, which means look until
  // iri.length - 1, not full length
  var maxPartialLength = iri.length - 1;
  for(; idx < maxPartialLength && iri[idx] in iriMap; ++idx) {
    iriMap = iriMap[iri[idx]];
    if('' in iriMap) {
      partialMatches.push(iriMap[''][0]);
    }
  }
  // check partial matches in reverse order to prefer longest ones first
  for(var i = partialMatches.length - 1; i >= 0; --i) {
    var entry = partialMatches[i];
    var terms = entry.terms;
    for(var ti = 0; ti < terms.length; ++ti) {
      // a CURIE is usable if:
      // 1. it has no mapping, OR
      // 2. value is null, which means we're not compacting an @value, AND
      //   the mapping matches the IRI
      var curie = terms[ti] + ':' + iri.substr(entry.iri.length);
      var isUsableCurie = (!(curie in activeCtx.mappings) ||
        (value === null && activeCtx.mappings[curie]['@id'] === iri));

      // select curie if it is shorter or the same length but lexicographically
      // less than the current choice
      if(isUsableCurie && (choice === null ||
        _compareShortestLeast(curie, choice) < 0)) {
        choice = curie;
      }
    }
  }

  // return chosen curie
  if(choice !== null) {
    return choice;
  }

  // compact IRI relative to base
  if(!relativeTo.vocab) {
    return _removeBase(activeCtx['@base'], iri);
  }

  // return IRI as is
  return iri;
}

/**
 * Performs value compaction on an object with '@value' or '@id' as the only
 * property.
 *
 * @param activeCtx the active context.
 * @param activeProperty the active property that points to the value.
 * @param value the value to compact.
 *
 * @return the compaction result.
 */
function _compactValue(activeCtx, activeProperty, value) {
  // value is a @value
  if(_isValue(value)) {
    // get context rules
    var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');
    var language = jsonld.getContextValue(
      activeCtx, activeProperty, '@language');
    var container = jsonld.getContextValue(
      activeCtx, activeProperty, '@container');

    // whether or not the value has an @index that must be preserved
    var preserveIndex = (('@index' in value) &&
      container !== '@index');

    // if there's no @index to preserve ...
    if(!preserveIndex) {
      // matching @type or @language specified in context, compact value
      if(value['@type'] === type || value['@language'] === language) {
        return value['@value'];
      }
    }

    // return just the value of @value if all are true:
    // 1. @value is the only key or @index isn't being preserved
    // 2. there is no default language or @value is not a string or
    //   the key has a mapping with a null @language
    var keyCount = Object.keys(value).length;
    var isValueOnlyKey = (keyCount === 1 ||
      (keyCount === 2 && ('@index' in value) && !preserveIndex));
    var hasDefaultLanguage = ('@language' in activeCtx);
    var isValueString = _isString(value['@value']);
    var hasNullMapping = (activeCtx.mappings[activeProperty] &&
      activeCtx.mappings[activeProperty]['@language'] === null);
    if(isValueOnlyKey &&
      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {
      return value['@value'];
    }

    var rval = {};

    // preserve @index
    if(preserveIndex) {
      rval[_compactIri(activeCtx, '@index')] = value['@index'];
    }

    if('@type' in value) {
      // compact @type IRI
      rval[_compactIri(activeCtx, '@type')] = _compactIri(
        activeCtx, value['@type'], null, {vocab: true});
    } else if('@language' in value) {
      // alias @language
      rval[_compactIri(activeCtx, '@language')] = value['@language'];
    }

    // alias @value
    rval[_compactIri(activeCtx, '@value')] = value['@value'];

    return rval;
  }

  // value is a subject reference
  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});
  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');
  var compacted = _compactIri(
    activeCtx, value['@id'], null, {vocab: type === '@vocab'});

  // compact to scalar
  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {
    return compacted;
  }

  var rval = {};
  rval[_compactIri(activeCtx, '@id')] = compacted;
  return rval;
}

/**
 * Creates a term definition during context processing.
 *
 * @param activeCtx the current active context.
 * @param localCtx the local context being processed.
 * @param term the term in the local context to define the mapping for.
 * @param defined a map of defining/defined keys to detect cycles and prevent
 *          double definitions.
 */
function _createTermDefinition(activeCtx, localCtx, term, defined) {
  if(term in defined) {
    // term already defined
    if(defined[term]) {
      return;
    }
    // cycle detected
    throw new JsonLdError(
      'Cyclical context definition detected.',
      'jsonld.CyclicalContext',
      {code: 'cyclic IRI mapping', context: localCtx, term: term});
  }

  // now defining term
  defined[term] = false;

  if(_isKeyword(term)) {
    throw new JsonLdError(
      'Invalid JSON-LD syntax; keywords cannot be overridden.',
      'jsonld.SyntaxError',
      {code: 'keyword redefinition', context: localCtx, term: term});
  }

  if(term === '') {
    throw new JsonLdError(
      'Invalid JSON-LD syntax; a term cannot be an empty string.',
      'jsonld.SyntaxError',
      {code: 'invalid term definition', context: localCtx});
  }

  // remove old mapping
  if(activeCtx.mappings[term]) {
    delete activeCtx.mappings[term];
  }

  // get context term value
  var value = localCtx[term];

  // clear context entry
  if(value === null || (_isObject(value) && value['@id'] === null)) {
    activeCtx.mappings[term] = null;
    defined[term] = true;
    return;
  }

  // convert short-hand value to object w/@id
  if(_isString(value)) {
    value = {'@id': value};
  }

  if(!_isObject(value)) {
    throw new JsonLdError(
      'Invalid JSON-LD syntax; @context property values must be ' +
      'strings or objects.',
      'jsonld.SyntaxError',
      {code: 'invalid term definition', context: localCtx});
  }

  // create new mapping
  var mapping = activeCtx.mappings[term] = {};
  mapping.reverse = false;

  if('@reverse' in value) {
    if('@id' in value) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; a @reverse term definition must not ' +
        'contain @id.', 'jsonld.SyntaxError',
        {code: 'invalid reverse property', context: localCtx});
    }
    var reverse = value['@reverse'];
    if(!_isString(reverse)) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',
        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});
    }

    // expand and add @id mapping
    var id = _expandIri(
      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined);
    if(!_isAbsoluteIri(id)) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +
        'absolute IRI or a blank node identifier.',
        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});
    }
    mapping['@id'] = id;
    mapping.reverse = true;
  } else if('@id' in value) {
    var id = value['@id'];
    if(!_isString(id)) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; a @context @id value must be an array ' +
        'of strings or a string.',
        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});
    }
    if(id !== term) {
      // expand and add @id mapping
      id = _expandIri(
        activeCtx, id, {vocab: true, base: false}, localCtx, defined);
      if(!_isAbsoluteIri(id) && !_isKeyword(id)) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; a @context @id value must be an ' +
          'absolute IRI, a blank node identifier, or a keyword.',
          'jsonld.SyntaxError',
          {code: 'invalid IRI mapping', context: localCtx});
      }
      mapping['@id'] = id;
    }
  }

  // always compute whether term has a colon as an optimization for
  // _compactIri
  var colon = term.indexOf(':');
  mapping._termHasColon = (colon !== -1);

  if(!('@id' in mapping)) {
    // see if the term has a prefix
    if(mapping._termHasColon) {
      var prefix = term.substr(0, colon);
      if(prefix in localCtx) {
        // define parent prefix
        _createTermDefinition(activeCtx, localCtx, prefix, defined);
      }

      if(activeCtx.mappings[prefix]) {
        // set @id based on prefix parent
        var suffix = term.substr(colon + 1);
        mapping['@id'] = activeCtx.mappings[prefix]['@id'] + suffix;
      } else {
        // term is an absolute IRI
        mapping['@id'] = term;
      }
    } else {
      // non-IRIs *must* define @ids if @vocab is not available
      if(!('@vocab' in activeCtx)) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; @context terms must define an @id.',
          'jsonld.SyntaxError',
          {code: 'invalid IRI mapping', context: localCtx, term: term});
      }
      // prepend vocab to term
      mapping['@id'] = activeCtx['@vocab'] + term;
    }
  }

  // IRI mapping now defined
  defined[term] = true;

  if('@type' in value) {
    var type = value['@type'];
    if(!_isString(type)) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; an @context @type values must be a string.',
        'jsonld.SyntaxError',
        {code: 'invalid type mapping', context: localCtx});
    }

    if(type !== '@id' && type !== '@vocab') {
      // expand @type to full IRI
      type = _expandIri(
        activeCtx, type, {vocab: true, base: false}, localCtx, defined);
      if(!_isAbsoluteIri(type)) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; an @context @type value must be an ' +
          'absolute IRI.',
          'jsonld.SyntaxError',
          {code: 'invalid type mapping', context: localCtx});
      }
      if(type.indexOf('_:') === 0) {
        throw new JsonLdError(
          'Invalid JSON-LD syntax; an @context @type values must be an IRI, ' +
          'not a blank node identifier.',
          'jsonld.SyntaxError',
          {code: 'invalid type mapping', context: localCtx});
      }
    }

    // add @type to mapping
    mapping['@type'] = type;
  }

  if('@container' in value) {
    var container = value['@container'];
    if(container !== '@list' && container !== '@set' &&
      container !== '@index' && container !== '@language') {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; @context @container value must be ' +
        'one of the following: @list, @set, @index, or @language.',
        'jsonld.SyntaxError',
        {code: 'invalid container mapping', context: localCtx});
    }
    if(mapping.reverse && container !== '@index' && container !== '@set' &&
      container !== null) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +
        'type definition must be @index or @set.', 'jsonld.SyntaxError',
        {code: 'invalid reverse property', context: localCtx});
    }

    // add @container to mapping
    mapping['@container'] = container;
  }

  if('@language' in value && !('@type' in value)) {
    var language = value['@language'];
    if(language !== null && !_isString(language)) {
      throw new JsonLdError(
        'Invalid JSON-LD syntax; @context @language value must be ' +
        'a string or null.', 'jsonld.SyntaxError',
        {code: 'invalid language mapping', context: localCtx});
    }

    // add @language to mapping
    if(language !== null) {
      language = language.toLowerCase();
    }
    mapping['@language'] = language;
  }

  // disallow aliasing @context and @preserve
  var id = mapping['@id'];
  if(id === '@context' || id === '@preserve') {
    throw new JsonLdError(
      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',
      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});
  }
}

/**
 * Expands a string to a full IRI. The string may be a term, a prefix, a
 * relative IRI, or an absolute IRI. The associated absolute IRI will be
 * returned.
 *
 * @param activeCtx the current active context.
 * @param value the string to expand.
 * @param relativeTo options for how to resolve relative IRIs:
 *          base: true to resolve against the base IRI, false not to.
 *          vocab: true to concatenate after @vocab, false not to.
 * @param localCtx the local context being processed (only given if called
 *          during context processing).
 * @param defined a map for tracking cycles in context definitions (only given
 *          if called during context processing).
 *
 * @return the expanded value.
 */
function _expandIri(activeCtx, value, relativeTo, localCtx, defined) {
  // already expanded
  if(value === null || _isKeyword(value)) {
    return value;
  }

  // ensure value is interpreted as a string
  value = String(value);

  // define term dependency if not defined
  if(localCtx && value in localCtx && defined[value] !== true) {
    _createTermDefinition(activeCtx, localCtx, value, defined);
  }

  relativeTo = relativeTo || {};
  if(relativeTo.vocab) {
    var mapping = activeCtx.mappings[value];

    // value is explicitly ignored with a null mapping
    if(mapping === null) {
      return null;
    }

    if(mapping) {
      // value is a term
      return mapping['@id'];
    }
  }

  // split value into prefix:suffix
  var colon = value.indexOf(':');
  if(colon !== -1) {
    var prefix = value.substr(0, colon);
    var suffix = value.substr(colon + 1);

    // do not expand blank nodes (prefix of '_') or already-absolute
    // IRIs (suffix of '//')
    if(prefix === '_' || suffix.indexOf('//') === 0) {
      return value;
    }

    // prefix dependency not defined, define it
    if(localCtx && prefix in localCtx) {
      _createTermDefinition(activeCtx, localCtx, prefix, defined);
    }

    // use mapping if prefix is defined
    var mapping = activeCtx.mappings[prefix];
    if(mapping) {
      return mapping['@id'] + suffix;
    }

    // already absolute IRI
    return value;
  }

  // prepend vocab
  if(relativeTo.vocab && '@vocab' in activeCtx) {
    return activeCtx['@vocab'] + value;
  }

  // prepend base
  var rval = value;
  if(relativeTo.base) {
    rval = jsonld.prependBase(activeCtx['@base'], rval);
  }

  return rval;
}

function _prependBase(base, iri) {
  // skip IRI processing
  if(base === null) {
    return iri;
  }
  // already an absolute IRI
  if(iri.indexOf(':') !== -1) {
    return iri;
  }

  // parse base if it is a string
  if(_isString(base)) {
    base = jsonld.url.parse(base || '');
  }

  // parse given IRI
  var rel = jsonld.url.parse(iri);

  // per RFC3986 5.2.2
  var transform = {
    protocol: base.protocol || ''
  };

  if(rel.authority !== null) {
    transform.authority = rel.authority;
    transform.path = rel.path;
    transform.query = rel.query;
  } else {
    transform.authority = base.authority;

    if(rel.path === '') {
      transform.path = base.path;
      if(rel.query !== null) {
        transform.query = rel.query;
      } else {
        transform.query = base.query;
      }
    } else {
      if(rel.path.indexOf('/') === 0) {
        // IRI represents an absolute path
        transform.path = rel.path;
      } else {
        // merge paths
        var path = base.path;

        // append relative path to the end of the last directory from base
        if(rel.path !== '') {
          path = path.substr(0, path.lastIndexOf('/') + 1);
          if(path.length > 0 && path.substr(-1) !== '/') {
            path += '/';
          }
          path += rel.path;
        }

        transform.path = path;
      }
      transform.query = rel.query;
    }
  }

  // remove slashes and dots in path
  transform.path = _removeDotSegments(transform.path, !!transform.authority);

  // construct URL
  var rval = transform.protocol;
  if(transform.authority !== null) {
    rval += '//' + transform.authority;
  }
  rval += transform.path;
  if(transform.query !== null) {
    rval += '?' + transform.query;
  }
  if(rel.fragment !== null) {
    rval += '#' + rel.fragment;
  }

  // handle empty base
  if(rval === '') {
    rval = './';
  }

  return rval;
}

/**
 * Removes a base IRI from the given absolute IRI.
 *
 * @param base the base IRI.
 * @param iri the absolute IRI.
 *
 * @return the relative IRI if relative to base, otherwise the absolute IRI.
 */
function _removeBase(base, iri) {
  // skip IRI processing
  if(base === null) {
    return iri;
  }

  if(_isString(base)) {
    base = jsonld.url.parse(base || '');
  }

  // establish base root
  var root = '';
  if(base.href !== '') {
    root += (base.protocol || '') + '//' + (base.authority || '');
  } else if(iri.indexOf('//')) {
    // support network-path reference with empty base
    root += '//';
  }

  // IRI not relative to base
  if(iri.indexOf(root) !== 0) {
    return iri;
  }

  // remove root from IRI and parse remainder
  var rel = jsonld.url.parse(iri.substr(root.length));

  // remove path segments that match (do not remove last segment unless there
  // is a hash or query)
  var baseSegments = base.normalizedPath.split('/');
  var iriSegments = rel.normalizedPath.split('/');
  var last = (rel.fragment || rel.query) ? 0 : 1;
  while(baseSegments.length > 0 && iriSegments.length > last) {
    if(baseSegments[0] !== iriSegments[0]) {
      break;
    }
    baseSegments.shift();
    iriSegments.shift();
  }

  // use '../' for each non-matching base segment
  var rval = '';
  if(baseSegments.length > 0) {
    // don't count the last segment (if it ends with '/' last path doesn't
    // count and if it doesn't end with '/' it isn't a path)
    baseSegments.pop();
    for(var i = 0; i < baseSegments.length; ++i) {
      rval += '../';
    }
  }

  // prepend remaining segments
  rval += iriSegments.join('/');

  // add query and hash
  if(rel.query !== null) {
    rval += '?' + rel.query;
  }
  if(rel.fragment !== null) {
    rval += '#' + rel.fragment;
  }

  // handle empty base
  if(rval === '') {
    rval = './';
  }

  return rval;
}

/**
 * Gets the initial context.
 *
 * @param options the options to use:
 *          [base] the document base IRI.
 *
 * @return the initial context.
 */
function _getInitialContext(options) {
  var base = jsonld.url.parse(options.base || '');
  return {
    '@base': base,
    mappings: {},
    inverse: null,
    getInverse: _createInverseContext,
    clone: _cloneActiveContext
  };

  /**
   * Generates an inverse context for use in the compaction algorithm, if
   * not already generated for the given active context.
   *
   * @return the inverse context.
   */
  function _createInverseContext() {
    var activeCtx = this;

    // lazily create inverse
    if(activeCtx.inverse) {
      return activeCtx.inverse;
    }
    var inverse = activeCtx.inverse = {};

    // variables for building fast CURIE map
    var fastCurieMap = activeCtx.fastCurieMap = {};
    var irisToTerms = {};

    // handle default language
    var defaultLanguage = activeCtx['@language'] || '@none';

    // create term selections for each mapping in the context, ordered by
    // shortest and then lexicographically least
    var mappings = activeCtx.mappings;
    var terms = Object.keys(mappings).sort(_compareShortestLeast);
    for(var i = 0; i < terms.length; ++i) {
      var term = terms[i];
      var mapping = mappings[term];
      if(mapping === null) {
        continue;
      }

      var container = mapping['@container'] || '@none';

      // iterate over every IRI in the mapping
      var ids = mapping['@id'];
      if(!_isArray(ids)) {
        ids = [ids];
      }
      for(var ii = 0; ii < ids.length; ++ii) {
        var iri = ids[ii];
        var entry = inverse[iri];
        var isKeyword = _isKeyword(iri);

        if(!entry) {
          // initialize entry
          inverse[iri] = entry = {};

          if(!isKeyword && !mapping._termHasColon) {
            // init IRI to term map and fast CURIE prefixes
            irisToTerms[iri] = [term];
            var fastCurieEntry = {iri: iri, terms: irisToTerms[iri]};
            if(iri[0] in fastCurieMap) {
              fastCurieMap[iri[0]].push(fastCurieEntry);
            } else {
              fastCurieMap[iri[0]] = [fastCurieEntry];
            }
          }
        } else if(!isKeyword && !mapping._termHasColon) {
          // add IRI to term match
          irisToTerms[iri].push(term);
        }

        // add new entry
        if(!entry[container]) {
          entry[container] = {
            '@language': {},
            '@type': {}
          };
        }
        entry = entry[container];

        if(mapping.reverse) {
          // term is preferred for values using @reverse
          _addPreferredTerm(mapping, term, entry['@type'], '@reverse');
        } else if('@type' in mapping) {
          // term is preferred for values using specific type
          _addPreferredTerm(mapping, term, entry['@type'], mapping['@type']);
        } else if('@language' in mapping) {
          // term is preferred for values using specific language
          var language = mapping['@language'] || '@null';
          _addPreferredTerm(mapping, term, entry['@language'], language);
        } else {
          // term is preferred for values w/default language or no type and
          // no language
          // add an entry for the default language
          _addPreferredTerm(mapping, term, entry['@language'], defaultLanguage);

          // add entries for no type and no language
          _addPreferredTerm(mapping, term, entry['@type'], '@none');
          _addPreferredTerm(mapping, term, entry['@language'], '@none');
        }
      }
    }

    // build fast CURIE map
    for(var key in fastCurieMap) {
      _buildIriMap(fastCurieMap, key, 1);
    }

    return inverse;
  }

  /**
   * Runs a recursive algorithm to build a lookup map for quickly finding
   * potential CURIEs.
   *
   * @param iriMap the map to build.
   * @param key the current key in the map to work on.
   * @param idx the index into the IRI to compare.
   */
  function _buildIriMap(iriMap, key, idx) {
    var entries = iriMap[key];
    var next = iriMap[key] = {};

    var iri;
    var letter;
    for(var i = 0; i < entries.length; ++i) {
      iri = entries[i].iri;
      if(idx >= iri.length) {
        letter = '';
      } else {
        letter = iri[idx];
      }
      if(letter in next) {
        next[letter].push(entries[i]);
      } else {
        next[letter] = [entries[i]];
      }
    }

    for(var key in next) {
      if(key === '') {
        continue;
      }
      _buildIriMap(next, key, idx + 1);
    }
  }

  /**
   * Adds the term for the given entry if not already added.
   *
   * @param mapping the term mapping.
   * @param term the term to add.
   * @param entry the inverse context typeOrLanguage entry to add to.
   * @param typeOrLanguageValue the key in the entry to add to.
   */
  function _addPreferredTerm(mapping, term, entry, typeOrLanguageValue) {
    if(!(typeOrLanguageValue in entry)) {
      entry[typeOrLanguageValue] = term;
    }
  }

  /**
   * Clones an active context, creating a child active context.
   *
   * @return a clone (child) of the active context.
   */
  function _cloneActiveContext() {
    var child = {};
    child['@base'] = this['@base'];
    child.mappings = _clone(this.mappings);
    child.clone = this.clone;
    child.inverse = null;
    child.getInverse = this.getInverse;
    if('@language' in this) {
      child['@language'] = this['@language'];
    }
    if('@vocab' in this) {
      child['@vocab'] = this['@vocab'];
    }
    return child;
  }
}

/**
 * Returns whether or not the given value is a keyword.
 *
 * @param v the value to check.
 *
 * @return true if the value is a keyword, false if not.
 */
function _isKeyword(v) {
  if(!_isString(v)) {
    return false;
  }
  switch(v) {
  case '@base':
  case '@context':
  case '@container':
  case '@default':
  case '@embed':
  case '@explicit':
  case '@graph':
  case '@id':
  case '@index':
  case '@language':
  case '@list':
  case '@omitDefault':
  case '@preserve':
  case '@requireAll':
  case '@reverse':
  case '@set':
  case '@type':
  case '@value':
  case '@vocab':
    return true;
  }
  return false;
}

/**
 * Returns true if the given value is an Object.
 *
 * @param v the value to check.
 *
 * @return true if the value is an Object, false if not.
 */
function _isObject(v) {
  return (Object.prototype.toString.call(v) === '[object Object]');
}

/**
 * Returns true if the given value is an empty Object.
 *
 * @param v the value to check.
 *
 * @return true if the value is an empty Object, false if not.
 */
function _isEmptyObject(v) {
  return _isObject(v) && Object.keys(v).length === 0;
}

/**
 * Returns true if the given value is an Array.
 *
 * @param v the value to check.
 *
 * @return true if the value is an Array, false if not.
 */
function _isArray(v) {
  return Array.isArray(v);
}

/**
 * Throws an exception if the given value is not a valid @type value.
 *
 * @param v the value to check.
 */
function _validateTypeValue(v) {
  // can be a string or an empty object
  if(_isString(v) || _isEmptyObject(v)) {
    return;
  }

  // must be an array
  var isValid = false;
  if(_isArray(v)) {
    // must contain only strings
    isValid = true;
    for(var i = 0; i < v.length; ++i) {
      if(!(_isString(v[i]))) {
        isValid = false;
        break;
      }
    }
  }

  if(!isValid) {
    throw new JsonLdError(
      'Invalid JSON-LD syntax; "@type" value must a string, an array of ' +
      'strings, or an empty object.', 'jsonld.SyntaxError',
      {code: 'invalid type value', value: v});
  }
}

/**
 * Returns true if the given value is a String.
 *
 * @param v the value to check.
 *
 * @return true if the value is a String, false if not.
 */
function _isString(v) {
  return (typeof v === 'string' ||
    Object.prototype.toString.call(v) === '[object String]');
}

/**
 * Returns true if the given value is a Number.
 *
 * @param v the value to check.
 *
 * @return true if the value is a Number, false if not.
 */
function _isNumber(v) {
  return (typeof v === 'number' ||
    Object.prototype.toString.call(v) === '[object Number]');
}

/**
 * Returns true if the given value is a double.
 *
 * @param v the value to check.
 *
 * @return true if the value is a double, false if not.
 */
function _isDouble(v) {
  return _isNumber(v) && String(v).indexOf('.') !== -1;
}

/**
 * Returns true if the given value is numeric.
 *
 * @param v the value to check.
 *
 * @return true if the value is numeric, false if not.
 */
function _isNumeric(v) {
  return !isNaN(parseFloat(v)) && isFinite(v);
}

/**
 * Returns true if the given value is a Boolean.
 *
 * @param v the value to check.
 *
 * @return true if the value is a Boolean, false if not.
 */
function _isBoolean(v) {
  return (typeof v === 'boolean' ||
    Object.prototype.toString.call(v) === '[object Boolean]');
}

/**
 * Returns true if the given value is undefined.
 *
 * @param v the value to check.
 *
 * @return true if the value is undefined, false if not.
 */
function _isUndefined(v) {
  return (typeof v === 'undefined');
}

/**
 * Returns true if the given value is a subject with properties.
 *
 * @param v the value to check.
 *
 * @return true if the value is a subject with properties, false if not.
 */
function _isSubject(v) {
  // Note: A value is a subject if all of these hold true:
  // 1. It is an Object.
  // 2. It is not a @value, @set, or @list.
  // 3. It has more than 1 key OR any existing key is not @id.
  var rval = false;
  if(_isObject(v) &&
    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {
    var keyCount = Object.keys(v).length;
    rval = (keyCount > 1 || !('@id' in v));
  }
  return rval;
}

/**
 * Returns true if the given value is a subject reference.
 *
 * @param v the value to check.
 *
 * @return true if the value is a subject reference, false if not.
 */
function _isSubjectReference(v) {
  // Note: A value is a subject reference if all of these hold true:
  // 1. It is an Object.
  // 2. It has a single key: @id.
  return (_isObject(v) && Object.keys(v).length === 1 && ('@id' in v));
}

/**
 * Returns true if the given value is a @value.
 *
 * @param v the value to check.
 *
 * @return true if the value is a @value, false if not.
 */
function _isValue(v) {
  // Note: A value is a @value if all of these hold true:
  // 1. It is an Object.
  // 2. It has the @value property.
  return _isObject(v) && ('@value' in v);
}

/**
 * Returns true if the given value is a @list.
 *
 * @param v the value to check.
 *
 * @return true if the value is a @list, false if not.
 */
function _isList(v) {
  // Note: A value is a @list if all of these hold true:
  // 1. It is an Object.
  // 2. It has the @list property.
  return _isObject(v) && ('@list' in v);
}

/**
 * Returns true if the given value is a blank node.
 *
 * @param v the value to check.
 *
 * @return true if the value is a blank node, false if not.
 */
function _isBlankNode(v) {
  // Note: A value is a blank node if all of these hold true:
  // 1. It is an Object.
  // 2. If it has an @id key its value begins with '_:'.
  // 3. It has no keys OR is not a @value, @set, or @list.
  var rval = false;
  if(_isObject(v)) {
    if('@id' in v) {
      rval = (v['@id'].indexOf('_:') === 0);
    } else {
      rval = (Object.keys(v).length === 0 ||
        !(('@value' in v) || ('@set' in v) || ('@list' in v)));
    }
  }
  return rval;
}

/**
 * Returns true if the given value is an absolute IRI, false if not.
 *
 * @param v the value to check.
 *
 * @return true if the value is an absolute IRI, false if not.
 */
function _isAbsoluteIri(v) {
  return _isString(v) && v.indexOf(':') !== -1;
}

/**
 * Clones an object, array, or string/number. If a typed JavaScript object
 * is given, such as a Date, it will be converted to a string.
 *
 * @param value the value to clone.
 *
 * @return the cloned value.
 */
function _clone(value) {
  if(value && typeof value === 'object') {
    var rval;
    if(_isArray(value)) {
      rval = [];
      for(var i = 0; i < value.length; ++i) {
        rval[i] = _clone(value[i]);
      }
    } else if(_isObject(value)) {
      rval = {};
      for(var key in value) {
        rval[key] = _clone(value[key]);
      }
    } else {
      rval = value.toString();
    }
    return rval;
  }
  return value;
}

/**
 * Finds all @context URLs in the given JSON-LD input.
 *
 * @param input the JSON-LD input.
 * @param urls a map of URLs (url => false/@contexts).
 * @param replace true to replace the URLs in the given input with the
 *           @contexts from the urls map, false not to.
 * @param base the base IRI to use to resolve relative IRIs.
 *
 * @return true if new URLs to retrieve were found, false if not.
 */
function _findContextUrls(input, urls, replace, base) {
  var count = Object.keys(urls).length;
  if(_isArray(input)) {
    for(var i = 0; i < input.length; ++i) {
      _findContextUrls(input[i], urls, replace, base);
    }
    return (count < Object.keys(urls).length);
  } else if(_isObject(input)) {
    for(var key in input) {
      if(key !== '@context') {
        _findContextUrls(input[key], urls, replace, base);
        continue;
      }

      // get @context
      var ctx = input[key];

      // array @context
      if(_isArray(ctx)) {
        var length = ctx.length;
        for(var i = 0; i < length; ++i) {
          var _ctx = ctx[i];
          if(_isString(_ctx)) {
            _ctx = jsonld.prependBase(base, _ctx);
            // replace w/@context if requested
            if(replace) {
              _ctx = urls[_ctx];
              if(_isArray(_ctx)) {
                // add flattened context
                Array.prototype.splice.apply(ctx, [i, 1].concat(_ctx));
                i += _ctx.length - 1;
                length = ctx.length;
              } else {
                ctx[i] = _ctx;
              }
            } else if(!(_ctx in urls)) {
              // @context URL found
              urls[_ctx] = false;
            }
          }
        }
      } else if(_isString(ctx)) {
        // string @context
        ctx = jsonld.prependBase(base, ctx);
        // replace w/@context if requested
        if(replace) {
          input[key] = urls[ctx];
        } else if(!(ctx in urls)) {
          // @context URL found
          urls[ctx] = false;
        }
      }
    }
    return (count < Object.keys(urls).length);
  }
  return false;
}

/**
 * Retrieves external @context URLs using the given document loader. Every
 * instance of @context in the input that refers to a URL will be replaced
 * with the JSON @context found at that URL.
 *
 * @param input the JSON-LD input with possible contexts.
 * @param options the options to use:
 *          documentLoader(url, callback(err, remoteDoc)) the document loader.
 * @param callback(err, input) called once the operation completes.
 */
function _retrieveContextUrls(input, options, callback) {
  // if any error occurs during URL resolution, quit
  var error = null;

  // recursive document loader
  var documentLoader = options.documentLoader;
  var retrieve = function(input, cycles, documentLoader, base, callback) {
    if(Object.keys(cycles).length > MAX_CONTEXT_URLS) {
      error = new JsonLdError(
        'Maximum number of @context URLs exceeded.',
        'jsonld.ContextUrlError',
        {code: 'loading remote context failed', max: MAX_CONTEXT_URLS});
      return callback(error);
    }

    // for tracking the URLs to retrieve
    var urls = {};

    // finished will be called once the URL queue is empty
    var finished = function() {
      // replace all URLs in the input
      _findContextUrls(input, urls, true, base);
      callback(null, input);
    };

    // find all URLs in the given input
    if(!_findContextUrls(input, urls, false, base)) {
      // no new URLs in input
      return finished();
    }

    // queue all unretrieved URLs
    var queue = [];
    for(var url in urls) {
      if(urls[url] === false) {
        queue.push(url);
      }
    }

    // retrieve URLs in queue
    var count = queue.length;
    for(var i = 0; i < queue.length; ++i) {
      (function(url) {
        // check for context URL cycle
        if(url in cycles) {
          error = new JsonLdError(
            'Cyclical @context URLs detected.',
            'jsonld.ContextUrlError',
            {code: 'recursive context inclusion', url: url});
          return callback(error);
        }
        var _cycles = _clone(cycles);
        _cycles[url] = true;
        var done = function(err, remoteDoc) {
          // short-circuit if there was an error with another URL
          if(error) {
            return;
          }

          var ctx = remoteDoc ? remoteDoc.document : null;

          // parse string context as JSON
          if(!err && _isString(ctx)) {
            try {
              ctx = JSON.parse(ctx);
            } catch(ex) {
              err = ex;
            }
          }

          // ensure ctx is an object
          if(err) {
            err = new JsonLdError(
              'Dereferencing a URL did not result in a valid JSON-LD object. ' +
              'Possible causes are an inaccessible URL perhaps due to ' +
              'a same-origin policy (ensure the server uses CORS if you are ' +
              'using client-side JavaScript), too many redirects, a ' +
              'non-JSON response, or more than one HTTP Link Header was ' +
              'provided for a remote context.',
              'jsonld.InvalidUrl',
              {code: 'loading remote context failed', url: url, cause: err});
          } else if(!_isObject(ctx)) {
            err = new JsonLdError(
              'Dereferencing a URL did not result in a JSON object. The ' +
              'response was valid JSON, but it was not a JSON object.',
              'jsonld.InvalidUrl',
              {code: 'invalid remote context', url: url, cause: err});
          }
          if(err) {
            error = err;
            return callback(error);
          }

          // use empty context if no @context key is present
          if(!('@context' in ctx)) {
            ctx = {'@context': {}};
          } else {
            ctx = {'@context': ctx['@context']};
          }

          // append context URL to context if given
          if(remoteDoc.contextUrl) {
            if(!_isArray(ctx['@context'])) {
              ctx['@context'] = [ctx['@context']];
            }
            ctx['@context'].push(remoteDoc.contextUrl);
          }

          // recurse
          retrieve(ctx, _cycles, documentLoader, url, function(err, ctx) {
            if(err) {
              return callback(err);
            }
            urls[url] = ctx['@context'];
            count -= 1;
            if(count === 0) {
              finished();
            }
          });
        };
        var promise = documentLoader(url, done);
        if(promise && 'then' in promise) {
          promise.then(done.bind(null, null), done);
        }
      }(queue[i]));
    }
  };
  retrieve(input, {}, documentLoader, options.base, callback);
}

// define js 1.8.5 Object.keys method if not present
if(!Object.keys) {
  Object.keys = function(o) {
    if(o !== Object(o)) {
      throw new TypeError('Object.keys called on non-object');
    }
    var rval = [];
    for(var p in o) {
      if(Object.prototype.hasOwnProperty.call(o, p)) {
        rval.push(p);
      }
    }
    return rval;
  };
}

/**
 * Parses RDF in the form of N-Quads.
 *
 * @param input the N-Quads input to parse.
 *
 * @return an RDF dataset.
 */
function _parseNQuads(input) {
  // define partial regexes
  var iri = '(?:<([^:]+:[^>]*)>)';
  var bnode = '(_:(?:[A-Za-z0-9]+))';
  var plain = '"([^"\\\\]*(?:\\\\.[^"\\\\]*)*)"';
  var datatype = '(?:\\^\\^' + iri + ')';
  var language = '(?:@([a-z]+(?:-[a-z0-9]+)*))';
  var literal = '(?:' + plain + '(?:' + datatype + '|' + language + ')?)';
  var comment = '(?:#.*)?';
  var ws = '[ \\t]+';
  var wso = '[ \\t]*';
  var eoln = /(?:\r\n)|(?:\n)|(?:\r)/g;
  var empty = new RegExp('^' + wso + comment + '$');

  // define quad part regexes
  var subject = '(?:' + iri + '|' + bnode + ')' + ws;
  var property = iri + ws;
  var object = '(?:' + iri + '|' + bnode + '|' + literal + ')' + wso;
  var graphName = '(?:\\.|(?:(?:' + iri + '|' + bnode + ')' + wso + '\\.))';

  // full quad regex
  var quad = new RegExp(
    '^' + wso + subject + property + object + graphName + wso + comment + '$');

  // build RDF dataset
  var dataset = {};

  // split N-Quad input into lines
  var lines = input.split(eoln);
  var lineNumber = 0;
  for(var li = 0; li < lines.length; ++li) {
    var line = lines[li];
    lineNumber++;

    // skip empty lines
    if(empty.test(line)) {
      continue;
    }

    // parse quad
    var match = line.match(quad);
    if(match === null) {
      throw new JsonLdError(
        'Error while parsing N-Quads; invalid quad.',
        'jsonld.ParseError', {line: lineNumber});
    }

    // create RDF triple
    var triple = {};

    // get subject
    if(!_isUndefined(match[1])) {
      triple.subject = {type: 'IRI', value: match[1]};
    } else {
      triple.subject = {type: 'blank node', value: match[2]};
    }

    // get predicate
    triple.predicate = {type: 'IRI', value: match[3]};

    // get object
    if(!_isUndefined(match[4])) {
      triple.object = {type: 'IRI', value: match[4]};
    } else if(!_isUndefined(match[5])) {
      triple.object = {type: 'blank node', value: match[5]};
    } else {
      triple.object = {type: 'literal'};
      if(!_isUndefined(match[7])) {
        triple.object.datatype = match[7];
      } else if(!_isUndefined(match[8])) {
        triple.object.datatype = RDF_LANGSTRING;
        triple.object.language = match[8];
      } else {
        triple.object.datatype = XSD_STRING;
      }
      var unescaped = match[6]
        .replace(/\\"/g, '"')
        .replace(/\\t/g, '\t')
        .replace(/\\n/g, '\n')
        .replace(/\\r/g, '\r')
        .replace(/\\\\/g, '\\');
      triple.object.value = unescaped;
    }

    // get graph name ('@default' is used for the default graph)
    var name = '@default';
    if(!_isUndefined(match[9])) {
      name = match[9];
    } else if(!_isUndefined(match[10])) {
      name = match[10];
    }

    // initialize graph in dataset
    if(!(name in dataset)) {
      dataset[name] = [triple];
    } else {
      // add triple if unique to its graph
      var unique = true;
      var triples = dataset[name];
      for(var ti = 0; unique && ti < triples.length; ++ti) {
        if(_compareRDFTriples(triples[ti], triple)) {
          unique = false;
        }
      }
      if(unique) {
        triples.push(triple);
      }
    }
  }

  return dataset;
}

// register the N-Quads RDF parser
jsonld.registerRDFParser('application/nquads', _parseNQuads);

/**
 * Converts an RDF dataset to N-Quads.
 *
 * @param dataset the RDF dataset to convert.
 *
 * @return the N-Quads string.
 */
function _toNQuads(dataset) {
  var quads = [];
  for(var graphName in dataset) {
    var triples = dataset[graphName];
    for(var ti = 0; ti < triples.length; ++ti) {
      var triple = triples[ti];
      if(graphName === '@default') {
        graphName = null;
      }
      quads.push(_toNQuad(triple, graphName));
    }
  }
  return quads.sort().join('');
}

/**
 * Converts an RDF triple and graph name to an N-Quad string (a single quad).
 *
 * @param triple the RDF triple or quad to convert (a triple or quad may be
 *          passed, if a triple is passed then `graphName` should be given
 *          to specify the name of the graph the triple is in, `null` for
 *          the default graph).
 * @param graphName the name of the graph containing the triple, null for
 *          the default graph.
 *
 * @return the N-Quad string.
 */
function _toNQuad(triple, graphName) {
  var s = triple.subject;
  var p = triple.predicate;
  var o = triple.object;
  var g = graphName || null;
  if('name' in triple && triple.name) {
    g = triple.name.value;
  }

  var quad = '';

  // subject is an IRI
  if(s.type === 'IRI') {
    quad += '<' + s.value + '>';
  } else {
    quad += s.value;
  }
  quad += ' ';

  // predicate is an IRI
  if(p.type === 'IRI') {
    quad += '<' + p.value + '>';
  } else {
    quad += p.value;
  }
  quad += ' ';

  // object is IRI, bnode, or literal
  if(o.type === 'IRI') {
    quad += '<' + o.value + '>';
  } else if(o.type === 'blank node') {
    quad += o.value;
  } else {
    var escaped = o.value
      .replace(/\\/g, '\\\\')
      .replace(/\t/g, '\\t')
      .replace(/\n/g, '\\n')
      .replace(/\r/g, '\\r')
      .replace(/\"/g, '\\"');
    quad += '"' + escaped + '"';
    if(o.datatype === RDF_LANGSTRING) {
      if(o.language) {
        quad += '@' + o.language;
      }
    } else if(o.datatype !== XSD_STRING) {
      quad += '^^<' + o.datatype + '>';
    }
  }

  // graph
  if(g !== null && g !== undefined) {
    if(g.indexOf('_:') !== 0) {
      quad += ' <' + g + '>';
    } else {
      quad += ' ' + g;
    }
  }

  quad += ' .\n';
  return quad;
}

/**
 * Parses the RDF dataset found via the data object from the RDFa API.
 *
 * @param data the RDFa API data object.
 *
 * @return the RDF dataset.
 */
function _parseRdfaApiData(data) {
  var dataset = {};
  dataset['@default'] = [];

  var subjects = data.getSubjects();
  for(var si = 0; si < subjects.length; ++si) {
    var subject = subjects[si];
    if(subject === null) {
      continue;
    }

    // get all related triples
    var triples = data.getSubjectTriples(subject);
    if(triples === null) {
      continue;
    }
    var predicates = triples.predicates;
    for(var predicate in predicates) {
      // iterate over objects
      var objects = predicates[predicate].objects;
      for(var oi = 0; oi < objects.length; ++oi) {
        var object = objects[oi];

        // create RDF triple
        var triple = {};

        // add subject
        if(subject.indexOf('_:') === 0) {
          triple.subject = {type: 'blank node', value: subject};
        } else {
          triple.subject = {type: 'IRI', value: subject};
        }

        // add predicate
        if(predicate.indexOf('_:') === 0) {
          triple.predicate = {type: 'blank node', value: predicate};
        } else {
          triple.predicate = {type: 'IRI', value: predicate};
        }

        // serialize XML literal
        var value = object.value;
        if(object.type === RDF_XML_LITERAL) {
          // initialize XMLSerializer
          if(!XMLSerializer) {
            _defineXMLSerializer();
          }
          var serializer = new XMLSerializer();
          value = '';
          for(var x = 0; x < object.value.length; x++) {
            if(object.value[x].nodeType === Node.ELEMENT_NODE) {
              value += serializer.serializeToString(object.value[x]);
            } else if(object.value[x].nodeType === Node.TEXT_NODE) {
              value += object.value[x].nodeValue;
            }
          }
        }

        // add object
        triple.object = {};

        // object is an IRI
        if(object.type === RDF_OBJECT) {
          if(object.value.indexOf('_:') === 0) {
            triple.object.type = 'blank node';
          } else {
            triple.object.type = 'IRI';
          }
        } else {
          // object is a literal
          triple.object.type = 'literal';
          if(object.type === RDF_PLAIN_LITERAL) {
            if(object.language) {
              triple.object.datatype = RDF_LANGSTRING;
              triple.object.language = object.language;
            } else {
              triple.object.datatype = XSD_STRING;
            }
          } else {
            triple.object.datatype = object.type;
          }
        }
        triple.object.value = value;

        // add triple to dataset in default graph
        dataset['@default'].push(triple);
      }
    }
  }

  return dataset;
}

// register the RDFa API RDF parser
jsonld.registerRDFParser('rdfa-api', _parseRdfaApiData);

/**
 * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique
 * identifiers, keeping track of any previously issued identifiers.
 *
 * @param prefix the prefix to use ('<prefix><counter>').
 */
function IdentifierIssuer(prefix) {
  this.prefix = prefix;
  this.counter = 0;
  this.existing = {};
}
jsonld.IdentifierIssuer = IdentifierIssuer;
// backwards-compability
jsonld.UniqueNamer = IdentifierIssuer;

/**
 * Copies this IdentifierIssuer.
 *
 * @return a copy of this IdentifierIssuer.
 */
IdentifierIssuer.prototype.clone = function() {
  var copy = new IdentifierIssuer(this.prefix);
  copy.counter = this.counter;
  copy.existing = _clone(this.existing);
  return copy;
};

/**
 * Gets the new identifier for the given old identifier, where if no old
 * identifier is given a new identifier will be generated.
 *
 * @param [old] the old identifier to get the new identifier for.
 *
 * @return the new identifier.
 */
IdentifierIssuer.prototype.getId = function(old) {
  // return existing old identifier
  if(old && old in this.existing) {
    return this.existing[old];
  }

  // get next identifier
  var identifier = this.prefix + this.counter;
  this.counter += 1;

  // save mapping
  if(old) {
    this.existing[old] = identifier;
  }

  return identifier;
};
// alias
IdentifierIssuer.prototype.getName = IdentifierIssuer.prototype.getName;

/**
 * Returns true if the given old identifer has already been assigned a new
 * identifier.
 *
 * @param old the old identifier to check.
 *
 * @return true if the old identifier has been assigned a new identifier, false
 *   if not.
 */
IdentifierIssuer.prototype.hasId = function(old) {
  return (old in this.existing);
};
// alias
IdentifierIssuer.prototype.isNamed = IdentifierIssuer.prototype.hasId;

/**
 * A Permutator iterates over all possible permutations of the given array
 * of elements.
 *
 * @param list the array of elements to iterate over.
 */
var Permutator = function(list) {
  // original array
  this.list = list.sort();
  // indicates whether there are more permutations
  this.done = false;
  // directional info for permutation algorithm
  this.left = {};
  for(var i = 0; i < list.length; ++i) {
    this.left[list[i]] = true;
  }
};

/**
 * Returns true if there is another permutation.
 *
 * @return true if there is another permutation, false if not.
 */
Permutator.prototype.hasNext = function() {
  return !this.done;
};

/**
 * Gets the next permutation. Call hasNext() to ensure there is another one
 * first.
 *
 * @return the next permutation.
 */
Permutator.prototype.next = function() {
  // copy current permutation
  var rval = this.list.slice();

  /* Calculate the next permutation using the Steinhaus-Johnson-Trotter
   permutation algorithm. */

  // get largest mobile element k
  // (mobile: element is greater than the one it is looking at)
  var k = null;
  var pos = 0;
  var length = this.list.length;
  for(var i = 0; i < length; ++i) {
    var element = this.list[i];
    var left = this.left[element];
    if((k === null || element > k) &&
      ((left && i > 0 && element > this.list[i - 1]) ||
      (!left && i < (length - 1) && element > this.list[i + 1]))) {
      k = element;
      pos = i;
    }
  }

  // no more permutations
  if(k === null) {
    this.done = true;
  } else {
    // swap k and the element it is looking at
    var swap = this.left[k] ? pos - 1 : pos + 1;
    this.list[pos] = this.list[swap];
    this.list[swap] = k;

    // reverse the direction of all elements larger than k
    for(var i = 0; i < length; ++i) {
      if(this.list[i] > k) {
        this.left[this.list[i]] = !this.left[this.list[i]];
      }
    }
  }

  return rval;
};

//////////////////////// DEFINE NORMALIZATION HASH API ////////////////////////

/**
 * Creates a new NormalizeHash for use by the given normalization algorithm.
 *
 * @param algorithm the RDF Dataset Normalization algorithm to use:
 *          'URDNA2015' or 'URGNA2012'.
 */
var NormalizeHash = function(algorithm) {
  if(!(this instanceof NormalizeHash)) {
    return new NormalizeHash(algorithm);
  }
  if(['URDNA2015', 'URGNA2012'].indexOf(algorithm) === -1) {
    throw new Error(
      'Invalid RDF Dataset Normalization algorithm: ' + algorithm);
  }
  NormalizeHash._init.call(this, algorithm);
};
NormalizeHash.hashNQuads = function(algorithm, nquads) {
  var md = new NormalizeHash(algorithm);
  for(var i = 0; i < nquads.length; ++i) {
    md.update(nquads[i]);
  }
  return md.digest();
};

// switch definition of NormalizeHash based on environment
(function(_nodejs) {

if(_nodejs) {
  // define NormalizeHash using native crypto lib
  var crypto = require('crypto');
  NormalizeHash._init = function(algorithm) {
    if(algorithm === 'URDNA2015') {
      algorithm = 'sha256';
    } else {
      // assume URGNA2012
      algorithm = 'sha1';
    }
    this.md = crypto.createHash(algorithm);
  };
  NormalizeHash.prototype.update = function(msg) {
    return this.md.update(msg, 'utf8');
  };
  NormalizeHash.prototype.digest = function() {
    return this.md.digest('hex');
  };
  return;
}

// define NormalizeHash using JavaScript
NormalizeHash._init = function(algorithm) {
  if(algorithm === 'URDNA2015') {
    algorithm = new sha256.Algorithm();
  } else {
    // assume URGNA2012
    algorithm = new sha1.Algorithm();
  }
  this.md = new MessageDigest(algorithm);
};
NormalizeHash.prototype.update = function(msg) {
  return this.md.update(msg);
};
NormalizeHash.prototype.digest = function() {
  return this.md.digest().toHex();
};

/////////////////////////// DEFINE MESSAGE DIGEST API /////////////////////////

/**
 * Creates a new MessageDigest.
 *
 * @param algorithm the algorithm to use.
 */
var MessageDigest = function(algorithm) {
  if(!(this instanceof MessageDigest)) {
    return new MessageDigest(algorithm);
  }

  this._algorithm = algorithm;

  // create shared padding as needed
  if(!MessageDigest._padding ||
    MessageDigest._padding.length < this._algorithm.blockSize) {
    MessageDigest._padding = String.fromCharCode(128);
    var c = String.fromCharCode(0x00);
    var n = 64;
    while(n > 0) {
      if(n & 1) {
        MessageDigest._padding += c;
      }
      n >>>= 1;
      if(n > 0) {
        c += c;
      }
    }
  }

  // start digest automatically for first time
  this.start();
};

/**
 * Starts the digest.
 *
 * @return this digest object.
 */
MessageDigest.prototype.start = function() {
  // up to 56-bit message length for convenience
  this.messageLength = 0;

  // full message length
  this.fullMessageLength = [];
  var int32s = this._algorithm.messageLengthSize / 4;
  for(var i = 0; i < int32s; ++i) {
    this.fullMessageLength.push(0);
  }

  // input buffer
  this._input = new MessageDigest.ByteBuffer();

  // get starting state
  this.state = this._algorithm.start();

  return this;
};

/**
 * Updates the digest with the given message input. The input must be
 * a string of characters.
 *
 * @param msg the message input to update with (ByteBuffer or string).
 *
 * @return this digest object.
 */
MessageDigest.prototype.update = function(msg) {
  // encode message as a UTF-8 encoded binary string
  msg = new MessageDigest.ByteBuffer(unescape(encodeURIComponent(msg)));

  // update message length
  this.messageLength += msg.length();
  var len = msg.length();
  len = [(len / 0x100000000) >>> 0, len >>> 0];
  for(var i = this.fullMessageLength.length - 1; i >= 0; --i) {
    this.fullMessageLength[i] += len[1];
    len[1] = len[0] + ((this.fullMessageLength[i] / 0x100000000) >>> 0);
    this.fullMessageLength[i] = this.fullMessageLength[i] >>> 0;
    len[0] = ((len[1] / 0x100000000) >>> 0);
  }

  // add bytes to input buffer
  this._input.putBytes(msg.bytes());

  // digest blocks
  while(this._input.length() >= this._algorithm.blockSize) {
    this.state = this._algorithm.digest(this.state, this._input);
  }

  // compact input buffer every 2K or if empty
  if(this._input.read > 2048 || this._input.length() === 0) {
    this._input.compact();
  }

  return this;
};

/**
 * Produces the digest.
 *
 * @return a byte buffer containing the digest value.
 */
MessageDigest.prototype.digest = function() {
  /* Note: Here we copy the remaining bytes in the input buffer and add the
  appropriate padding. Then we do the final update on a copy of the state so
  that if the user wants to get intermediate digests they can do so. */

  /* Determine the number of bytes that must be added to the message to
  ensure its length is appropriately congruent. In other words, the data to
  be digested must be a multiple of `blockSize`. This data includes the
  message, some padding, and the length of the message. Since the length of
  the message will be encoded as `messageLengthSize` bytes, that means that
  the last segment of the data must have `blockSize` - `messageLengthSize`
  bytes of message and padding. Therefore, the length of the message plus the
  padding must be congruent to X mod `blockSize` because
  `blockSize` - `messageLengthSize` = X.

  For example, SHA-1 is congruent to 448 mod 512 and SHA-512 is congruent to
  896 mod 1024. SHA-1 uses a `blockSize` of 64 bytes (512 bits) and a
  `messageLengthSize` of 8 bytes (64 bits). SHA-512 uses a `blockSize` of
  128 bytes (1024 bits) and a `messageLengthSize` of 16 bytes (128 bits).

  In order to fill up the message length it must be filled with padding that
  begins with 1 bit followed by all 0 bits. Padding must *always* be present,
  so if the message length is already congruent, then `blockSize` padding bits
  must be added. */

  // create final block
  var finalBlock = new MessageDigest.ByteBuffer();
  finalBlock.putBytes(this._input.bytes());

  // compute remaining size to be digested (include message length size)
  var remaining = (
    this.fullMessageLength[this.fullMessageLength.length - 1] +
    this._algorithm.messageLengthSize);

  // add padding for overflow blockSize - overflow
  // _padding starts with 1 byte with first bit is set (byte value 128), then
  // there may be up to (blockSize - 1) other pad bytes
  var overflow = remaining & (this._algorithm.blockSize - 1);
  finalBlock.putBytes(MessageDigest._padding.substr(
    0, this._algorithm.blockSize - overflow));

  // serialize message length in bits in big-endian order; since length
  // is stored in bytes we multiply by 8 (left shift by 3 and merge in
  // remainder from )
  var messageLength = new MessageDigest.ByteBuffer();
  for(var i = 0; i < this.fullMessageLength.length; ++i) {
    messageLength.putInt32((this.fullMessageLength[i] << 3) |
      (this.fullMessageLength[i + 1] >>> 28));
  }

  // write the length of the message (algorithm-specific)
  this._algorithm.writeMessageLength(finalBlock, messageLength);

  // digest final block
  var state = this._algorithm.digest(this.state.copy(), finalBlock);

  // write state to buffer
  var rval = new MessageDigest.ByteBuffer();
  state.write(rval);
  return rval;
};

/**
 * Creates a simple byte buffer for message digest operations.
 *
 * @param data the data to put in the buffer.
 */
MessageDigest.ByteBuffer = function(data) {
  if(typeof data === 'string') {
    this.data = data;
  } else {
    this.data = '';
  }
  this.read = 0;
};

/**
 * Puts a 32-bit integer into this buffer in big-endian order.
 *
 * @param i the 32-bit integer.
 */
MessageDigest.ByteBuffer.prototype.putInt32 = function(i) {
  this.data += (
    String.fromCharCode(i >> 24 & 0xFF) +
    String.fromCharCode(i >> 16 & 0xFF) +
    String.fromCharCode(i >> 8 & 0xFF) +
    String.fromCharCode(i & 0xFF));
};

/**
 * Gets a 32-bit integer from this buffer in big-endian order and
 * advances the read pointer by 4.
 *
 * @return the word.
 */
MessageDigest.ByteBuffer.prototype.getInt32 = function() {
  var rval = (
    this.data.charCodeAt(this.read) << 24 ^
    this.data.charCodeAt(this.read + 1) << 16 ^
    this.data.charCodeAt(this.read + 2) << 8 ^
    this.data.charCodeAt(this.read + 3));
  this.read += 4;
  return rval;
};

/**
 * Puts the given bytes into this buffer.
 *
 * @param bytes the bytes as a binary-encoded string.
 */
MessageDigest.ByteBuffer.prototype.putBytes = function(bytes) {
  this.data += bytes;
};

/**
 * Gets the bytes in this buffer.
 *
 * @return a string full of UTF-8 encoded characters.
 */
MessageDigest.ByteBuffer.prototype.bytes = function() {
  return this.data.slice(this.read);
};

/**
 * Gets the number of bytes in this buffer.
 *
 * @return the number of bytes in this buffer.
 */
MessageDigest.ByteBuffer.prototype.length = function() {
  return this.data.length - this.read;
};

/**
 * Compacts this buffer.
 */
MessageDigest.ByteBuffer.prototype.compact = function() {
  this.data = this.data.slice(this.read);
  this.read = 0;
};

/**
 * Converts this buffer to a hexadecimal string.
 *
 * @return a hexadecimal string.
 */
MessageDigest.ByteBuffer.prototype.toHex = function() {
  var rval = '';
  for(var i = this.read; i < this.data.length; ++i) {
    var b = this.data.charCodeAt(i);
    if(b < 16) {
      rval += '0';
    }
    rval += b.toString(16);
  }
  return rval;
};

///////////////////////////// DEFINE SHA-1 ALGORITHM //////////////////////////

var sha1 = {
  // used for word storage
  _w: null
};

sha1.Algorithm = function() {
  this.name = 'sha1',
  this.blockSize = 64;
  this.digestLength = 20;
  this.messageLengthSize = 8;
};

sha1.Algorithm.prototype.start = function() {
  if(!sha1._w) {
    sha1._w = new Array(80);
  }
  return sha1._createState();
};

sha1.Algorithm.prototype.writeMessageLength = function(
  finalBlock, messageLength) {
  // message length is in bits and in big-endian order; simply append
  finalBlock.putBytes(messageLength.bytes());
};

sha1.Algorithm.prototype.digest = function(s, input) {
  // consume 512 bit (64 byte) chunks
  var t, a, b, c, d, e, f, i;
  var len = input.length();
  var _w = sha1._w;
  while(len >= 64) {
    // initialize hash value for this chunk
    a = s.h0;
    b = s.h1;
    c = s.h2;
    d = s.h3;
    e = s.h4;

    // the _w array will be populated with sixteen 32-bit big-endian words
    // and then extended into 80 32-bit words according to SHA-1 algorithm
    // and for 32-79 using Max Locktyukhin's optimization

    // round 1
    for(i = 0; i < 16; ++i) {
      t = input.getInt32();
      _w[i] = t;
      f = d ^ (b & (c ^ d));
      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;
      e = d;
      d = c;
      c = (b << 30) | (b >>> 2);
      b = a;
      a = t;
    }
    for(; i < 20; ++i) {
      t = (_w[i - 3] ^ _w[i - 8] ^ _w[i - 14] ^ _w[i - 16]);
      t = (t << 1) | (t >>> 31);
      _w[i] = t;
      f = d ^ (b & (c ^ d));
      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;
      e = d;
      d = c;
      c = (b << 30) | (b >>> 2);
      b = a;
      a = t;
    }
    // round 2
    for(; i < 32; ++i) {
      t = (_w[i - 3] ^ _w[i - 8] ^ _w[i - 14] ^ _w[i - 16]);
      t = (t << 1) | (t >>> 31);
      _w[i] = t;
      f = b ^ c ^ d;
      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;
      e = d;
      d = c;
      c = (b << 30) | (b >>> 2);
      b = a;
      a = t;
    }
    for(; i < 40; ++i) {
      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);
      t = (t << 2) | (t >>> 30);
      _w[i] = t;
      f = b ^ c ^ d;
      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;
      e = d;
      d = c;
      c = (b << 30) | (b >>> 2);
      b = a;
      a = t;
    }
    // round 3
    for(; i < 60; ++i) {
      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);
      t = (t << 2) | (t >>> 30);
      _w[i] = t;
      f = (b & c) | (d & (b ^ c));
      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;
      e = d;
      d = c;
      c = (b << 30) | (b >>> 2);
      b = a;
      a = t;
    }
    // round 4
    for(; i < 80; ++i) {
      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);
      t = (t << 2) | (t >>> 30);
      _w[i] = t;
      f = b ^ c ^ d;
      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;
      e = d;
      d = c;
      c = (b << 30) | (b >>> 2);
      b = a;
      a = t;
    }

    // update hash state
    s.h0 = (s.h0 + a) | 0;
    s.h1 = (s.h1 + b) | 0;
    s.h2 = (s.h2 + c) | 0;
    s.h3 = (s.h3 + d) | 0;
    s.h4 = (s.h4 + e) | 0;

    len -= 64;
  }

  return s;
};

sha1._createState = function() {
  var state = {
    h0: 0x67452301,
    h1: 0xEFCDAB89,
    h2: 0x98BADCFE,
    h3: 0x10325476,
    h4: 0xC3D2E1F0
  };
  state.copy = function() {
    var rval = sha1._createState();
    rval.h0 = state.h0;
    rval.h1 = state.h1;
    rval.h2 = state.h2;
    rval.h3 = state.h3;
    rval.h4 = state.h4;
    return rval;
  };
  state.write = function(buffer) {
    buffer.putInt32(state.h0);
    buffer.putInt32(state.h1);
    buffer.putInt32(state.h2);
    buffer.putInt32(state.h3);
    buffer.putInt32(state.h4);
  };
  return state;
};

//////////////////////////// DEFINE SHA-256 ALGORITHM /////////////////////////

var sha256 = {
  // shared state
  _k: null,
  _w: null
};

sha256.Algorithm = function() {
  this.name = 'sha256',
  this.blockSize = 64;
  this.digestLength = 32;
  this.messageLengthSize = 8;
};

sha256.Algorithm.prototype.start = function() {
  if(!sha256._k) {
    sha256._init();
  }
  return sha256._createState();
};

sha256.Algorithm.prototype.writeMessageLength = function(
  finalBlock, messageLength) {
  // message length is in bits and in big-endian order; simply append
  finalBlock.putBytes(messageLength.bytes());
};

sha256.Algorithm.prototype.digest = function(s, input) {
  // consume 512 bit (64 byte) chunks
  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;
  var len = input.length();
  var _k = sha256._k;
  var _w = sha256._w;
  while(len >= 64) {
    // the w array will be populated with sixteen 32-bit big-endian words
    // and then extended into 64 32-bit words according to SHA-256
    for(i = 0; i < 16; ++i) {
      _w[i] = input.getInt32();
    }
    for(; i < 64; ++i) {
      // XOR word 2 words ago rot right 17, rot right 19, shft right 10
      t1 = _w[i - 2];
      t1 =
        ((t1 >>> 17) | (t1 << 15)) ^
        ((t1 >>> 19) | (t1 << 13)) ^
        (t1 >>> 10);
      // XOR word 15 words ago rot right 7, rot right 18, shft right 3
      t2 = _w[i - 15];
      t2 =
        ((t2 >>> 7) | (t2 << 25)) ^
        ((t2 >>> 18) | (t2 << 14)) ^
        (t2 >>> 3);
      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32
      _w[i] = (t1 + _w[i - 7] + t2 + _w[i - 16]) | 0;
    }

    // initialize hash value for this chunk
    a = s.h0;
    b = s.h1;
    c = s.h2;
    d = s.h3;
    e = s.h4;
    f = s.h5;
    g = s.h6;
    h = s.h7;

    // round function
    for(i = 0; i < 64; ++i) {
      // Sum1(e)
      s1 =
        ((e >>> 6) | (e << 26)) ^
        ((e >>> 11) | (e << 21)) ^
        ((e >>> 25) | (e << 7));
      // Ch(e, f, g) (optimized the same way as SHA-1)
      ch = g ^ (e & (f ^ g));
      // Sum0(a)
      s0 =
        ((a >>> 2) | (a << 30)) ^
        ((a >>> 13) | (a << 19)) ^
        ((a >>> 22) | (a << 10));
      // Maj(a, b, c) (optimized the same way as SHA-1)
      maj = (a & b) | (c & (a ^ b));

      // main algorithm
      t1 = h + s1 + ch + _k[i] + _w[i];
      t2 = s0 + maj;
      h = g;
      g = f;
      f = e;
      e = (d + t1) | 0;
      d = c;
      c = b;
      b = a;
      a = (t1 + t2) | 0;
    }

    // update hash state
    s.h0 = (s.h0 + a) | 0;
    s.h1 = (s.h1 + b) | 0;
    s.h2 = (s.h2 + c) | 0;
    s.h3 = (s.h3 + d) | 0;
    s.h4 = (s.h4 + e) | 0;
    s.h5 = (s.h5 + f) | 0;
    s.h6 = (s.h6 + g) | 0;
    s.h7 = (s.h7 + h) | 0;
    len -= 64;
  }

  return s;
};

sha256._createState = function() {
  var state = {
    h0: 0x6A09E667,
    h1: 0xBB67AE85,
    h2: 0x3C6EF372,
    h3: 0xA54FF53A,
    h4: 0x510E527F,
    h5: 0x9B05688C,
    h6: 0x1F83D9AB,
    h7: 0x5BE0CD19
  };
  state.copy = function() {
    var rval = sha256._createState();
    rval.h0 = state.h0;
    rval.h1 = state.h1;
    rval.h2 = state.h2;
    rval.h3 = state.h3;
    rval.h4 = state.h4;
    rval.h5 = state.h5;
    rval.h6 = state.h6;
    rval.h7 = state.h7;
    return rval;
  };
  state.write = function(buffer) {
    buffer.putInt32(state.h0);
    buffer.putInt32(state.h1);
    buffer.putInt32(state.h2);
    buffer.putInt32(state.h3);
    buffer.putInt32(state.h4);
    buffer.putInt32(state.h5);
    buffer.putInt32(state.h6);
    buffer.putInt32(state.h7);
  };
  return state;
};

sha256._init = function() {
  // create K table for SHA-256
  sha256._k = [
    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];

  // used for word storage
  sha256._w = new Array(64);
};

})(_nodejs); // end definition of NormalizeHash

if(!XMLSerializer) {

var _defineXMLSerializer = function() {
  XMLSerializer = require('xmldom').XMLSerializer;
};

} // end _defineXMLSerializer

// define URL parser
// parseUri 1.2.2
// (c) Steven Levithan <stevenlevithan.com>
// MIT License
// with local jsonld.js modifications
jsonld.url = {};
jsonld.url.parsers = {
  simple: {
    // RFC 3986 basic parts
    keys: ['href','scheme','authority','path','query','fragment'],
    regex: /^(?:([^:\/?#]+):)?(?:\/\/([^\/?#]*))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?/
  },
  full: {
    keys: ['href','protocol','scheme','authority','auth','user','password','hostname','port','path','directory','file','query','fragment'],
    regex: /^(([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?(?:(((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/
  }
};
jsonld.url.parse = function(str, parser) {
  var parsed = {};
  var o = jsonld.url.parsers[parser || 'full'];
  var m = o.regex.exec(str);
  var i = o.keys.length;
  while(i--) {
    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];
  }
  parsed.normalizedPath = _removeDotSegments(parsed.path, !!parsed.authority);
  return parsed;
};

/**
 * Removes dot segments from a URL path.
 *
 * @param path the path to remove dot segments from.
 * @param hasAuthority true if the URL has an authority, false if not.
 */
function _removeDotSegments(path, hasAuthority) {
  var rval = '';

  if(path.indexOf('/') === 0) {
    rval = '/';
  }

  // RFC 3986 5.2.4 (reworked)
  var input = path.split('/');
  var output = [];
  while(input.length > 0) {
    if(input[0] === '.' || (input[0] === '' && input.length > 1)) {
      input.shift();
      continue;
    }
    if(input[0] === '..') {
      input.shift();
      if(hasAuthority ||
        (output.length > 0 && output[output.length - 1] !== '..')) {
        output.pop();
      } else {
        // leading relative URL '..'
        output.push('..');
      }
      continue;
    }
    output.push(input.shift());
  }

  return rval + output.join('/');
}

if(_nodejs) {
  // use node document loader by default
  jsonld.useDocumentLoader('node');
} else if(typeof XMLHttpRequest !== 'undefined') {
  // use xhr document loader by default
  jsonld.useDocumentLoader('xhr');
}

if(_nodejs) {
  jsonld.use = function(extension) {
    switch(extension) {
      // TODO: Deprecated as of 0.4.0. Remove at some point.
      case 'request':
        // use node JSON-LD request extension
        jsonld.request = require('jsonld-request');
        break;
      default:
        throw new JsonLdError(
          'Unknown extension.',
          'jsonld.UnknownExtension', {extension: extension});
    }
  };

  // expose version
  var _module = {exports: {}, filename: __dirname};
  require('pkginfo')(_module, 'version');
  jsonld.version = _module.exports.version;
}

// end of jsonld API factory
return jsonld;
};

// external APIs:

// used to generate a new jsonld API instance
var factory = function() {
  return wrapper(function() {
    return factory();
  });
};

if(!_nodejs && (typeof define === 'function' && define.amd)) {
  // export AMD API
  define([], function() {
    // now that module is defined, wrap main jsonld API instance
    wrapper(factory);
    return factory;
  });
} else {
  // wrap the main jsonld API instance
  wrapper(factory);

  if(typeof require === 'function' &&
    typeof module !== 'undefined' && module.exports) {
    // export CommonJS/nodejs API
    module.exports = factory;
  }

  if(_browser) {
    // export simple browser API
    if(typeof jsonld === 'undefined') {
      jsonld = jsonldjs = factory;
    } else {
      jsonldjs = factory;
    }
  }
}

return factory;

})();

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},"/../../shacl/src/main/resources/etc/node_modules/jsonld/js")
},{"_process":110,"crypto":43,"es6-promise":42,"http":43,"jsonld-request":43,"pkginfo":43,"request":43,"util":43,"xmldom":43}],45:[function(require,module,exports){
// Replace local require by a lazy loader
var globalRequire = require;
require = function () {};

// Expose submodules
var exports = module.exports = {
  Lexer:        require('./lib/N3Lexer'),
  Parser:       require('./lib/N3Parser'),
  Writer:       require('./lib/N3Writer'),
  Store:        require('./lib/N3Store'),
  StreamParser: require('./lib/N3StreamParser'),
  StreamWriter: require('./lib/N3StreamWriter'),
  Util:         require('./lib/N3Util'),
};

// Load submodules on first access
Object.keys(exports).forEach(function (submodule) {
  Object.defineProperty(exports, submodule, {
    configurable: true,
    enumerable: true,
    get: function () {
      delete exports[submodule];
      return exports[submodule] = globalRequire('./lib/N3' + submodule);
    },
  });
});

},{"./lib/N3Lexer":46,"./lib/N3Parser":47,"./lib/N3Store":48,"./lib/N3StreamParser":49,"./lib/N3StreamWriter":50,"./lib/N3Util":51,"./lib/N3Writer":52}],46:[function(require,module,exports){
// **N3Lexer** tokenizes N3 documents.
var fromCharCode = String.fromCharCode;
var immediately = typeof setImmediate === 'function' ? setImmediate :
                  function setImmediate(func) { setTimeout(func, 0); };

// Regular expression and replacement string to escape N3 strings.
// Note how we catch invalid unicode sequences separately (they will trigger an error).
var escapeSequence = /\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\[uU]|\\(.)/g;
var escapeReplacements = { '\\': '\\', "'": "'", '"': '"',
                           'n': '\n', 'r': '\r', 't': '\t', 'f': '\f', 'b': '\b',
                           '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',
                           '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',
                           '/': '/', '?': '?', '#': '#', '@': '@', '%': '%' };
var illegalIriChars = /[\x00-\x20<>\\"\{\}\|\^\`]/;

// ## Constructor
function N3Lexer(options) {
  if (!(this instanceof N3Lexer))
    return new N3Lexer(options);

  // In line mode (N-Triples or N-Quads), only simple features may be parsed
  if (options && options.lineMode) {
    // Don't tokenize special literals
    this._tripleQuotedString = this._number = this._boolean = /$0^/;
    // Swap the tokenize method for a restricted version
    var self = this;
    this._tokenize = this.tokenize;
    this.tokenize = function (input, callback) {
      this._tokenize(input, function (error, token) {
        if (!error && /^(?:IRI|prefixed|literal|langcode|type|\.|eof)$/.test(token.type))
          callback && callback(error, token);
        else
          callback && callback(error || self._syntaxError(token.type, callback = null));
      });
    };
  }
}

N3Lexer.prototype = {
  // ## Regular expressions
  // It's slightly faster to have these as properties than as in-scope variables.

  _iri: /^<((?:[^>\\]|\\[uU])+)>/, // IRI with escape sequences; needs sanity check after unescaping
  _unescapedIri: /^<([^\x00-\x20<>\\"\{\}\|\^\`]*)>/, // IRI without escape sequences; no unescaping
  _unescapedString: /^"[^"\\]+"(?=[^"\\])/, // non-empty string without escape sequences
  _singleQuotedString: /^"[^"\\]*(?:\\.[^"\\]*)*"(?=[^"\\])|^'[^'\\]*(?:\\.[^'\\]*)*'(?=[^'\\])/,
  _tripleQuotedString: /^""("[^"\\]*(?:(?:\\.|"(?!""))[^"\\]*)*")""|^''('[^'\\]*(?:(?:\\.|'(?!''))[^'\\]*)*')''/,
  _langcode: /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\-])/i,
  _prefix: /^((?:[A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:\.?[\-0-9A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)?:(?=[#\s<])/,
  _prefixed: /^((?:[A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:\.?[\-0-9A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)?:((?:(?:[0-:A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff]|%[0-9a-fA-F]{2}|\\[!#-\/;=?\-@_~])(?:(?:[\.\-0-:A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff]|%[0-9a-fA-F]{2}|\\[!#-\/;=?\-@_~])*(?:[\-0-:A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff]|%[0-9a-fA-F]{2}|\\[!#-\/;=?\-@_~]))?)?)(?=\.?[,;\s#()\[\]\{\}"'<])/,
  _blank: /^_:((?:[0-9A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:\.?[\-0-9A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)(?=\.?[,;:\s#()\[\]\{\}"'<])/,
  _number: /^[\-+]?(?:\d+\.?\d*([eE](?:[\-\+])?\d+)|\d*\.?\d+)(?=[.,;:\s#()\[\]\{\}"'<])/,
  _boolean: /^(?:true|false)(?=[.,;:\s#()\[\]\{\}"'<])/,
  _keyword: /^@[a-z]+(?=[\s#<:])/,
  _sparqlKeyword: /^(?:PREFIX|BASE|GRAPH)(?=[\s#<:])/i,
  _shortPredicates: /^a(?=\s+|<)/,
  _newline: /^[ \t]*(?:#[^\n\r]*)?(?:\r\n|\n|\r)[ \t]*/,
  _whitespace: /^[ \t]+/,
  _endOfFile: /^(?:#[^\n\r]*)?$/,

  // ## Private methods

  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback.
  _tokenizeToEnd: function (callback, inputFinished) {
    // Continue parsing as far as possible; the loop will return eventually.
    var input = this._input;
    while (true) {
      // Count and skip whitespace lines.
      var whiteSpaceMatch;
      while (whiteSpaceMatch = this._newline.exec(input))
        input = input.substr(whiteSpaceMatch[0].length, input.length), this._line++;
      // Skip whitespace on current line.
      if (whiteSpaceMatch = this._whitespace.exec(input))
        input = input.substr(whiteSpaceMatch[0].length, input.length);

      // Stop for now if we're at the end.
      if (this._endOfFile.test(input)) {
        // If the input is finished, emit EOF.
        if (inputFinished)
          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });
        return this._input = input;
      }

      // Look for specific token types based on the first character.
      var line = this._line, type = '', value = '', prefix = '',
          firstChar = input[0], match = null, matchLength = 0, unescaped, inconclusive = false;
      switch (firstChar) {
      case '^':
        // Try to match a type.
        if (input.length === 1) break;
        else if (input[1] !== '^') return reportSyntaxError(this);
        this._prevTokenType = '^';
        // Move to type IRI or prefixed name.
        input = input.substr(2);
        if (input[0] !== '<') {
          inconclusive = true;
          break;
        }
        // Fall through in case the type is an IRI.

      case '<':
        // Try to find a full IRI without escape sequences.
        if (match = this._unescapedIri.exec(input))
          type = 'IRI', value = match[1];
        // Try to find a full IRI with escape sequences.
        else if (match = this._iri.exec(input)) {
          unescaped = this._unescape(match[1]);
          if (unescaped === null || illegalIriChars.test(unescaped))
            return reportSyntaxError(this);
          type = 'IRI', value = unescaped;
        }
        break;

      case '_':
        // Try to find a blank node. Since it can contain (but not end with) a dot,
        // we always need a non-dot character before deciding it is a prefixed name.
        // Therefore, try inserting a space if we're at the end of the input.
        if ((match = this._blank.exec(input)) ||
            inputFinished && (match = this._blank.exec(input + ' ')))
          type = 'prefixed', prefix = '_', value = match[1];
        break;

      case '"':
      case "'":
        // Try to find a non-empty double-quoted literal without escape sequences.
        if (match = this._unescapedString.exec(input))
          type = 'literal', value = match[0];
        // Try to find any other literal wrapped in a pair of single or double quotes.
        else if (match = this._singleQuotedString.exec(input)) {
          unescaped = this._unescape(match[0]);
          if (unescaped === null)
            return reportSyntaxError(this);
          type = 'literal', value = unescaped.replace(/^'|'$/g, '"');
        }
        // Try to find a literal wrapped in three pairs of single or double quotes.
        else if (match = this._tripleQuotedString.exec(input)) {
          unescaped = match[1] || match[2];
          // Count the newlines and advance line counter.
          this._line += unescaped.split(/\r\n|\r|\n/).length - 1;
          unescaped = this._unescape(unescaped);
          if (unescaped === null)
            return reportSyntaxError(this);
          type = 'literal', value = unescaped.replace(/^'|'$/g, '"');
        }
        break;

      case '@':
        // Try to find a language code.
        if (this._prevTokenType === 'literal' && (match = this._langcode.exec(input)))
          type = 'langcode', value = match[1];
        // Try to find a keyword.
        else if (match = this._keyword.exec(input))
          type = match[0];
        break;

      case '.':
        // Try to find a dot as punctuation.
        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {
          type = '.';
          matchLength = 1;
          break;
        }
        // Fall through to numerical case (could be a decimal dot).

      case '0':
      case '1':
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
      case '+':
      case '-':
        // Try to find a number.
        if (match = this._number.exec(input)) {
          type = 'literal';
          value = '"' + match[0] + '"^^http://www.w3.org/2001/XMLSchema#' +
                  (match[1] ? 'double' : (/^[+\-]?\d+$/.test(match[0]) ? 'integer' : 'decimal'));
        }
        break;

      case 'B':
      case 'b':
      case 'p':
      case 'P':
      case 'G':
      case 'g':
        // Try to find a SPARQL-style keyword.
        if (match = this._sparqlKeyword.exec(input))
          type = match[0].toUpperCase();
        else
          inconclusive = true;
        break;

      case 'f':
      case 't':
        // Try to match a boolean.
        if (match = this._boolean.exec(input))
          type = 'literal', value = '"' + match[0] + '"^^http://www.w3.org/2001/XMLSchema#boolean';
        else
          inconclusive = true;
        break;

      case 'a':
        // Try to find an abbreviated predicate.
        if (match = this._shortPredicates.exec(input))
          type = 'abbreviation', value = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';
        else
          inconclusive = true;
        break;

      case ',':
      case ';':
      case '[':
      case ']':
      case '(':
      case ')':
      case '{':
      case '}':
        // The next token is punctuation
        matchLength = 1;
        type = firstChar;
        break;

      default:
        inconclusive = true;
      }

      // Some first characters do not allow an immediate decision, so inspect more.
      if (inconclusive) {
        // Try to find a prefix.
        if ((this._prevTokenType === '@prefix' || this._prevTokenType === 'PREFIX') &&
            (match = this._prefix.exec(input)))
          type = 'prefix', value = match[1] || '';
        // Try to find a prefixed name. Since it can contain (but not end with) a dot,
        // we always need a non-dot character before deciding it is a prefixed name.
        // Therefore, try inserting a space if we're at the end of the input.
        else if ((match = this._prefixed.exec(input)) ||
                 inputFinished && (match = this._prefixed.exec(input + ' ')))
          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);
      }

      // A type token is special: it can only be emitted after an IRI or prefixed name is read.
      if (this._prevTokenType === '^')
        type = (type === 'IRI' || type === 'prefixed') ? 'type' : '';

      // What if nothing of the above was found?
      if (!type) {
        // We could be in streaming mode, and then we just wait for more input to arrive.
        // Otherwise, a syntax error has occurred in the input.
        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).
        if (inputFinished || (!/^'''|^"""/.test(input) && /\n|\r/.test(input)))
          return reportSyntaxError(this);
        else
          return this._input = input;
      }

      // Emit the parsed token.
      callback(null, { line: line, type: type, value: value, prefix: prefix });
      this._prevTokenType = type;

      // Advance to next part to tokenize.
      input = input.substr(matchLength || match[0].length, input.length);
    }

    // Signals the syntax error through the callback
    function reportSyntaxError(self) { callback(self._syntaxError(/^\S*/.exec(input)[0])); }
  },

  // ### `_unescape` replaces N3 escape codes by their corresponding characters.
  _unescape: function (item) {
    try {
      return item.replace(escapeSequence, function (sequence, unicode4, unicode8, escapedChar) {
        var charCode;
        if (unicode4) {
          charCode = parseInt(unicode4, 16);
          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance
          return fromCharCode(charCode);
        }
        else if (unicode8) {
          charCode = parseInt(unicode8, 16);
          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance
          if (charCode <= 0xFFFF) return fromCharCode(charCode);
          return fromCharCode(0xD800 + ((charCode -= 0x10000) / 0x400), 0xDC00 + (charCode & 0x3FF));
        }
        else {
          var replacement = escapeReplacements[escapedChar];
          if (!replacement)
            throw new Error();
          return replacement;
        }
      });
    }
    catch (error) { return null; }
  },

  // ### `_syntaxError` creates a syntax error for the given issue
  _syntaxError: function (issue) {
    this._input = null;
    return new Error('Syntax error: unexpected "' + issue + '" on line ' + this._line + '.');
  },


  // ## Public methods

  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.
  // The input can be a string or a stream.
  tokenize: function (input, callback) {
    var self = this;
    this._line = 1;

    // If the input is a string, continuously emit tokens through the callback until the end.
    if (typeof input === 'string') {
      this._input = input;
      immediately(function () { self._tokenizeToEnd(callback, true); });
    }
    // Otherwise, the input will be streamed.
    else {
      this._input = '';

      // If no input was given, it will be streamed through `addChunk` and ended with `end`
      if (!input || typeof input === 'function') {
        this.addChunk = addChunk;
        this.end = end;
        if (!callback)
          callback = input;
      }
      // Otherwise, the input itself must be a stream
      else {
        if (typeof input.setEncoding === 'function')
          input.setEncoding('utf8');
        input.on('data', addChunk);
        input.on('end', end);
      }
    }

    // Adds the data chunk to the buffer and parses as far as possible
    function addChunk(data) {
      if (self._input !== null) {
        self._input += data;
        self._tokenizeToEnd(callback, false);
      }
    }

    // Parses until the end
    function end() {
      if (self._input !== null)
        self._tokenizeToEnd(callback, true);
    }
  },
};

// ## Exports

// Export the `N3Lexer` class as a whole.
module.exports = N3Lexer;

},{}],47:[function(require,module,exports){
// **N3Parser** parses N3 documents.
var N3Lexer = require('./N3Lexer');

var RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
    RDF_NIL    = RDF_PREFIX + 'nil',
    RDF_FIRST  = RDF_PREFIX + 'first',
    RDF_REST   = RDF_PREFIX + 'rest';

var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,
    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\/\/[^\/]*)?/i,
    dotSegments = /(?:^|\/)\.\.?(?:$|[\/#?])/;

// The next ID for new blank nodes
var blankNodePrefix = 0, blankNodeCount = 0;

// ## Constructor
function N3Parser(options) {
  if (!(this instanceof N3Parser))
    return new N3Parser(options);
  this._tripleStack = [];
  this._graph = null;

  // Set the document IRI.
  options = options || {};
  this._setBase(options.documentIRI);

  // Set supported features depending on the format.
  var format = (typeof options.format === 'string') && options.format.match(/\w*$/)[0].toLowerCase(),
      isTurtle = format === 'turtle', isTriG = format === 'trig',
      isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),
      isLineMode = isNTriples || isNQuads;
  if (!(this._supportsNamedGraphs = !isTurtle))
    this._readPredicateOrNamedGraph = this._readPredicate;
  this._supportsQuads = !(isTurtle || isTriG || isNTriples);
  // Disable relative IRIs in N-Triples or N-Quads mode
  if (isLineMode) {
    this._base = '';
    this._resolveIRI = function (token) {
      this._error('Disallowed relative IRI', token);
      return this._callback = noop, this._subject = null;
    };
  }
  this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :
                            '_:' + options.blankNodePrefix.replace(/^_:/, '');
  this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode });
}

// ## Private class methods

// ### `_resetBlankNodeIds` restarts blank node identification.
N3Parser._resetBlankNodeIds = function () {
  blankNodePrefix = blankNodeCount = 0;
};

N3Parser.prototype = {
  // ## Private methods

  // ### `_setBase` sets the base IRI to resolve relative IRIs.
  _setBase: function (baseIRI) {
    if (!baseIRI)
      baseIRI = null;
    else if (baseIRI.indexOf('#') >= 0)
      throw new Error('Invalid base IRI ' + baseIRI);
    // Set base IRI and its components
    if (this._base = baseIRI) {
      this._basePath   = baseIRI.replace(/[^\/?]*(?:\?.*)?$/, '');
      baseIRI = baseIRI.match(schemeAuthority);
      this._baseRoot   = baseIRI[0];
      this._baseScheme = baseIRI[1];
    }
  },

  // ### `_readInTopContext` reads a token when in the top context.
  _readInTopContext: function (token) {
    switch (token.type) {
    // If an EOF token arrives in the top context, signal that we're done.
    case 'eof':
      if (this._graph !== null)
        return this._error('Unclosed graph', token);
      delete this._prefixes._;
      return this._callback(null, null, this._prefixes);
    // It could be a prefix declaration.
    case '@prefix':
      this._sparqlStyle = false;
      return this._readPrefix;
    case 'PREFIX':
      this._sparqlStyle = true;
      return this._readPrefix;
    // It could be a base declaration.
    case '@base':
      this._sparqlStyle = false;
      return this._readBaseIRI;
    case 'BASE':
      this._sparqlStyle = true;
      return this._readBaseIRI;
    // It could be a graph.
    case '{':
      if (this._supportsNamedGraphs) {
        this._graph = '';
        this._subject = null;
        return this._readSubject;
      }
    case 'GRAPH':
      if (this._supportsNamedGraphs)
        return this._readNamedGraphLabel;
    // Otherwise, the next token must be a subject.
    default:
      return this._readSubject(token);
    }
  },

  // ### `_readSubject` reads a triple's subject.
  _readSubject: function (token) {
    this._predicate = null;
    switch (token.type) {
    case 'IRI':
      if (this._base === null || absoluteIRI.test(token.value))
        this._subject = token.value;
      else
        this._subject = this._resolveIRI(token);
      break;
    case 'prefixed':
      var prefix = this._prefixes[token.prefix];
      if (prefix === undefined)
        return this._error('Undefined prefix "' + token.prefix + ':"', token);
      this._subject = prefix + token.value;
      break;
    case '[':
      // Start a new triple with a new blank node as subject.
      this._subject = '_:b' + blankNodeCount++;
      this._tripleStack.push({ subject: this._subject, predicate: null, object: null, type: 'blank' });
      return this._readBlankNodeHead;
    case '(':
      // Start a new list
      this._tripleStack.push({ subject: RDF_NIL, predicate: null, object: null, type: 'list' });
      this._subject = null;
      return this._readListItem;
    case '}':
      return this._readPunctuation(token);
    default:
      return this._error('Expected subject but got ' + token.type, token);
    }
    // The next token must be a predicate,
    // or, if the subject was actually a graph IRI, a named graph.
    return this._readPredicateOrNamedGraph;
  },

  // ### `_readPredicate` reads a triple's predicate.
  _readPredicate: function (token) {
    var type = token.type;
    switch (type) {
    case 'IRI':
    case 'abbreviation':
      if (this._base === null || absoluteIRI.test(token.value))
        this._predicate = token.value;
      else
        this._predicate = this._resolveIRI(token);
      break;
    case 'prefixed':
      if (token.prefix === '_')
        return this._error('Disallowed blank node as predicate', token);
      var prefix = this._prefixes[token.prefix];
      if (prefix === undefined)
        return this._error('Undefined prefix "' + token.prefix + ':"', token);
      this._predicate = prefix + token.value;
      break;
    case '.':
    case ']':
    case '}':
      // Expected predicate didn't come, must have been trailing semicolon.
      if (this._predicate === null)
        return this._error('Unexpected ' + type, token);
      this._subject = null;
      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);
    case ';':
      // Extra semicolons can be safely ignored
      return this._readPredicate;
    default:
      return this._error('Expected predicate to follow "' + this._subject + '"', token);
    }
    // The next token must be an object.
    return this._readObject;
  },

  // ### `_readObject` reads a triple's object.
  _readObject: function (token) {
    switch (token.type) {
    case 'IRI':
      if (this._base === null || absoluteIRI.test(token.value))
        this._object = token.value;
      else
        this._object = this._resolveIRI(token);
      break;
    case 'prefixed':
      var prefix = this._prefixes[token.prefix];
      if (prefix === undefined)
        return this._error('Undefined prefix "' + token.prefix + ':"', token);
      this._object = prefix + token.value;
      break;
    case 'literal':
      this._object = token.value;
      return this._readDataTypeOrLang;
    case '[':
      // Start a new triple with a new blank node as subject.
      var blank = '_:b' + blankNodeCount++;
      this._tripleStack.push({ subject: this._subject, predicate: this._predicate, object: blank, type: 'blank' });
      this._subject = blank;
      return this._readBlankNodeHead;
    case '(':
      // Start a new list
      this._tripleStack.push({ subject: this._subject, predicate: this._predicate, object: RDF_NIL, type: 'list' });
      this._subject = null;
      return this._readListItem;
    default:
      return this._error('Expected object to follow "' + this._predicate + '"', token);
    }
    return this._getTripleEndReader();
  },

  // ### `_readPredicateOrNamedGraph` reads a triple's predicate, or a named graph.
  _readPredicateOrNamedGraph: function (token) {
    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);
  },

  // ### `_readGraph` reads a graph.
  _readGraph: function (token) {
    if (token.type !== '{')
      return this._error('Expected graph but got ' + token.type, token);
    // The "subject" we read is actually the GRAPH's label
    this._graph = this._subject, this._subject = null;
    return this._readSubject;
  },

  // ### `_readBlankNodeHead` reads the head of a blank node.
  _readBlankNodeHead: function (token) {
    if (token.type === ']') {
      this._subject = null;
      return this._readBlankNodeTail(token);
    }
    else {
      this._predicate = null;
      return this._readPredicate(token);
    }
  },

  // ### `_readBlankNodeTail` reads the end of a blank node.
  _readBlankNodeTail: function (token) {
    if (token.type !== ']')
      return this._readBlankNodePunctuation(token);

    // Store blank node triple.
    if (this._subject !== null)
      this._callback(null, { subject:   this._subject,
                             predicate: this._predicate,
                             object:    this._object,
                             graph:     this._graph || '' });

    // Restore parent triple that contains the blank node.
    var triple = this._tripleStack.pop();
    this._subject = triple.subject;
    // Was the blank node the object?
    if (triple.object !== null) {
      // Restore predicate and object as well, and continue by reading punctuation.
      this._predicate = triple.predicate;
      this._object = triple.object;
      return this._getTripleEndReader();
    }
    // The blank node was the subject, so continue reading the predicate.
    // If the blank node didn't contain any predicates, it could also be the label of a named graph.
    return this._predicate !== null ? this._readPredicate : this._readPredicateOrNamedGraph;
  },

  // ### `_readDataTypeOrLang` reads an _optional_ data type or language.
  _readDataTypeOrLang: function (token) {
    switch (token.type) {
    case 'type':
      var value;
      if (token.prefix === '') {
        if (this._base === null || absoluteIRI.test(token.value))
          value = token.value;
        else
          value = this._resolveIRI(token);
      }
      else {
        var prefix = this._prefixes[token.prefix];
        if (prefix === undefined)
          return this._error('Undefined prefix "' + token.prefix + ':"', token);
        value = prefix + token.value;
      }
      this._object += '^^' + value;
      return this._getTripleEndReader();
    case 'langcode':
      this._object += '@' + token.value.toLowerCase();
      return this._getTripleEndReader();
    default:
      return this._getTripleEndReader().call(this, token);
    }
  },

  // ### `_readListItem` reads items from a list.
  _readListItem: function (token) {
    var item = null,                  // The actual list item.
        itemHead = null,              // The head of the rdf:first predicate.
        prevItemHead = this._subject, // The head of the previous rdf:first predicate.
        stack = this._tripleStack,    // The stack of triples part of recursion (lists, blanks, etc.).
        parentTriple = stack[stack.length - 1], // The triple containing the current list.
        next = this._readListItem;    // The next function to execute.

    switch (token.type) {
    case 'IRI':
      if (this._base === null || absoluteIRI.test(token.value))
        item = token.value;
      else
        item = this._resolveIRI(token);
      break;
    case 'prefixed':
      var prefix = this._prefixes[token.prefix];
      if (prefix === undefined)
        return this._error('Undefined prefix "' + token.prefix + ':"', token);
      item = prefix + token.value;
      break;
    case 'literal':
      item = token.value;
      next = this._readDataTypeOrLang;
      break;
    case '[':
      // Stack the current list triple and start a new triple with a blank node as subject.
      itemHead = '_:b' + blankNodeCount++;
      item     = '_:b' + blankNodeCount++;
      stack.push({ subject: itemHead, predicate: RDF_FIRST, object: item, type: 'blank' });
      this._subject = item;
      next = this._readBlankNodeHead;
      break;
    case '(':
      // Stack the current list triple and start a new list
      itemHead = '_:b' + blankNodeCount++;
      stack.push({ subject: itemHead, predicate: RDF_FIRST, object: RDF_NIL, type: 'list' });
      this._subject = null;
      next = this._readListItem;
      break;
    case ')':
      // Restore the parent triple.
      stack.pop();
      // If this list is contained within a parent list, return the membership triple here.
      // This will be `<parent list element> rdf:first <this list>.`.
      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')
        this._callback(null, { subject:   parentTriple.subject,
                               predicate: parentTriple.predicate,
                               object:    parentTriple.object,
                               graph:     this._graph || '' });
      // Restore the parent triple's subject.
      this._subject = parentTriple.subject;
      // Was this list in the parent triple's subject?
      if (parentTriple.predicate === null) {
        // The next token is the predicate.
        next = this._readPredicate;
        // Skip writing the list tail if this was an empty list.
        if (parentTriple.subject === RDF_NIL)
          return next;
      }
      // The list was in the parent triple's object.
      else {
        // Restore the parent triple's predicate and object as well.
        this._predicate = parentTriple.predicate;
        this._object = parentTriple.object;
        next = this._getTripleEndReader();
        // Skip writing the list tail if this was an empty list.
        if (parentTriple.object === RDF_NIL)
          return next;
      }
      // Close the list by making the item head nil.
      itemHead = RDF_NIL;
      break;
    default:
      return this._error('Expected list item instead of "' + token.type + '"', token);
    }

     // Create a new blank node if no item head was assigned yet.
    if (itemHead === null)
      this._subject = itemHead = '_:b' + blankNodeCount++;

    // Is this the first element of the list?
    if (prevItemHead === null) {
      // This list is either the object or the subject.
      if (parentTriple.object === RDF_NIL)
        parentTriple.object = itemHead;
      else
        parentTriple.subject = itemHead;
    }
    else {
      // The rest of the list is in the current head.
      this._callback(null, { subject:   prevItemHead,
                             predicate: RDF_REST,
                             object:    itemHead,
                             graph:     this._graph || '' });
    }
    // Add the item's value.
    if (item !== null)
      this._callback(null, { subject:   itemHead,
                             predicate: RDF_FIRST,
                             object:    item,
                             graph:     this._graph || '' });
    return next;
  },

  // ### `_readPunctuation` reads punctuation between triples or triple parts.
  _readPunctuation: function (token) {
    var next, subject = this._subject, graph = this._graph;
    switch (token.type) {
    // A closing brace ends a graph
    case '}':
      if (this._graph === null)
        return this._error('Unexpected graph closing', token);
      this._graph = null;
    // A dot just ends the statement, without sharing anything with the next.
    case '.':
      this._subject = null;
      next = this._readInTopContext;
      break;
    // Semicolon means the subject is shared; predicate and object are different.
    case ';':
      next = this._readPredicate;
      break;
    // Comma means both the subject and predicate are shared; the object is different.
    case ',':
      next = this._readObject;
      break;
    // An IRI means this is a quad (only allowed if not already inside a graph).
    case 'IRI':
      if (this._supportsQuads && this._graph === null) {
        if (this._base === null || absoluteIRI.test(token.value))
          graph = token.value;
        else
          graph = this._resolveIRI(token);
        subject = this._subject;
        next = this._readQuadPunctuation;
        break;
      }
    // An prefixed name means this is a quad (only allowed if not already inside a graph).
    case 'prefixed':
      if (this._supportsQuads && this._graph === null) {
        var prefix = this._prefixes[token.prefix];
        if (prefix === undefined)
          return this._error('Undefined prefix "' + token.prefix + ':"', token);
        graph = prefix + token.value;
        next = this._readQuadPunctuation;
        break;
      }
    default:
      return this._error('Expected punctuation to follow "' + this._object + '"', token);
    }
    // A triple has been completed now, so return it.
    if (subject !== null)
      this._callback(null, { subject:   subject,
                             predicate: this._predicate,
                             object:    this._object,
                             graph:     graph || '' });
    return next;
  },

    // ### `_readBlankNodePunctuation` reads punctuation in a blank node
  _readBlankNodePunctuation: function (token) {
    var next;
    switch (token.type) {
    // Semicolon means the subject is shared; predicate and object are different.
    case ';':
      next = this._readPredicate;
      break;
    // Comma means both the subject and predicate are shared; the object is different.
    case ',':
      next = this._readObject;
      break;
    default:
      return this._error('Expected punctuation to follow "' + this._object + '"', token);
    }
    // A triple has been completed now, so return it.
    this._callback(null, { subject:   this._subject,
                           predicate: this._predicate,
                           object:    this._object,
                           graph:     this._graph || '' });
    return next;
  },

  // ### `_readQuadPunctuation` reads punctuation after a quad.
  _readQuadPunctuation: function (token) {
    if (token.type !== '.')
      return this._error('Expected dot to follow quad', token);
    return this._readInTopContext;
  },

  // ### `_readPrefix` reads the prefix of a prefix declaration.
  _readPrefix: function (token) {
    if (token.type !== 'prefix')
      return this._error('Expected prefix to follow @prefix', token);
    this._prefix = token.value;
    return this._readPrefixIRI;
  },

  // ### `_readPrefixIRI` reads the IRI of a prefix declaration.
  _readPrefixIRI: function (token) {
    if (token.type !== 'IRI')
      return this._error('Expected IRI to follow prefix "' + this._prefix + ':"', token);
    var prefixIRI;
    if (this._base === null || absoluteIRI.test(token.value))
      prefixIRI = token.value;
    else
      prefixIRI = this._resolveIRI(token);
    this._prefixes[this._prefix] = prefixIRI;
    this._prefixCallback(this._prefix, prefixIRI);
    return this._readDeclarationPunctuation;
  },

  // ### `_readBaseIRI` reads the IRI of a base declaration.
  _readBaseIRI: function (token) {
    if (token.type !== 'IRI')
      return this._error('Expected IRI to follow base declaration', token);
    try {
      this._setBase(this._base === null ||
                    absoluteIRI.test(token.value) ? token.value : this._resolveIRI(token));
    }
    catch (error) { this._error(error.message, token); }
    return this._readDeclarationPunctuation;
  },

  // ### `_readNamedGraphLabel` reads the label of a named graph.
  _readNamedGraphLabel: function (token) {
    switch (token.type) {
    case 'IRI':
    case 'prefixed':
      return this._readSubject(token), this._readGraph;
    case '[':
      return this._readNamedGraphBlankLabel;
    default:
      return this._error('Invalid graph label', token);
    }
  },

  // ### `_readNamedGraphLabel` reads a blank node label of a named graph.
  _readNamedGraphBlankLabel: function (token) {
    if (token.type !== ']')
      return this._error('Invalid graph label', token);
    this._subject = '_:b' + blankNodeCount++;
    return this._readGraph;
  },

  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration.
  _readDeclarationPunctuation: function (token) {
    // SPARQL-style declarations don't have punctuation.
    if (this._sparqlStyle)
      return this._readInTopContext(token);

    if (token.type !== '.')
      return this._error('Expected declaration to end with a dot', token);
    return this._readInTopContext;
  },

  // ### `_getTripleEndReader` gets the next reader function at the end of a triple.
  _getTripleEndReader: function () {
    var stack = this._tripleStack;
    if (stack.length === 0)
      return this._readPunctuation;

    switch (stack[stack.length - 1].type) {
    case 'blank':
      return this._readBlankNodeTail;
    case 'list':
      return this._readListItem;
    }
  },

  // ### `_error` emits an error message through the callback.
  _error: function (message, token) {
    this._callback(new Error(message + ' at line ' + token.line + '.'));
  },

  // ### `_resolveIRI` resolves a relative IRI token against the base path,
  // assuming that a base path has been set and that the IRI is indeed relative.
  _resolveIRI: function (token) {
    var iri = token.value;
    switch (iri[0]) {
    // An empty relative IRI indicates the base IRI
    case undefined: return this._base;
    // Resolve relative fragment IRIs against the base IRI
    case '#': return this._base + iri;
    // Resolve relative query string IRIs by replacing the query string
    case '?': return this._base.replace(/(?:\?.*)?$/, iri);
    // Resolve root-relative IRIs at the root of the base IRI
    case '/':
      // Resolve scheme-relative IRIs to the scheme
      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);
    // Resolve all other IRIs at the base IRI's path
    default:
      return this._removeDotSegments(this._basePath + iri);
    }
  },

  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.
  _removeDotSegments: function (iri) {
    // Don't modify the IRI if it does not contain any dot segments
    if (!dotSegments.test(iri))
      return iri;

    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'
    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';

    while (i < length) {
      switch (next) {
      // The path starts with the first slash after the authority
      case ':':
        if (pathStart < 0) {
          // Skip two slashes before the authority
          if (iri[++i] === '/' && iri[++i] === '/')
            // Skip to slash after the authority
            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')
              i = pathStart;
        }
        break;
      // Don't modify a query string or fragment
      case '?':
      case '#':
        i = length;
        break;
      // Handle '/.' or '/..' path segments
      case '/':
        if (iri[i + 1] === '.') {
          next = iri[++i + 1];
          switch (next) {
          // Remove a '/.' segment
          case '/':
            result += iri.substring(segmentStart, i - 1);
            segmentStart = i + 1;
            break;
          // Remove a trailing '/.' segment
          case undefined:
          case '?':
          case '#':
            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);
          // Remove a '/..' segment
          case '.':
            next = iri[++i + 1];
            if (next === undefined || next === '/' || next === '?' || next === '#') {
              result += iri.substring(segmentStart, i - 2);
              // Try to remove the parent path from result
              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)
                result = result.substr(0, segmentStart);
              // Remove a trailing '/..' segment
              if (next !== '/')
                return result + '/' + iri.substr(i + 1);
              segmentStart = i + 1;
            }
          }
        }
      }
      next = iri[++i];
    }
    return result + iri.substring(segmentStart);
  },

  // ## Public methods

  // ### `parse` parses the N3 input and emits each parsed triple through the callback.
  parse: function (input, tripleCallback, prefixCallback) {
    // The read callback is the next function to be executed when a token arrives.
    // We start reading in the top context.
    this._readCallback = this._readInTopContext;
    this._prefixes = Object.create(null);
    this._prefixes._ = this._blankNodePrefix || '_:b' + blankNodePrefix++ + '_';

    // If the input argument is not given, shift parameters
    if (typeof input === 'function')
      prefixCallback = tripleCallback, tripleCallback = input, input = null;

    // Set the triple and prefix callbacks.
    this._callback = tripleCallback || noop;
    this._prefixCallback = prefixCallback || noop;

    // Execute the read callback when a token arrives.
    var self = this;
    this._lexer.tokenize(input, function (error, token) {
      if (error !== null)
        self._callback(error), self._callback = noop;
      else if (self._readCallback !== undefined)
        self._readCallback = self._readCallback(token);
    });

    // If no input was given, it can be added with `addChunk` and ended with `end`
    if (!input) {
      this.addChunk = this._lexer.addChunk;
      this.end = this._lexer.end;
    }
  },
};

// The empty function
function noop() {}

// ## Exports

// Export the `N3Parser` class as a whole.
module.exports = N3Parser;

},{"./N3Lexer":46}],48:[function(require,module,exports){
// **N3Store** objects store N3 triples by graph in memory.

var expandPrefixedName = require('./N3Util').expandPrefixedName;

// ## Constructor
function N3Store(triples, options) {
  if (!(this instanceof N3Store))
    return new N3Store(triples, options);

  // The number of triples is initially zero.
  this._size = 0;
  // `_graphs` contains subject, predicate, and object indexes per graph.
  this._graphs = Object.create(null);
  // `_entities` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers.
  // This saves memory, since only the numbers have to be stored in `_graphs`.
  this._entities = Object.create(null);
  this._entities['><'] = 0; // Dummy entry, so the first actual key is non-zero
  this._entityCount = 0;
  // `_blankNodeIndex` is the index of the last created blank node that was automatically named
  this._blankNodeIndex = 0;

  // Shift parameters if `triples` is not given
  if (!options && triples && !triples[0])
    options = triples, triples = null;

  // Add triples and prefixes if passed
  this._prefixes = Object.create(null);
  if (options && options.prefixes)
    this.addPrefixes(options.prefixes);
  if (triples)
    this.addTriples(triples);
}

N3Store.prototype = {
  // ## Public properties

  // ### `size` returns the number of triples in the store.
  get size() {
    // Return the triple count if if was cached.
    var size = this._size;
    if (size !== null)
      return size;

    // Calculate the number of triples by counting to the deepest level.
    var graphs = this._graphs, subjects, subject;
    for (var graphKey in graphs)
      for (var subjectKey in (subjects = graphs[graphKey].subjects))
        for (var predicateKey in (subject = subjects[subjectKey]))
          size += Object.keys(subject[predicateKey]).length;
    return this._size = size;
  },

  // ## Private methods

  // ### `_addToIndex` adds a triple to a three-layered index.
  _addToIndex: function (index0, key0, key1, key2) {
    // Create layers as necessary.
    var index1 = index0[key0] || (index0[key0] = {});
    var index2 = index1[key1] || (index1[key1] = {});
    // Setting the key to _any_ value signalizes the presence of the triple.
    index2[key2] = null;
  },

  // ### `_removeFromIndex` removes a triple from a three-layered index.
  _removeFromIndex: function (index0, key0, key1, key2) {
    // Remove the triple from the index.
    var index1 = index0[key0], index2 = index1[key1], key;
    delete index2[key2];

    // Remove intermediary index layers if they are empty.
    for (key in index2) return;
    delete index1[key1];
    for (key in index1) return;
    delete index0[key0];
  },

  // ### `_findInIndex` finds a set of triples in a three-layered index.
  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.
  // Any of these keys can be `null`, which is interpreted as a wildcard.
  // `name0`, `name1`, and `name2` are the names of the keys at each level,
  // used when reconstructing the resulting triple
  // (for instance: _subject_, _predicate_, and _object_).
  // Finally, `graph` will be the graph of the created triples.
  _findInIndex: function (index0, key0, key1, key2, name0, name1, name2, graph) {
    var results = [], entityKeys = Object.keys(this._entities), tmp, index1, index2;

    // If a key is specified, use only that part of index 0.
    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];
    for (var value0 in index0) {
      var entity0 = entityKeys[value0];

      if (index1 = index0[value0]) {
        // If a key is specified, use only that part of index 1.
        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];
        for (var value1 in index1) {
          var entity1 = entityKeys[value1];

          if (index2 = index1[value1]) {
            // If a key is specified, use only that part of index 2, if it exists.
            var values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);
            // Create triples for all items found in index 2.
            for (var l = values.length - 1; l >= 0; l--) {
              var result = { subject: '', predicate: '', object: '', graph: graph };
              result[name0] = entity0;
              result[name1] = entity1;
              result[name2] = entityKeys[values[l]];
              results.push(result);
            }
          }
        }
      }
    }
    return results;
  },

  // ### `_countInIndex` counts matching triples in a three-layered index.
  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.
  // Any of these keys can be `null`, which is interpreted as a wildcard.
  _countInIndex: function (index0, key0, key1, key2) {
    var count = 0, tmp, index1, index2;

    // If a key is specified, count only that part of index 0.
    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];
    for (var value0 in index0) {
      if (index1 = index0[value0]) {
        // If a key is specified, count only that part of index 1.
        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];
        for (var value1 in index1) {
          if (index2 = index1[value1]) {
            // If a key is specified, count the triple if it exists.
            if (key2) (key2 in index2) && count++;
            // Otherwise, count all triples.
            else count += Object.keys(index2).length;
          }
        }
      }
    }
    return count;
  },

  // ## Public methods

  // ### `addTriple` adds a new N3 triple to the store.
  addTriple: function (subject, predicate, object, graph) {
    // Shift arguments if a triple object is given instead of components
    if (!predicate)
      graph = subject.graph, object = subject.object,
        predicate = subject.predicate, subject = subject.subject;

    // Find the graph that will contain the triple.
    graph = graph || '';
    var graphItem = this._graphs[graph];
    // Create the graph if it doesn't exist yet.
    if (!graphItem) {
      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };
      // Freezing a graph helps subsequent `add` performance,
      // and properties will never be modified anyway.
      Object.freeze(graphItem);
    }

    // Since entities can often be long IRIs, we avoid storing them in every index.
    // Instead, we have a separate index that maps entities to numbers,
    // which are then used as keys in the other indexes.
    var entities = this._entities;
    subject   = entities[subject]   || (entities[subject]   = ++this._entityCount);
    predicate = entities[predicate] || (entities[predicate] = ++this._entityCount);
    object    = entities[object]    || (entities[object]    = ++this._entityCount);

    this._addToIndex(graphItem.subjects,   subject,   predicate, object);
    this._addToIndex(graphItem.predicates, predicate, object,    subject);
    this._addToIndex(graphItem.objects,    object,    subject,   predicate);

    // The cached triple count is now invalid.
    this._size = null;
  },

  // ### `addTriples` adds multiple N3 triples to the store.
  addTriples: function (triples) {
    for (var i = triples.length - 1; i >= 0; i--)
      this.addTriple(triples[i]);
  },

  // ### `addPrefix` adds support for querying with the given prefix
  addPrefix: function (prefix, iri) {
    this._prefixes[prefix] = iri;
  },

  // ### `addPrefixes` adds support for querying with the given prefixes
  addPrefixes: function (prefixes) {
    for (var prefix in prefixes)
      this.addPrefix(prefix, prefixes[prefix]);
  },

  // ### `removeTriple` removes an N3 triple from the store if it exists.
  removeTriple: function (subject, predicate, object, graph) {
    // Shift arguments if a triple object is given instead of components.
    if (!predicate)
      graph = subject.graph, object = subject.object,
        predicate = subject.predicate, subject = subject.subject;
    graph = graph || '';

    // Find internal identifiers for all components.
    var graphItem, entities = this._entities, graphs = this._graphs;
    if (!(subject     = entities[subject]))   return;
    if (!(predicate   = entities[predicate])) return;
    if (!(object      = entities[object]))    return;
    if (!(graphItem   = graphs[graph]))       return;

    // Verify that the triple exists.
    var subjects, predicates;
    if (!(subjects   = graphItem.subjects[subject])) return;
    if (!(predicates = subjects[predicate])) return;
    if (!(object in predicates)) return;

    // Remove it from all indexes.
    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);
    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);
    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);
    if (this._size !== null) this._size--;

    // Remove the graph if it is empty.
    for (subject in graphItem.subjects) return;
    delete graphs[graph];
  },

  // ### `removeTriples` removes multiple N3 triples from the store.
  removeTriples: function (triples) {
    for (var i = triples.length - 1; i >= 0; i--)
      this.removeTriple(triples[i]);
  },

  // ### `find` finds a set of triples matching a pattern, expanding prefixes as necessary.
  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.
  // Setting `graph` to `null` means the default graph.
  find: function (subject, predicate, object, graph) {
    var prefixes = this._prefixes;
    return this.findByIRI(
      expandPrefixedName(subject,   prefixes),
      expandPrefixedName(predicate, prefixes),
      expandPrefixedName(object,    prefixes),
      expandPrefixedName(graph,     prefixes)
    );
  },

  // ### `findByIRI` finds a set of triples matching a pattern.
  // Setting `subject`, `predicate`, or `object` to a falsy value means an _anything_ wildcard.
  // Setting `graph` to a falsy value means the default graph.
  findByIRI: function (subject, predicate, object, graph) {
    graph = graph || '';
    var graphItem = this._graphs[graph], entities = this._entities;

    // If the specified graph contain no triples, there are no results.
    if (!graphItem) return [];

    // Translate IRIs to internal index keys.
    // Optimization: if the entity doesn't exist, no triples with it exist.
    if (subject   && !(subject   = entities[subject]))   return [];
    if (predicate && !(predicate = entities[predicate])) return [];
    if (object    && !(object    = entities[object]))    return [];

    // Choose the optimal index, based on what fields are present
    if (subject) {
      if (object)
        // If subject and object are given, the object index will be the fastest.
        return this._findInIndex(graphItem.objects, object, subject, predicate,
                                 'object', 'subject', 'predicate', graph);
      else
        // If only subject and possibly predicate are given, the subject index will be the fastest.
        return this._findInIndex(graphItem.subjects, subject, predicate, null,
                                 'subject', 'predicate', 'object', graph);
    }
    else if (predicate)
      // If only predicate and possibly object are given, the predicate index will be the fastest.
      return this._findInIndex(graphItem.predicates, predicate, object, null,
                               'predicate', 'object', 'subject', graph);
    else if (object)
      // If only object is given, the object index will be the fastest.
      return this._findInIndex(graphItem.objects, object, null, null,
                               'object', 'subject', 'predicate', graph);
    else
      // If nothing is given, iterate subjects and predicates first
      return this._findInIndex(graphItem.subjects, null, null, null,
                               'subject', 'predicate', 'object', graph);
  },

  // ### `count` returns the number of triples matching a pattern, expanding prefixes as necessary.
  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.
  // Setting `graph` to `null` means the default graph.
  count: function (subject, predicate, object, graph) {
    var prefixes = this._prefixes;
    return this.countByIRI(
      expandPrefixedName(subject,   prefixes),
      expandPrefixedName(predicate, prefixes),
      expandPrefixedName(object,    prefixes),
      expandPrefixedName(graph,     prefixes)
    );
  },

  // ### `countByIRI` returns the number of triples matching a pattern.
  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.
  // Setting `graph` to `null` means the default graph.
  countByIRI: function (subject, predicate, object, graph) {
    graph = graph || '';
    var graphItem = this._graphs[graph], entities = this._entities;

    // If the specified graph contain no triples, there are no results.
    if (!graphItem) return 0;

    // Translate IRIs to internal index keys.
    // Optimization: if the entity doesn't exist, no triples with it exist.
    if (subject   && !(subject   = entities[subject]))   return 0;
    if (predicate && !(predicate = entities[predicate])) return 0;
    if (object    && !(object    = entities[object]))    return 0;

    // Choose the optimal index, based on what fields are present
    if (subject) {
      if (object)
        // If subject and object are given, the object index will be the fastest.
        return this._countInIndex(graphItem.objects, object, subject, predicate);
      else
        // If only subject and possibly predicate are given, the subject index will be the fastest.
        return this._countInIndex(graphItem.subjects, subject, predicate, object);
    }
    else if (predicate) {
      // If only predicate and possibly object are given, the predicate index will be the fastest.
      return this._countInIndex(graphItem.predicates, predicate, object, subject);
    }
    else {
      // If only object is possibly given, the object index will be the fastest.
      return this._countInIndex(graphItem.objects, object, subject, predicate);
    }
  },

  // ### `createBlankNode` creates a new blank node, returning its name.
  createBlankNode: function (suggestedName) {
    var name, index;
    // Generate a name based on the suggested name
    if (suggestedName) {
      name = suggestedName = '_:' + suggestedName, index = 1;
      while (this._entities[name])
        name = suggestedName + index++;
    }
    // Generate a generic blank node name
    else {
      do { name = '_:b' + this._blankNodeIndex++; }
      while (this._entities[name]);
    }
    // Add the blank node to the entities, avoiding the generation of duplicates
    this._entities[name] = ++this._entityCount;
    return name;
  },
};

// ## Exports

// Export the `N3Store` class as a whole.
module.exports = N3Store;

},{"./N3Util":51}],49:[function(require,module,exports){
// **N3StreamParser** parses an N3 stream into a triple stream
var Transform = require('stream').Transform,
    util = require('util'),
    N3Parser = require('./N3Parser.js');

// ## Constructor
function N3StreamParser(options) {
  if (!(this instanceof N3StreamParser))
    return new N3StreamParser(options);

  // Initialize Transform base class
  Transform.call(this, { decodeStrings: true });
  this._readableState.objectMode = true;

  // Set up parser
  var self = this, parser = new N3Parser(options);
  parser.parse(
    // Handle triples by pushing them down the pipeline
    function (error, triple) {
      triple && self.push(triple) ||
      error  && self.emit('error', error);
    },
    // Emit prefixes through the `prefix` event
    this.emit.bind(this, 'prefix'));

  // Implement Transform methods on top of parser
  this._transform = function (chunk, encoding, done) { parser.addChunk(chunk); done(); };
  this._flush = function (done) { parser.end(); done(); };
}
util.inherits(N3StreamParser, Transform);

// ## Exports
// Export the `N3StreamParser` class as a whole.
module.exports = N3StreamParser;

},{"./N3Parser.js":47,"stream":126,"util":138}],50:[function(require,module,exports){
// **N3StreamWriter** serializes a triple stream into an N3 stream
var Transform = require('stream').Transform,
    util = require('util'),
    N3Writer = require('./N3Writer.js');

// ## Constructor
function N3StreamWriter(options) {
  if (!(this instanceof N3StreamWriter))
    return new N3StreamWriter(options);

  // Initialize Transform base class
  Transform.call(this, { encoding: 'utf8' });
  this._writableState.objectMode = true;

  // Set up writer with a dummy stream object
  var self = this;
  var writer = new N3Writer({
    write: function (chunk, encoding, callback) { self.push(chunk); callback && callback(); },
    end: function (callback) { self.push(null); callback && callback(); },
  }, options);

  // Implement Transform methods on top of writer
  this._transform = function (triple, encoding, done) { writer.addTriple(triple, done); };
  this._flush = function (done) { writer.end(done); };
}
util.inherits(N3StreamWriter, Transform);

// ## Exports
// Export the `N3StreamWriter` class as a whole.
module.exports = N3StreamWriter;

},{"./N3Writer.js":52,"stream":126,"util":138}],51:[function(require,module,exports){
// **N3Util** provides N3 utility functions

var Xsd = 'http://www.w3.org/2001/XMLSchema#';
var XsdString  = Xsd + 'string';
var XsdInteger = Xsd + 'integer';
var XsdDecimal = Xsd + 'decimal';
var XsdBoolean = Xsd + 'boolean';
var RdfLangString = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#langString';

var N3Util = {
  // Tests whether the given entity (triple object) represents an IRI in the N3 library
  isIRI: function (entity) {
    if (!entity)
      return entity;
    var firstChar = entity[0];
    return firstChar !== '"' && firstChar !== '_';
  },

  // Tests whether the given entity (triple object) represents a literal in the N3 library
  isLiteral: function (entity) {
    return entity && entity[0] === '"';
  },

  // Tests whether the given entity (triple object) represents a blank node in the N3 library
  isBlank: function (entity) {
    return entity && entity.substr(0, 2) === '_:';
  },

  // Gets the string value of a literal in the N3 library
  getLiteralValue: function (literal) {
    var match = /^"([^]*)"/.exec(literal);
    if (!match)
      throw new Error(literal + ' is not a literal');
    return match[1];
  },

  // Gets the type of a literal in the N3 library
  getLiteralType: function (literal) {
    var match = /^"[^]*"(?:\^\^([^"]+)|(@)[^@"]+)?$/.exec(literal);
    if (!match)
      throw new Error(literal + ' is not a literal');
    return match[1] || (match[2] ? RdfLangString : XsdString);
  },

  // Gets the language of a literal in the N3 library
  getLiteralLanguage: function (literal) {
    var match = /^"[^]*"(?:@([^@"]+)|\^\^[^"]+)?$/.exec(literal);
    if (!match)
      throw new Error(literal + ' is not a literal');
    return match[1] ? match[1].toLowerCase() : '';
  },

  // Tests whether the given entity (triple object) represents a prefixed name
  isPrefixedName: function (entity) {
    return entity && /^[^:\/"']*:[^:\/"']+$/.test(entity);
  },

  // Expands the prefixed name to a full IRI (also when it occurs as a literal's type)
  expandPrefixedName: function (prefixedName, prefixes) {
    var match = /(?:^|"\^\^)([^:\/#"'\^_]*):[^\/]*$/.exec(prefixedName), prefix, base, index;
    if (match)
      prefix = match[1], base = prefixes[prefix], index = match.index;
    if (base === undefined)
      return prefixedName;

    // The match index is non-zero when expanding a literal's type.
    return index === 0 ? base + prefixedName.substr(prefix.length + 1)
                       : prefixedName.substr(0, index + 3) +
                         base + prefixedName.substr(index + prefix.length + 4);
  },

  // Creates an IRI in N3.js representation
  createIRI: function (iri) {
    return iri && iri[0] === '"' ? N3Util.getLiteralValue(iri) : iri;
  },

  // Creates a literal in N3.js representation
  createLiteral: function (value, modifier) {
    if (!modifier) {
      switch (typeof value) {
      case 'boolean':
        modifier = XsdBoolean;
        break;
      case 'number':
        if (isFinite(value)) {
          modifier = value % 1 === 0 ? XsdInteger : XsdDecimal;
          break;
        }
      default:
        return '"' + value + '"';
      }
    }
    return '"' + value +
           (/^[a-z]+(-[a-z0-9]+)*$/i.test(modifier) ? '"@'  + modifier.toLowerCase()
                                                    : '"^^' + modifier);
  },
};

// Add the N3Util functions to the given object or its prototype
function addN3Util(parent, toPrototype) {
  for (var name in N3Util)
    if (!toPrototype)
      parent[name] = N3Util[name];
    else
      parent.prototype[name] = applyToThis(N3Util[name]);

  return parent;
}

// Returns a function that applies `f` to the `this` object
function applyToThis(f) {
  return function (a) { return f(this, a); };
}

// Expose N3Util, attaching all functions to it
module.exports = addN3Util(addN3Util);

},{}],52:[function(require,module,exports){
// **N3Writer** writes N3 documents.

// Matches a literal as represented in memory by the N3 library
var N3LiteralMatcher = /^"([^]*)"(?:\^\^(.+)|@([\-a-z]+))?$/i;

// rdf:type predicate (for 'a' abbreviation)
var RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
    RDF_TYPE   = RDF_PREFIX + 'type';

// Characters in literals that require escaping
var escape    = /["\\\t\n\r\b\f\u0000-\u0019\ud800-\udbff]/,
    escapeAll = /["\\\t\n\r\b\f\u0000-\u0019]|[\ud800-\udbff][\udc00-\udfff]/g,
    escapeReplacements = { '\\': '\\\\', '"': '\\"', '\t': '\\t',
                           '\n': '\\n', '\r': '\\r', '\b': '\\b', '\f': '\\f' };

// ## Constructor
function N3Writer(outputStream, options) {
  if (!(this instanceof N3Writer))
    return new N3Writer(outputStream, options);

  // Shift arguments if the first argument is not a stream
  if (outputStream && typeof outputStream.write !== 'function')
    options = outputStream, outputStream = null;
  options = options || {};

  // If no output stream given, send the output as string through the end callback
  if (!outputStream) {
    var output = '';
    this._outputStream = {
      write: function (chunk, encoding, done) { output += chunk; done && done(); },
      end:   function (done) { done && done(null, output); },
    };
    this._endStream = true;
  }
  else {
    this._outputStream = outputStream;
    this._endStream = options.end === undefined ? true : !!options.end;
  }

  // Initialize writer, depending on the format
  this._subject = null;
  if (!(/triple|quad/i).test(options.format)) {
    this._graph = '';
    this._prefixIRIs = Object.create(null);
    options.prefixes && this.addPrefixes(options.prefixes);
  }
  else {
    this._writeTriple = this._writeTripleLine;
  }
}

N3Writer.prototype = {
  // ## Private methods

  // ### `_write` writes the argument to the output stream
  _write: function (string, callback) {
    this._outputStream.write(string, 'utf8', callback);
  },

    // ### `_writeTriple` writes the triple to the output stream
  _writeTriple: function (subject, predicate, object, graph, done) {
    try {
      // Write the graph's label if it has changed
      if (this._graph !== graph) {
        // Close the previous graph and start the new one
        this._write((this._subject === null ? '' : (this._graph ? '\n}\n' : '.\n')) +
                    (graph ? this._encodeIriOrBlankNode(graph) + ' {\n' : ''));
        this._subject = null;
        // Don't treat identical blank nodes as repeating graphs
        this._graph = graph[0] !== '[' ? graph : ']';
      }
      // Don't repeat the subject if it's the same
      if (this._subject === subject) {
        // Don't repeat the predicate if it's the same
        if (this._predicate === predicate)
          this._write(', ' + this._encodeObject(object), done);
        // Same subject, different predicate
        else
          this._write(';\n    ' +
                      this._encodePredicate(this._predicate = predicate) + ' ' +
                      this._encodeObject(object), done);
      }
      // Different subject; write the whole triple
      else
        this._write((this._subject === null ? '' : '.\n') +
                    this._encodeSubject(this._subject = subject) + ' ' +
                    this._encodePredicate(this._predicate = predicate) + ' ' +
                    this._encodeObject(object), done);
    }
    catch (error) { done && done(error); }
  },

  // ### `_writeTripleLine` writes the triple or quad to the output stream as a single line
  _writeTripleLine: function (subject, predicate, object, graph, done) {
    // Don't use prefixes
    delete this._prefixMatch;
    // Write the triple
    try {
      this._write(this._encodeIriOrBlankNode(subject) + ' ' +
                  this._encodeIriOrBlankNode(predicate) + ' ' +
                  this._encodeObject(object) +
                  (graph ? ' ' + this._encodeIriOrBlankNode(graph) + '.\n' : '.\n'), done);
    }
    catch (error) { done && done(error); }
  },

  // ### `_encodeIriOrBlankNode` represents an IRI or blank node
  _encodeIriOrBlankNode: function (entity) {
    // A blank node or list is represented as-is
    var firstChar = entity[0];
    if (firstChar === '[' || firstChar === '(' || firstChar === '_' && entity[1] === ':')
      return entity;
    // Escape special characters
    if (escape.test(entity))
      entity = entity.replace(escapeAll, characterReplacer);
    // Try to represent the IRI as prefixed name
    var prefixMatch = this._prefixRegex.exec(entity);
    return !prefixMatch ? '<' + entity + '>' :
           (!prefixMatch[1] ? entity : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);
  },

  // ### `_encodeLiteral` represents a literal
  _encodeLiteral: function (value, type, language) {
    // Escape special characters
    if (escape.test(value))
      value = value.replace(escapeAll, characterReplacer);
    // Write the literal, possibly with type or language
    if (language)
      return '"' + value + '"@' + language;
    else if (type)
      return '"' + value + '"^^' + this._encodeIriOrBlankNode(type);
    else
      return '"' + value + '"';
  },

  // ### `_encodeSubject` represents a subject
  _encodeSubject: function (subject) {
    if (subject[0] === '"')
      throw new Error('A literal as subject is not allowed: ' + subject);
    // Don't treat identical blank nodes as repeating subjects
    if (subject[0] === '[')
      this._subject = ']';
    return this._encodeIriOrBlankNode(subject);
  },

  // ### `_encodePredicate` represents a predicate
  _encodePredicate: function (predicate) {
    if (predicate[0] === '"')
      throw new Error('A literal as predicate is not allowed: ' + predicate);
    return predicate === RDF_TYPE ? 'a' : this._encodeIriOrBlankNode(predicate);
  },

  // ### `_encodeObject` represents an object
  _encodeObject: function (object) {
    // Represent an IRI or blank node
    if (object[0] !== '"')
      return this._encodeIriOrBlankNode(object);
    // Represent a literal
    var match = N3LiteralMatcher.exec(object);
    if (!match) throw new Error('Invalid literal: ' + object);
    return this._encodeLiteral(match[1], match[2], match[3]);
  },

  // ### `_blockedWrite` replaces `_write` after the writer has been closed
  _blockedWrite: function () {
    throw new Error('Cannot write because the writer has been closed.');
  },

  // ### `addTriple` adds the triple to the output stream
  addTriple: function (subject, predicate, object, graph, done) {
    // The triple was given as a triple object, so shift parameters
    if (object === undefined)
      this._writeTriple(subject.subject, subject.predicate, subject.object,
                        subject.graph || '', predicate);
    // The optional `graph` parameter was not provided
    else if (typeof graph !== 'string')
      this._writeTriple(subject, predicate, object, '', graph);
    // The `graph` parameter was provided
    else
      this._writeTriple(subject, predicate, object, graph, done);
  },

  // ### `addTriples` adds the triples to the output stream
  addTriples: function (triples) {
    for (var i = 0; i < triples.length; i++)
      this.addTriple(triples[i]);
  },

  // ### `addPrefix` adds the prefix to the output stream
  addPrefix: function (prefix, iri, done) {
    var prefixes = {};
    prefixes[prefix] = iri;
    this.addPrefixes(prefixes, done);
  },

  // ### `addPrefixes` adds the prefixes to the output stream
  addPrefixes: function (prefixes, done) {
    // Add all useful prefixes
    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;
    for (var prefix in prefixes) {
      // Verify whether the prefix can be used and does not exist yet
      var iri = prefixes[prefix];
      if (/[#\/]$/.test(iri) && prefixIRIs[iri] !== (prefix += ':')) {
        hasPrefixes = true;
        prefixIRIs[iri] = prefix;
        // Finish a possible pending triple
        if (this._subject !== null) {
          this._write(this._graph ? '\n}\n' : '.\n');
          this._subject = null, this._graph = '';
        }
        // Write prefix
        this._write('@prefix ' + prefix + ' <' + iri + '>.\n');
      }
    }
    // Recreate the prefix matcher
    if (hasPrefixes) {
      var IRIlist = '', prefixList = '';
      for (var prefixIRI in prefixIRIs) {
        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;
        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];
      }
      IRIlist = IRIlist.replace(/[\]\/\(\)\*\+\?\.\\\$]/g, '\\$&');
      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\/]*$|' +
                                     '^(' + IRIlist + ')([a-zA-Z][\\-_a-zA-Z0-9]*)$');
    }
    // End a prefix block with a newline
    this._write(hasPrefixes ? '\n' : '', done);
  },

  // ### `blank` creates a blank node with the given content
  blank: function (predicate, object) {
    var children = predicate, child, length;
    // Empty blank node
    if (predicate === undefined)
      children = [];
    // Blank node passed as blank("predicate", "object")
    else if (typeof predicate === 'string')
      children = [{ predicate: predicate, object: object }];
    // Blank node passed as blank({ predicate: predicate, object: object })
    else if (!('length' in predicate))
      children = [predicate];

    switch (length = children.length) {
    // Generate an empty blank node
    case 0:
      return '[]';
    // Generate a non-nested one-triple blank node
    case 1:
      child = children[0];
      if (child.object[0] !== '[')
        return '[ ' + this._encodePredicate(child.predicate) + ' ' +
                      this._encodeObject(child.object) + ' ]';
    // Generate a multi-triple or nested blank node
    default:
      var contents = '[';
      // Write all triples in order
      for (var i = 0; i < length; i++) {
        child = children[i];
        // Write only the object is the predicate is the same as the previous
        if (child.predicate === predicate)
          contents += ', ' + this._encodeObject(child.object);
        // Otherwise, write the predicate and the object
        else {
          contents += (i ? ';\n  ' : '\n  ') +
                      this._encodePredicate(child.predicate) + ' ' +
                      this._encodeObject(child.object);
          predicate = child.predicate;
        }
      }
      return contents + '\n]';
    }
  },

  // ### `list` creates a list node with the given content
  list: function (elements) {
    var length = elements && elements.length || 0, contents = new Array(length);
    for (var i = 0; i < length; i++)
      contents[i] = this._encodeObject(elements[i]);
    return '(' + contents.join(' ') + ')';
  },

  // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes
  _prefixRegex: /$0^/,

  // ### `end` signals the end of the output stream
  end: function (done) {
    // Finish a possible pending triple
    if (this._subject !== null) {
      this._write(this._graph ? '\n}\n' : '.\n');
      this._subject = null;
    }
    // Disallow further writing
    this._write = this._blockedWrite;

    // Try to end the underlying stream, ensuring done is called exactly one time
    var singleDone = done && function (error, result) { singleDone = null, done(error, result); };
    if (this._endStream) {
      try { return this._outputStream.end(singleDone); }
      catch (error) { /* error closing stream */ }
    }
    singleDone && singleDone();
  },
};

// Replaces a character by its escaped version
function characterReplacer(character) {
  // Replace a single character by its escaped version
  var result = escapeReplacements[character];
  if (result === undefined) {
    // Replace a single character with its 4-bit unicode escape sequence
    if (character.length === 1) {
      result = character.charCodeAt(0).toString(16);
      result = '\\u0000'.substr(0, 6 - result.length) + result;
    }
    // Replace a surrogate pair with its 8-bit unicode escape sequence
    else {
      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +
                 character.charCodeAt(1) + 0x2400).toString(16);
      result = '\\U00000000'.substr(0, 10 - result.length) + result;
    }
  }
  return result;
}

// ## Exports

// Export the `N3Writer` class as a whole.
module.exports = N3Writer;

},{}],53:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ClassOrder = require('./class-order');
var Node = require('./node');

var BlankNode = function (_Node) {
  _inherits(BlankNode, _Node);

  function BlankNode(id) {
    _classCallCheck(this, BlankNode);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BlankNode).call(this));

    _this.termType = BlankNode.termType;
    _this.id = BlankNode.nextId++;
    _this.value = id || _this.id.toString();
    return _this;
  }

  _createClass(BlankNode, [{
    key: 'compareTerm',
    value: function compareTerm(other) {
      if (this.classOrder < other.classOrder) {
        return -1;
      }
      if (this.classOrder > other.classOrder) {
        return +1;
      }
      if (this.id < other.id) {
        return -1;
      }
      if (this.id > other.id) {
        return +1;
      }
      return 0;
    }
  }, {
    key: 'copy',
    value: function copy(formula) {
      // depends on the formula
      var bnodeNew = new BlankNode();
      formula.copyTo(this, bnodeNew);
      return bnodeNew;
    }
  }, {
    key: 'toCanonical',
    value: function toCanonical() {
      return '_:' + this.value;
    }
  }, {
    key: 'toString',
    value: function toString() {
      return BlankNode.NTAnonymousNodePrefix + this.id;
    }
  }]);

  return BlankNode;
}(Node);

BlankNode.nextId = 0;
BlankNode.termType = 'BlankNode';
BlankNode.NTAnonymousNodePrefix = '_:n';
BlankNode.prototype.classOrder = ClassOrder['BlankNode'];
BlankNode.prototype.isBlank = 1;
BlankNode.prototype.isVar = 1;

module.exports = BlankNode;
},{"./class-order":54,"./node":70}],54:[function(require,module,exports){
'use strict';

var ClassOrder = {
  'Literal': 1,
  'Collection': 3,
  'Graph': 4,
  'NamedNode': 5,
  'BlankNode': 6,
  'Variable': 7
};

module.exports = ClassOrder;
},{}],55:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BlankNode = require('./blank-node');
var ClassOrder = require('./class-order');
var Node = require('./node');

var Collection = function (_Node) {
  _inherits(Collection, _Node);

  function Collection(initial) {
    _classCallCheck(this, Collection);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Collection).call(this));

    _this.termType = Collection.termType;
    _this.id = BlankNode.nextId++;
    _this.elements = [];
    _this.closed = false;
    if (initial && initial.length > 0) {
      initial.forEach(function (element) {
        _this.elements.push(Node.fromValue(element));
      });
    }
    return _this;
  }

  _createClass(Collection, [{
    key: 'append',
    value: function append(element) {
      return this.elements.push(element);
    }
  }, {
    key: 'close',
    value: function close() {
      this.closed = true;
      return this.closed;
    }
  }, {
    key: 'shift',
    value: function shift() {
      return this.elements.shift();
    }
  }, {
    key: 'substitute',
    value: function substitute(bindings) {
      var elementsCopy = this.elements.map(function (ea) {
        ea.substitute(bindings);
      });
      return new Collection(elementsCopy);
    }
  }, {
    key: 'toNT',
    value: function toNT() {
      return BlankNode.NTAnonymousNodePrefix + this.id;
    }
  }, {
    key: 'toString',
    value: function toString() {
      return '(' + this.elements.join(' ') + ')';
    }
  }, {
    key: 'unshift',
    value: function unshift(element) {
      return this.elements.unshift(element);
    }
  }]);

  return Collection;
}(Node);

Collection.termType = 'Collection';
Collection.prototype.classOrder = ClassOrder['Collection'];
Collection.prototype.compareTerm = BlankNode.prototype.compareTerm;
Collection.prototype.isVar = 0;

module.exports = Collection;
},{"./blank-node":53,"./class-order":54,"./node":70}],56:[function(require,module,exports){
'use strict';

module.exports.convertToJson = convertToJson;
module.exports.convertToNQuads = convertToNQuads;

var asyncLib = require('async'); // @@ Goal: remove this dependency
var jsonld = require('jsonld');
var N3 = require('n3'); // @@ Goal: remove this dependency

function convertToJson(n3String, jsonCallback) {
  var jsonString;
  var n3Parser = N3.Parser();
  var n3Writer = N3.Writer({
    format: 'N-Quads'
  });
  asyncLib.waterfall([function (callback) {
    n3Parser.parse(n3String, callback);
  }, function (triple, prefix, callback) {
    if (triple !== null) {
      n3Writer.addTriple(triple);
    }
    if (typeof callback === 'function') {
      n3Writer.end(callback);
    }
  }, function (result, callback) {
    try {
      jsonld.fromRDF(result, {
        format: 'application/nquads'
      }, callback);
    } catch (err) {
      callback(err);
    }
  }, function (json, callback) {
    jsonString = JSON.stringify(json);
    jsonCallback(null, jsonString);
  }], function (err, result) {
    jsonCallback(err, jsonString);
  });
}

function convertToNQuads(n3String, nquadCallback) {
  var nquadString;
  var n3Parser = N3.Parser();
  var n3Writer = N3.Writer({
    format: 'N-Quads'
  });
  asyncLib.waterfall([function (callback) {
    n3Parser.parse(n3String, callback);
  }, function (triple, prefix, callback) {
    if (triple !== null) {
      n3Writer.addTriple(triple);
    }
    if (typeof callback === 'function') {
      n3Writer.end(callback);
    }
  }, function (result, callback) {
    nquadString = result;
    nquadCallback(null, nquadString);
  }], function (err, result) {
    nquadCallback(err, nquadString);
  });
}
},{"async":41,"jsonld":44,"n3":45}],57:[function(require,module,exports){
'use strict';

var _indexedFormula = require('./indexed-formula');

var _indexedFormula2 = _interopRequireDefault(_indexedFormula);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BlankNode = require('./blank-node');
var Collection = require('./collection');
var DefaultGraph = require('./default-graph');
var Fetcher = require('./fetcher');

var Literal = require('./literal');
var NamedNode = require('./named-node');
var Statement = require('./statement');
var Variable = require('./variable');

function blankNode(value) {
  return new BlankNode(value);
}
function collection(elements) {
  return new Collection(elements);
}
function defaultGraph() {
  return new DefaultGraph();
}
function fetcher(store, timeout, async) {
  return new Fetcher(store, timeout, async);
}
function graph() {
  return new _indexedFormula2.default();
}
function lit(val, lang, dt) {
  return new Literal('' + val, lang, dt);
}
function literal(value, languageOrDatatype) {
  if (typeof languageOrDatatype === 'string') {
    if (languageOrDatatype.indexOf(':') === -1) {
      return new Literal(value, languageOrDatatype);
    } else {
      return new Literal(value, null, namedNode(languageOrDatatype));
    }
  } else {
    return new Literal(value, null, languageOrDatatype);
  }
}
function namedNode(value) {
  return new NamedNode(value);
}
function quad(subject, predicate, object, graph) {
  graph = graph || new DefaultGraph();
  return new Statement(subject, predicate, object, graph);
}
function st(subject, predicate, object, graph) {
  return new Statement(subject, predicate, object, graph);
}
function triple(subject, predicate, object) {
  return quad(subject, predicate, object);
}
function variable(name) {
  return new Variable(name);
}

// rdfjs spec factory methods
module.exports.blankNode = blankNode;
module.exports.defaultGraph = defaultGraph;
module.exports.graph = graph;
module.exports.literal = literal;
module.exports.namedNode = namedNode;
module.exports.quad = quad;
module.exports.triple = triple;
module.exports.variable = variable;

// rdflib only
module.exports.collection = collection;
module.exports.fetcher = fetcher;
module.exports.lit = lit;
module.exports.st = st;
},{"./blank-node":53,"./collection":55,"./default-graph":58,"./fetcher":60,"./indexed-formula":63,"./literal":65,"./named-node":68,"./statement":80,"./variable":85}],58:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Node = require('./node');

var DefaultGraph = function (_Node) {
  _inherits(DefaultGraph, _Node);

  function DefaultGraph() {
    _classCallCheck(this, DefaultGraph);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DefaultGraph).call(this));

    _this.termType = 'DefaultGraph';
    _this.value = '';
    return _this;
  }

  _createClass(DefaultGraph, [{
    key: 'toCanonical',
    value: function toCanonical() {
      return this.value;
    }
  }]);

  return DefaultGraph;
}(Node);

module.exports = DefaultGraph;
},{"./node":70}],59:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Node = require('./node');

/**
 * Singleton subclass of an empty Collection.
 */

var Empty = function (_Node) {
  _inherits(Empty, _Node);

  function Empty() {
    _classCallCheck(this, Empty);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Empty).call(this));

    _this.termType = Empty.termType;
    return _this;
  }

  _createClass(Empty, [{
    key: 'toString',
    value: function toString() {
      return '()';
    }
  }]);

  return Empty;
}(Node);

Empty.termType = 'empty';

module.exports = Empty;
},{"./node":70}],60:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

/* global $SolidTestEnvironment */
/**
 *
 * Project: rdflib.js
 *
 * File: fetcher.js
 *
 * Description: contains functions for requesting/fetching/retracting
 *  This implements quite a lot of the web architecture.
 * A fetcher is bound to a specific knowledge base graph, into which
 * it loads stuff and into which it writes its metadata
 * @@ The metadata should be optionally a separate graph
 *
 * - implements semantics of HTTP headers, Internet Content Types
 * - selects parsers for rdf/xml, n3, rdfa, grddl
 *
 * Dependencies:
 *
 * needs: util.js uri.js term.js rdfparser.js rdfa.js n3parser.js
 *      identity.js sparql.js jsonparser.js
 *
 * Independent of jQuery
 */

/**
 * Things to test: callbacks on request, refresh, retract
 *   loading from HTTP, HTTPS, FTP, FILE, others?
 * To do:
 * Firing up a mail client for mid:  (message:) URLs
 */
var log = require('./log');
var N3Parser = require('./n3parser');
var NamedNode = require('./named-node');
var Namespace = require('./namespace');
var rdfParse = require('./parse');
var parseRDFaDOM = require('./rdfaparser').parseRDFaDOM;
var RDFParser = require('./rdfxmlparser');
var Uri = require('./uri');
var Util = require('./util');
var serialize = require('./serialize');

var Parsable = {
  'text/n3': true,
  'text/turtle': true,
  'application/rdf+xml': true,
  'application/xhtml+xml': true,
  'text/html': true,
  'application/ld+json': true
};

var Fetcher = function Fetcher(store, timeout, async) {
  this.store = store;
  this.thisURI = 'http://dig.csail.mit.edu/2005/ajar/ajaw/rdf/sources.js' + '#SourceFetcher'; // -- Kenny
  this.timeout = timeout || 30000;
  this.async = async != null ? async : true;
  this.appNode = this.store.bnode(); // Denoting this session
  this.store.fetcher = this; // Bi-linked
  this.requested = {};
  // this.requested[uri] states:
  //   undefined     no record of web access or records reset
  //   true          has been requested, XHR in progress
  //   'done'        received, Ok
  //   403           HTTP status unauthorized
  //   404           Ressource does not exist. Can be created etc.
  //   'redirected'  In attempt to counter CORS problems retried.
  //   other strings mean various other erros, such as parse errros.
  //
  this.redirectedTo = {}; // Wehn 'redireced'
  this.fetchCallbacks = {}; // fetchCallbacks[uri].push(callback)

  this.nonexistant = {}; // keep track of explict 404s -> we can overwrite etc
  this.lookedUp = {};
  this.handlers = [];
  this.mediatypes = {};
  var sf = this;
  var kb = this.store;
  var ns = {}; // Convenience namespaces needed in this module:
  // These are delibertely not exported as the user application should
  // make its own list and not rely on the prefixes used here,
  // and not be tempted to add to them, and them clash with those of another
  // application.
  ns.link = Namespace('http://www.w3.org/2007/ont/link#');
  ns.http = Namespace('http://www.w3.org/2007/ont/http#');
  ns.httph = Namespace('http://www.w3.org/2007/ont/httph#');
  ns.rdf = Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#');
  ns.rdfs = Namespace('http://www.w3.org/2000/01/rdf-schema#');
  ns.dc = Namespace('http://purl.org/dc/elements/1.1/');

  sf.mediatypes['image/*'] = {
    'q': 0.9
  };

  sf.mediatypes['*/*'] = { // Must allow access to random content
    'q': 0.1
  };

  Fetcher.crossSiteProxy = function (uri) {
    if (Fetcher.crossSiteProxyTemplate) {
      return Fetcher.crossSiteProxyTemplate.replace('{uri}', encodeURIComponent(uri));
    } else {
      return undefined;
    }
  };

  Fetcher.RDFXMLHandler = function (args) {
    if (args) {
      this.dom = args[0];
    }
    this.handlerFactory = function (xhr) {
      xhr.handle = function (cb) {
        // sf.addStatus(xhr.req, 'parsing soon as RDF/XML...')
        var kb = sf.store;
        if (!this.dom) this.dom = Util.parseXML(xhr.responseText);
        var root = this.dom.documentElement;
        if (root.nodeName === 'parsererror') {
          // @@ Mozilla only See issue/issue110
          sf.failFetch(xhr, 'Badly formed XML in ' + xhr.resource.uri); // have to fail the request
          throw new Error('Badly formed XML in ' + xhr.resource.uri); // @@ Add details
        }
        var parser = new RDFParser(kb);
        try {
          parser.parse(this.dom, xhr.original.uri, xhr.original);
        } catch (e) {
          sf.addStatus(xhr.req, 'Syntax error parsing RDF/XML! ' + e);
          console.log('Syntax error parsing RDF/XML! ' + e);
        }
        if (!xhr.options.noMeta) {
          kb.add(xhr.original, ns.rdf('type'), ns.link('RDFDocument'), sf.appNode);
        }
        cb();
      };
    };
  };
  Fetcher.RDFXMLHandler.toString = function () {
    return 'RDFXMLHandler';
  };
  Fetcher.RDFXMLHandler.register = function (sf) {
    sf.mediatypes['application/rdf+xml'] = {
      'q': 0.9
    };
  };
  Fetcher.RDFXMLHandler.pattern = new RegExp('application/rdf\\+xml');

  // This would much better use on-board XSLT engine. @@
  /*  deprocated 2016-02-17  timbl
  Fetcher.doGRDDL = function(kb, doc, xslturi, xmluri) {
      sf.requestURI('http://www.w3.org/2005/08/' + 'online_xslt/xslt?' + 'xslfile=' + escape(xslturi) + '&xmlfile=' + escape(xmluri), doc)
  }
  */
  Fetcher.XHTMLHandler = function (args) {
    if (args) {
      this.dom = args[0];
    }
    this.handlerFactory = function (xhr) {
      xhr.handle = function (cb) {
        var relation, reverse;
        if (!this.dom) {
          this.dom = Util.parseXML(xhr.responseText);
        }
        var kb = sf.store;

        // dc:title
        var title = this.dom.getElementsByTagName('title');
        if (title.length > 0) {
          kb.add(xhr.resource, ns.dc('title'), kb.literal(title[0].textContent), xhr.resource);
          // log.info("Inferring title of " + xhr.resource)
        }

        // link rel
        var links = this.dom.getElementsByTagName('link');
        for (var x = links.length - 1; x >= 0; x--) {
          // @@ rev
          relation = links[x].getAttribute('rel');
          reverse = false;
          if (!relation) {
            relation = links[x].getAttribute('rev');
            reverse = true;
          }
          if (relation) {
            sf.linkData(xhr, relation, links[x].getAttribute('href'), xhr.resource, reverse);
          }
        }

        // Data Islands

        var scripts = this.dom.getElementsByTagName('script');
        for (var i = 0; i < scripts.length; i++) {
          var contentType = scripts[i].getAttribute('type');
          if (Parsable[contentType]) {
            rdfParse(scripts[i].textContent, kb, xhr.original.uri, contentType);
          }
        }

        if (!xhr.options.noMeta) {
          kb.add(xhr.resource, ns.rdf('type'), ns.link('WebPage'), sf.appNode);
        }

        if (!xhr.options.noRDFa && parseRDFaDOM) {
          // enable by default
          try {
            parseRDFaDOM(this.dom, kb, xhr.original.uri);
          } catch (e) {
            var msg = 'Error trying to parse ' + xhr.resource + ' as RDFa:\n' + e + ':\n' + e.stack;
            // dump(msg+"\n")
            sf.failFetch(xhr, msg);
            return;
          }
        }
        cb(); // Fire done callbacks
      };
    };
  };
  Fetcher.XHTMLHandler.toString = function () {
    return 'XHTMLHandler';
  };
  Fetcher.XHTMLHandler.register = function (sf) {
    sf.mediatypes['application/xhtml+xml'] = {};
  };
  Fetcher.XHTMLHandler.pattern = new RegExp('application/xhtml');

  Fetcher.XMLHandler = function () {
    this.handlerFactory = function (xhr) {
      xhr.handle = function (cb) {
        var dom = Util.parseXML(xhr.responseText);

        // XML Semantics defined by root element namespace
        // figure out the root element
        for (var c = 0; c < dom.childNodes.length; c++) {
          // is this node an element?
          if (dom.childNodes[c].nodeType === 1) {
            // We've found the first element, it's the root
            var ns = dom.childNodes[c].namespaceURI;

            // Is it RDF/XML?
            if (ns && ns === ns['rdf']) {
              sf.addStatus(xhr.req, 'Has XML root element in the RDF namespace, so assume RDF/XML.');
              sf.switchHandler('RDFXMLHandler', xhr, cb, [dom]);
              return;
            }
            // it isn't RDF/XML or we can't tell
            // Are there any GRDDL transforms for this namespace?
            // @@ assumes ns documents have already been loaded
            /*
            var xforms = kb.each(kb.sym(ns), kb.sym("http://www.w3.org/2003/g/data-view#namespaceTransformation"))
            for (var i = 0; i < xforms.length; i++) {
                var xform = xforms[i]
                // log.info(xhr.resource.uri + " namespace " + ns + " has GRDDL ns transform" + xform.uri)
                 Fetcher.doGRDDL(kb, xhr.resource, xform.uri, xhr.resource.uri)
            }
            */
            break;
          }
        }

        // Or it could be XHTML?
        // Maybe it has an XHTML DOCTYPE?
        if (dom.doctype) {
          // log.info("We found a DOCTYPE in " + xhr.resource)
          if (dom.doctype.name === 'html' && dom.doctype.publicId.match(/^-\/\/W3C\/\/DTD XHTML/) && dom.doctype.systemId.match(/http:\/\/www.w3.org\/TR\/xhtml/)) {
            sf.addStatus(xhr.req, 'Has XHTML DOCTYPE. Switching to XHTML Handler.\n');
            sf.switchHandler('XHTMLHandler', xhr, cb);
            return;
          }
        }

        // Or what about an XHTML namespace?
        var html = dom.getElementsByTagName('html')[0];
        if (html) {
          var xmlns = html.getAttribute('xmlns');
          if (xmlns && xmlns.match(/^http:\/\/www.w3.org\/1999\/xhtml/)) {
            sf.addStatus(xhr.req, 'Has a default namespace for ' + 'XHTML. Switching to XHTMLHandler.\n');
            sf.switchHandler('XHTMLHandler', xhr, cb);
            return;
          }
        }

        // At this point we should check the namespace document (cache it!) and
        // look for a GRDDL transform
        // @@  Get namespace document <n>, parse it, look for  <n> grddl:namespaceTransform ?y
        // Apply ?y to   dom
        // We give up. What dialect is this?
        sf.failFetch(xhr, 'Unsupported dialect of XML: not RDF or XHTML namespace, etc.\n' + xhr.responseText.slice(0, 80));
      };
    };
  };

  Fetcher.XMLHandler.toString = function () {
    return 'XMLHandler';
  };
  Fetcher.XMLHandler.register = function (sf) {
    sf.mediatypes['text/xml'] = {
      'q': 0.5
    };
    sf.mediatypes['application/xml'] = {
      'q': 0.5
    };
  };
  Fetcher.XMLHandler.pattern = new RegExp('(text|application)/(.*)xml');

  Fetcher.HTMLHandler = function () {
    this.handlerFactory = function (xhr) {
      xhr.handle = function (cb) {
        var rt = xhr.responseText;
        // We only handle XHTML so we have to figure out if this is XML
        // log.info("Sniffing HTML " + xhr.resource + " for XHTML.")

        if (rt.match(/\s*<\?xml\s+version\s*=[^<>]+\?>/)) {
          sf.addStatus(xhr.req, "Has an XML declaration. We'll assume " + "it's XHTML as the content-type was text/html.\n");
          sf.switchHandler('XHTMLHandler', xhr, cb);
          return;
        }

        // DOCTYPE
        // There is probably a smarter way to do this
        if (rt.match(/.*<!DOCTYPE\s+html[^<]+-\/\/W3C\/\/DTD XHTML[^<]+http:\/\/www.w3.org\/TR\/xhtml[^<]+>/)) {
          sf.addStatus(xhr.req, 'Has XHTML DOCTYPE. Switching to XHTMLHandler.\n');
          sf.switchHandler('XHTMLHandler', xhr, cb);
          return;
        }

        // xmlns
        if (rt.match(/[^(<html)]*<html\s+[^<]*xmlns=['"]http:\/\/www.w3.org\/1999\/xhtml["'][^<]*>/)) {
          sf.addStatus(xhr.req, 'Has default namespace for XHTML, so switching to XHTMLHandler.\n');
          sf.switchHandler('XHTMLHandler', xhr, cb);
          return;
        }

        // dc:title	                       //no need to escape '/' here
        var titleMatch = new RegExp('<title>([\\s\\S]+?)</title>', 'im').exec(rt);
        if (titleMatch) {
          var kb = sf.store;
          kb.add(xhr.resource, ns.dc('title'), kb.literal(titleMatch[1]), xhr.resource); // think about xml:lang later
          kb.add(xhr.resource, ns.rdf('type'), ns.link('WebPage'), sf.appNode);
          cb(); // doneFetch, not failed
          return;
        }
        sf.addStatus(xhr.req, 'non-XML HTML document, not parsed for data.');
        sf.doneFetch(xhr);
        // sf.failFetch(xhr, "Sorry, can't yet parse non-XML HTML")
      };
    };
  };

  Fetcher.HTMLHandler.toString = function () {
    return 'HTMLHandler';
  };
  Fetcher.HTMLHandler.register = function (sf) {
    sf.mediatypes['text/html'] = {
      'q': 0.9
    };
  };
  Fetcher.HTMLHandler.pattern = new RegExp('text/html');

  Fetcher.TextHandler = function () {
    this.handlerFactory = function (xhr) {
      xhr.handle = function (cb) {
        // We only speak dialects of XML right now. Is this XML?
        var rt = xhr.responseText;

        // Look for an XML declaration
        if (rt.match(/\s*<\?xml\s+version\s*=[^<>]+\?>/)) {
          sf.addStatus(xhr.req, 'Warning: ' + xhr.resource + " has an XML declaration. We'll assume " + "it's XML but its content-type wasn't XML.\n");
          sf.switchHandler('XMLHandler', xhr, cb);
          return;
        }

        // Look for an XML declaration
        if (rt.slice(0, 500).match(/xmlns:/)) {
          sf.addStatus(xhr.req, "May have an XML namespace. We'll assume " + "it's XML but its content-type wasn't XML.\n");
          sf.switchHandler('XMLHandler', xhr, cb);
          return;
        }

        // We give up finding semantics - this is not an error, just no data
        sf.addStatus(xhr.req, 'Plain text document, no known RDF semantics.');
        sf.doneFetch(xhr);
        //                sf.failFetch(xhr, "unparseable - text/plain not visibly XML")
        //                dump(xhr.resource + " unparseable - text/plain not visibly XML, starts:\n" + rt.slice(0, 500)+"\n")
      };
    };
  };

  Fetcher.TextHandler.toString = function () {
    return 'TextHandler';
  };
  Fetcher.TextHandler.register = function (sf) {
    sf.mediatypes['text/plain'] = {
      'q': 0.5
    };
  };
  Fetcher.TextHandler.pattern = new RegExp('text/plain');

  Fetcher.N3Handler = function () {
    this.handlerFactory = function (xhr) {
      xhr.handle = function (cb) {
        // Parse the text of this non-XML file

        // console.log('web.js: Parsing as N3 ' + xhr.resource.uri + ' base: ' + xhr.original.uri) // @@@@ comment me out
        // sf.addStatus(xhr.req, "N3 not parsed yet...")
        var p = N3Parser(kb, kb, xhr.original.uri, xhr.original.uri, null, null, '', null);
        //                p.loadBuf(xhr.responseText)
        try {
          p.loadBuf(xhr.responseText);
        } catch (e) {
          var msg = 'Error trying to parse ' + xhr.resource + ' as Notation3:\n' + e + ':\n' + e.stack;
          // dump(msg+"\n")
          sf.failFetch(xhr, msg);
          return;
        }

        sf.addStatus(xhr.req, 'N3 parsed: ' + p.statementCount + ' triples in ' + p.lines + ' lines.');
        sf.store.add(xhr.original, ns.rdf('type'), ns.link('RDFDocument'), sf.appNode);
        // var args = [xhr.original.uri] // Other args needed ever?
        sf.doneFetch(xhr);
      };
    };
  };

  Fetcher.N3Handler.toString = function () {
    return 'N3Handler';
  };
  Fetcher.N3Handler.register = function (sf) {
    sf.mediatypes['text/n3'] = {
      'q': '1.0'
    }; // as per 2008 spec
    /*
    sf.mediatypes['application/x-turtle'] = {
      'q': 1.0
    } // pre 2008
    */
    sf.mediatypes['text/turtle'] = {
      'q': 1.0
    }; // post 2008
  };
  Fetcher.N3Handler.pattern = new RegExp('(application|text)/(x-)?(rdf\\+)?(n3|turtle)');

  Util.callbackify(this, ['request', 'recv', 'headers', 'load', 'fail', 'refresh', 'retract', 'done']);

  this.addHandler = function (handler) {
    sf.handlers.push(handler);
    handler.register(sf);
  };

  this.switchHandler = function (name, xhr, cb, args) {
    var Handler = null;
    for (var i = 0; i < this.handlers.length; i++) {
      if ('' + this.handlers[i] === name) {
        Handler = this.handlers[i];
      }
    }
    if (!Handler) {
      throw new Error('web.js: switchHandler: name=' + name + ' , this.handlers =' + this.handlers + '\n' + 'switchHandler: switching to ' + Handler + '; sf=' + sf + '; typeof Fetcher=' + (typeof Fetcher === 'undefined' ? 'undefined' : _typeof(Fetcher)) + ';\n\t Fetcher.HTMLHandler=' + Fetcher.HTMLHandler + '\n' + '\n\tsf.handlers=' + sf.handlers + '\n');
    }
    new Handler(args).handlerFactory(xhr);
    xhr.handle(cb);
  };

  this.addStatus = function (req, status) {
    // <Debug about="parsePerformance">
    var now = new Date();
    status = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '.' + now.getMilliseconds() + '] ' + status;
    // </Debug>
    var kb = this.store;
    var s = kb.the(req, ns.link('status'));
    if (s && s.append) {
      s.append(kb.literal(status));
    } else {
      log.warn('web.js: No list to add to: ' + s + ',' + status); // @@@
    }
  };

  // Record errors in the system on failure
  // Returns xhr so can just do return this.failfetch(...)
  this.failFetch = function (xhr, status) {
    this.addStatus(xhr.req, status);
    if (!xhr.options.noMeta) {
      kb.add(xhr.original, ns.link('error'), status);
    }
    if (!xhr.resource.sameTerm(xhr.original)) {
      console.log('@@ Recording failure original ' + xhr.original + '( as ' + xhr.resource + ') : ' + xhr.status);
    } else {
      console.log('@@ Recording failure for ' + xhr.original + ': ' + xhr.status);
    }
    this.requested[Uri.docpart(xhr.original.uri)] = xhr.status; // changed 2015 was false
    while (this.fetchCallbacks[xhr.original.uri] && this.fetchCallbacks[xhr.original.uri].length) {
      this.fetchCallbacks[xhr.original.uri].shift()(false, 'Fetch of <' + xhr.original.uri + '> failed: ' + status, xhr);
    }
    delete this.fetchCallbacks[xhr.original.uri];
    this.fireCallbacks('fail', [xhr.original.uri, status]);
    xhr.abort();
    return xhr;
  };

  // in the why part of the quad distinguish between HTML and HTTP header
  // Reverse is set iif the link was rev= as opposed to rel=
  this.linkData = function (xhr, rel, uri, why, reverse) {
    if (!uri) return;
    var predicate;
    // See http://www.w3.org/TR/powder-dr/#httplink for describedby 2008-12-10
    var obj = kb.sym(Uri.join(uri, xhr.original.uri));
    if (rel === 'alternate' || rel === 'seeAlso' || rel === 'meta' || rel === 'describedby') {
      if (obj.uri === xhr.original.uri) return;
      predicate = ns.rdfs('seeAlso');
    } else if (rel === 'type') {
      predicate = kb.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');
    } else {
      // See https://www.iana.org/assignments/link-relations/link-relations.xml
      // Alas not yet in RDF yet for each predicate
      /// encode space in e.g. rel="shortcut icon"
      predicate = kb.sym(Uri.join(encodeURIComponent(rel), 'http://www.iana.org/assignments/link-relations/'));
    }
    if (reverse) {
      kb.add(obj, predicate, xhr.original, why);
    } else {
      kb.add(xhr.original, predicate, obj, why);
    }
  };

  this.parseLinkHeader = function (xhr, thisReq) {
    var link;
    try {
      link = xhr.getResponseHeader('link'); // May crash from CORS error
    } catch (e) {}
    if (link) {
      var linkexp = /<[^>]*>\s*(\s*;\s*[^\(\)<>@,;:"\/\[\]\?={} \t]+=(([^\(\)<>@,;:"\/\[\]\?={} \t]+)|("[^"]*")))*(,|$)/g;
      var paramexp = /[^\(\)<>@,;:"\/\[\]\?={} \t]+=(([^\(\)<>@,;:"\/\[\]\?={} \t]+)|("[^"]*"))/g;

      var matches = link.match(linkexp);
      for (var i = 0; i < matches.length; i++) {
        var split = matches[i].split('>');
        var href = split[0].substring(1);
        var ps = split[1];
        var s = ps.match(paramexp);
        for (var j = 0; j < s.length; j++) {
          var p = s[j];
          var paramsplit = p.split('=');
          // var name = paramsplit[0]
          var rel = paramsplit[1].replace(/["']/g, ''); // '"
          this.linkData(xhr, rel, href, thisReq);
        }
      }
    }
  };

  this.doneFetch = function (xhr) {
    this.addStatus(xhr.req, 'Done.');
    this.requested[xhr.original.uri] = 'done'; // Kenny
    while (this.fetchCallbacks[xhr.original.uri] && this.fetchCallbacks[xhr.original.uri].length) {
      this.fetchCallbacks[xhr.original.uri].shift()(true, undefined, xhr);
    }
    delete this.fetchCallbacks[xhr.original.uri];
    this.fireCallbacks('done', [xhr.original.uri]);
  };
  var handlerList = [Fetcher.RDFXMLHandler, Fetcher.XHTMLHandler, Fetcher.XMLHandler, Fetcher.HTMLHandler, Fetcher.TextHandler, Fetcher.N3Handler];
  handlerList.map(this.addHandler);

  /** Note two nodes are now smushed
   **
   ** If only one was flagged as looked up, then
   ** the new node is looked up again, which
   ** will make sure all the URIs are dereferenced
   */
  this.nowKnownAs = function (was, now) {
    if (this.lookedUp[was.uri]) {
      if (!this.lookedUp[now.uri]) this.lookUpThing(now, was); //  @@@@  Transfer userCallback
    } else if (this.lookedUp[now.uri]) {
      if (!this.lookedUp[was.uri]) this.lookUpThing(was, now);
    }
  };

  // Returns promise of XHR
  //
  //  Writes back to the web what we have in the store for this uri
  this.putBack = function (uri) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    uri = uri.uri || uri; // Accept object or string
    var doc = new NamedNode(uri).doc(); // strip off #
    options.data = serialize(doc, this.store, doc.uri, options.contentType || 'text/turtle');
    return this.webOperation('PUT', uri, options);
  };

  // Returns promise of XHR
  //
  this.webOperation = function (method, uri) {
    var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

    uri = uri.uri || uri;
    uri = this.proxyIfNecessary(uri);
    var fetcher = this;
    return new Promise(function (resolve, reject) {
      var xhr = Util.XMLHTTPFactory();
      xhr.options = options;
      xhr.original = fetcher.store.sym(uri);
      if (!options.noMeta && typeof tabulator !== 'undefined') {
        fetcher.saveRequestMetadata(xhr, fetcher.store, uri);
      }
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          // NOte a 404 can be not afailure
          var ok = !xhr.status || xhr.status >= 200 && xhr.status < 300;
          if (!options.noMeta && typeof tabulator !== 'undefined') {
            fetcher.saveResponseMetadata(xhr, fetcher.store);
          }
          if (ok) {
            resolve(xhr);
          } else {
            reject(xhr.status + ' ' + xhr.statusText);
          }
        }
      };
      xhr.open(method, uri, true);
      xhr.setRequestHeader('Content-type', options.contentType || 'text/turtle');
      xhr.send(options.data ? options.data : undefined);
    });
  };

  this.webCopy = function (here, there, content_type) {
    var fetcher = this;
    here = here.uri || here;
    return new Promise(function (resolve, reject) {
      fetcher.webOperation('GET', here).then(function (xhr) {
        fetcher.webOperation('PUT', // @@@ change to binary from text
        there, { data: xhr.responseText, contentType: content_type }).then(function (xhr) {
          resolve(xhr);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(function (e) {
        reject(e);
      });
    });
  };

  // Looks up something.
  //
  // Looks up all the URIs a things has.
  //
  // Parameters:
  //
  //  term:       canonical term for the thing whose URI is to be dereferenced
  //  rterm:      the resource which refered to this (for tracking bad links)
  //  options:    (old: force paraemter) or dictionary of options:
  //      force:      Load the data even if loaded before
  //  oneDone:   is called as callback(ok, errorbody, xhr) for each one
  //  allDone:   is called as callback(ok, errorbody) for all of them
  // Returns      the number of URIs fetched
  //
  this.lookUpThing = function (term, rterm, options, oneDone, allDone) {
    var uris = kb.uris(term); // Get all URIs
    var success = true;
    var errors = '';
    var outstanding = {};
    var force;
    if (options === false || options === true) {
      // Old signature
      force = options;
      options = { force: force };
    } else {
      if (options === undefined) options = {};
      force = !!options.force;
    }

    if (typeof uris !== 'undefined') {
      for (var i = 0; i < uris.length; i++) {
        var u = uris[i];
        outstanding[u] = true;
        this.lookedUp[u] = true;
        var sf = this;

        var requestOne = function requestOne(u1) {
          sf.requestURI(Uri.docpart(u1), rterm, options, function (ok, body, xhr) {
            if (ok) {
              if (oneDone) oneDone(true, u1);
            } else {
              if (oneDone) oneDone(false, body);
              success = false;
              errors += body + '\n';
            }
            delete outstanding[u];
            if (Object.keys(outstanding).length > 0) {
              return;
            }
            if (allDone) {
              allDone(success, errors);
            }
          });
        };
        requestOne(u);
      }
    }
    return uris.length;
  };

  /* Promise-based load function
  **
  ** NamedNode -> Promise of xhr
  ** uri string -> Promise of xhr
  ** Array of the above -> Promise of array of xhr
  **
  ** @@ todo: If p1 is array then sequence or parallel fetch of all
  */
  this.load = function (uri, options) {
    var fetcher = this;
    if (uri instanceof Array) {
      var ps = uri.map(function (x) {
        return fetcher.load(x);
      });
      return Promise.all(ps);
    }
    uri = uri.uri || uri; // NamedNode or URI string
    return new Promise(function (resolve, reject) {
      fetcher.nowOrWhenFetched(uri, options, function (ok, message, xhr) {
        if (ok) {
          resolve(xhr);
        } else {
          reject(message);
        }
      });
    });
  };

  /*  Ask for a doc to be loaded if necessary then call back
  **
  ** Changed 2013-08-20:  Added (ok, errormessage) params to callback
  **
  ** Calling methods:
  **   nowOrWhenFetched (uri, userCallback)
  **   nowOrWhenFetched (uri, options, userCallback)
  **   nowOrWhenFetched (uri, referringTerm, userCallback, options)  <-- old
  **   nowOrWhenFetched (uri, referringTerm, userCallback) <-- old
  **
  **  Options include:
  **   referringTerm    The docuemnt in which this link was found.
  **                    this is valuable when finding the source of bad URIs
  **   force            boolean.  Never mind whether you have tried before,
  **                    load this from scratch.
  **   forceContentType Override the incoming header to force the data to be
  **                    treaed as this content-type.
  **/
  this.nowOrWhenFetched = function (uri, p2, userCallback, options) {
    uri = uri.uri || uri; // allow symbol object or string to be passed
    if (typeof p2 === 'function') {
      options = {};
      userCallback = p2;
    } else if (typeof p2 === 'undefined') {// original calling signature
      // referingTerm = undefined
    } else if (p2 instanceof NamedNode) {
      // referingTerm = p2
      options = { referingTerm: p2 };
    } else {
      options = p2;
    }

    this.requestURI(uri, p2, options || {}, userCallback);
  };

  this.get = this.nowOrWhenFetched;

  // Look up response header
  //
  // Returns: a list of header values found in a stored HTTP response
  //      or [] if response was found but no header found
  //      or undefined if no response is available.
  //
  this.getHeader = function (doc, header) {
    var kb = this.store;
    var requests = kb.each(undefined, ns.link('requestedURI'), doc.uri);
    for (var r = 0; r < requests.length; r++) {
      var request = requests[r];
      if (request !== undefined) {
        var response = kb.any(request, ns.link('response'));
        if (request !== undefined) {
          var results = kb.each(response, ns.httph(header.toLowerCase()));
          if (results.length) {
            return results.map(function (v) {
              return v.value;
            });
          }
          return [];
        }
      }
    }
    return undefined;
  };

  this.proxyIfNecessary = function (uri) {
    if (typeof tabulator !== 'undefined' && tabulator.isExtension) return uri; // Extenstion does not need proxy

    if (typeof $SolidTestEnvironment !== 'undefined' && $SolidTestEnvironment.localSiteMap) {
      // nested dictionaries of URI parts from origin down
      var hostpath = uri.split('/').slice(2); // the bit after the //
      var lookup = function lookup(parts, index) {
        var z = index[parts.shift()];
        if (!z) return null;
        if (typeof z === 'string') {
          return z + parts.join('/');
        }
        if (!parts) return null;
        return lookup(parts, z);
      };
      var y = lookup(hostpath, $SolidTestEnvironment.localSiteMap);
      if (y) {
        return y;
      }
    }
    // browser does 2014 on as https browser script not trusted
    // If the web app origin is https: then the mixed content rules
    // prevent it loading insecure http: stuff so we need proxy.
    if (Fetcher.crossSiteProxyTemplate && typeof document !== 'undefined' && document.location && ('' + document.location).slice(0, 6) === 'https:' && // origin is secure
    uri.slice(0, 5) === 'http:') {
      // requested data is not
      return Fetcher.crossSiteProxyTemplate.replace('{uri}', encodeURIComponent(uri));
    }
    return uri;
  };

  this.saveRequestMetadata = function (xhr, kb, docuri) {
    var request = kb.bnode();
    xhr.resource = kb.sym(docuri);

    xhr.req = request;
    if (!xhr.options.noMeta) {
      // Store no triples but do mind the bnode for req
      var now = new Date();
      var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';
      kb.add(request, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + docuri), this.appNode);
      kb.add(request, ns.link('requestedURI'), kb.literal(docuri), this.appNode);
      if (xhr.original && xhr.original.uri !== docuri) {
        kb.add(request, ns.link('orginalURI'), kb.literal(xhr.original.uri), this.appNode);
      }
      kb.add(request, ns.link('status'), kb.collection(), this.appNode);
    }
    return request;
  };

  this.saveResponseMetadata = function (xhr, kb) {
    var response = kb.bnode();

    if (xhr.req) kb.add(xhr.req, ns.link('response'), response);
    kb.add(response, ns.http('status'), kb.literal(xhr.status), response);
    kb.add(response, ns.http('statusText'), kb.literal(xhr.statusText), response);

    xhr.headers = {};
    if (Uri.protocol(xhr.resource.uri) === 'http' || Uri.protocol(xhr.resource.uri) === 'https') {
      xhr.headers = Util.getHTTPHeaders(xhr);
      for (var h in xhr.headers) {
        // trim below for Safari - adds a CR!
        var value = xhr.headers[h].trim();
        var h2 = h.toLowerCase();
        kb.add(response, ns.httph(h2), value, response);
        if (h2 === 'content-type') {
          // Convert to RDF type
          kb.add(xhr.resource, ns.rdf('type'), Util.mediaTypeClass(value), response);
        }
      }
    }
    return response;
  };

  /** Requests a document URI and arranges to load the document.
   ** Parameters:
   **	    term:  term for the thing whose URI is to be dereferenced
   **      rterm:  the resource which refered to this (for tracking bad links)
   **      options:
   **              force:  Load the data even if loaded before
   **              withCredentials:   flag for XHR/CORS etc
   **      userCallback:  Called with (true) or (false, errorbody, {status: 400}) after load is done or failed
   ** Return value:
   **	    The xhr object for the HTTP access
   **      null if the protocol is not a look-up protocol,
   **              or URI has already been loaded
   */
  this.requestURI = function (docuri, rterm, options, userCallback) {
    // sources_request_new
    // Various calling conventions
    docuri = docuri.uri || docuri; // NamedNode or string
    docuri = docuri.split('#')[0];
    if (typeof options === 'boolean') {
      options = { 'force': options }; // Ols dignature
    }
    if (typeof options === 'undefined') options = {};

    var force = !!options.force;
    var kb = this.store;
    var args = arguments;
    var baseURI = options.baseURI || docuri; // Preseve though proxying etc
    options.userCallback = userCallback;

    var pcol = Uri.protocol(docuri);
    if (pcol === 'tel' || pcol === 'mailto' || pcol === 'urn') {
      // "No look-up operation on these, but they are not errors?"
      console.log('Unsupported protocol in: ' + docuri);
      return userCallback(false, 'Unsupported protocol', { 'status': 900 }) || undefined;
    }
    var docterm = kb.sym(docuri);

    var sta = this.getState(docuri);
    if (!force) {
      if (sta === 'fetched') {
        return userCallback ? userCallback(true) : undefined;
      }
      if (sta === 'failed') {
        return userCallback ? userCallback(false, 'Previously failed. ' + this.requested[docuri], { 'status': this.requested[docuri] }) : undefined; // An xhr standin
      }
      // if (sta === 'requested') return userCallback? userCallback(false, "Sorry already requested - pending already.", {'status': 999 }) : undefined
    } else {
      delete this.nonexistant[docuri];
    }
    // @@ Should allow concurrent requests

    // If it is 'failed', then shoulkd we try again?  I think so so an old error doens't get stuck
    // if (sta === 'unrequested')

    this.fireCallbacks('request', args); // Kenny: fire 'request' callbacks here
    // dump( "web.js: Requesting uri: " + docuri + "\n" )

    if (userCallback) {
      if (!this.fetchCallbacks[docuri]) {
        this.fetchCallbacks[docuri] = [userCallback];
      } else {
        this.fetchCallbacks[docuri].push(userCallback);
      }
    }

    if (this.requested[docuri] === true) {
      return; // Don't ask again - wait for existing call
    } else {
      this.requested[docuri] = true;
    }

    if (!options.noMeta && rterm && rterm.uri) {
      kb.add(docterm.uri, ns.link('requestedBy'), rterm.uri, this.appNode);
    }

    var xhr = Util.XMLHTTPFactory();
    var req = xhr.req = kb.bnode();
    xhr.original = kb.sym(baseURI);
    // console.log('XHR original: ' + xhr.original)
    xhr.options = options;
    xhr.resource = docterm; // This might be proxified
    var sf = this;

    var now = new Date();
    var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';
    if (!options.noMeta) {
      kb.add(req, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + docuri), this.appNode);
      kb.add(req, ns.link('requestedURI'), kb.literal(docuri), this.appNode);
      kb.add(req, ns.link('status'), kb.collection(), this.appNode);
    }

    var checkCredentialsRetry = function checkCredentialsRetry() {
      if (!xhr.withCredentials) return false; // not dealt with

      if (xhr.retriedWithCredentials) {
        return true;
      }
      xhr.retriedWithCredentials = true; // protect against called twice
      console.log('web: Retrying with no credentials for ' + xhr.resource);
      xhr.abort();
      delete sf.requested[docuri]; // forget the original request happened
      var newopt = {};
      for (var opt in options) {
        // transfer baseURI etc
        if (options.hasOwnProperty(opt)) {
          newopt[opt] = options[opt];
        }
      }
      newopt.withCredentials = false;
      sf.addStatus(xhr.req, 'Abort: Will retry with credentials SUPPRESSED to see if that helps');
      sf.requestURI(docuri, rterm, newopt, xhr.userCallback); // userCallback already registered (with where?)
      return true;
    };

    var onerrorFactory = function onerrorFactory(xhr) {
      return function (event) {
        xhr.onErrorWasCalled = true; // debugging and may need it
        if (typeof document !== 'undefined') {
          // Mashup situation, not node etc
          if (Fetcher.crossSiteProxyTemplate && document.location && !xhr.proxyUsed) {
            var hostpart = Uri.hostpart;
            var here = '' + document.location;
            var uri = xhr.resource.uri;
            if (hostpart(here) && hostpart(uri) && hostpart(here) !== hostpart(uri)) {
              // If cross-site
              if (xhr.status === 401 || xhr.status === 403 || xhr.status === 404) {
                onreadystatechangeFactory(xhr)();
              } else {
                // IT IS A PAIN THAT NO PROPER ERROR REPORTING
                if (checkCredentialsRetry(xhr)) {
                  // If credentials flag set, retry without,
                  return;
                }
                // If it wasn't, or we already tried that
                var newURI = Fetcher.crossSiteProxy(uri);
                console.log('web: Direct failed so trying proxy ' + newURI);
                sf.addStatus(xhr.req, 'BLOCKED -> Cross-site Proxy to <' + newURI + '>');
                if (xhr.aborted) return;

                var kb = sf.store;
                var oldreq = xhr.req;
                if (!xhr.options.noMeta) {
                  kb.add(oldreq, ns.http('redirectedTo'), kb.sym(newURI), oldreq);
                }
                xhr.abort();
                xhr.aborted = true;

                sf.addStatus(oldreq, 'redirected to new request'); // why
                // the callback throws an exception when called from xhr.onerror (so removed)
                // sf.fireCallbacks('done', args) // Are these args right? @@@   Not done yet! done means success
                sf.requested[xhr.resource.uri] = 'redirected';
                sf.redirectedTo[xhr.resource.uri] = newURI;

                if (sf.fetchCallbacks[xhr.resource.uri]) {
                  if (!sf.fetchCallbacks[newURI]) {
                    sf.fetchCallbacks[newURI] = [];
                  }
                  sf.fetchCallbacks[newURI] === sf.fetchCallbacks[newURI].concat(sf.fetchCallbacks[xhr.resource.uri]);
                  delete sf.fetchCallbacks[xhr.resource.uri];
                }

                var xhr2 = sf.requestURI(newURI, xhr.resource, xhr.options, xhr.userCallback);
                if (xhr2) {
                  xhr2.proxyUsed = true; // only try the proxy once
                  xhr2.original = xhr.original;
                  console.log('Proxying but original still ' + xhr2.original);
                }
                if (xhr2 && xhr2.req) {
                  if (!xhr.options.noMeta) {
                    kb.add(xhr.req, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), xhr2.req, sf.appNode);
                  }
                  return;
                }
              }
            }
            xhr.CORS_status = 999;
            // xhr.status = 999     forbidden - read-only
          }
        } // mashu
      }; // function of event
    }; // onerrorFactory

    // Set up callbacks
    var onreadystatechangeFactory = function onreadystatechangeFactory(xhr) {
      return function () {
        var handleResponse = function handleResponse() {
          if (xhr.handleResponseDone) return;
          xhr.handleResponseDone = true;
          var handler = null;
          var thisReq = xhr.req; // Might have changes by redirect
          sf.fireCallbacks('recv', args);
          var kb = sf.store;
          sf.saveResponseMetadata(xhr, kb);
          sf.fireCallbacks('headers', [{ uri: docuri, headers: xhr.headers }]);

          // Check for masked errors.
          // For "security reasons" theboraser hides errors such as CORS errors from
          // the calling code (2015). oneror() used to be called but is not now.
          //
          if (xhr.status === 0) {
            console.log('Masked error - status 0 for ' + xhr.resource.uri);
            if (checkCredentialsRetry(xhr)) {
              // retry is could be credentials flag CORS issue
              return;
            }
            xhr.CORS_status = 900; // unknown masked error
            return;
          }
          if (xhr.status >= 400) {
            // For extra dignostics, keep the reply
            //  @@@ 401 should cause  a retry with credential son
            // @@@ cache the credentials flag by host ????
            if (xhr.status === 404) {
              kb.fetcher.nonexistant[xhr.resource.uri] = true;
            }
            if (xhr.responseText.length > 10) {
              var response2 = kb.bnode();
              kb.add(response2, ns.http('content'), kb.literal(xhr.responseText), response2);
              if (xhr.statusText) {
                kb.add(response2, ns.http('statusText'), kb.literal(xhr.statusText), response2);
              }
              // dump("HTTP >= 400 responseText:\n"+xhr.responseText+"\n"); // @@@@
            }
            sf.failFetch(xhr, 'HTTP error for ' + xhr.resource + ': ' + xhr.status + ' ' + xhr.statusText);
            return;
          }

          var loc = xhr.headers['content-location'];
          if (loc) {
            loc = Uri.join(loc, docuri);
          }

          // deduce some things from the HTTP transaction
          var addType = function addType(cla) {
            // add type to all redirected resources too
            var prev = thisReq;
            if (loc) {
              var docURI = kb.any(prev, ns.link('requestedURI'));
              if (docURI !== loc) {
                kb.add(kb.sym(loc), ns.rdf('type'), cla, sf.appNode);
              }
            }
            for (;;) {
              var doc = kb.any(prev, ns.link('requestedURI'));
              if (doc && doc.value) {
                kb.add(kb.sym(doc.value), ns.rdf('type'), cla, sf.appNode);
              } // convert Literal
              prev = kb.any(undefined, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), prev);
              if (!prev) break;
              var response = kb.any(prev, kb.sym('http://www.w3.org/2007/ont/link#response'));
              if (!response) break;
              var redirection = kb.any(response, kb.sym('http://www.w3.org/2007/ont/http#status'));
              if (!redirection) break;
              if (redirection !== '301' && redirection !== '302') break;
            }
          };
          // This is a minimal set to allow the use of damaged servers if necessary
          var extensionToContentType = {
            'rdf': 'application/rdf+xml', 'owl': 'application/rdf+xml',
            'n3': 'text/n3', 'ttl': 'text/turtle', 'nt': 'text/n3', 'acl': 'text/n3',
            'html': 'text/html',
            'xml': 'text/xml'
          };
          var guess;
          if (xhr.status === 200) {
            addType(ns.link('Document'));
            var ct = xhr.headers['content-type'];
            if (options.forceContentType) {
              xhr.headers['content-type'] = options.forceContentType;
            }
            if (!ct || ct.indexOf('application/octet-stream') >= 0) {
              guess = extensionToContentType[xhr.resource.uri.split('.').pop()];
              if (guess) {
                xhr.headers['content-type'] = guess;
              }
            }
            if (ct) {
              if (ct.indexOf('image/') === 0 || ct.indexOf('application/pdf') === 0) addType(kb.sym('http://purl.org/dc/terms/Image'));
            }
            if (options.clearPreviousData) {
              // Before we parse new data clear old but only on 200
              kb.removeDocument(xhr.resource);
            }
          }
          // application/octet-stream; charset=utf-8

          if (Uri.protocol(xhr.resource.uri) === 'file' || Uri.protocol(xhr.resource.uri) === 'chrome') {
            if (options.forceContentType) {
              xhr.headers['content-type'] = options.forceContentType;
            } else {
              guess = extensionToContentType[xhr.resource.uri.split('.').pop()];
              if (guess) {
                xhr.headers['content-type'] = guess;
              } else {
                xhr.headers['content-type'] = 'text/xml';
              }
            }
          }

          // If we have alread got the thing at this location, abort
          if (loc) {
            var udoc = Uri.join(xhr.resource.uri, loc);
            if (!force && udoc !== xhr.resource.uri && sf.requested[udoc] && sf.requested[udoc] === 'done') {
              // we have already fetched this in fact.
              // should we smush too?
              // log.info("HTTP headers indicate we have already" + " retrieved " + xhr.resource + " as " + udoc + ". Aborting.")
              sf.doneFetch(xhr);
              xhr.abort();
              return;
            }
            sf.requested[udoc] = true;
          }

          for (var x = 0; x < sf.handlers.length; x++) {
            if (xhr.headers['content-type'] && xhr.headers['content-type'].match(sf.handlers[x].pattern)) {
              handler = new sf.handlers[x]();
              break;
            }
          }

          sf.parseLinkHeader(xhr, thisReq);

          if (handler) {
            try {
              handler.handlerFactory(xhr);
            } catch (e) {
              // Try to avoid silent errors
              sf.failFetch(xhr, 'Exception handling content-type ' + xhr.headers['content-type'] + ' was: ' + e);
            }
          } else {
            sf.doneFetch(xhr); //  Not a problem, we just don't extract data.
            /*
            // sf.failFetch(xhr, "Unhandled content type: " + xhr.headers['content-type']+
            //        ", readyState = "+xhr.readyState)
            */
            return;
          }
        };

        // DONE: 4
        // HEADERS_RECEIVED: 2
        // LOADING: 3
        // OPENED: 1
        // UNSENT: 0

        // log.debug("web.js: XHR " + xhr.resource.uri + ' readyState='+xhr.readyState); // @@@@ comment me out

        switch (xhr.readyState) {
          case 0:
            var uri = xhr.resource.uri;
            var newURI;
            if (this.crossSiteProxyTemplate && typeof document !== 'undefined' && document.location) {
              // In mashup situation
              var hostpart = Uri.hostpart;
              var here = '' + document.location;
              if (hostpart(here) && hostpart(uri) && hostpart(here) !== hostpart(uri)) {
                newURI = this.crossSiteProxyTemplate.replace('{uri}', encodeURIComponent(uri));
                sf.addStatus(xhr.req, 'BLOCKED -> Cross-site Proxy to <' + newURI + '>');
                if (xhr.aborted) return;

                var kb = sf.store;
                var oldreq = xhr.req;
                kb.add(oldreq, ns.http('redirectedTo'), kb.sym(newURI), oldreq);

                // //////////// Change the request node to a new one:  @@@@@@@@@@@@ Duplicate?
                var newreq = xhr.req = kb.bnode(); // Make NEW reqest for everything else
                kb.add(oldreq, ns.http('redirectedRequest'), newreq, xhr.req);

                var now = new Date();
                var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';
                kb.add(newreq, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + newURI), this.appNode);
                kb.add(newreq, ns.link('status'), kb.collection(), this.appNode);
                kb.add(newreq, ns.link('requestedURI'), kb.literal(newURI), this.appNode);

                var response = kb.bnode();
                kb.add(oldreq, ns.link('response'), response);
                // kb.add(response, ns.http('status'), kb.literal(xhr.status), response)
                // if (xhr.statusText) kb.add(response, ns.http('statusText'), kb.literal(xhr.statusText), response)

                xhr.abort();
                xhr.aborted = true;
                xhr.redirected = true;

                sf.addStatus(oldreq, 'redirected XHR'); // why

                if (sf.fetchCallbacks[xhr.resource.uri]) {
                  if (!sf.fetchCallbacks[newURI]) {
                    sf.fetchCallbacks[newURI] = [];
                  }
                  sf.fetchCallbacks[newURI] === sf.fetchCallbacks[newURI].concat(sf.fetchCallbacks[xhr.resource.uri]);
                  delete sf.fetchCallbacks[xhr.resource.uri];
                }

                sf.fireCallbacks('redirected', args); // Are these args right? @@@
                sf.requested[xhr.resource.uri] = 'redirected';

                var xhr2 = sf.requestURI(newURI, xhr.resource, xhr.options || {}, xhr.userCallback);
                if (xhr2 && xhr2.req) {
                  kb.add(xhr.req, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), xhr2.req, sf.appNode);
                  return;
                }
              }
            }
            sf.failFetch(xhr, 'HTTP Blocked. (ReadyState 0) Cross-site violation for <' + docuri + '>');

            break;

          case 3:
            // Intermediate state -- 3 may OR MAY NOT be called, selon browser.
            // handleResponse();   // In general it you can't do it yet as the headers are in but not the data
            break;
          case 4:
            // Final state for this XHR but may be redirected
            handleResponse();
            // Now handle
            if (xhr.handle && xhr.responseText !== undefined) {
              // can be validly zero length
              if (sf.requested[xhr.resource.uri] === 'redirected') {
                break;
              }
              sf.fireCallbacks('load', args);
              xhr.handle(function () {
                sf.doneFetch(xhr);
              });
            } else {
              if (xhr.redirected) {
                sf.addStatus(xhr.req, 'Aborted and redirected to new request.');
              } else {
                sf.addStatus(xhr.req, 'Fetch over. No data handled. Aborted = ' + xhr.aborted);
              }
              // sf.failFetch(xhr, "HTTP failed unusually. (no handler set) (x-site violation? no net?) for <"+
              //    docuri+">")
            }
            break;
        } // switch
      };
    };

    // Map the URI to a localhost proxy if we are running on localhost
    // This is used for working offline, e.g. on planes.
    // Is the script istelf is running in localhost, then access all data in a localhost mirror.
    // Do not remove without checking with TimBL
    var uri2 = docuri;
    if (typeof tabulator !== 'undefined' && tabulator.preferences.get('offlineModeUsingLocalhost')) {
      if (uri2.slice(0, 7) === 'http://' && uri2.slice(7, 17) !== 'localhost/') {
        uri2 = 'http://localhost/' + uri2.slice(7);
        log.warn('Localhost kludge for offline use: actually getting <' + uri2 + '>');
      } else {
        // log.warn("Localhost kludge NOT USED <" + uri2 + ">")
      }
    } else {}
      // log.warn("Localhost kludge OFF offline use: actually getting <" + uri2 + ">")

      // 2014 probelm:
      // XMLHttpRequest cannot load http://www.w3.org/People/Berners-Lee/card.
      // A wildcard '*' cannot be used in the 'Access-Control-Allow-Origin' header when the credentials flag is true.
      // @ Many ontology files under http: and need CORS wildcard -> can't have withCredentials

    var withCredentials = uri2.slice(0, 6) === 'https:'; // @@ Kludge -- need for webid which typically is served from https
    if (options.withCredentials !== undefined) {
      withCredentials = options.withCredentials;
    }
    var actualProxyURI = this.proxyIfNecessary(uri2);

    // Setup the request
    // var xhr
    // xhr = Util.XMLHTTPFactory()
    xhr.onerror = onerrorFactory(xhr);
    xhr.onreadystatechange = onreadystatechangeFactory(xhr);
    xhr.timeout = sf.timeout;
    xhr.withCredentials = withCredentials;
    xhr.actualProxyURI = actualProxyURI;

    xhr.req = req;
    xhr.options = options;
    xhr.options = options;
    xhr.resource = docterm;
    xhr.requestedURI = uri2;

    xhr.ontimeout = function () {
      sf.failFetch(xhr, 'requestTimeout');
    };
    try {
      xhr.open('GET', actualProxyURI, this.async);
    } catch (er) {
      return this.failFetch(xhr, 'XHR open for GET failed for <' + uri2 + '>:\n\t' + er);
    }
    if (force) {
      // must happen after open
      xhr.setRequestHeader('Cache-control', 'no-cache');
    }

    // Set redirect callback and request headers -- alas Firefox Extension Only
    if (typeof tabulator !== 'undefined' && tabulator.isExtension && xhr.channel && (Uri.protocol(xhr.resource.uri) === 'http' || Uri.protocol(xhr.resource.uri) === 'https')) {
      try {
        xhr.channel.notificationCallbacks = {
          getInterface: function getInterface(iid) {
            if (iid.equals(Components.interfaces.nsIChannelEventSink)) {
              return {
                onChannelRedirect: function onChannelRedirect(oldC, newC, flags) {
                  if (xhr.aborted) return;
                  var kb = sf.store;
                  var newURI = newC.URI.spec;
                  var oldreq = xhr.req;
                  if (!xhr.options.noMeta) {
                    sf.addStatus(xhr.req, 'Redirected: ' + xhr.status + ' to <' + newURI + '>');
                    kb.add(oldreq, ns.http('redirectedTo'), kb.sym(newURI), xhr.req);

                    // //////////// Change the request node to a new one:  @@@@@@@@@@@@ Duplicate code?
                    var newreq = xhr.req = kb.bnode(); // Make NEW reqest for everything else
                    kb.add(oldreq, ns.http('redirectedRequest'), newreq, this.appNode);

                    var now = new Date();
                    var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';
                    kb.add(newreq, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + newURI), this.appNode);
                    kb.add(newreq, ns.link('status'), kb.collection(), this.appNode);
                    kb.add(newreq, ns.link('requestedURI'), kb.literal(newURI), this.appNode);
                    // /////////////

                    // // log.info('@@ sources onChannelRedirect'+
                    //               "Redirected: "+
                    //               xhr.status + " to <" + newURI + ">"); //@@
                    var response = kb.bnode();
                    // kb.add(response, ns.http('location'), newURI, response); Not on this response
                    kb.add(oldreq, ns.link('response'), response);
                    kb.add(response, ns.http('status'), kb.literal(xhr.status), response);
                    if (xhr.statusText) kb.add(response, ns.http('statusText'), kb.literal(xhr.statusText), response);
                  }
                  if (xhr.status - 0 !== 303) kb.HTTPRedirects[xhr.resource.uri] = newURI; // same document as
                  if (xhr.status - 0 === 301 && rterm) {
                    // 301 Moved
                    var badDoc = Uri.docpart(rterm.uri);
                    var msg = 'Warning: ' + xhr.resource + ' has moved to <' + newURI + '>.';
                    if (rterm) {
                      msg += ' Link in <' + badDoc + ' >should be changed';
                      kb.add(badDoc, kb.sym('http://www.w3.org/2007/ont/link#warning'), msg, sf.appNode);
                    }
                    // dump(msg+"\n")
                  }
                  xhr.abort();
                  xhr.aborted = true;

                  if (sf.fetchCallbacks[xhr.resource.uri]) {
                    if (!sf.fetchCallbacks[newURI]) {
                      sf.fetchCallbacks[newURI] = [];
                    }
                    sf.fetchCallbacks[newURI] === sf.fetchCallbacks[newURI].concat(sf.fetchCallbacks[xhr.resource.uri]);
                    delete sf.fetchCallbacks[xhr.resource.uri];
                  }

                  sf.addStatus(oldreq, 'redirected'); // why
                  sf.fireCallbacks('redirected', args); // Are these args right? @@@
                  sf.requested[xhr.resource.uri] = 'redirected';
                  sf.redirectedTo[xhr.resource.uri] = newURI;

                  var hash = newURI.indexOf('#');
                  if (hash >= 0) {
                    if (!xhr.options.noMeta) {
                      kb.add(xhr.resource, kb.sym('http://www.w3.org/2007/ont/link#warning'), 'Warning: ' + xhr.resource + ' HTTP redirects to' + newURI + ' which should not contain a "#" sign');
                    }
                    newURI = newURI.slice(0, hash);
                  }
                  var xhr2 = sf.requestURI(newURI, xhr.resource, xhr.options, xhr.userCallback);
                  if (xhr2 && xhr2.req && !options.noMeta) {
                    kb.add(xhr.req, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), xhr2.req, sf.appNode);
                  }
                  // else dump("No xhr.req available for redirect from "+xhr.resource+" to "+newURI+"\n")
                },

                // See https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIChannelEventSink
                asyncOnChannelRedirect: function asyncOnChannelRedirect(oldC, newC, flags, callback) {
                  if (xhr.aborted) return;
                  var kb = sf.store;
                  var newURI = newC.URI.spec;
                  var oldreq = xhr.req;
                  sf.addStatus(xhr.req, 'Redirected: ' + xhr.status + ' to <' + newURI + '>');
                  kb.add(oldreq, ns.http('redirectedTo'), kb.sym(newURI), xhr.req);

                  // //////////// Change the request node to a new one:  @@@@@@@@@@@@ Duplicate?
                  var newreq = xhr.req = kb.bnode(); // Make NEW reqest for everything else
                  // xhr.resource = docterm
                  // xhr.requestedURI = args[0]

                  // kb.add(kb.sym(newURI), ns.link("request"), req, this.appNode)
                  kb.add(oldreq, ns.http('redirectedRequest'), newreq, xhr.req);

                  var now = new Date();
                  var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';
                  kb.add(newreq, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + newURI), this.appNode);
                  kb.add(newreq, ns.link('status'), kb.collection(), this.appNode);
                  kb.add(newreq, ns.link('requestedURI'), kb.literal(newURI), this.appNode);
                  // /////////////

                  // // log.info('@@ sources onChannelRedirect'+
                  //               "Redirected: "+
                  //               xhr.status + " to <" + newURI + ">"); //@@
                  var response = kb.bnode();
                  // kb.add(response, ns.http('location'), newURI, response); Not on this response
                  kb.add(oldreq, ns.link('response'), response);
                  kb.add(response, ns.http('status'), kb.literal(xhr.status), response);
                  if (xhr.statusText) kb.add(response, ns.http('statusText'), kb.literal(xhr.statusText), response);

                  if (xhr.status - 0 !== 303) kb.HTTPRedirects[xhr.resource.uri] = newURI; // same document as
                  if (xhr.status - 0 === 301 && rterm) {
                    // 301 Moved
                    var badDoc = Uri.docpart(rterm.uri);
                    var msg = 'Warning: ' + xhr.resource + ' has moved to <' + newURI + '>.';
                    if (rterm) {
                      msg += ' Link in <' + badDoc + ' >should be changed';
                      kb.add(badDoc, kb.sym('http://www.w3.org/2007/ont/link#warning'), msg, sf.appNode);
                    }
                    // dump(msg+"\n")
                  }
                  xhr.abort();
                  xhr.aborted = true;

                  var hash = newURI.indexOf('#');
                  if (hash >= 0) {
                    var msg2 = 'Warning: ' + xhr.resource + ' HTTP redirects to' + newURI + ' which do not normally contain a "#" sign';
                    // dump(msg+"\n")
                    kb.add(xhr.resource, kb.sym('http://www.w3.org/2007/ont/link#warning'), msg2);
                    newURI = newURI.slice(0, hash);
                  }
                  /*
                  if (sf.fetchCallbacks[xhr.resource.uri]) {
                    if (!sf.fetchCallbacks[newURI]) {
                      sf.fetchCallbacks[newURI] = []
                    }
                    sf.fetchCallbacks[newURI] = sf.fetchCallbacks[newURI].concat(sf.fetchCallbacks[xhr.resource.uri])
                    delete sf.fetchCallbacks[xhr.resource.uri]
                  }
                  */
                  sf.requested[xhr.resource.uri] = 'redirected';
                  sf.redirectedTo[xhr.resource.uri] = newURI;

                  var xhr2 = sf.requestURI(newURI, xhr.resource, xhr.options, xhr.userCallback);
                  if (xhr2) {
                    // may be no XHR is other URI already loaded
                    xhr2.original = xhr.original; // use this for finding base
                    if (xhr2.req) {
                      kb.add(xhr.req, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), xhr2.req, sf.appNode);
                    }
                  }
                  // else dump("No xhr.req available for redirect from "+xhr.resource+" to "+newURI+"\n")
                } // asyncOnChannelRedirect
              };
            }
            return Components.results.NS_NOINTERFACE;
          }
        };
      } catch (err) {
        return sf.failFetch(xhr, "@@ Couldn't set callback for redirects: " + err);
      } // try
    } // if Firefox extension

    try {
      var acceptstring = '';
      for (var type in this.mediatypes) {
        // var attrstring = ''
        if (acceptstring !== '') {
          acceptstring += ', ';
        }
        acceptstring += type;
        for (var attr in this.mediatypes[type]) {
          acceptstring += ';' + attr + '=' + this.mediatypes[type][attr];
        }
      }
      xhr.setRequestHeader('Accept', acceptstring);
      this.addStatus(xhr.req, 'Accept: ' + acceptstring);

      // if (requester) { xhr.setRequestHeader('Referer',requester) }
    } catch (err) {
      throw new Error("Can't set Accept header: " + err);
    }

    // Fire
    try {
      xhr.send(null);
    } catch (er) {
      return this.failFetch(xhr, 'XHR send failed:' + er);
    }
    setTimeout(function () {
      if (xhr.readyState !== 4 && sf.isPending(xhr.resource.uri)) {
        sf.failFetch(xhr, 'requestTimeout');
      }
    }, this.timeout);
    this.addStatus(xhr.req, 'HTTP Request sent.');
    return xhr;
  }; // this.requestURI()

  this.objectRefresh = function (term) {
    var uris = kb.uris(term); // Get all URIs
    if (typeof uris !== 'undefined') {
      for (var i = 0; i < uris.length; i++) {
        this.refresh(this.store.sym(Uri.docpart(uris[i])));
        // what about rterm?
      }
    }
  };

  // deprecated -- use IndexedFormula.removeDocument(doc)
  this.unload = function (term) {
    this.store.removeMany(undefined, undefined, undefined, term);
    delete this.requested[term.uri]; // So it can be loaded again
  };

  this.refresh = function (term, userCallback) {
    // sources_refresh
    this.fireCallbacks('refresh', arguments);
    this.requestURI(term.uri, undefined, { force: true, clearPreviousData: true }, userCallback);
  };

  this.retract = function (term) {
    // sources_retract
    this.store.removeMany(undefined, undefined, undefined, term);
    if (term.uri) {
      delete this.requested[Uri.docpart(term.uri)];
    }
    this.fireCallbacks('retract', arguments);
  };

  this.getState = function (docuri) {
    if (typeof this.requested[docuri] === 'undefined') {
      return 'unrequested';
    } else if (this.requested[docuri] === true) {
      return 'requested';
    } else if (this.requested[docuri] === 'done') {
      return 'fetched';
    } else if (this.requested[docuri] === 'redirected') {
      return this.getState(this.redirectedTo[docuri]);
    } else {
      // An non-200 HTTP error status
      return 'failed';
    }
  };

  // doing anyStatementMatching is wasting time
  this.isPending = function (docuri) {
    // sources_pending
    // if it's not pending: false -> flailed 'done' -> done 'redirected' -> redirected
    return this.requested[docuri] === true;
  };
  // var updatesVia = new $rdf.UpdatesVia(this) // Subscribe to headers
  // @@@@@@@@ This is turned off because it causes a websocket to be set up for ANY fetch
  // whether we want to track it ot not. including ontologies loaed though the XSSproxy
}; // End of fetcher

module.exports = Fetcher;
},{"./log":66,"./n3parser":67,"./named-node":68,"./namespace":69,"./parse":71,"./rdfaparser":75,"./rdfxmlparser":76,"./serialize":77,"./uri":83,"./util":84}],61:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BlankNode = require('./blank-node');
var ClassOrder = require('./class-order');
var Collection = require('./collection');
var Literal = require('./literal');
var log = require('./log');
var NamedNode = require('./named-node');
var Node = require('./node');
var Serializer = require('./serialize');
var Statement = require('./statement');
var Variable = require('./variable');

var Formula = function (_Node) {
  _inherits(Formula, _Node);

  function Formula(statements, constraints, initBindings, optional) {
    _classCallCheck(this, Formula);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Formula).call(this));

    _this.termType = Formula.termType;
    _this.statements = statements || [];
    _this.constraints = constraints || [];
    _this.initBindings = initBindings || [];
    _this.optional = optional || [];
    return _this;
  }

  _createClass(Formula, [{
    key: 'add',
    value: function add(s, p, o, g) {
      return this.statements.push(new Statement(s, p, o, g));
    }
  }, {
    key: 'addStatement',
    value: function addStatement(st) {
      return this.statements.push(st);
    }
  }, {
    key: 'bnode',
    value: function bnode(id) {
      return new BlankNode(id);
    }
    /**
     * Finds the types in the list which have no *stored* subtypes
     * These are a set of classes which provide by themselves complete
     * information -- the other classes are redundant for those who
     * know the class DAG.
     */

  }, {
    key: 'bottomTypeURIs',
    value: function bottomTypeURIs(types) {
      var bots;
      var bottom;
      var elt;
      var i;
      var k;
      var len;
      var ref;
      var subs;
      var v;
      bots = [];
      for (k in types) {
        if (!types.hasOwnProperty(k)) continue;
        v = types[k];
        subs = this.each(void 0, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), this.sym(k));
        bottom = true;
        i = 0;
        for (len = subs.length; i < len; i++) {
          elt = subs[i];
          ref = elt.uri;
          if (ref in types) {
            // the subclass is one we know
            bottom = false;
            break;
          }
        }
        if (bottom) {
          bots[k] = v;
        }
      }
      return bots;
    }
  }, {
    key: 'collection',
    value: function collection() {
      return new Collection();
    }
  }, {
    key: 'each',
    value: function each(s, p, o, g) {
      var elt, i, l, m, q;
      var len, len1, len2, len3;
      var results = [];
      var sts = this.statementsMatching(s, p, o, g, false);
      if (s == null) {
        for (i = 0, len = sts.length; i < len; i++) {
          elt = sts[i];
          results.push(elt.subject);
        }
      } else if (p == null) {
        for (l = 0, len1 = sts.length; l < len1; l++) {
          elt = sts[l];
          results.push(elt.predicate);
        }
      } else if (o == null) {
        for (m = 0, len2 = sts.length; m < len2; m++) {
          elt = sts[m];
          results.push(elt.object);
        }
      } else if (g == null) {
        for (q = 0, len3 = sts.length; q < len3; q++) {
          elt = sts[q];
          results.push(elt.why);
        }
      }
      return results;
    }
  }, {
    key: 'equals',
    value: function equals(other) {
      if (!other) {
        return false;
      }
      return this.hashString() === other.hashString();
    }
    /*
    For thisClass or any subclass, anything which has it is its type
    or is the object of something which has the type as its range, or subject
    of something which has the type as its domain
    We don't bother doing subproperty (yet?)as it doesn't seeem to be used much.
    Get all the Classes of which we can RDFS-infer the subject is a member
    @returns a hash of URIs
    */

    /**
     * For thisClass or any subclass, anything which has it is its type
     * or is the object of something which has the type as its range, or subject
     * of something which has the type as its domain
     * We don't bother doing subproperty (yet?)as it doesn't seeem to be used
     * much.
     * Get all the Classes of which we can RDFS-infer the subject is a member
     * @return a hash of URIs
     */

  }, {
    key: 'findMembersNT',
    value: function findMembersNT(thisClass) {
      var i;
      var l;
      var len;
      var len1;
      var len2;
      var len3;
      var len4;
      var m;
      var members;
      var pred;
      var q;
      var ref;
      var ref1;
      var ref2;
      var ref3;
      var ref4;
      var ref5;
      var seeds;
      var st;
      var t;
      var u;
      seeds = {};
      seeds[thisClass.toNT()] = true;
      members = {};
      ref = this.transitiveClosure(seeds, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), true);
      for (t in ref) {
        if (!ref.hasOwnProperty(t)) continue;
        ref1 = this.statementsMatching(void 0, this.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'), this.fromNT(t));
        for (i = 0, len = ref1.length; i < len; i++) {
          st = ref1[i];
          members[st.subject.toNT()] = st;
        }
        ref2 = this.each(void 0, this.sym('http://www.w3.org/2000/01/rdf-schema#domain'), this.fromNT(t));
        for (l = 0, len1 = ref2.length; l < len1; l++) {
          pred = ref2[l];
          ref3 = this.statementsMatching(void 0, pred);
          for (m = 0, len2 = ref3.length; m < len2; m++) {
            st = ref3[m];
            members[st.subject.toNT()] = st;
          }
        }
        ref4 = this.each(void 0, this.sym('http://www.w3.org/2000/01/rdf-schema#range'), this.fromNT(t));
        for (q = 0, len3 = ref4.length; q < len3; q++) {
          pred = ref4[q];
          ref5 = this.statementsMatching(void 0, pred);
          for (u = 0, len4 = ref5.length; u < len4; u++) {
            st = ref5[u];
            members[st.object.toNT()] = st;
          }
        }
      }
      return members;
    }
  }, {
    key: 'findMemberURIs',
    value: function findMemberURIs(subject) {
      return this.NTtoURI(this.findMembersNT(subject));
    }
    /**
     * Get all the Classes of which we can RDFS-infer the subject is a superclass
     * Returns a hash table where key is NT of type and value is statement why we
     * think so.
     * Does NOT return terms, returns URI strings.
     * We use NT representations in this version because they handle blank nodes.
     */

  }, {
    key: 'findSubClassesNT',
    value: function findSubClassesNT(subject) {
      var types = {};
      types[subject.toNT()] = true;
      return this.transitiveClosure(types, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), true);
    }
    /**
     * Get all the Classes of which we can RDFS-infer the subject is a subclass
     * Returns a hash table where key is NT of type and value is statement why we
     * think so.
     * Does NOT return terms, returns URI strings.
     * We use NT representations in this version because they handle blank nodes.
     */

  }, {
    key: 'findSuperClassesNT',
    value: function findSuperClassesNT(subject) {
      var types = {};
      types[subject.toNT()] = true;
      return this.transitiveClosure(types, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), false);
    }
    /**
     * Get all the Classes of which we can RDFS-infer the subject is a member
     * todo: This will loop is there is a class subclass loop (Sublass loops are
     * not illegal)
     * Returns a hash table where key is NT of type and value is statement why we
     * think so.
     * Does NOT return terms, returns URI strings.
     * We use NT representations in this version because they handle blank nodes.
     */

  }, {
    key: 'findTypesNT',
    value: function findTypesNT(subject) {
      var domain;
      var i;
      var l;
      var len;
      var len1;
      var len2;
      var len3;
      var m;
      var q;
      var range;
      var rdftype;
      var ref;
      var ref1;
      var ref2;
      var ref3;
      var st;
      var types;
      rdftype = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';
      types = [];
      ref = this.statementsMatching(subject, void 0, void 0);
      for (i = 0, len = ref.length; i < len; i++) {
        st = ref[i];
        if (st.predicate.uri === rdftype) {
          types[st.object.toNT()] = st;
        } else {
          ref1 = this.each(st.predicate, this.sym('http://www.w3.org/2000/01/rdf-schema#domain'));
          for (l = 0, len1 = ref1.length; l < len1; l++) {
            range = ref1[l];
            types[range.toNT()] = st;
          }
        }
      }
      ref2 = this.statementsMatching(void 0, void 0, subject);
      for (m = 0, len2 = ref2.length; m < len2; m++) {
        st = ref2[m];
        ref3 = this.each(st.predicate, this.sym('http://www.w3.org/2000/01/rdf-schema#range'));
        for (q = 0, len3 = ref3.length; q < len3; q++) {
          domain = ref3[q];
          types[domain.toNT()] = st;
        }
      }
      return this.transitiveClosure(types, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), false);
    }
  }, {
    key: 'findTypeURIs',
    value: function findTypeURIs(subject) {
      return this.NTtoURI(this.findTypesNT(subject));
    }
    // Trace the statements which connect directly, or through bnodes
    // Returns an array of statements
    // doc param may be null to search all documents in store

  }, {
    key: 'connectedStatements',
    value: function connectedStatements(subject, doc, excludePredicateURIs) {
      excludePredicateURIs = excludePredicateURIs || [];
      var todo = [subject];
      var done = [];
      var doneArcs = [];
      var result = [];
      var self = this;
      var follow = function follow(x) {
        var queue = function queue(x) {
          if (x.termType === 'BlankNode' && !done[x.value]) {
            done[x.value] = true;
            todo.push(x);
          }
        };
        var sts = self.statementsMatching(null, null, x, doc).concat(self.statementsMatching(x, null, null, doc));
        sts = sts.filter(function (st) {
          if (excludePredicateURIs[st.predicate.uri]) return false;
          var hash = st.toNT();
          if (doneArcs[hash]) return false;
          doneArcs[hash] = true;
          return true;
        });
        sts.forEach(function (st, i) {
          queue(st.subject);
          queue(st.object);
        });
        result = result.concat(sts);
      };
      while (todo.length) {
        follow(todo.shift());
      }
      // console.log('' + result.length + ' statements about ' + subject)
      return result;
    }
  }, {
    key: 'formula',
    value: function formula() {
      return new Formula();
    }
    /**
     * Transforms an NTriples string format into a Node.
     * The bnode bit should not be used on program-external values; designed
     * for internal work such as storing a bnode id in an HTML attribute.
     * This will only parse the strings generated by the vaious toNT() methods.
     */

  }, {
    key: 'fromNT',
    value: function fromNT(str) {
      var dt, k, lang, x;
      switch (str[0]) {
        case '<':
          return this.sym(str.slice(1, -1));
        case '"':
          lang = void 0;
          dt = void 0;
          k = str.lastIndexOf('"');
          if (k < str.length - 1) {
            if (str[k + 1] === '@') {
              lang = str.slice(k + 2);
            } else if (str.slice(k + 1, k + 3) === '^^') {
              dt = this.fromNT(str.slice(k + 3));
            } else {
              throw new Error("Can't convert string from NT: " + str);
            }
          }
          str = str.slice(1, k);
          str = str.replace(/\\"/g, '"');
          str = str.replace(/\\n/g, '\n');
          str = str.replace(/\\\\/g, '\\');
          return this.literal(str, lang, dt);
        case '_':
          x = new BlankNode();
          x.id = parseInt(str.slice(3), 10);
          BlankNode.nextId--;
          return x;
        case '?':
          return new Variable(str.slice(1));
      }
      throw new Error("Can't convert from NT: " + str);
    }
  }, {
    key: 'holds',
    value: function holds(s, p, o, g) {
      var i;
      if (arguments.length === 1) {
        if (!s) {
          return true;
        }
        if (s instanceof Array) {
          for (i = 0; i < s.length; i++) {
            if (!this.holds(s[i])) {
              return false;
            }
          }
          return true;
        } else if (s instanceof Statement) {
          return this.holds(s.subject, s.predicate, s.object, s.why);
        } else if (s.statements) {
          return this.holds(s.statements);
        }
      }

      var st = this.anyStatementMatching(s, p, o, g);
      return st != null;
    }
  }, {
    key: 'holdsStatement',
    value: function holdsStatement(st) {
      return this.holds(st.subject, st.predicate, st.object, st.why);
    }
  }, {
    key: 'list',
    value: function list(values) {
      var collection = new Collection();
      values.forEach(function (val) {
        collection.append(val);
      });
      return collection;
    }
  }, {
    key: 'literal',
    value: function literal(val, lang, dt) {
      return new Literal('' + val, lang, dt);
    }
    /**
     * transform a collection of NTriple URIs into their URI strings
     * @param t some iterable colletion of NTriple URI strings
     * @return a collection of the URIs as strings
     * todo: explain why it is important to go through NT
     */

  }, {
    key: 'NTtoURI',
    value: function NTtoURI(t) {
      var k, v;
      var uris = {};
      for (k in t) {
        if (!t.hasOwnProperty(k)) continue;
        v = t[k];
        if (k[0] === '<') {
          uris[k.slice(1, -1)] = v;
        }
      }
      return uris;
    }
  }, {
    key: 'serialize',
    value: function serialize(base, contentType, provenance) {
      var documentString;
      var sts;
      var sz;
      sz = Serializer(this);
      sz.suggestNamespaces(this.namespaces);
      sz.setBase(base);
      if (provenance) {
        sts = this.statementsMatching(void 0, void 0, void 0, provenance);
      } else {
        sts = this.statements;
      }
      switch (contentType != null ? contentType : 'text/n3') {
        case 'application/rdf+xml':
          documentString = sz.statementsToXML(sts);
          break;
        case 'text/n3':
        case 'text/turtle':
          documentString = sz.statementsToN3(sts);
          break;
        default:
          throw new Error('serialize: Content-type ' + contentType + ' not supported.');
      }
      return documentString;
    }
  }, {
    key: 'substitute',
    value: function substitute(bindings) {
      var statementsCopy = this.statements.map(function (ea) {
        return ea.substitute(bindings);
      });
      console.log('Formula subs statmnts:' + statementsCopy);
      var y = new Formula();
      y.add(statementsCopy);
      console.log('indexed-form subs formula:' + y);
      return y;
    }
  }, {
    key: 'sym',
    value: function sym(uri, name) {
      if (name) {
        throw new Error('This feature (kb.sym with 2 args) is removed. Do not assume prefix mappings.');
      }
      return new NamedNode(uri);
    }
  }, {
    key: 'the',
    value: function the(s, p, o, g) {
      var x = this.any(s, p, o, g);
      if (x == null) {
        log.error('No value found for the() {' + s + ' ' + p + ' ' + o + '}.');
      }
      return x;
    }
    /**
     * RDFS Inference
     * These are hand-written implementations of a backward-chaining reasoner
     * over the RDFS axioms.
     * @param seeds {Object} a hash of NTs of classes to start with
     * @param predicate The property to trace though
     * @param inverse trace inverse direction
     */

  }, {
    key: 'transitiveClosure',
    value: function transitiveClosure(seeds, predicate, inverse) {
      var elt, i, len, s, sups, t;
      var agenda = {};
      Object.assign(agenda, seeds); // make a copy
      var done = {}; // classes we have looked up
      while (true) {
        t = function () {
          for (var p in agenda) {
            if (!agenda.hasOwnProperty(p)) continue;
            return p;
          }
        }();
        if (t == null) {
          return done;
        }
        sups = inverse ? this.each(void 0, predicate, this.fromNT(t)) : this.each(this.fromNT(t), predicate);
        for (i = 0, len = sups.length; i < len; i++) {
          elt = sups[i];
          s = elt.toNT();
          if (s in done) {
            continue;
          }
          if (s in agenda) {
            continue;
          }
          agenda[s] = agenda[t];
        }
        done[t] = agenda[t];
        delete agenda[t];
      }
    }
    /**
     * Finds the types in the list which have no *stored* supertypes
     * We exclude the universal class, owl:Things and rdf:Resource, as it is
     * information-free.
     */

  }, {
    key: 'topTypeURIs',
    value: function topTypeURIs(types) {
      var i;
      var j;
      var k;
      var len;
      var n;
      var ref;
      var tops;
      var v;
      tops = [];
      for (k in types) {
        if (!types.hasOwnProperty(k)) continue;
        v = types[k];
        n = 0;
        ref = this.each(this.sym(k), this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'));
        for (i = 0, len = ref.length; i < len; i++) {
          j = ref[i];
          if (j.uri !== 'http://www.w3.org/2000/01/rdf-schema#Resource') {
            n++;
            break;
          }
        }
        if (!n) {
          tops[k] = v;
        }
      }
      if (tops['http://www.w3.org/2000/01/rdf-schema#Resource']) {
        delete tops['http://www.w3.org/2000/01/rdf-schema#Resource'];
      }
      if (tops['http://www.w3.org/2002/07/owl#Thing']) {
        delete tops['http://www.w3.org/2002/07/owl#Thing'];
      }
      return tops;
    }
  }, {
    key: 'toString',
    value: function toString() {
      return '{' + this.statements.join('\n') + '}';
    }
  }, {
    key: 'whether',
    value: function whether(s, p, o, g) {
      return this.statementsMatching(s, p, o, g, false).length;
    }
  }]);

  return Formula;
}(Node);

Formula.termType = 'Graph';

Formula.prototype.classOrder = ClassOrder['Graph'];
Formula.prototype.isVar = 0;

Formula.prototype.ns = require('./namespace');
Formula.prototype.variable = function (name) {
  return new Variable(name);
};

module.exports = Formula;
},{"./blank-node":53,"./class-order":54,"./collection":55,"./literal":65,"./log":66,"./named-node":68,"./namespace":69,"./node":70,"./serialize":77,"./statement":80,"./variable":85}],62:[function(require,module,exports){
'use strict';

var _indexedFormula = require('./indexed-formula');

var _indexedFormula2 = _interopRequireDefault(_indexedFormula);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var $rdf = {
  BlankNode: require('./blank-node'),
  Collection: require('./collection'),
  convert: require('./convert'),
  DataFactory: require('./data-factory'),
  Empty: require('./empty'),
  Fetcher: require('./fetcher'),
  Formula: require('./formula'),
  IndexedFormula: _indexedFormula2.default,
  jsonParser: require('./jsonparser'),
  Literal: require('./literal'),
  log: require('./log'),
  N3Parser: require('./n3parser'),
  NamedNode: require('./named-node'),
  Namespace: require('./namespace'),
  Node: require('./node'),
  parse: require('./parse'),
  Query: require('./query').Query,
  queryToSPARQL: require('./query-to-sparql'),
  RDFaProcessor: require('./rdfaparser'),
  RDFParser: require('./rdfxmlparser'),
  serialize: require('./serialize'),
  Serializer: require('./serializer'),
  SPARQLToQuery: require('./sparql-to-query'),
  sparqlUpdateParser: require('./patch-parser'),
  Statement: require('./statement'),
  term: require('./node').fromValue,
  UpdateManager: require('./update-manager'),
  UpdatesSocket: require('./updates-via').UpdatesSocket,
  UpdatesVia: require('./updates-via').UpdatesVia,
  uri: require('./uri'),
  Util: require('./util'),
  Variable: require('./variable')
};

$rdf.NextId = $rdf.BlankNode.nextId;

$rdf.fromNT = $rdf.Formula.prototype.fromNT;
$rdf.fetcher = $rdf.DataFactory.fetcher;
$rdf.graph = $rdf.DataFactory.graph;
$rdf.lit = $rdf.DataFactory.lit;
$rdf.st = $rdf.DataFactory.st;
$rdf.sym = $rdf.DataFactory.namedNode;
$rdf.variable = $rdf.DataFactory.variable;

// RDFJS DataFactory interface
$rdf.blankNode = $rdf.DataFactory.blankNode;
$rdf.defaultGraph = $rdf.DataFactory.defaultGraph;
$rdf.literal = $rdf.DataFactory.literal;
$rdf.namedNode = $rdf.DataFactory.namedNode;
$rdf.quad = $rdf.DataFactory.quad;
$rdf.triple = $rdf.DataFactory.triple;

module.exports = $rdf;
},{"./blank-node":53,"./collection":55,"./convert":56,"./data-factory":57,"./empty":59,"./fetcher":60,"./formula":61,"./indexed-formula":63,"./jsonparser":64,"./literal":65,"./log":66,"./n3parser":67,"./named-node":68,"./namespace":69,"./node":70,"./parse":71,"./patch-parser":72,"./query":74,"./query-to-sparql":73,"./rdfaparser":75,"./rdfxmlparser":76,"./serialize":77,"./serializer":78,"./sparql-to-query":79,"./statement":80,"./update-manager":81,"./updates-via":82,"./uri":83,"./util":84,"./variable":85}],63:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//  Identity management and indexing for RDF
//
// This file provides  IndexedFormula a formula (set of triples) which
// indexed by predicate, subject and object.
//
// It "smushes"  (merges into a single node) things which are identical
// according to owl:sameAs or an owl:InverseFunctionalProperty
// or an owl:FunctionalProperty
//
//
//  2005-10 Written Tim Berners-Lee
//  2007    Changed so as not to munge statements from documents when smushing
//
//
/* jsl:option explicit */
var ArrayIndexOf = require('./util').ArrayIndexOf;
var Formula = require('./formula');
// const log = require('./log')
var RDFArrayRemove = require('./util').RDFArrayRemove;
var Statement = require('./statement');
var Node = require('./node');
var Variable = require('./variable');

var owl_ns = 'http://www.w3.org/2002/07/owl#';
// var link_ns = 'http://www.w3.org/2007/ont/link#'

// Handle Functional Property
function handle_FP(formula, subj, pred, obj) {
  var o1 = formula.any(subj, pred, undefined);
  if (!o1) {
    return false; // First time with this value
  }
  // log.warn("Equating "+o1.uri+" and "+obj.uri + " because FP "+pred.uri);  //@@
  formula.equate(o1, obj);
  return true;
} // handle_FP

// Handle Inverse Functional Property
function handle_IFP(formula, subj, pred, obj) {
  var s1 = formula.any(undefined, pred, obj);
  if (!s1) {
    return false; // First time with this value
  }
  // log.warn("Equating "+s1.uri+" and "+subj.uri + " because IFP "+pred.uri);  //@@
  formula.equate(s1, subj);
  return true;
} // handle_IFP

function handleRDFType(formula, subj, pred, obj, why) {
  if (formula.typeCallback) {
    formula.typeCallback(formula, obj, why);
  }

  var x = formula.classActions[obj.hashString()];
  var done = false;
  if (x) {
    for (var i = 0; i < x.length; i++) {
      done = done || x[i](formula, subj, pred, obj, why);
    }
  }
  return done; // statement given is not needed if true
}

var IndexedFormula = function (_Formula) {
  _inherits(IndexedFormula, _Formula);

  // IN future - allow pass array of statements to constructor
  function IndexedFormula(features) {
    _classCallCheck(this, IndexedFormula);

    // this.statements = [] // As in Formula NO don't overwrite inherited
    // this.optional = []

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(IndexedFormula).call(this));

    _this.propertyActions = []; // Array of functions to call when getting statement with {s X o}
    // maps <uri> to [f(F,s,p,o),...]
    _this.classActions = []; // Array of functions to call when adding { s type X }
    _this.redirections = []; // redirect to lexically smaller equivalent symbol
    _this.aliases = []; // reverse mapping to redirection: aliases for this
    _this.HTTPRedirects = []; // redirections we got from HTTP
    _this.subjectIndex = []; // Array of statements with this X as subject
    _this.predicateIndex = []; // Array of statements with this X as subject
    _this.objectIndex = []; // Array of statements with this X as object
    _this.whyIndex = []; // Array of statements with X as provenance
    _this.index = [_this.subjectIndex, _this.predicateIndex, _this.objectIndex, _this.whyIndex];
    _this.namespaces = {}; // Dictionary of namespace prefixes
    _this.features = features || ['sameAs', 'InverseFunctionalProperty', 'FunctionalProperty'];
    _this.initPropertyActions(_this.features);
    return _this;
  }

  _createClass(IndexedFormula, [{
    key: 'substitute',
    value: function substitute(bindings) {
      var statementsCopy = this.statements.map(function (ea) {
        return ea.substitute(bindings);
      });
      // console.log('IndexedFormula subs statemnts:' + statementsCopy)
      var y = new IndexedFormula();
      y.add(statementsCopy);
      // console.log('indexed-form subs formula:' + y)
      return y;
    }
  }, {
    key: 'applyPatch',
    value: function applyPatch(patch, target, patchCallback) {
      // patchCallback(err)
      var Query = require('./query').Query;
      var targetKB = this;
      var ds;
      var binding = null;

      // /////////// Debug strings
      /*
      var bindingDebug = function (b) {
        var str = ''
        var v
        for (v in b) {
          if (b.hasOwnProperty(v)) {
            str += '    ' + v + ' -> ' + b[v]
          }
        }
        return str
      }
      */
      var doPatch = function doPatch(onDonePatch) {
        if (patch['delete']) {
          ds = patch['delete'];
          // console.log(bindingDebug(binding))
          // console.log('ds before substitute: ' + ds)
          if (binding) ds = ds.substitute(binding);
          // console.log('applyPatch: delete: ' + ds)
          ds = ds.statements;
          var bad = [];
          var ds2 = ds.map(function (st) {
            // Find the actual statemnts in the store
            var sts = targetKB.statementsMatching(st.subject, st.predicate, st.object, target);
            if (sts.length === 0) {
              // log.info("NOT FOUND deletable " + st)
              bad.push(st);
              return null;
            } else {
              // log.info("Found deletable " + st)
              return sts[0];
            }
          });
          if (bad.length) {
            // console.log('Could not find to delete ' + bad.length + 'statements')
            // console.log('despite ' + targetKB.statementsMatching(bad[0].subject, bad[0].predicate)[0])
            return patchCallback('Could not find to delete: ' + bad.join('\n or '));
          }
          ds2.map(function (st) {
            targetKB.remove(st);
          });
        }
        if (patch['insert']) {
          // log.info("doPatch insert "+patch['insert'])
          ds = patch['insert'];
          if (binding) ds = ds.substitute(binding);
          ds = ds.statements;
          ds.map(function (st) {
            st.why = target;
            targetKB.add(st.subject, st.predicate, st.object, st.why);
          });
        }
        onDonePatch();
      };
      if (patch.where) {
        // log.info("Processing WHERE: " + patch.where + '\n')
        var query = new Query('patch');
        query.pat = patch.where;
        query.pat.statements.map(function (st) {
          st.why = target;
        });

        var bindingsFound = [];

        targetKB.query(query, function onBinding(binding) {
          bindingsFound.push(binding);
          // console.log('   got a binding: ' + bindingDebug(binding))
        }, targetKB.fetcher, function onDone() {
          if (bindingsFound.length === 0) {
            return patchCallback('No match found to be patched:' + patch.where);
          }
          if (bindingsFound.length > 1) {
            return patchCallback('Patch ambiguous. No patch done.');
          }
          binding = bindingsFound[0];
          doPatch(patchCallback);
        });
      } else {
        doPatch(patchCallback);
      }
    }
  }, {
    key: 'declareExistential',
    value: function declareExistential(x) {
      if (!this._existentialVariables) this._existentialVariables = [];
      this._existentialVariables.push(x);
      return x;
    }
  }, {
    key: 'initPropertyActions',
    value: function initPropertyActions(features) {
      // If the predicate is #type, use handleRDFType to create a typeCallback on the object
      this.propertyActions['<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'] = [handleRDFType];

      // Assumption: these terms are not redirected @@fixme
      if (ArrayIndexOf(features, 'sameAs') >= 0) {
        this.propertyActions['<http://www.w3.org/2002/07/owl#sameAs>'] = [function (formula, subj, pred, obj, why) {
          // log.warn("Equating "+subj.uri+" sameAs "+obj.uri);  //@@
          formula.equate(subj, obj);
          return true; // true if statement given is NOT needed in the store
        }]; // sameAs -> equate & don't add to index
      }
      if (ArrayIndexOf(features, 'InverseFunctionalProperty') >= 0) {
        this.classActions['<' + owl_ns + 'InverseFunctionalProperty>'] = [function (formula, subj, pred, obj, addFn) {
          // yes subj not pred!
          return formula.newPropertyAction(subj, handle_IFP);
        }]; // IFP -> handle_IFP, do add to index
      }
      if (ArrayIndexOf(features, 'FunctionalProperty') >= 0) {
        this.classActions['<' + owl_ns + 'FunctionalProperty>'] = [function (formula, subj, proj, obj, addFn) {
          return formula.newPropertyAction(subj, handle_FP);
        }]; // FP => handleFP, do add to index
      }
    }

    /**
     * Adds a triple to the store.
     * Returns the statement added
     * (would it be better to return the original formula for chaining?)
     */

  }, {
    key: 'add',
    value: function add(subj, pred, obj, why) {
      var i;
      if (arguments.length === 1) {
        if (subj instanceof Array) {
          for (i = 0; i < subj.length; i++) {
            this.add(subj[i]);
          }
        } else if (subj instanceof Statement) {
          this.add(subj.subject, subj.predicate, subj.object, subj.why);
        } else if (subj instanceof IndexedFormula) {
          this.add(subj.statements);
        }
        return this;
      }
      var actions;
      var st;
      if (!why) {
        // system generated
        why = this.fetcher ? this.fetcher.appNode : this.sym('chrome:theSession');
      }
      subj = Node.fromValue(subj);
      pred = Node.fromValue(pred);
      obj = Node.fromValue(obj);
      why = Node.fromValue(why);
      if (this.predicateCallback) {
        this.predicateCallback(this, pred, why);
      }
      // Action return true if the statement does not need to be added
      var predHash = this.canon(pred).hashString();
      actions = this.propertyActions[predHash]; // Predicate hash
      var done = false;
      if (actions) {
        // alert('type: '+typeof actions +' @@ actions='+actions)
        for (i = 0; i < actions.length; i++) {
          done = done || actions[i](this, subj, pred, obj, why);
        }
      }
      if (this.holds(subj, pred, obj, why)) {
        // Takes time but saves duplicates
        // console.log('rdflib: Ignoring dup! {' + subj + ' ' + pred + ' ' + obj + ' ' + why + '}')
        return null; // @@better to return self in all cases?
      }
      // If we are tracking provenance, every thing should be loaded into the store
      // if (done) return new Statement(subj, pred, obj, why)
      // Don't put it in the store
      // still return this statement for owl:sameAs input
      var hash = [this.canon(subj).hashString(), predHash, this.canon(obj).hashString(), this.canon(why).hashString()];
      st = new Statement(subj, pred, obj, why);
      for (i = 0; i < 4; i++) {
        var ix = this.index[i];
        var h = hash[i];
        if (!ix[h]) {
          ix[h] = [];
        }
        ix[h].push(st); // Set of things with this as subject, etc
      }

      // log.debug("ADDING    {"+subj+" "+pred+" "+obj+"} "+why)
      this.statements.push(st);
      return st;
    }
  }, {
    key: 'addAll',
    value: function addAll(statements) {
      var _this2 = this;

      statements.forEach(function (quad) {
        _this2.add(quad.subject, quad.predicate, quad.object, quad.graph);
      });
    }
  }, {
    key: 'any',
    value: function any(s, p, o, g) {
      var st = this.anyStatementMatching(s, p, o, g);
      if (st == null) {
        return void 0;
      } else if (s == null) {
        return st.subject;
      } else if (p == null) {
        return st.predicate;
      } else if (o == null) {
        return st.object;
      }
      return void 0;
    }
  }, {
    key: 'anyValue',
    value: function anyValue(s, p, o, g) {
      var y = this.any(s, p, o, g);
      return y ? y.value : void 0;
    }
  }, {
    key: 'anyStatementMatching',
    value: function anyStatementMatching(subj, pred, obj, why) {
      var x = this.statementsMatching(subj, pred, obj, why, true);
      if (!x || x.length === 0) {
        return undefined;
      }
      return x[0];
    }

    /**
     * Returns the symbol with canonical URI as smushed
     */

  }, {
    key: 'canon',
    value: function canon(term) {
      if (!term) {
        return term;
      }
      var y = this.redirections[term.hashString()];
      if (!y) {
        return term;
      }
      return y;
    }
  }, {
    key: 'check',
    value: function check() {
      this.checkStatementList(this.statements);
      for (var p = 0; p < 4; p++) {
        var ix = this.index[p];
        for (var key in ix) {
          if (ix.hasOwnProperty(key)) {
            this.checkStatementList(ix[key], p);
          }
        }
      }
    }

    /**
     * Self-consistency checking for diagnostis only
     * Is each statement properly indexed?
     */

  }, {
    key: 'checkStatementList',
    value: function checkStatementList(sts, from) {
      var names = ['subject', 'predicate', 'object', 'why'];
      var origin = ' found in ' + names[from] + ' index.';
      var st;
      for (var j = 0; j < sts.length; j++) {
        st = sts[j];
        var term = [st.subject, st.predicate, st.object, st.why];
        var arrayContains = function arrayContains(a, x) {
          for (var i = 0; i < a.length; i++) {
            if (a[i].subject.sameTerm(x.subject) && a[i].predicate.sameTerm(x.predicate) && a[i].object.sameTerm(x.object) && a[i].why.sameTerm(x.why)) {
              return true;
            }
          }
        };
        for (var p = 0; p < 4; p++) {
          var c = this.canon(term[p]);
          var h = c.hashString();
          if (!this.index[p][h]) {
            // throw new Error('No ' + name[p] + ' index for statement ' + st + '@' + st.why + origin)
          } else {
            if (!arrayContains(this.index[p][h], st)) {
              // throw new Error('Index for ' + name[p] + ' does not have statement ' + st + '@' + st.why + origin)
            }
          }
        }
        if (!arrayContains(this.statements, st)) {
          throw new Error('Statement list does not statement ' + st + '@' + st.why + origin);
        }
      }
    }
  }, {
    key: 'close',
    value: function close() {
      return this;
    }

    /**
     * replaces @template with @target and add appropriate triples (no triple
     * removed)
     * one-direction replication
     * @method copyTo
     */

  }, {
    key: 'copyTo',
    value: function copyTo(template, target, flags) {
      if (!flags) flags = [];
      var statList = this.statementsMatching(template);
      if (ArrayIndexOf(flags, 'two-direction') !== -1) {
        statList.concat(this.statementsMatching(undefined, undefined, template));
      }
      for (var i = 0; i < statList.length; i++) {
        var st = statList[i];
        switch (st.object.termType) {
          case 'NamedNode':
            this.add(target, st.predicate, st.object);
            break;
          case 'Literal':
          case 'BlankNode':
          case 'Collection':
            this.add(target, st.predicate, st.object.copy(this));
        }
        if (ArrayIndexOf(flags, 'delete') !== -1) {
          this.remove(st);
        }
      }
    }

    /**
     * simplify graph in store when we realize two identifiers are equivalent
     * We replace the bigger with the smaller.
     */

  }, {
    key: 'equate',
    value: function equate(u1, u2) {
      // log.warn("Equating "+u1+" and "+u2); // @@
      // @@JAMBO Must canonicalize the uris to prevent errors from a=b=c
      // 03-21-2010
      u1 = this.canon(u1);
      u2 = this.canon(u2);
      var d = u1.compareTerm(u2);
      if (!d) {
        return true; // No information in {a = a}
      }
      // var big
      // var small
      if (d < 0) {
        // u1 less than u2
        return this.replaceWith(u2, u1);
      } else {
        return this.replaceWith(u1, u2);
      }
    }
  }, {
    key: 'formula',
    value: function formula(features) {
      return new IndexedFormula(features);
    }

    /**
     * Returns the number of statements contained in this IndexedFormula.
     * (Getter proxy to this.statements).
     * Usage:
     *    ```
     *    var kb = rdf.graph()
     *    kb.length  // -> 0
     *    ```
     * @return {Number}
     */

  }, {
    key: 'match',


    /**
     * Returns any quads matching the given arguments.
     * Standard RDFJS Taskforce method for Source objects, implemented as an
     * alias to `statementsMatching()`
     * @method match
     * @param subject {Node|String|Object}
     * @param predicate {Node|String|Object}
     * @param object {Node|String|Object}
     * @param graph {NamedNode|String}
     */
    value: function match(subject, predicate, object, graph) {
      return this.statementsMatching(Node.fromValue(subject), Node.fromValue(predicate), Node.fromValue(object), Node.fromValue(graph));
    }

    /**
     * Find out whether a given URI is used as symbol in the formula
     */

  }, {
    key: 'mentionsURI',
    value: function mentionsURI(uri) {
      var hash = '<' + uri + '>';
      return !!this.subjectIndex[hash] || !!this.objectIndex[hash] || !!this.predicateIndex[hash];
    }

    // Existentials are BNodes - something exists without naming

  }, {
    key: 'newExistential',
    value: function newExistential(uri) {
      if (!uri) return this.bnode();
      var x = this.sym(uri);
      return this.declareExistential(x);
    }
  }, {
    key: 'newPropertyAction',
    value: function newPropertyAction(pred, action) {
      // log.debug("newPropertyAction:  "+pred)
      var hash = pred.hashString();
      if (!this.propertyActions[hash]) {
        this.propertyActions[hash] = [];
      }
      this.propertyActions[hash].push(action);
      // Now apply the function to to statements already in the store
      var toBeFixed = this.statementsMatching(undefined, pred, undefined);
      var done = false;
      for (var i = 0; i < toBeFixed.length; i++) {
        // NOT optimized - sort toBeFixed etc
        done = done || action(this, toBeFixed[i].subject, pred, toBeFixed[i].object);
      }
      return done;
    }

    // Universals are Variables

  }, {
    key: 'newUniversal',
    value: function newUniversal(uri) {
      var x = this.sym(uri);
      if (!this._universalVariables) this._universalVariables = [];
      this._universalVariables.push(x);
      return x;
    }

    // convenience function used by N3 parser

  }, {
    key: 'variable',
    value: function variable(name) {
      return new Variable(name);
    }

    /**
     * Find an unused id for a file being edited: return a symbol
     * (Note: Slow iff a lot of them -- could be O(log(k)) )
     */

  }, {
    key: 'nextSymbol',
    value: function nextSymbol(doc) {
      for (var i = 0;; i++) {
        var uri = doc.uri + '#n' + i;
        if (!this.mentionsURI(uri)) return this.sym(uri);
      }
    }
  }, {
    key: 'query',
    value: function query(myQuery, callback, fetcher, onDone) {
      var indexedFormulaQuery = require('./query').indexedFormulaQuery;
      return indexedFormulaQuery.call(this, myQuery, callback, fetcher, onDone);
    }

    /**
     * Finds a statement object and removes it
     */

  }, {
    key: 'remove',
    value: function remove(st) {
      if (st instanceof Array) {
        for (var i = 0; i < st.length; i++) {
          this.remove(st[i]);
        }
        return this;
      }
      if (st instanceof IndexedFormula) {
        return this.remove(st.statements);
      }
      var sts = this.statementsMatching(st.subject, st.predicate, st.object, st.why);
      if (!sts.length) {
        throw new Error('Statement to be removed is not on store: ' + st);
      }
      this.removeStatement(sts[0]);
      return this;
    }

    /**
     * Removes all statemnts in a doc
     */

  }, {
    key: 'removeDocument',
    value: function removeDocument(doc) {
      var sts = this.statementsMatching(undefined, undefined, undefined, doc).slice(); // Take a copy as this is the actual index
      for (var i = 0; i < sts.length; i++) {
        this.removeStatement(sts[i]);
      }
      return this;
    }

    /**
     * remove all statements matching args (within limit) *
     */

  }, {
    key: 'removeMany',
    value: function removeMany(subj, pred, obj, why, limit) {
      // log.debug("entering removeMany w/ subj,pred,obj,why,limit = " + subj +", "+ pred+", " + obj+", " + why+", " + limit)
      var sts = this.statementsMatching(subj, pred, obj, why, false);
      // This is a subtle bug that occcured in updateCenter.js too.
      // The fact is, this.statementsMatching returns this.whyIndex instead of a copy of it
      // but for perfromance consideration, it's better to just do that
      // so make a copy here.
      var statements = [];
      for (var i = 0; i < sts.length; i++) {
        statements.push(sts[i]);
      }if (limit) statements = statements.slice(0, limit);
      for (i = 0; i < statements.length; i++) {
        this.remove(statements[i]);
      }
    }
  }, {
    key: 'removeMatches',
    value: function removeMatches(subject, predicate, object, why) {
      this.removeStatements(this.statementsMatching(subject, predicate, object, why));
      return this;
    }

    /**
     * Remove a particular statement object from the store
     *
     * st    a statement which is already in the store and indexed.
     *      Make sure you only use this for these.
     *    Otherwise, you should use remove() above.
     */

  }, {
    key: 'removeStatement',
    value: function removeStatement(st) {
      // log.debug("entering remove w/ st=" + st)
      var term = [st.subject, st.predicate, st.object, st.why];
      for (var p = 0; p < 4; p++) {
        var c = this.canon(term[p]);
        var h = c.hashString();
        if (!this.index[p][h]) {
          // log.warn ("Statement removal: no index '+p+': "+st)
        } else {
          RDFArrayRemove(this.index[p][h], st);
        }
      }
      RDFArrayRemove(this.statements, st);
      return this;
    }
  }, {
    key: 'removeStatements',
    value: function removeStatements(sts) {
      for (var i = 0; i < sts.length; i++) {
        this.remove(sts[i]);
      }
      return this;
    }

    /**
     * Replace big with small, obsoleted with obsoleting.
     */

  }, {
    key: 'replaceWith',
    value: function replaceWith(big, small) {
      // log.debug("Replacing "+big+" with "+small) // @@
      var oldhash = big.hashString();
      var newhash = small.hashString();
      var moveIndex = function moveIndex(ix) {
        var oldlist = ix[oldhash];
        if (!oldlist) {
          return; // none to move
        }
        var newlist = ix[newhash];
        if (!newlist) {
          ix[newhash] = oldlist;
        } else {
          ix[newhash] = oldlist.concat(newlist);
        }
        delete ix[oldhash];
      };
      // the canonical one carries all the indexes
      for (var i = 0; i < 4; i++) {
        moveIndex(this.index[i]);
      }
      this.redirections[oldhash] = small;
      if (big.uri) {
        // @@JAMBO: must update redirections,aliases from sub-items, too.
        if (!this.aliases[newhash]) {
          this.aliases[newhash] = [];
        }
        this.aliases[newhash].push(big); // Back link
        if (this.aliases[oldhash]) {
          for (i = 0; i < this.aliases[oldhash].length; i++) {
            this.redirections[this.aliases[oldhash][i].hashString()] = small;
            this.aliases[newhash].push(this.aliases[oldhash][i]);
          }
        }
        this.add(small, this.sym('http://www.w3.org/2007/ont/link#uri'), big.uri);
        // If two things are equal, and one is requested, we should request the other.
        if (this.fetcher) {
          this.fetcher.nowKnownAs(big, small);
        }
      }
      moveIndex(this.classActions);
      moveIndex(this.propertyActions);
      // log.debug("Equate done. "+big+" to be known as "+small)
      return true; // true means the statement does not need to be put in
    }

    /**
     * Return all equivalent URIs by which this is known
     */

  }, {
    key: 'allAliases',
    value: function allAliases(x) {
      var a = this.aliases[this.canon(x).hashString()] || [];
      a.push(this.canon(x));
      return a;
    }

    /**
     * Compare by canonical URI as smushed
     */

  }, {
    key: 'sameThings',
    value: function sameThings(x, y) {
      if (x.sameTerm(y)) {
        return true;
      }
      var x1 = this.canon(x);
      //    alert('x1='+x1)
      if (!x1) return false;
      var y1 = this.canon(y);
      //    alert('y1='+y1); //@@
      if (!y1) return false;
      return x1.uri === y1.uri;
    }
  }, {
    key: 'setPrefixForURI',
    value: function setPrefixForURI(prefix, nsuri) {
      // TODO: This is a hack for our own issues, which ought to be fixed
      // post-release
      // See http://dig.csail.mit.edu/cgi-bin/roundup.cgi/$rdf/issue227
      if (prefix === 'tab' && this.namespaces['tab']) {
        return;
      } // There are files around with long badly generated prefixes like this
      if (prefix.slice(0, 2) === 'ns' || prefix.slice(0, 7) === 'default') {
        return;
      }
      this.namespaces[prefix] = nsuri;
    }

    /**
     * Return statements matching a pattern
     * ALL CONVENIENCE LOOKUP FUNCTIONS RELY ON THIS!
     */

  }, {
    key: 'statementsMatching',
    value: function statementsMatching(subj, pred, obj, why, justOne) {
      // log.debug("Matching {"+subj+" "+pred+" "+obj+"}")
      var pat = [subj, pred, obj, why];
      var pattern = [];
      var hash = [];
      var wild = []; // wildcards
      var given = []; // Not wild
      var p;
      var list;
      for (p = 0; p < 4; p++) {
        pattern[p] = this.canon(Node.fromValue(pat[p]));
        if (!pattern[p]) {
          wild.push(p);
        } else {
          given.push(p);
          hash[p] = pattern[p].hashString();
        }
      }
      if (given.length === 0) {
        return this.statements;
      }
      if (given.length === 1) {
        // Easy too, we have an index for that
        p = given[0];
        list = this.index[p][hash[p]];
        if (list && justOne) {
          if (list.length > 1) {
            list = list.slice(0, 1);
          }
        }
        list = list || [];
        return list;
      }
      // Now given.length is 2, 3 or 4.
      // We hope that the scale-free nature of the data will mean we tend to get
      // a short index in there somewhere!
      var best = 1e10; // really bad
      var best_i;
      var i;
      for (i = 0; i < given.length; i++) {
        p = given[i]; // Which part we are dealing with
        list = this.index[p][hash[p]];
        if (!list) {
          return []; // No occurrences
        }
        if (list.length < best) {
          best = list.length;
          best_i = i; // (not p!)
        }
      }
      // Ok, we have picked the shortest index but now we have to filter it
      var best_p = given[best_i];
      var possibles = this.index[best_p][hash[best_p]];
      var check = given.slice(0, best_i).concat(given.slice(best_i + 1)); // remove best_i
      var results = [];
      var parts = ['subject', 'predicate', 'object', 'why'];
      for (var j = 0; j < possibles.length; j++) {
        var st = possibles[j];

        for (i = 0; i < check.length; i++) {
          // for each position to be checked
          p = check[i];
          if (!this.canon(st[parts[p]]).sameTerm(pattern[p])) {
            st = null;
            break;
          }
        }
        if (st != null) {
          results.push(st);
          if (justOne) break;
        }
      }
      return results;
    }

    /**
     *  A list of all the URIs by which this thing is known
     */

  }, {
    key: 'uris',
    value: function uris(term) {
      var cterm = this.canon(term);
      var terms = this.aliases[cterm.hashString()];
      if (!cterm.uri) return [];
      var res = [cterm.uri];
      if (terms) {
        for (var i = 0; i < terms.length; i++) {
          res.push(terms[i].uri);
        }
      }
      return res;
    }
  }, {
    key: 'length',
    get: function get() {
      return this.statements.length;
    }
  }]);

  return IndexedFormula;
}(Formula);

exports.default = IndexedFormula;


IndexedFormula.handleRDFType = handleRDFType;
},{"./formula":61,"./node":70,"./query":74,"./statement":80,"./util":84,"./variable":85}],64:[function(require,module,exports){
'use strict';

var jsonParser = function () {
  return {
    parseJSON: function parseJSON(data, source, store) {
      var subject, predicate, object;
      var bnodes = {};
      var why = store.sym(source);
      for (var x in data) {
        if (x.indexOf('_:') === 0) {
          if (bnodes[x]) {
            subject = bnodes[x];
          } else {
            subject = store.bnode(x);
            bnodes[x] = subject;
          }
        } else {
          subject = store.sym(x);
        }
        var preds = data[x];
        for (var y in preds) {
          var objects = preds[y];
          predicate = store.sym(y);
          for (var z in objects) {
            var obj = objects[z];
            if (obj.type === 'uri') {
              object = store.sym(obj.value);
              store.add(subject, predicate, object, why);
            } else if (obj.type === 'BlankNode') {
              if (bnodes[obj.value]) {
                object = bnodes[obj.value];
              } else {
                object = store.bnode(obj.value);
                bnodes[obj.value] = object;
              }
              store.add(subject, predicate, object, why);
            } else if (obj.type === 'Literal') {
              // var datatype
              if (obj.datatype) {
                object = store.literal(obj.value, undefined, store.sym(obj.datatype));
              } else if (obj.lang) {
                object = store.literal(obj.value, obj.lang);
              } else {
                object = store.literal(obj.value);
              }
              store.add(subject, predicate, object, why);
            } else {
              throw new Error('error: unexpected termtype: ' + z.type);
            }
          }
        }
      }
    }
  };
}();

module.exports = jsonParser;
},{}],65:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ClassOrder = require('./class-order');
var NamedNode = require('./named-node');
var Node = require('./node');
var XSD = require('./xsd');

var Literal = function (_Node) {
  _inherits(Literal, _Node);

  function Literal(value, language, datatype) {
    _classCallCheck(this, Literal);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Literal).call(this));

    _this.termType = Literal.termType;
    _this.value = value;
    if (language) {
      _this.lang = language;
      datatype = XSD.langString;
    }
    // If not specified, a literal has the implied XSD.string default datatype
    if (datatype) {
      _this.datatype = NamedNode.fromValue(datatype);
    }
    return _this;
  }

  _createClass(Literal, [{
    key: 'copy',
    value: function copy() {
      return new Literal(this.value, this.lang, this.datatype);
    }
  }, {
    key: 'equals',
    value: function equals(other) {
      if (!other) {
        return false;
      }
      return this.termType === other.termType && this.value === other.value && this.language === other.language && (!this.datatype && !other.datatype || this.datatype && this.datatype.equals(other.datatype));
    }
  }, {
    key: 'toNT',
    value: function toNT() {
      if (typeof this.value === 'number') {
        return this.toString();
      } else if (typeof this.value !== 'string') {
        throw new Error('Value of RDF literal is not string or number: ' + this.value);
      }
      var str = this.value;
      str = str.replace(/\\/g, '\\\\');
      str = str.replace(/\"/g, '\\"');
      str = str.replace(/\n/g, '\\n');
      str = '"' + str + '"';

      if (this.language) {
        str += '@' + this.language;
      } else if (!this.datatype.equals(XSD.string)) {
        // Only add datatype if it's not a string
        str += '^^' + this.datatype.toCanonical();
      }
      return str;
    }
  }, {
    key: 'toString',
    value: function toString() {
      return '' + this.value;
    }
    /**
     * @method fromBoolean
     * @static
     * @param value {Boolean}
     * @return {Literal}
     */

  }, {
    key: 'language',
    get: function get() {
      return this.lang;
    },
    set: function set(language) {
      this.lang = language || '';
    }
  }], [{
    key: 'fromBoolean',
    value: function fromBoolean(value) {
      var strValue = value ? '1' : '0';
      return new Literal(strValue, null, XSD.boolean);
    }
    /**
     * @method fromDate
     * @static
     * @param value {Date}
     * @return {Literal}
     */

  }, {
    key: 'fromDate',
    value: function fromDate(value) {
      if (!(value instanceof Date)) {
        throw new TypeError('Invalid argument to Literal.fromDate()');
      }
      var d2 = function d2(x) {
        return ('' + (100 + x)).slice(1, 3);
      };
      var date = '' + value.getUTCFullYear() + '-' + d2(value.getUTCMonth() + 1) + '-' + d2(value.getUTCDate()) + 'T' + d2(value.getUTCHours()) + ':' + d2(value.getUTCMinutes()) + ':' + d2(value.getUTCSeconds()) + 'Z';
      return new Literal(date, null, XSD.dateTime);
    }
    /**
     * @method fromNumber
     * @static
     * @param value {Number}
     * @return {Literal}
     */

  }, {
    key: 'fromNumber',
    value: function fromNumber(value) {
      if (typeof value !== 'number') {
        throw new TypeError('Invalid argument to Literal.fromNumber()');
      }
      var datatype = void 0;
      var strValue = value.toString();
      if (strValue.indexOf('e') < 0 && Math.abs(value) <= Number.MAX_SAFE_INTEGER) {
        datatype = Number.isInteger(value) ? XSD.integer : XSD.decimal;
      } else {
        datatype = XSD.double;
      }
      return new Literal(strValue, null, datatype);
    }
    /**
     * @method fromValue
     * @param value
     * @return {Literal}
     */

  }, {
    key: 'fromValue',
    value: function fromValue(value) {
      if (typeof value === 'undefined' || value === null) {
        return value;
      }
      if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.termType) {
        // this is a Node instance
        return value;
      }
      switch (typeof value === 'undefined' ? 'undefined' : _typeof(value)) {
        case 'object':
          if (value instanceof Date) {
            return Literal.fromDate(value);
          }
        case 'boolean':
          return Literal.fromBoolean(value);
        case 'number':
          return Literal.fromNumber(value);
        case 'string':
          return new Literal(value);
      }
      throw new Error("Can't make literal from " + value + ' of type ' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)));
    }
  }]);

  return Literal;
}(Node);

Literal.termType = 'Literal';
Literal.prototype.classOrder = ClassOrder['Literal'];
Literal.prototype.datatype = XSD.string;
Literal.prototype.lang = '';
Literal.prototype.isVar = 0;

module.exports = Literal;
},{"./class-order":54,"./named-node":68,"./node":70,"./xsd":86}],66:[function(require,module,exports){
"use strict";

/**
 * A Dummy log
 * @module log
 */
module.exports = {
  debug: function debug(x) {
    return;
  },
  warn: function warn(x) {
    return;
  },
  info: function info(x) {
    return;
  },
  error: function error(x) {
    return;
  },
  success: function success(x) {
    return;
  },
  msg: function msg(x) {
    return;
  }
};
},{}],67:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

/**
*
*  UTF-8 data encode / decode
*  http://www.webtoolkit.info/
*
**/
var Uri = require('./uri');
var ArrayIndexOf = require('./util').ArrayIndexOf;

var N3Parser = function () {

    function hexify(str) {
        // also used in parser
        return encodeURI(str);
    }

    var Utf8 = {
        // public method for url encoding
        encode: function encode(string) {
            string = string.replace(/\r\n/g, "\n");
            var utftext = "";

            for (var n = 0; n < string.length; n++) {

                var c = string.charCodeAt(n);

                if (c < 128) {
                    utftext += String.fromCharCode(c);
                } else if (c > 127 && c < 2048) {
                    utftext += String.fromCharCode(c >> 6 | 192);
                    utftext += String.fromCharCode(c & 63 | 128);
                } else {
                    utftext += String.fromCharCode(c >> 12 | 224);
                    utftext += String.fromCharCode(c >> 6 & 63 | 128);
                    utftext += String.fromCharCode(c & 63 | 128);
                }
            }

            return utftext;
        },
        // public method for url decoding
        decode: function decode(utftext) {
            var string = "";
            var i = 0;

            while (i < utftext.length) {

                var c = utftext.charCodeAt(i);
                if (c < 128) {
                    string += String.fromCharCode(c);
                    i++;
                } else if (c > 191 && c < 224) {
                    string += String.fromCharCode((c & 31) << 6 | utftext.charCodeAt(i + 1) & 63);
                    i += 2;
                } else {
                    string += String.fromCharCode((c & 15) << 12 | (utftext.charCodeAt(i + 1) & 63) << 6 | utftext.charCodeAt(i + 2) & 63);
                    i += 3;
                }
            }
            return string;
        }
    }; // Things we need to define to make converted pythn code work in js
    // environment of $rdf

    var RDFSink_forSomeSym = "http://www.w3.org/2000/10/swap/log#forSome";
    var RDFSink_forAllSym = "http://www.w3.org/2000/10/swap/log#forAll";
    var Logic_NS = "http://www.w3.org/2000/10/swap/log#";

    //  pyjs seems to reference runtime library which I didn't find

    var pyjslib_Tuple = function pyjslib_Tuple(theList) {
        return theList;
    };

    var pyjslib_List = function pyjslib_List(theList) {
        return theList;
    };

    var pyjslib_Dict = function pyjslib_Dict(listOfPairs) {
        if (listOfPairs.length > 0) throw "missing.js: oops nnonempty dict not imp";
        return [];
    };

    var pyjslib_len = function pyjslib_len(s) {
        return s.length;
    };

    var pyjslib_slice = function pyjslib_slice(str, i, j) {
        if (typeof str.slice == 'undefined') throw '@@ mising.js: No .slice function for ' + str + ' of type ' + (typeof str === 'undefined' ? 'undefined' : _typeof(str));
        if (typeof j == 'undefined' || j == null) return str.slice(i);
        return str.slice(i, j); // @ exactly the same spec?
    };
    var StopIteration = Error('dummy error stop iteration');

    var pyjslib_Iterator = function pyjslib_Iterator(theList) {
        this.last = 0;
        this.li = theList;
        this.next = function () {
            if (this.last == this.li.length) throw StopIteration;
            return this.li[this.last++];
        };
        return this;
    };

    var ord = function ord(str) {
        return str.charCodeAt(0);
    };

    var string_find = function string_find(str, s) {
        return str.indexOf(s);
    };

    var assertFudge = function assertFudge(condition, desc) {
        if (condition) return;
        if (desc) throw "python Assertion failed: " + desc;
        throw "(python) Assertion failed.";
    };

    var stringFromCharCode = function stringFromCharCode(uesc) {
        return String.fromCharCode(uesc);
    };

    String.prototype.encode = function (encoding) {
        if (encoding != 'utf-8') throw "UTF8_converter: can only do utf-8";
        return Utf8.encode(this);
    };
    String.prototype.decode = function (encoding) {
        if (encoding != 'utf-8') throw "UTF8_converter: can only do utf-8";
        //return Utf8.decode(this);
        return this;
    };

    var uripath_join = function uripath_join(base, given) {
        return Uri.join(given, base); // sad but true
    };

    var becauseSubexpression = null; // No reason needed
    var diag_tracking = 0;
    var diag_chatty_flag = 0;
    var diag_progress = function diag_progress(str) {} /*$rdf.log.debug(str);*/

    // why_BecauseOfData = function(doc, reason) { return doc };


    ;var RDF_type_URI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#type";
    var DAML_sameAs_URI = "http://www.w3.org/2002/07/owl#sameAs";

    /*
    function SyntaxError(details) {
        return new __SyntaxError(details);
    }
    */

    function __SyntaxError(details) {
        this.details = details;
    }

    /*
    
    $Id: n3parser.js 14561 2008-02-23 06:37:26Z kennyluck $
    
    HAND EDITED FOR CONVERSION TO JAVASCRIPT
    
    This module implements a Nptation3 parser, and the final
    part of a notation3 serializer.
    
    See also:
    
    Notation 3
    http://www.w3.org/DesignIssues/Notation3
    
    Closed World Machine - and RDF Processor
    http://www.w3.org/2000/10/swap/cwm
    
    To DO: See also "@@" in comments
    
    - Clean up interfaces
    ______________________________________________
    
    Module originally by Dan Connolly, includeing notation3
    parser and RDF generator. TimBL added RDF stream model
    and N3 generation, replaced stream model with use
    of common store/formula API.  Yosi Scharf developped
    the module, including tests and test harness.
    
    */

    var ADDED_HASH = "#";
    var LOG_implies_URI = "http://www.w3.org/2000/10/swap/log#implies";
    var INTEGER_DATATYPE = "http://www.w3.org/2001/XMLSchema#integer";
    var FLOAT_DATATYPE = "http://www.w3.org/2001/XMLSchema#double";
    var DECIMAL_DATATYPE = "http://www.w3.org/2001/XMLSchema#decimal";
    var DATE_DATATYPE = "http://www.w3.org/2001/XMLSchema#date";
    var DATETIME_DATATYPE = "http://www.w3.org/2001/XMLSchema#dateTime";
    var BOOLEAN_DATATYPE = "http://www.w3.org/2001/XMLSchema#boolean";
    var option_noregen = 0;
    var _notQNameChars = "\t\r\n !\"#$%&'()*.,+/;<=>?@[\\]^`{|}~";
    var _notNameChars = _notQNameChars + ":";
    var _rdfns = "http://www.w3.org/1999/02/22-rdf-syntax-ns#";
    var N3CommentCharacter = "#";
    var eol = new RegExp("^[ \\t]*(#[^\\n]*)?\\r?\\n", 'g');
    var eof = new RegExp("^[ \\t]*(#[^\\n]*)?$", 'g');
    var ws = new RegExp("^[ \\t]*", 'g');
    var signed_integer = new RegExp("^[-+]?[0-9]+", 'g');
    var number_syntax = new RegExp("^([-+]?[0-9]+)(\\.[0-9]+)?(e[-+]?[0-9]+)?", 'g');
    var datetime_syntax = new RegExp('^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9](T[0-9][0-9]:[0-9][0-9](:[0-9][0-9](\\.[0-9]*)?)?)?Z?');

    var digitstring = new RegExp("^[0-9]+", 'g');
    var interesting = new RegExp("[\\\\\\r\\n\\\"]", 'g');
    var langcode = new RegExp("^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*", 'g');
    function SinkParser(store, openFormula, thisDoc, baseURI, genPrefix, metaURI, flags, why) {
        return new __SinkParser(store, openFormula, thisDoc, baseURI, genPrefix, metaURI, flags, why);
    }
    function __SinkParser(store, openFormula, thisDoc, baseURI, genPrefix, metaURI, flags, why) {
        if (typeof openFormula == 'undefined') openFormula = null;
        if (typeof thisDoc == 'undefined') thisDoc = "";
        if (typeof baseURI == 'undefined') baseURI = null;
        if (typeof genPrefix == 'undefined') genPrefix = "";
        if (typeof metaURI == 'undefined') metaURI = null;
        if (typeof flags == 'undefined') flags = "";
        if (typeof why == 'undefined') why = null;
        /*
        note: namespace names should *not* end in #;
        the # will get added during qname processing */

        this._bindings = new pyjslib_Dict([]);
        this._flags = flags;
        if (thisDoc != "") {
            assertFudge(thisDoc.indexOf(":") >= 0, "Document URI not absolute: " + thisDoc);
            this._bindings[""] = thisDoc + "#";
        }
        this._store = store;
        if (genPrefix) {
            store.setGenPrefix(genPrefix);
        }
        this._thisDoc = thisDoc;
        this.source = store.sym(thisDoc);
        this.lines = 0;
        this.statementCount = 0;
        this.startOfLine = 0;
        this.previousLine = 0;
        this._genPrefix = genPrefix;
        this.keywords = new pyjslib_List(["a", "this", "bind", "has", "is", "of", "true", "false"]);
        this.keywordsSet = 0;
        this._anonymousNodes = new pyjslib_Dict([]);
        this._variables = new pyjslib_Dict([]);
        this._parentVariables = new pyjslib_Dict([]);
        this._reason = why;
        this._reason2 = null;
        if (diag_tracking) {
            this._reason2 = why_BecauseOfData(store.sym(thisDoc), this._reason);
        }
        if (baseURI) {
            this._baseURI = baseURI;
        } else {
            if (thisDoc) {
                this._baseURI = thisDoc;
            } else {
                this._baseURI = null;
            }
        }
        assertFudge(!this._baseURI || this._baseURI.indexOf(":") >= 0);
        if (!this._genPrefix) {
            if (this._thisDoc) {
                this._genPrefix = this._thisDoc + "#_g";
            } else {
                this._genPrefix = RDFSink_uniqueURI();
            }
        }
        if (openFormula == null) {
            if (this._thisDoc) {
                this._formula = store.formula(thisDoc + "#_formula");
            } else {
                this._formula = store.formula();
            }
        } else {
            this._formula = openFormula;
        }
        this._context = this._formula;
        this._parentContext = null;
    }
    __SinkParser.prototype.here = function (i) {
        return this._genPrefix + "_L" + this.lines + "C" + (i - this.startOfLine + 1);
    };
    __SinkParser.prototype.formula = function () {
        return this._formula;
    };
    __SinkParser.prototype.loadStream = function (stream) {
        return this.loadBuf(stream.read());
    };
    __SinkParser.prototype.loadBuf = function (buf) {
        /*
        Parses a buffer and returns its top level formula*/

        this.startDoc();
        this.feed(buf);
        return this.endDoc();
    };
    __SinkParser.prototype.feed = function (octets) {
        /*
        Feed an octet stream tothe parser
         if BadSyntax is raised, the string
        passed in the exception object is the
        remainder after any statements have been parsed.
        So if there is more data to feed to the
        parser, it should be straightforward to recover.*/

        var str = octets.decode("utf-8");
        var i = 0;
        while (i >= 0) {
            var j = this.skipSpace(str, i);
            if (j < 0) {
                return;
            }
            var i = this.directiveOrStatement(str, j);
            if (i < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, j, "expected directive or statement");
            }
        }
    };
    __SinkParser.prototype.directiveOrStatement = function (str, h) {
        var i = this.skipSpace(str, h);
        if (i < 0) {
            return i;
        }
        var j = this.directive(str, i);
        if (j >= 0) {
            return this.checkDot(str, j);
        }
        var j = this.statement(str, i);
        if (j >= 0) {
            return this.checkDot(str, j);
        }
        return j;
    };
    __SinkParser.prototype.tok = function (tok, str, i) {
        /*
        Check for keyword.  Space must have been stripped on entry and
        we must not be at end of file.*/
        var whitespace = "\t\n\v\f\r ";
        if (pyjslib_slice(str, i, i + 1) == "@") {
            var i = i + 1;
        } else {
            if (ArrayIndexOf(this.keywords, tok) < 0) {
                return -1;
            }
        }
        var k = i + pyjslib_len(tok);
        if (pyjslib_slice(str, i, k) == tok && _notQNameChars.indexOf(str.charAt(k)) >= 0) {
            return k;
        } else {
            return -1;
        }
    };
    __SinkParser.prototype.directive = function (str, i) {
        var j = this.skipSpace(str, i);
        if (j < 0) {
            return j;
        }
        var res = new pyjslib_List([]);
        var j = this.tok("bind", str, i);
        if (j > 0) {
            throw BadSyntax(this._thisDoc, this.lines, str, i, "keyword bind is obsolete: use @prefix");
        }
        var j = this.tok("keywords", str, i);
        if (j > 0) {
            var i = this.commaSeparatedList(str, j, res, false);
            if (i < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, i, "'@keywords' needs comma separated list of words");
            }
            this.setKeywords(pyjslib_slice(res, null, null));
            if (diag_chatty_flag > 80) {
                diag_progress("Keywords ", this.keywords);
            }
            return i;
        }
        var j = this.tok("forAll", str, i);
        if (j > 0) {
            var i = this.commaSeparatedList(str, j, res, true);
            if (i < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, i, "Bad variable list after @forAll");
            }

            var __x = new pyjslib_Iterator(res);
            try {
                while (true) {
                    var x = __x.next();

                    if (ArrayIndexOf(this._variables, x) < 0 || ArrayIndexOf(this._parentVariables, x) >= 0) {
                        this._variables[x] = this._context.newUniversal(x);
                    }
                }
            } catch (e) {
                if (e != StopIteration) {
                    throw e;
                }
            }

            return i;
        }
        var j = this.tok("forSome", str, i);
        if (j > 0) {
            var i = this.commaSeparatedList(str, j, res, this.uri_ref2);
            if (i < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, i, "Bad variable list after @forSome");
            }

            var __x = new pyjslib_Iterator(res);
            try {
                while (true) {
                    var x = __x.next();

                    this._context.declareExistential(x);
                }
            } catch (e) {
                if (e != StopIteration) {
                    throw e;
                }
            }

            return i;
        }
        var j = this.tok("prefix", str, i);
        if (j >= 0) {
            var t = new pyjslib_List([]);
            var i = this.qname(str, j, t);
            if (i < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, j, "expected qname after @prefix");
            }
            var j = this.uri_ref2(str, i, t);
            if (j < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, i, "expected <uriref> after @prefix _qname_");
            }
            var ns = t[1].uri;
            if (this._baseURI) {
                var ns = uripath_join(this._baseURI, ns);
            } else {
                assertFudge(ns.indexOf(":") >= 0, "With no base URI, cannot handle relative URI for NS");
            }
            assertFudge(ns.indexOf(":") >= 0);
            this._bindings[t[0][0]] = ns;

            this.bind(t[0][0], hexify(ns));
            return j;
        }
        var j = this.tok("base", str, i);
        if (j >= 0) {
            var t = new pyjslib_List([]);
            var i = this.uri_ref2(str, j, t);
            if (i < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, j, "expected <uri> after @base ");
            }
            var ns = t[0].uri;
            if (this._baseURI) {
                var ns = uripath_join(this._baseURI, ns);
            } else {
                throw BadSyntax(this._thisDoc, this.lines, str, j, "With no previous base URI, cannot use relative URI in @base  <" + ns + ">");
            }
            assertFudge(ns.indexOf(":") >= 0);
            this._baseURI = ns;
            return i;
        }
        return -1;
    };
    __SinkParser.prototype.bind = function (qn, uri) {
        if (qn == "") {} else {
            this._store.setPrefixForURI(qn, uri);
        }
    };
    __SinkParser.prototype.setKeywords = function (k) {
        /*
        Takes a list of strings*/

        if (k == null) {
            this.keywordsSet = 0;
        } else {
            this.keywords = k;
            this.keywordsSet = 1;
        }
    };
    __SinkParser.prototype.startDoc = function () {};
    __SinkParser.prototype.endDoc = function () {
        /*
        Signal end of document and stop parsing. returns formula*/

        return this._formula;
    };
    __SinkParser.prototype.makeStatement = function (quad) {
        quad[0].add(quad[2], quad[1], quad[3], this.source);
        this.statementCount += 1;
    };
    __SinkParser.prototype.statement = function (str, i) {
        var r = new pyjslib_List([]);
        var i = this.object(str, i, r);
        if (i < 0) {
            return i;
        }
        var j = this.property_list(str, i, r[0]);
        if (j < 0) {
            throw BadSyntax(this._thisDoc, this.lines, str, i, "expected propertylist");
        }
        return j;
    };
    __SinkParser.prototype.subject = function (str, i, res) {
        return this.item(str, i, res);
    };
    __SinkParser.prototype.verb = function (str, i, res) {
        /*
        has _prop_
        is _prop_ of
        a
        =
        _prop_
        >- prop ->
        <- prop -<
        _operator_*/

        var j = this.skipSpace(str, i);
        if (j < 0) {
            return j;
        }
        var r = new pyjslib_List([]);
        var j = this.tok("has", str, i);
        if (j >= 0) {
            var i = this.prop(str, j, r);
            if (i < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, j, "expected property after 'has'");
            }
            res.push(new pyjslib_Tuple(["->", r[0]]));
            return i;
        }
        var j = this.tok("is", str, i);
        if (j >= 0) {
            var i = this.prop(str, j, r);
            if (i < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, j, "expected <property> after 'is'");
            }
            var j = this.skipSpace(str, i);
            if (j < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, i, "End of file found, expected property after 'is'");
                return j;
            }
            var i = j;
            var j = this.tok("of", str, i);
            if (j < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, i, "expected 'of' after 'is' <prop>");
            }
            res.push(new pyjslib_Tuple(["<-", r[0]]));
            return j;
        }
        var j = this.tok("a", str, i);
        if (j >= 0) {
            res.push(new pyjslib_Tuple(["->", this._store.sym(RDF_type_URI)]));
            return j;
        }
        if (pyjslib_slice(str, i, i + 2) == "<=") {
            res.push(new pyjslib_Tuple(["<-", this._store.sym(Logic_NS + "implies")]));
            return i + 2;
        }
        if (pyjslib_slice(str, i, i + 1) == "=") {
            if (pyjslib_slice(str, i + 1, i + 2) == ">") {
                res.push(new pyjslib_Tuple(["->", this._store.sym(Logic_NS + "implies")]));
                return i + 2;
            }
            res.push(new pyjslib_Tuple(["->", this._store.sym(DAML_sameAs_URI)]));
            return i + 1;
        }
        if (pyjslib_slice(str, i, i + 2) == ":=") {
            res.push(new pyjslib_Tuple(["->", Logic_NS + "becomes"]));
            return i + 2;
        }
        var j = this.prop(str, i, r);
        if (j >= 0) {
            res.push(new pyjslib_Tuple(["->", r[0]]));
            return j;
        }
        if (pyjslib_slice(str, i, i + 2) == ">-" || pyjslib_slice(str, i, i + 2) == "<-") {
            throw BadSyntax(this._thisDoc, this.lines, str, j, ">- ... -> syntax is obsolete.");
        }
        return -1;
    };
    __SinkParser.prototype.prop = function (str, i, res) {
        return this.item(str, i, res);
    };
    __SinkParser.prototype.item = function (str, i, res) {
        return this.path(str, i, res);
    };
    __SinkParser.prototype.blankNode = function (uri) {
        return this._context.bnode(uri, this._reason2);
    };
    __SinkParser.prototype.path = function (str, i, res) {
        /*
        Parse the path production.
        */

        var j = this.nodeOrLiteral(str, i, res);
        if (j < 0) {
            return j;
        }
        while ("!^.".indexOf(pyjslib_slice(str, j, j + 1)) >= 0) {
            var ch = pyjslib_slice(str, j, j + 1);
            if (ch == ".") {
                var ahead = pyjslib_slice(str, j + 1, j + 2);
                if (!ahead || _notNameChars.indexOf(ahead) >= 0 && ":?<[{(".indexOf(ahead) < 0) {
                    break;
                }
            }
            var subj = res.pop();
            var obj = this.blankNode(this.here(j));
            var j = this.node(str, j + 1, res);
            if (j < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, j, "EOF found in middle of path syntax");
            }
            var pred = res.pop();
            if (ch == "^") {
                this.makeStatement(new pyjslib_Tuple([this._context, pred, obj, subj]));
            } else {
                this.makeStatement(new pyjslib_Tuple([this._context, pred, subj, obj]));
            }
            res.push(obj);
        }
        return j;
    };
    __SinkParser.prototype.anonymousNode = function (ln) {
        /*
        Remember or generate a term for one of these _: anonymous nodes*/

        var term = this._anonymousNodes[ln];
        if (term) {
            return term;
        }
        var term = this._store.bnode(this._context, this._reason2);
        this._anonymousNodes[ln] = term;
        return term;
    };
    __SinkParser.prototype.node = function (str, i, res, subjectAlready) {
        if (typeof subjectAlready == 'undefined') subjectAlready = null;
        /*
        Parse the <node> production.
        Space is now skipped once at the beginning
        instead of in multipe calls to self.skipSpace().
        */

        var subj = subjectAlready;
        var j = this.skipSpace(str, i);
        if (j < 0) {
            return j;
        }
        var i = j;
        var ch = pyjslib_slice(str, i, i + 1);
        if (ch == "[") {
            var bnodeID = this.here(i);
            var j = this.skipSpace(str, i + 1);
            if (j < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, i, "EOF after '['");
            }
            if (pyjslib_slice(str, j, j + 1) == "=") {
                var i = j + 1;
                var objs = new pyjslib_List([]);
                var j = this.objectList(str, i, objs);

                if (j >= 0) {
                    var subj = objs[0];
                    if (pyjslib_len(objs) > 1) {

                        var __obj = new pyjslib_Iterator(objs);
                        try {
                            while (true) {
                                var obj = __obj.next();

                                this.makeStatement(new pyjslib_Tuple([this._context, this._store.sym(DAML_sameAs_URI), subj, obj]));
                            }
                        } catch (e) {
                            if (e != StopIteration) {
                                throw e;
                            }
                        }
                    }
                    var j = this.skipSpace(str, j);
                    if (j < 0) {
                        throw BadSyntax(this._thisDoc, this.lines, str, i, "EOF when objectList expected after [ = ");
                    }
                    if (pyjslib_slice(str, j, j + 1) == ";") {
                        var j = j + 1;
                    }
                } else {
                    throw BadSyntax(this._thisDoc, this.lines, str, i, "objectList expected after [= ");
                }
            }
            if (subj == null) {
                var subj = this.blankNode(bnodeID);
            }
            var i = this.property_list(str, j, subj);
            if (i < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, j, "property_list expected");
            }
            var j = this.skipSpace(str, i);
            if (j < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, i, "EOF when ']' expected after [ <propertyList>");
            }
            if (pyjslib_slice(str, j, j + 1) != "]") {
                throw BadSyntax(this._thisDoc, this.lines, str, j, "']' expected");
            }
            res.push(subj);
            return j + 1;
        }
        if (ch == "{") {
            var ch2 = pyjslib_slice(str, i + 1, i + 2);
            if (ch2 == "$") {
                i += 1;
                var j = i + 1;
                var mylist = new pyjslib_List([]);
                var first_run = true;
                while (1) {
                    var i = this.skipSpace(str, j);
                    if (i < 0) {
                        throw BadSyntax(this._thisDoc, this.lines, str, i, "needed '$}', found end.");
                    }
                    if (pyjslib_slice(str, i, i + 2) == "$}") {
                        var j = i + 2;
                        break;
                    }
                    if (!first_run) {
                        if (pyjslib_slice(str, i, i + 1) == ",") {
                            i += 1;
                        } else {
                            throw BadSyntax(this._thisDoc, this.lines, str, i, "expected: ','");
                        }
                    } else {
                        var first_run = false;
                    }
                    var item = new pyjslib_List([]);
                    var j = this.item(str, i, item);
                    if (j < 0) {
                        throw BadSyntax(this._thisDoc, this.lines, str, i, "expected item in set or '$}'");
                    }
                    mylist.push(item[0]);
                }
                res.push(this._store.newSet(mylist, this._context));
                return j;
            } else {
                var j = i + 1;
                var oldParentContext = this._parentContext;
                this._parentContext = this._context;
                var parentAnonymousNodes = this._anonymousNodes;
                var grandParentVariables = this._parentVariables;
                this._parentVariables = this._variables;
                this._anonymousNodes = new pyjslib_Dict([]);
                this._variables = this._variables.slice();
                var reason2 = this._reason2;
                this._reason2 = becauseSubexpression;
                if (subj == null) {
                    var subj = this._store.formula();
                }
                this._context = subj;
                while (1) {
                    var i = this.skipSpace(str, j);
                    if (i < 0) {
                        throw BadSyntax(this._thisDoc, this.lines, str, i, "needed '}', found end.");
                    }
                    if (pyjslib_slice(str, i, i + 1) == "}") {
                        var j = i + 1;
                        break;
                    }
                    var j = this.directiveOrStatement(str, i);
                    if (j < 0) {
                        throw BadSyntax(this._thisDoc, this.lines, str, i, "expected statement or '}'");
                    }
                }
                this._anonymousNodes = parentAnonymousNodes;
                this._variables = this._parentVariables;
                this._parentVariables = grandParentVariables;
                this._context = this._parentContext;
                this._reason2 = reason2;
                this._parentContext = oldParentContext;
                res.push(subj.close());
                return j;
            }
        }
        if (ch == "(") {
            var thing_type = this._store.list;
            var ch2 = pyjslib_slice(str, i + 1, i + 2);
            if (ch2 == "$") {
                var thing_type = this._store.newSet;
                i += 1;
            }
            var j = i + 1;
            var mylist = new pyjslib_List([]);
            while (1) {
                var i = this.skipSpace(str, j);
                if (i < 0) {
                    throw BadSyntax(this._thisDoc, this.lines, str, i, "needed ')', found end.");
                }
                if (pyjslib_slice(str, i, i + 1) == ")") {
                    var j = i + 1;
                    break;
                }
                var item = new pyjslib_List([]);
                var j = this.item(str, i, item);
                if (j < 0) {
                    throw BadSyntax(this._thisDoc, this.lines, str, i, "expected item in list or ')'");
                }
                mylist.push(item[0]);
            }
            res.push(thing_type(mylist, this._context));
            return j;
        }
        var j = this.tok("this", str, i);
        if (j >= 0) {
            throw BadSyntax(this._thisDoc, this.lines, str, i, "Keyword 'this' was ancient N3. Now use @forSome and @forAll keywords.");
            res.push(this._context);
            return j;
        }
        var j = this.tok("true", str, i);
        if (j >= 0) {
            res.push(true);
            return j;
        }
        var j = this.tok("false", str, i);
        if (j >= 0) {
            res.push(false);
            return j;
        }
        if (subj == null) {
            var j = this.uri_ref2(str, i, res);
            if (j >= 0) {
                return j;
            }
        }
        return -1;
    };
    __SinkParser.prototype.property_list = function (str, i, subj) {
        /*
        Parse property list
        Leaves the terminating punctuation in the buffer
        */

        while (1) {
            var j = this.skipSpace(str, i);
            if (j < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, i, "EOF found when expected verb in property list");
                return j;
            }
            if (pyjslib_slice(str, j, j + 2) == ":-") {
                var i = j + 2;
                var res = new pyjslib_List([]);
                var j = this.node(str, i, res, subj);
                if (j < 0) {
                    throw BadSyntax(this._thisDoc, this.lines, str, i, "bad {} or () or [] node after :- ");
                }
                var i = j;
                continue;
            }
            var i = j;
            var v = new pyjslib_List([]);
            var j = this.verb(str, i, v);
            if (j <= 0) {
                return i;
            }
            var objs = new pyjslib_List([]);
            var i = this.objectList(str, j, objs);
            if (i < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, j, "objectList expected");
            }

            var __obj = new pyjslib_Iterator(objs);
            try {
                while (true) {
                    var obj = __obj.next();

                    var pairFudge = v[0];
                    var dir = pairFudge[0];
                    var sym = pairFudge[1];
                    if (dir == "->") {
                        this.makeStatement(new pyjslib_Tuple([this._context, sym, subj, obj]));
                    } else {
                        this.makeStatement(new pyjslib_Tuple([this._context, sym, obj, subj]));
                    }
                }
            } catch (e) {
                if (e != StopIteration) {
                    throw e;
                }
            }

            var j = this.skipSpace(str, i);
            if (j < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, j, "EOF found in list of objects");
                return j;
            }
            if (pyjslib_slice(str, i, i + 1) != ";") {
                return i;
            }
            var i = i + 1;
        }
    };
    __SinkParser.prototype.commaSeparatedList = function (str, j, res, ofUris) {
        /*
        return value: -1 bad syntax; >1 new position in str
        res has things found appended
         Used to use a final value of the function to be called, e.g. this.bareWord
        but passing the function didn't work fo js converion pyjs
        */

        var i = this.skipSpace(str, j);
        if (i < 0) {
            throw BadSyntax(this._thisDoc, this.lines, str, i, "EOF found expecting comma sep list");
            return i;
        }
        if (str.charAt(i) == ".") {
            return j;
        }
        if (ofUris) {
            var i = this.uri_ref2(str, i, res);
        } else {
            var i = this.bareWord(str, i, res);
        }
        if (i < 0) {
            return -1;
        }
        while (1) {
            var j = this.skipSpace(str, i);
            if (j < 0) {
                return j;
            }
            var ch = pyjslib_slice(str, j, j + 1);
            if (ch != ",") {
                if (ch != ".") {
                    return -1;
                }
                return j;
            }
            if (ofUris) {
                var i = this.uri_ref2(str, j + 1, res);
            } else {
                var i = this.bareWord(str, j + 1, res);
            }
            if (i < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, i, "bad list content");
                return i;
            }
        }
    };
    __SinkParser.prototype.objectList = function (str, i, res) {
        var i = this.object(str, i, res);
        if (i < 0) {
            return -1;
        }
        while (1) {
            var j = this.skipSpace(str, i);
            if (j < 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, j, "EOF found after object");
                return j;
            }
            if (pyjslib_slice(str, j, j + 1) != ",") {
                return j;
            }
            var i = this.object(str, j + 1, res);
            if (i < 0) {
                return i;
            }
        }
    };
    __SinkParser.prototype.checkDot = function (str, i) {
        var j = this.skipSpace(str, i);
        if (j < 0) {
            return j;
        }
        if (pyjslib_slice(str, j, j + 1) == ".") {
            return j + 1;
        }
        if (pyjslib_slice(str, j, j + 1) == "}") {
            return j;
        }
        if (pyjslib_slice(str, j, j + 1) == "]") {
            return j;
        }
        throw BadSyntax(this._thisDoc, this.lines, str, j, "expected '.' or '}' or ']' at end of statement");
        return i;
    };
    __SinkParser.prototype.uri_ref2 = function (str, i, res) {
        /*
        Generate uri from n3 representation.
         Note that the RDF convention of directly concatenating
        NS and local name is now used though I prefer inserting a '#'
        to make the namesapces look more like what XML folks expect.
        */

        var qn = new pyjslib_List([]);
        var j = this.qname(str, i, qn);
        if (j >= 0) {
            var pairFudge = qn[0];
            var pfx = pairFudge[0];
            var ln = pairFudge[1];
            if (pfx == null) {
                assertFudge(0, "not used?");
                var ns = this._baseURI + ADDED_HASH;
            } else {
                var ns = this._bindings[pfx];
                if (!ns) {
                    if (pfx == "_") {
                        res.push(this.anonymousNode(ln));
                        return j;
                    }
                    throw BadSyntax(this._thisDoc, this.lines, str, i, "Prefix " + pfx + " not bound.");
                }
            }
            var symb = this._store.sym(ns + ln);
            if (ArrayIndexOf(this._variables, symb) >= 0) {
                res.push(this._variables[symb]);
            } else {
                res.push(symb);
            }
            return j;
        }
        var i = this.skipSpace(str, i);
        if (i < 0) {
            return -1;
        }
        if (str.charAt(i) == "?") {
            var v = new pyjslib_List([]);
            var j = this.variable(str, i, v);
            if (j > 0) {
                res.push(v[0]);
                return j;
            }
            return -1;
        } else if (str.charAt(i) == "<") {
            var i = i + 1;
            var st = i;
            while (i < pyjslib_len(str)) {
                if (str.charAt(i) == ">") {
                    var uref = pyjslib_slice(str, st, i);
                    if (this._baseURI) {
                        var uref = uripath_join(this._baseURI, uref);
                    } else {
                        assertFudge(uref.indexOf(":") >= 0, "With no base URI, cannot deal with relative URIs");
                    }
                    if (pyjslib_slice(str, i - 1, i) == "#" && !(pyjslib_slice(uref, -1, null) == "#")) {
                        var uref = uref + "#";
                    }
                    var symb = this._store.sym(uref);
                    if (ArrayIndexOf(this._variables, symb) >= 0) {
                        res.push(this._variables[symb]);
                    } else {
                        res.push(symb);
                    }
                    return i + 1;
                }
                var i = i + 1;
            }
            throw BadSyntax(this._thisDoc, this.lines, str, j, "unterminated URI reference");
        } else if (this.keywordsSet) {
            var v = new pyjslib_List([]);
            var j = this.bareWord(str, i, v);
            if (j < 0) {
                return -1;
            }
            if (ArrayIndexOf(this.keywords, v[0]) >= 0) {
                throw BadSyntax(this._thisDoc, this.lines, str, i, "Keyword \"" + v[0] + "\" not allowed here.");
            }
            res.push(this._store.sym(this._bindings[""] + v[0]));
            return j;
        } else {
            return -1;
        }
    };
    __SinkParser.prototype.skipSpace = function (str, i) {
        /*
        Skip white space, newlines and comments.
        return -1 if EOF, else position of first non-ws character*/

        var whitespace = ' \n\r\t\f\u000b            ​\u2028\u2029　';
        for (var j = i ? i : 0; j < str.length; j++) {
            var ch = str.charAt(j);
            // console.log("    skipspace j= "+j + " i= " + i + " n= " + str.length);
            // console.log(" skipspace ch <" + ch + ">");
            if (whitespace.indexOf(ch) < 0) {
                //not ws
                // console.log(" skipspace 2 ch <" + ch + ">");
                if (str.charAt(j) === '#') {
                    for (;; j++) {
                        // console.log("    skipspace2 j= "+j + " i= " + i + " n= " + str.length);
                        if (j === str.length) {
                            return -1; // EOF
                        }
                        if (str.charAt(j) === '\n') {
                            this.lines = this.lines + 1;
                            break;
                        }
                    };
                } else {
                    // Not hash - something interesting
                    // console.log(" skipspace 3 ch <" + ch + ">");
                    return j;
                }
            } else {
                // Whitespace
                // console.log(" skipspace 5 ch <" + ch + ">");
                if (str.charAt(j) === '\n') {
                    this.lines = this.lines + 1;
                }
            }
        } // next j
        return -1; // EOF
    };

    __SinkParser.prototype.variable = function (str, i, res) {
        /*
        ?abc -> variable(:abc)
        */

        var j = this.skipSpace(str, i);
        if (j < 0) {
            return -1;
        }
        if (pyjslib_slice(str, j, j + 1) != "?") {
            return -1;
        }
        var j = j + 1;
        var i = j;
        if ("0123456789-".indexOf(str.charAt(j)) >= 0) {
            throw BadSyntax(this._thisDoc, this.lines, str, j, "Varible name can't start with '" + str.charAt(j) + "s'");
            return -1;
        }
        while (i < pyjslib_len(str) && _notNameChars.indexOf(str.charAt(i)) < 0) {
            var i = i + 1;
        }
        if (this._parentContext == null) {
            throw BadSyntax(this._thisDoc, this.lines, str, j, "Can't use ?xxx syntax for variable in outermost level: " + pyjslib_slice(str, j - 1, i));
        }
        res.push(this._store.variable(pyjslib_slice(str, j, i)));
        return i;
    };
    __SinkParser.prototype.bareWord = function (str, i, res) {
        /*
        abc -> :abc
        */

        var j = this.skipSpace(str, i);
        if (j < 0) {
            return -1;
        }
        var ch = str.charAt(j);
        if ("0123456789-".indexOf(ch) >= 0) {
            return -1;
        }
        if (_notNameChars.indexOf(ch) >= 0) {
            return -1;
        }
        var i = j;
        while (i < pyjslib_len(str) && _notNameChars.indexOf(str.charAt(i)) < 0) {
            var i = i + 1;
        }
        res.push(pyjslib_slice(str, j, i));
        return i;
    };
    __SinkParser.prototype.qname = function (str, i, res) {
        /*
         xyz:def -> ('xyz', 'def')
        If not in keywords and keywordsSet: def -> ('', 'def')
        :def -> ('', 'def')
        */

        var i = this.skipSpace(str, i);
        if (i < 0) {
            return -1;
        }
        var c = str.charAt(i);
        if ("0123456789-+".indexOf(c) >= 0) {
            return -1;
        }
        if (_notNameChars.indexOf(c) < 0) {
            var ln = c;
            var i = i + 1;
            while (i < pyjslib_len(str)) {
                var c = str.charAt(i);
                if (_notNameChars.indexOf(c) < 0) {
                    var ln = ln + c;
                    var i = i + 1;
                } else {
                    break;
                }
            }
        } else {
            var ln = "";
        }
        if (i < pyjslib_len(str) && str.charAt(i) == ":") {
            var pfx = ln;
            var i = i + 1;
            var ln = "";
            while (i < pyjslib_len(str)) {
                var c = str.charAt(i);
                if (_notNameChars.indexOf(c) < 0) {
                    var ln = ln + c;
                    var i = i + 1;
                } else {
                    break;
                }
            }
            res.push(new pyjslib_Tuple([pfx, ln]));
            return i;
        } else {
            if (ln && this.keywordsSet && ArrayIndexOf(this.keywords, ln) < 0) {
                res.push(new pyjslib_Tuple(["", ln]));
                return i;
            }
            return -1;
        }
    };
    __SinkParser.prototype.object = function (str, i, res) {
        var j = this.subject(str, i, res);
        if (j >= 0) {
            return j;
        } else {
            var j = this.skipSpace(str, i);
            if (j < 0) {
                return -1;
            } else {
                var i = j;
            }
            if (str.charAt(i) == "\"") {
                if (pyjslib_slice(str, i, i + 3) == "\"\"\"") {
                    var delim = "\"\"\"";
                } else {
                    var delim = "\"";
                }
                var i = i + pyjslib_len(delim);
                var pairFudge = this.strconst(str, i, delim);
                var j = pairFudge[0];
                var s = pairFudge[1];
                res.push(this._store.literal(s));
                diag_progress("New string const ", s, j);
                return j;
            } else {
                return -1;
            }
        }
    };
    __SinkParser.prototype.nodeOrLiteral = function (str, i, res) {
        var j = this.node(str, i, res);
        if (j >= 0) {
            return j;
        } else {
            var j = this.skipSpace(str, i);
            if (j < 0) {
                return -1;
            } else {
                var i = j;
            }
            var ch = str.charAt(i);
            if ("-+0987654321".indexOf(ch) >= 0) {

                datetime_syntax.lastIndex = 0;
                var m = datetime_syntax.exec(str.slice(i));
                if (m != null) {
                    // j =  ( i + datetime_syntax.lastIndex ) ;
                    var val = m[0];
                    j = i + val.length;
                    if (val.indexOf("T") >= 0) {
                        res.push(this._store.literal(val, undefined, this._store.sym(DATETIME_DATATYPE)));
                    } else {
                        res.push(this._store.literal(val, undefined, this._store.sym(DATE_DATATYPE)));
                    }
                } else {
                    number_syntax.lastIndex = 0;
                    var m = number_syntax.exec(str.slice(i));
                    if (m == null) {
                        throw BadSyntax(this._thisDoc, this.lines, str, i, "Bad number or date syntax");
                    }
                    j = i + number_syntax.lastIndex;
                    var val = pyjslib_slice(str, i, j);
                    if (val.indexOf("e") >= 0) {
                        res.push(this._store.literal(parseFloat(val), undefined, this._store.sym(FLOAT_DATATYPE)));
                    } else if (pyjslib_slice(str, i, j).indexOf(".") >= 0) {
                        res.push(this._store.literal(parseFloat(val), undefined, this._store.sym(DECIMAL_DATATYPE)));
                    } else {
                        res.push(this._store.literal(parseInt(val), undefined, this._store.sym(INTEGER_DATATYPE)));
                    }
                };
                return j; // Where we have got up to
            }
            if (str.charAt(i) == "\"") {
                if (pyjslib_slice(str, i, i + 3) == "\"\"\"") {
                    var delim = "\"\"\"";
                } else {
                    var delim = "\"";
                }
                var i = i + pyjslib_len(delim);
                var dt = null;
                var pairFudge = this.strconst(str, i, delim);
                var j = pairFudge[0];
                var s = pairFudge[1];
                var lang = null;
                if (pyjslib_slice(str, j, j + 1) == "@") {
                    langcode.lastIndex = 0;

                    var m = langcode.exec(str.slice(j + 1));
                    if (m == null) {
                        throw BadSyntax(this._thisDoc, startline, str, i, "Bad language code syntax on string literal, after @");
                    }
                    var i = langcode.lastIndex + j + 1;

                    var lang = pyjslib_slice(str, j + 1, i);
                    var j = i;
                }
                if (pyjslib_slice(str, j, j + 2) == "^^") {
                    var res2 = new pyjslib_List([]);
                    var j = this.uri_ref2(str, j + 2, res2);
                    var dt = res2[0];
                }
                res.push(this._store.literal(s, lang, dt));
                return j;
            } else {
                return -1;
            }
        }
    };
    __SinkParser.prototype.strconst = function (str, i, delim) {
        /*
        parse an N3 string constant delimited by delim.
        return index, val
        */

        var j = i;
        var ustr = "";
        var startline = this.lines;
        while (j < pyjslib_len(str)) {
            var i = j + pyjslib_len(delim);
            if (pyjslib_slice(str, j, i) == delim) {
                return new pyjslib_Tuple([i, ustr]);
            }
            if (str.charAt(j) == "\"") {
                var ustr = ustr + "\"";
                var j = j + 1;
                continue;
            }
            interesting.lastIndex = 0;
            var m = interesting.exec(str.slice(j));
            if (!m) {
                throw BadSyntax(this._thisDoc, startline, str, j, "Closing quote missing in string at ^ in " + pyjslib_slice(str, j - 20, j) + "^" + pyjslib_slice(str, j, j + 20));
            }
            var i = j + interesting.lastIndex - 1;
            var ustr = ustr + pyjslib_slice(str, j, i);
            var ch = str.charAt(i);
            if (ch == "\"") {
                var j = i;
                continue;
            } else if (ch == "\r") {
                var j = i + 1;
                continue;
            } else if (ch == "\n") {
                if (delim == "\"") {
                    throw BadSyntax(this._thisDoc, startline, str, i, "newline found in string literal");
                }
                this.lines = this.lines + 1;
                var ustr = ustr + ch;
                var j = i + 1;
                this.previousLine = this.startOfLine;
                this.startOfLine = j;
            } else if (ch == "\\") {
                var j = i + 1;
                var ch = pyjslib_slice(str, j, j + 1);
                if (!ch) {
                    throw BadSyntax(this._thisDoc, startline, str, i, "unterminated string literal (2)");
                }
                var k = string_find("abfrtvn\\\"", ch);
                if (k >= 0) {
                    var uch = "\a\b\f\r\t\v\n\\\"".charAt(k);
                    var ustr = ustr + uch;
                    var j = j + 1;
                } else if (ch == "u") {
                    var pairFudge = this.uEscape(str, j + 1, startline);
                    var j = pairFudge[0];
                    var ch = pairFudge[1];
                    var ustr = ustr + ch;
                } else if (ch == "U") {
                    var pairFudge = this.UEscape(str, j + 1, startline);
                    var j = pairFudge[0];
                    var ch = pairFudge[1];
                    var ustr = ustr + ch;
                } else {
                    throw BadSyntax(this._thisDoc, this.lines, str, i, "bad escape");
                }
            }
        }
        throw BadSyntax(this._thisDoc, this.lines, str, i, "unterminated string literal");
    };
    __SinkParser.prototype.uEscape = function (str, i, startline) {
        var j = i;
        var count = 0;
        var value = 0;
        while (count < 4) {
            var chFudge = pyjslib_slice(str, j, j + 1);
            var ch = chFudge.toLowerCase();
            var j = j + 1;
            if (ch == "") {
                throw BadSyntax(this._thisDoc, startline, str, i, "unterminated string literal(3)");
            }
            var k = string_find("0123456789abcdef", ch);
            if (k < 0) {
                throw BadSyntax(this._thisDoc, startline, str, i, "bad string literal hex escape");
            }
            var value = value * 16 + k;
            var count = count + 1;
        }
        var uch = String.fromCharCode(value);
        return new pyjslib_Tuple([j, uch]);
    };
    __SinkParser.prototype.UEscape = function (str, i, startline) {
        var j = i;
        var count = 0;
        var value = '\\U';
        while (count < 8) {
            var chFudge = pyjslib_slice(str, j, j + 1);
            var ch = chFudge.toLowerCase();
            var j = j + 1;
            if (ch == "") {
                throw BadSyntax(this._thisDoc, startline, str, i, "unterminated string literal(3)");
            }
            var k = string_find("0123456789abcdef", ch);
            if (k < 0) {
                throw BadSyntax(this._thisDoc, startline, str, i, "bad string literal hex escape");
            }
            var value = value + ch;
            var count = count + 1;
        }
        var uch = stringFromCharCode("0x" + pyjslib_slice(value, 2, 10) - 0);
        return new pyjslib_Tuple([j, uch]);
    };
    function OLD_BadSyntax(uri, lines, str, i, why) {
        return new __OLD_BadSyntax(uri, lines, str, i, why);
    }
    function __OLD_BadSyntax(uri, lines, str, i, why) {
        this._str = str.encode("utf-8");
        this._str = str;
        this._i = i;
        this._why = why;
        this.lines = lines;
        this._uri = uri;
    }
    __OLD_BadSyntax.prototype.toString = function () {
        var str = this._str;
        var i = this._i;
        var st = 0;
        if (i > 60) {
            var pre = "...";
            var st = i - 60;
        } else {
            var pre = "";
        }
        if (pyjslib_len(str) - i > 60) {
            var post = "...";
        } else {
            var post = "";
        }
        return "Line %i of <%s>: Bad syntax (%s) at ^ in:\n\"%s%s^%s%s\"" % new pyjslib_Tuple([this.lines + 1, this._uri, this._why, pre, pyjslib_slice(str, st, i), pyjslib_slice(str, i, i + 60), post]);
    };
    function BadSyntax(uri, lines, str, i, why) {
        return "Line " + (lines + 1) + " of <" + uri + ">: Bad syntax: " + why + "\nat: \"" + pyjslib_slice(str, i, i + 30) + "\"";
    }

    function stripCR(str) {
        var res = "";

        var __ch = new pyjslib_Iterator(str);
        try {
            while (true) {
                var ch = __ch.next();

                if (ch != "\r") {
                    var res = res + ch;
                }
            }
        } catch (e) {
            if (e != StopIteration) {
                throw e;
            }
        }

        return res;
    }

    function dummyWrite(x) {}

    return SinkParser;
}();

module.exports = N3Parser;
},{"./uri":83,"./util":84}],68:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ClassOrder = require('./class-order');
var Node = require('./node');

/**
 * @class NamedNode
 * @extends Node
 */

var NamedNode = function (_Node) {
  _inherits(NamedNode, _Node);

  /**
   * @constructor
   * @param iri {String}
   */
  function NamedNode(iri) {
    _classCallCheck(this, NamedNode);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(NamedNode).call(this));

    _this.termType = NamedNode.termType;
    if (!iri.includes(':')) {
      throw new Error('NamedNode IRI "' + iri + '" must be absolute.');
    }
    if (iri.includes(' ')) {
      var message = 'Error: NamedNode IRI "' + iri + '" must not contain unencoded spaces.';
      throw new Error(message);
    }
    _this.value = iri;
    return _this;
  }
  /**
   * Returns an $rdf node for the containing directory, ending in slash.
   */


  _createClass(NamedNode, [{
    key: 'dir',
    value: function dir() {
      var str = this.uri.split('#')[0];
      var p = str.slice(0, -1).lastIndexOf('/');
      var q = str.indexOf('//');
      if (q >= 0 && p < q + 2 || p < 0) return null;
      return new NamedNode(str.slice(0, p + 1));
    }
    /**
     * Returns an NN for the whole web site, ending in slash.
     * Contrast with the "origin" which does NOT have a trailing slash
     */

  }, {
    key: 'site',
    value: function site() {
      var str = this.uri.split('#')[0];
      var p = str.indexOf('//');
      if (p < 0) throw new Error('This URI does not have a web site part (origin)');
      var q = str.indexOf('/', p + 2);
      if (q < 0) throw new Error('This URI does not have a web site part. (origin)');
      return new NamedNode(str.slice(0, q + 1));
    }
  }, {
    key: 'doc',
    value: function doc() {
      if (this.uri.indexOf('#') < 0) {
        return this;
      } else {
        return new NamedNode(this.uri.split('#')[0]);
      }
    }
  }, {
    key: 'toString',
    value: function toString() {
      return '<' + this.uri + '>';
    }

    /**
     * Legacy getter and setter alias, node.uri
     */

  }, {
    key: 'uri',
    get: function get() {
      return this.value;
    },
    set: function set(uri) {
      this.value = uri;
    }
  }], [{
    key: 'fromValue',
    value: function fromValue(value) {
      if (typeof value === 'undefined' || value === null) {
        return value;
      }
      var isNode = value && value.termType;
      if (isNode) {
        return value;
      }
      return new NamedNode(value);
    }
  }]);

  return NamedNode;
}(Node);

NamedNode.termType = 'NamedNode';
NamedNode.prototype.classOrder = ClassOrder['NamedNode'];
NamedNode.prototype.isVar = 0;

module.exports = NamedNode;
},{"./class-order":54,"./node":70}],69:[function(require,module,exports){
'use strict';

var NamedNode = require('./named-node');

function Namespace(nsuri) {
  return function (ln) {
    return new NamedNode(nsuri + (ln || ''));
  };
}

module.exports = Namespace;
},{"./named-node":68}],70:[function(require,module,exports){
'use strict';
/**
 * The superclass of all RDF Statement objects, that is
 * NamedNode, Literal, BlankNode, etc.
 * @class Node
 */

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Node = function () {
  function Node() {
    _classCallCheck(this, Node);
  }

  _createClass(Node, [{
    key: 'substitute',
    value: function substitute(bindings) {
      console.log('@@@ node substitute' + this);
      return this;
    }
  }, {
    key: 'compareTerm',
    value: function compareTerm(other) {
      if (this.classOrder < other.classOrder) {
        return -1;
      }
      if (this.classOrder > other.classOrder) {
        return +1;
      }
      if (this.value < other.value) {
        return -1;
      }
      if (this.value > other.value) {
        return +1;
      }
      return 0;
    }
  }, {
    key: 'equals',
    value: function equals(other) {
      if (!other) {
        return false;
      }
      return this.termType === other.termType && this.value === other.value;
    }
  }, {
    key: 'hashString',
    value: function hashString() {
      return this.toCanonical();
    }
  }, {
    key: 'sameTerm',
    value: function sameTerm(other) {
      return this.equals(other);
    }
  }, {
    key: 'toCanonical',
    value: function toCanonical() {
      return this.toNT();
    }
  }, {
    key: 'toNT',
    value: function toNT() {
      return this.toString();
    }
  }, {
    key: 'toString',
    value: function toString() {
      throw new Error('Node.toString() is abstract - see the subclasses instead');
    }
  }]);

  return Node;
}();

module.exports = Node;

/**
 * Creates an RDF Node from a native javascript value.
 * RDF Nodes are returned unchanged, undefined returned as itself.
 * @method fromValue
 * @static
 * @param value {Node|Date|String|Number|Boolean|Undefined}
 * @return {Node|Collection}
 */
Node.fromValue = function fromValue(value) {
  var Collection = require('./collection');
  var Literal = require('./literal');
  var NamedNode = require('./named-node');
  if (typeof value === 'undefined' || value === null) {
    return value;
  }
  var isNode = value && value.termType;
  if (isNode) {
    // a Node subclass or a Collection
    return value;
  }
  if (Array.isArray(value)) {
    return new Collection(value);
  }
  return Literal.fromValue(value);
};
},{"./collection":55,"./literal":65,"./named-node":68}],71:[function(require,module,exports){
'use strict';

module.exports = parse;

var BlankNode = require('./blank-node');
var jsonld = require('jsonld');
var Literal = require('./literal');
var N3 = require('n3'); // @@ Goal: remove this dependency
var N3Parser = require('./n3parser');
var NamedNode = require('./named-node');
var parseRDFaDOM = require('./rdfaparser').parseRDFaDOM;
var RDFParser = require('./rdfxmlparser');
var sparqlUpdateParser = require('./patch-parser');
var Util = require('./util');

/**
 * Parse a string and put the result into the graph kb.
 * Normal method is sync.
 * Unfortunately jsdonld is currently written to need to be called async.
 * Hence the mess below with executeCallback.
 */
function parse(str, kb, base, contentType, callback) {
  contentType = contentType || 'text/turtle';
  try {
    if (contentType === 'text/n3' || contentType === 'text/turtle') {
      var p = N3Parser(kb, kb, base, base, null, null, '', null);
      p.loadBuf(str);
      executeCallback();
    } else if (contentType === 'application/rdf+xml') {
      var parser = new RDFParser(kb);
      parser.parse(Util.parseXML(str), base, kb.sym(base));
      executeCallback();
    } else if (contentType === 'application/xhtml+xml') {
      parseRDFaDOM(Util.parseXML(str, { contentType: 'application/xhtml+xml' }), kb, base);
      executeCallback();
    } else if (contentType === 'text/html') {
      parseRDFaDOM(Util.parseXML(str, { contentType: 'text/html' }), kb, base);
      executeCallback();
    } else if (contentType === 'application/sparql-update') {
      // @@ we handle a subset
      sparqlUpdateParser(str, kb, base);
      executeCallback();
    } else if (contentType === 'application/ld+json' || contentType === 'application/nquads' || contentType === 'application/n-quads') {
      var n3Parser = N3.Parser();
      var triples = [];
      if (contentType === 'application/ld+json') {
        var jsonDocument;
        try {
          jsonDocument = JSON.parse(str);
        } catch (parseErr) {
          callback(parseErr, null);
        }
        jsonld.toRDF(jsonDocument, { format: 'application/nquads' }, nquadCallback);
      } else {
        nquadCallback(null, str);
      }
    } else {
      throw new Error("Don't know how to parse " + contentType + ' yet');
    }
  } catch (e) {
    executeErrorCallback(e);
  }

  function executeCallback() {
    if (callback) {
      callback(null, kb);
    } else {
      return;
    }
  }

  function executeErrorCallback(e) {
    if (contentType !== 'application/ld+json' || contentType !== 'application/nquads' || contentType !== 'application/n-quads') {
      if (callback) {
        callback(e, kb);
      } else {
        throw new Error('Error trying to parse <' + base + '> as ' + contentType + ':\n' + e + ':\n' + e.stack);
      }
    }
  }
  /*
    function setJsonLdBase (doc, base) {
      if (doc instanceof Array) {
        return
      }
      if (!('@context' in doc)) {
        doc['@context'] = {}
      }
      doc['@context']['@base'] = base
    }
  */
  function nquadCallback(err, nquads) {
    if (err) {
      callback(err, kb);
    }
    try {
      n3Parser.parse(nquads, tripleCallback);
    } catch (err) {
      callback(err, kb);
    }
  }

  function tripleCallback(err, triple, prefixes) {
    if (err) {
      callback(err, kb);
    }
    if (triple) {
      triples.push(triple);
    } else {
      for (var i = 0; i < triples.length; i++) {
        addTriple(kb, triples[i]);
      }
      callback(null, kb);
    }
  }

  function addTriple(kb, triple) {
    var subject = createTerm(triple.subject);
    var predicate = createTerm(triple.predicate);
    var object = createTerm(triple.object);
    var why = null;
    if (triple.graph) {
      why = createTerm(triple.graph);
    }
    kb.add(subject, predicate, object, why);
  }

  function createTerm(termString) {
    var value;
    if (N3.Util.isLiteral(termString)) {
      value = N3.Util.getLiteralValue(termString);
      var language = N3.Util.getLiteralLanguage(termString);
      var datatype = new NamedNode(N3.Util.getLiteralType(termString));
      return new Literal(value, language, datatype);
    } else if (N3.Util.isIRI(termString)) {
      return new NamedNode(termString);
    } else if (N3.Util.isBlank(termString)) {
      value = termString.substring(2, termString.length);
      return new BlankNode(value);
    } else {
      return null;
    }
  }
}
},{"./blank-node":53,"./literal":65,"./n3parser":67,"./named-node":68,"./patch-parser":72,"./rdfaparser":75,"./rdfxmlparser":76,"./util":84,"jsonld":44,"n3":45}],72:[function(require,module,exports){
'use strict';

// Parse a simple SPARL-Update subset syntax for patches.
//
//  This parses
//   WHERE {xxx} DELETE {yyy} INSERT DATA {zzz}
// (not necessarily in that order)
// as though it were the n3
//   <#query> patch:where {xxx}; patch:delete {yyy}; patch:insert {zzz}.
module.exports = sparqlUpdateParser;

var N3Parser = require('./n3parser');
var Namespace = require('./namespace');

function sparqlUpdateParser(str, kb, base) {
  var i, j, k;
  var keywords = ['INSERT', 'DELETE', 'WHERE'];
  var SQNS = Namespace('http://www.w3.org/ns/pim/patch#');
  var p = N3Parser(kb, kb, base, base, null, null, '', null);
  var clauses = {};

  var badSyntax = function badSyntax(uri, lines, str, i, why) {
    return 'Line ' + (lines + 1) + ' of <' + uri + '>: Bad syntax:\n   ' + why + '\n   at: "' + str.slice(i, i + 30) + '"';
  };

  // var check = function (next, last, message) {
  //   if (next < 0) {
  //     throw badSyntax(p._thisDoc, p.lines, str, j, last, message)
  //   }
  //   return next
  // }
  i = 0;
  var query = kb.sym(base + '#query'); // Invent a URI for the query
  clauses['query'] = query; // A way of accessing it in its N3 model.

  while (true) {
    // console.log("A Now at i = " + i)
    j = p.skipSpace(str, i);
    if (j < 0) {
      return clauses;
    }
    // console.log("B After space at j= " + j)
    if (str[j] === ';') {
      i = p.skipSpace(str, j + 1);
      if (i < 0) {
        return clauses; // Allow end in a
      }
      j = i;
    }
    var found = false;
    for (k = 0; k < keywords.length; k++) {
      var key = keywords[k];
      if (str.slice(j, j + key.length) === key) {
        i = p.skipSpace(str, j + key.length);
        if (i < 0) {
          throw badSyntax(p._thisDoc, p.lines, str, j + key.length, 'found EOF, needed {...} after ' + key);
        }
        if ((key === 'INSERT' || key === 'DELETE') && str.slice(i, i + 4) === 'DATA') {
          // Some wanted 'DATA'. Whatever
          j = p.skipSpace(str, i + 4);
          if (j < 0) {
            throw badSyntax(p._thisDoc, p.lines, str, i + 4, 'needed {...} after INSERT DATA ' + key);
          }
          i = j;
        }
        var res2 = [];
        j = p.node(str, i, res2); // Parse all the complexity of the clause

        if (j < 0) {
          throw badSyntax(p._thisDoc, p.lines, str, i, 'bad syntax or EOF in {...} after ' + key);
        }
        clauses[key.toLowerCase()] = res2[0];
        kb.add(query, SQNS(key.toLowerCase()), res2[0]); // , kb.sym(base)
        // key is the keyword and res2 has the contents
        found = true;
        i = j;
      }
    }
    if (!found && str.slice(j, j + 7) === '@prefix') {
      i = p.directive(str, j);
      if (i < 0) {
        throw badSyntax(p._thisDoc, p.lines, str, i, 'bad syntax or EOF after @prefix ');
      }
      // console.log("P before dot i= " + i)
      i = p.checkDot(str, i);
      // console.log("Q after dot i= " + i)
      found = true;
    }
    if (!found) {
      // console.log("Bad syntax " + j)
      throw badSyntax(p._thisDoc, p.lines, str, j, "Unknown syntax at start of statememt: '" + str.slice(j).slice(0, 20) + "'");
    }
  } // while
  // return clauses
}
},{"./n3parser":67,"./namespace":69}],73:[function(require,module,exports){
'use strict';

var log = require('./log');

function queryToSPARQL(query) {
  var indent = 0;
  function getSelect(query) {
    var str = addIndent() + 'SELECT ';
    for (var i = 0; i < query.vars.length; i++) {
      str += query.vars[i] + ' ';
    }
    str += '\n';
    return str;
  }

  function getPattern(pat) {
    var str = '';
    var st = pat.statements;
    for (var x in st) {
      log.debug('Found statement: ' + st);
      str += addIndent() + st[x] + '\n';
    }
    return str;
  }

  function getConstraints(pat) {
    var str = '';
    for (var v in pat.constraints) {
      var foo = pat.constraints[v];
      str += addIndent() + 'FILTER ( ' + foo.describe(v) + ' ) ' + '\n';
    }
    return str;
  }

  function getOptionals(pat) {
    var str = '';
    for (var x = 0; x < pat.optional.length; x++) {
      // alert(pat.optional.termType)
      log.debug('Found optional query');
      str += addIndent() + 'OPTIONAL { ' + '\n';
      indent++;
      str += getPattern(pat.optional[x]);
      str += getConstraints(pat.optional[x]);
      str += getOptionals(pat.optional[x]);
      indent--;
      str += addIndent() + '}' + '\n';
    }
    return str;
  }

  function getWhere(pat) {
    var str = addIndent() + 'WHERE \n' + '{ \n';
    indent++;
    str += getPattern(pat);
    str += getConstraints(pat);
    str += getOptionals(pat);
    indent--;
    str += '}';
    return str;
  }

  function addIndent() {
    var str = '';
    for (var i = 0; i < indent; i++) {
      str += '    ';
    }
    return str;
  }

  function getSPARQL(query) {
    return getSelect(query) + getWhere(query.pat);
  }

  return getSPARQL(query);
}

module.exports = queryToSPARQL;
},{"./log":66}],74:[function(require,module,exports){
'use strict';

var _indexedFormula = require('./indexed-formula');

var _indexedFormula2 = _interopRequireDefault(_indexedFormula);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } // Matching a formula against another formula
// Assync as well as Synchronously
//
// W3C open source licence 2005.
//
// This builds on term.js, match.js (and identity.js?)
// to allow a query of a formula.
//
// Here we introduce for the first time a subclass of term: variable.
//
// SVN ID: $Id: query.js 25116 2008-11-15 16:13:48Z timbl $

//  Variable
//
// Compare with BlankNode.  They are similar, but a variable
// stands for something whose value is to be returned.
// Also, users name variables and want the same name back when stuff is printed
/* jsl:option explicit*/ // Turn on JavaScriptLint variable declaration checking

var log = require('./log');
var docpart = require('./uri').docpart;

/**
 * Query class, for tracking queries the user has in the UI.
 */

var Query = function Query(name, id) {
  _classCallCheck(this, Query);

  this.pat = new _indexedFormula2.default(); // The pattern to search for
  this.vars = []; // Used by UI code but not in query.js
  //    this.orderBy = [] // Not used yet
  this.name = name;
  this.id = id;
};

/**
 * This function will match a pattern to the current kb
 *
 * The callback function is called whenever a match is found
 * When fetcher is supplied this will be called to satisfy any resource requests
 * currently not in the kb. The fetcher function needs to be defined manualy and
 * should call $rdf.Util.AJAR_handleNewTerm to process the requested resource.
 *
 * @param	myQuery,	a knowledgebase containing a pattern to use as query
 * @param	callback, 	whenever the pattern in myQuery is met this is called with
 * 						the new bindings as parameter
 * @param	fetcher,	whenever a resource needs to be loaded this gets called  IGNORED OBSOLETE
 *                              f.fetecher is used as a Fetcher instance to do this.
 * @param       onDone          callback when
 */


function indexedFormulaQuery(myQuery, callback, fetcher, onDone) {
  // var kb = this
  // /////////// Debug strings
  var bindingDebug = function bindingDebug(b) {
    var str = '';
    var v;
    for (v in b) {
      if (b.hasOwnProperty(v)) {
        str += '    ' + v + ' -> ' + b[v];
      }
    }
    return str;
  };

  var bindingsDebug = function bindingsDebug(nbs) {
    var str = 'Bindings: ';
    var i;
    var n = nbs.length;
    for (i = 0; i < n; i++) {
      str += bindingDebug(nbs[i][0]) + ';\n\t';
    }
    return str;
  }; // bindingsDebug

  // Unification: see also
  //  http://www.w3.org/2000/10/swap/term.py
  // for similar things in python
  //
  // Unification finds all bindings such that when the binding is applied
  // to one term it is equal to the other.
  // Returns: a list of bindings, where a binding is an associative array
  //  mapping variuable to value.

  var unifyTerm = function unifyTerm(self, other, bindings, formula) {
    var actual = bindings[self];
    if (actual === undefined) {
      // Not mapped
      if (self.isVar) {
        /* if (self.isBlank)  //bnodes are existential variables
        {
                if (self.toString() == other.toString()) return [[ [], null]]
                else return []
        }*/
        var b = [];
        b[self] = other;
        return [[b, null]]; // Match
      }
      actual = self;
    }
    if (!actual.complexType) {
      if (formula.redirections[actual]) {
        actual = formula.redirections[actual];
      }
      if (formula.redirections[other]) {
        other = formula.redirections[other];
      }
      if (actual.sameTerm(other)) {
        return [[[], null]];
      }
      return [];
    }
    if (self instanceof Array) {
      if (!(other instanceof Array)) {
        return [];
      }
      return unifyContents(self, other, bindings);
    }
    throw new Error('query.js: oops - code not written yet');
    // return undefined;  // for lint - no jslint objects to unreachables
    //    return actual.unifyContents(other, bindings)
  }; // unifyTerm

  var unifyContents = function unifyContents(self, other, bindings, formula) {
    var nbs2;
    if (self.length !== other.length) {
      return []; // no way
    }
    if (!self.length) {
      return [[[], null]]; // Success
    }
    var nbs = unifyTerm(self[0], other[0], bindings, formula);
    if (nbs.length === 0) {
      return nbs;
    }
    var res = [];
    var i;
    var n = nbs.length;
    var nb;
    var j;
    var m;
    var v;
    var nb2;
    var bindings2;
    for (i = 0; i < n; i++) {
      // for each possibility from the first term
      nb = nbs[i][0]; // new bindings
      bindings2 = [];
      for (v in nb) {
        if (nb.hasOwnProperty(v)) {
          bindings2[v] = nb[v]; // copy
        }
      }
      for (v in bindings) {
        if (bindings.hasOwnProperty(v)) {
          bindings2[v] = bindings[v]; // copy
        }
      }
      nbs2 = unifyContents(self.slice(1), other.slice(1), bindings2, formula);
      m = nbs2.length;
      for (j = 0; j < m; j++) {
        nb2 = nbs2[j][0]; // @@@@ no idea whether this is used or right
        for (v in nb) {
          if (nb.hasOwnProperty(v)) {
            nb2[v] = nb[v];
          }
        }
        res.push([nb2, null]);
      }
    }
    return res;
  }; // unifyContents

  //  Matching
  //
  // Matching finds all bindings such that when the binding is applied
  // to one term it is equal to the other term.  We only match formulae.

  /** if x is not in the bindings array, return the var; otherwise, return the bindings **/
  var bind = function bind(x, binding) {
    var y = binding[x];
    if (y === undefined) {
      return x;
    }
    return y;
  };

  // When there are OPTIONAL clauses, we must return bindings without them if none of them
  // succeed. However, if any of them do succeed, we should not.  (This is what branchCount()
  // tracked. The problem currently is (2011/7) that when several optionals exist, and they
  // all match, multiple sets of bindings are returned, each with one optional filled in.)

  var union = function union(a, b) {
    var c = {};
    var x;
    for (x in a) {
      if (a.hasOwnProperty(x)) {
        c[x] = a[x];
      }
    }
    for (x in b) {
      if (b.hasOwnProperty(x)) {
        c[x] = b[x];
      }
    }
    return c;
  };

  var OptionalBranchJunction = function OptionalBranchJunction(originalCallback, trunkBindings) {
    this.trunkBindings = trunkBindings;
    this.originalCallback = originalCallback;
    this.branches = [];
    // this.results = []; // result[i] is an array of bindings for branch i
    // this.done = {};  // done[i] means all/any results are in for branch i
    // this.count = {}
    return this;
  };

  OptionalBranchJunction.prototype.checkAllDone = function () {
    var i;
    for (i = 0; i < this.branches.length; i++) {
      if (!this.branches[i].done) {
        return;
      }
    }
    log.debug('OPTIONAL BIDNINGS ALL DONE:');
    this.doCallBacks(this.branches.length - 1, this.trunkBindings);
  };
  // Recrursively generate the cross product of the bindings
  OptionalBranchJunction.prototype.doCallBacks = function (b, bindings) {
    var j;
    if (b < 0) {
      return this.originalCallback(bindings);
    }
    for (j = 0; j < this.branches[b].results.length; j++) {
      this.doCallBacks(b - 1, union(bindings, this.branches[b].results[j]));
    }
  };

  // A mandatory branch is the normal one, where callbacks
  // are made immediately and no junction is needed.
  // Might be useful for onFinsihed callback for query API.
  var MandatoryBranch = function MandatoryBranch(callback, onDone) {
    this.count = 0;
    this.success = false;
    this.done = false;
    // this.results = []
    this.callback = callback;
    this.onDone = onDone;
    // this.junction = junction
    // junction.branches.push(this)
    return this;
  };

  MandatoryBranch.prototype.reportMatch = function (bindings) {
    // log.error("@@@@ query.js 1"); // @@
    this.callback(bindings);
    this.success = true;
  };

  MandatoryBranch.prototype.reportDone = function () {
    this.done = true;
    log.info('Mandatory query branch finished.***');
    if (this.onDone !== undefined) {
      this.onDone();
    }
  };

  // An optional branch hoards its results.
  var OptionalBranch = function OptionalBranch(junction) {
    this.count = 0;
    this.done = false;
    this.results = [];
    this.junction = junction;
    junction.branches.push(this);
    return this;
  };

  OptionalBranch.prototype.reportMatch = function (bindings) {
    this.results.push(bindings);
  };

  OptionalBranch.prototype.reportDone = function () {
    log.debug('Optional branch finished - results.length = ' + this.results.length);
    if (this.results.length === 0) {
      // This is what optional means: if no hits,
      this.results.push({}); // mimic success, but with no bindings
      log.debug("Optional branch FAILED - that's OK.");
    }
    this.done = true;
    this.junction.checkAllDone();
  };

  /** prepare -- sets the index of the item to the possible matches
      * @param f - formula
      * @param item - an Statement, possibly w/ vars in it
      * @param bindings -
  * @returns true if the query fails -- there are no items that match **/
  var prepare = function prepare(f, item, bindings) {
    var t, terms, termIndex, i, ind;
    item.nvars = 0;
    item.index = null;
    // if (!f.statements) log.warn("@@@ prepare: f is "+f)
    //    log.debug("Prepare: f has "+ f.statements.length)
    // log.debug("Prepare: Kb size "+f.statements.length+" Preparing "+item)

    terms = [item.subject, item.predicate, item.object];
    ind = [f.subjectIndex, f.predicateIndex, f.objectIndex];
    for (i = 0; i < 3; i++) {
      // alert("Prepare "+terms[i]+" "+(terms[i] in bindings))
      if (terms[i].isVar && !(bindings[terms[i]] !== undefined)) {
        item.nvars++;
      } else {
        t = bind(terms[i], bindings); // returns the RDF binding if bound, otherwise itself
        // if (terms[i]!=bind(terms[i],bindings) alert("Term: "+terms[i]+"Binding: "+bind(terms[i], bindings))
        if (f.redirections[t.hashString()]) {
          t = f.redirections[t.hashString()]; // redirect
        }
        termIndex = ind[i][t.hashString()];

        if (!termIndex) {
          item.index = [];
          return false; // Query line cannot match
        }
        if (item.index === null || item.index.length > termIndex.length) {
          item.index = termIndex;
        }
      }
    }

    if (item.index === null) {
      // All 3 are variables?
      item.index = f.statements;
    }
    return true;
  }; // prepare

  /** sorting function -- negative if self is easier **/
  // We always prefer to start with a URI to be able to browse a graph
  // this is why we put off items with more variables till later.
  function easiestQuery(self, other) {
    if (self.nvars !== other.nvars) {
      return self.nvars - other.nvars;
    }
    return self.index.length - other.index.length;
  }

  var match_index = 0; // index
  /** matches a pattern formula against the knowledge base, e.g. to find matches for table-view
  *
  * @param f - knowledge base formula
  * @param g - pattern formula (may have vars)
  * @param bindingsSoFar  - bindings accumulated in matching to date
  * @param level - spaces to indent stuff also lets you know what level of recursion you're at
  * @param fetcher - function (term, requestedBy) - myFetcher / AJAR_handleNewTerm / the sort
  * @param localCallback - function(bindings, pattern, branch) called on sucess
  * @returns nothing
  *
  * Will fetch linked data from the web iff the knowledge base an associated source fetcher (f.fetcher)
  ***/
  var match = function match(f, g, bindingsSoFar, level, fetcher, localCallback, branch) {
    log.debug('Match begins, Branch count now: ' + branch.count + ' for ' + branch.pattern_debug);
    var sf = f.fetcher ? f.fetcher : null;
    // log.debug("match: f has "+f.statements.length+", g has "+g.statements.length)
    var pattern = g.statements;
    if (pattern.length === 0) {
      // when it's satisfied all the pattern triples
      log.debug('FOUND MATCH WITH BINDINGS:' + bindingDebug(bindingsSoFar));
      if (g.optional.length === 0) {
        branch.reportMatch(bindingsSoFar);
      } else {
        log.debug('OPTIONAL: ' + g.optional);
        var junction = new OptionalBranchJunction(callback, bindingsSoFar); // @@ won't work with nested optionals? nest callbacks
        var br = [];
        var b;
        for (b = 0; b < g.optional.length; b++) {
          br[b] = new OptionalBranch(junction); // Allocate branches to prevent premature ending
          br[b].pattern_debug = g.optional[b]; // for diagnotics only
        }
        for (b = 0; b < g.optional.length; b++) {
          br[b].count = br[b].count + 1; // Count how many matches we have yet to complete
          match(f, g.optional[b], bindingsSoFar, '', fetcher, callback, br[b]);
        }
      }
      branch.count--;
      log.debug('Match ends -- success , Branch count now: ' + branch.count + ' for ' + branch.pattern_debug);
      return; // Success
    }

    var item;
    var i;
    var n = pattern.length;
    // log.debug(level + "Match "+n+" left, bs so far:"+bindingDebug(bindingsSoFar))

    // Follow links from variables in query
    if (sf) {
      // Fetcher is used to fetch URIs, function first term is a URI term, second is the requester
      var id = 'match' + match_index++;
      var fetchResource = function fetchResource(requestedTerm, id) {
        var docuri = requestedTerm.uri.split('#')[0];
        sf.nowOrWhenFetched(docuri, undefined, function (err, body, xhr) {
          if (err) {
            console.log('Error following link to <' + requestedTerm.uri + '> in query: ' + body);
          }
          match(f, g, bindingsSoFar, level, fetcher, // match not match2 to look up any others necessary.
          localCallback, branch);
        });
        /*
        if( sf ) {
            sf.addCallback('done', function(uri) {
                if ((kb.canon(kb.sym(uri)).uri !== path) && (uri !== kb.canon(kb.sym(path)))) {
                    return true
                }
                return false
            })
        }
        fetcher(requestedTerm, id)
        */
      };
      for (i = 0; i < n; i++) {
        item = pattern[i]; // for each of the triples in the query
        if (bindingsSoFar[item.subject] !== undefined && bindingsSoFar[item.subject].uri && sf && sf.getState(docpart(bindingsSoFar[item.subject].uri)) === 'unrequested') {
          // fetch the subject info and return to id
          fetchResource(bindingsSoFar[item.subject], id);
          return; // only look up one per line this time, but we will come back again though match
        }
        if (bindingsSoFar[item.object] !== undefined && bindingsSoFar[item.object].uri && sf && sf.getState(docpart(bindingsSoFar[item.object].uri)) === 'unrequested') {
          fetchResource(bindingsSoFar[item.object], id);
          return;
        }
      }
    } // if sf
    match2(f, g, bindingsSoFar, level, fetcher, localCallback, branch);
    return;
  }; // match

  var constraintsSatisfied = function constraintsSatisfied(bindings, constraints) {
    var res = true;
    var x;
    var test;
    for (x in bindings) {
      if (bindings.hasOwnProperty(x)) {
        if (constraints[x]) {
          test = constraints[x].test;
          if (test && !test(bindings[x])) {
            res = false;
          }
        }
      }
    }
    return res;
  };

  /** match2 -- stuff after the fetch **/
  var match2 = function match2(f, g, bindingsSoFar, level, fetcher, callback, branch) {
    // post fetch
    var pattern = g.statements;
    var n = pattern.length;
    var i;
    var k;
    var nk;
    var v;
    var bindings2;
    var newBindings1;
    var item;
    for (i = 0; i < n; i++) {
      // For each statement left in the query, run prepare
      item = pattern[i];
      log.info('match2: item=' + item + ', bindingsSoFar=' + bindingDebug(bindingsSoFar));
      prepare(f, item, bindingsSoFar);
    }
    pattern.sort(easiestQuery);
    item = pattern[0];
    // log.debug("Sorted pattern:\n"+pattern)
    var rest = f.formula();
    rest.optional = g.optional;
    rest.constraints = g.constraints;
    rest.statements = pattern.slice(1); // No indexes: we will not query g.
    log.debug(level + 'match2 searching ' + item.index.length + ' for ' + item + '; bindings so far=' + bindingDebug(bindingsSoFar));
    // var results = []
    var c;
    var nc = item.index.length;
    var nbs1;
    var st;
    var onward = 0;
    // var x
    for (c = 0; c < nc; c++) {
      // For each candidate statement
      st = item.index[c]; // for each statement in the item's index, spawn a new match with that binding
      nbs1 = unifyContents([item.subject, item.predicate, item.object], [st.subject, st.predicate, st.object], bindingsSoFar, f);
      log.info(level + ' From first: ' + nbs1.length + ': ' + bindingsDebug(nbs1));
      nk = nbs1.length;
      // branch.count += nk
      // log.debug("Branch count bumped "+nk+" to: "+branch.count)
      for (k = 0; k < nk; k++) {
        // For each way that statement binds
        bindings2 = [];
        newBindings1 = nbs1[k][0];
        if (!constraintsSatisfied(newBindings1, g.constraints)) {
          // branch.count--
          log.debug('Branch count CS: ' + branch.count);
        } else {
          for (v in newBindings1) {
            if (newBindings1.hasOwnProperty(v)) {
              bindings2[v] = newBindings1[v]; // copy
            }
          }
          for (v in bindingsSoFar) {
            if (bindingsSoFar.hasOwnProperty(v)) {
              bindings2[v] = bindingsSoFar[v]; // copy
            }
          }

          branch.count++; // Count how many matches we have yet to complete
          onward++;
          match(f, rest, bindings2, level + '  ', fetcher, callback, branch); // call match
        }
      }
    }
    branch.count--;
    if (onward === 0) {
      log.debug('Match2 fails completely on ' + item);
    }
    log.debug('Match2 ends, Branch count: ' + branch.count + ' for ' + branch.pattern_debug);
    if (branch.count === 0) {
      log.debug('Branch finished.');
      branch.reportDone();
    }
  }; // match2
  // ////////////////////////// Body of query()  ///////////////////////
  /*
  if(!fetcher) {
      fetcher=function (x, requestedBy) {
          if (x === null) {
              return
          }
          $rdf.Util.AJAR_handleNewTerm(kb, x, requestedBy)
      }
  }
  */
  // prepare, oncallback: match1
  // match1: fetcher, oncallback: match2
  // match2, oncallback: populatetable
  //    log.debug("Query F length"+this.statements.length+" G="+myQuery)
  var f = this;
  log.debug('Query on ' + this.statements.length);
  // kb.remoteQuery(myQuery,'http://jena.hpl.hp.com:3040/backstage',callback)
  // return
  var trunck = new MandatoryBranch(callback, onDone);
  trunck.count++; // count one branch to complete at the moment
  setTimeout(function () {
    match(f, myQuery.pat, myQuery.pat.initBindings, '', fetcher, callback, trunck /* branch */);
  }, 0);

  return; // returns nothing; callback does the work
} // query

module.exports.Query = Query;
module.exports.indexedFormulaQuery = indexedFormulaQuery;
},{"./indexed-formula":63,"./log":66,"./uri":83}],75:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

//  RDFa Parser for rdflib.js

// Originally by: Alex Milowski
// From https://github.com/alexmilowski/green-turtle
// Converted: timbl 2015-08-25 not yet working
// Added wrapper: csarven 2016-05-09 working

// RDFaProcessor.prototype = new Object() // Was URIResolver

// RDFaProcessor.prototype.constructor=RDFaProcessor

// options.base = base URI    not really an option, shopuld always be set.
//

var BlankNode = require('./blank-node');
var Literal = require('./literal');
var rdf = require('./data-factory');
var NamedNode = require('./named-node');
var Uri = require('./uri');
var Util = require('./util');

if (typeof Node === 'undefined') {
  //  @@@@@@ Global. Interface to xmldom.
  var Node = {
    ELEMENT_NODE: 1,
    ATTRIBUTE_NODE: 2,
    TEXT_NODE: 3,
    CDATA_SECTION_NODE: 4,
    ENTITY_REFERENCE_NODE: 5,
    ENTITY_NODE: 6,
    PROCESSING_INSTRUCTION_NODE: 7,
    COMMENT_NODE: 8,
    DOCUMENT_NODE: 9,
    DOCUMENT_TYPE_NODE: 10,
    DOCUMENT_FRAGMENT_NODE: 11,
    NOTATION_NODE: 12
  };
}

var RDFaProcessor = function () {
  function RDFaProcessor(kb, options) {
    _classCallCheck(this, RDFaProcessor);

    this.options = options || {};
    this.kb = kb;
    this.target = options.target || {
      graph: {
        subjects: {},
        prefixes: {},
        terms: {}
      }
    };
    // XXX: Added to track bnodes
    this.blankNodes = [];
    // XXX: Added for normalisation
    this.htmlOptions = {
      'selfClosing': 'br img input area base basefont col colgroup source wbr isindex link meta param hr'
    };
    this.theOne = '_:' + new Date().getTime();
    this.language = null;
    this.vocabulary = null;
    this.blankCounter = 0;
    this.langAttributes = [{ namespaceURI: 'http://www.w3.org/XML/1998/namespace', localName: 'lang' }];
    this.inXHTMLMode = false;
    this.absURIRE = /[\w\_\-]+:\S+/;
    this.finishedHandlers = [];
    this.init();
  }

  _createClass(RDFaProcessor, [{
    key: 'addTriple',
    value: function addTriple(origin, subject, predicate, object) {
      var su, ob, pr, or;
      if (typeof subject === 'undefined') {
        su = rdf.namedNode(this.options.base);
      } else {
        su = this.toRDFNodeObject(subject);
      }
      pr = this.toRDFNodeObject(predicate);
      ob = this.toRDFNodeObject(object);
      or = rdf.namedNode(this.options.base);
      // console.log('Adding { ' + su + ' ' + pr + ' ' + ob + ' ' + or + ' }')
      this.kb.add(su, pr, ob, or);
    }
  }, {
    key: 'ancestorPath',
    value: function ancestorPath(node) {
      var path = '';
      while (node && node.nodeType !== Node.DOCUMENT_NODE) {
        path = '/' + node.localName + path;
        node = node.parentNode;
      }
      return path;
    }
  }, {
    key: 'copyMappings',
    value: function copyMappings(mappings) {
      var newMappings = {};
      for (var k in mappings) {
        newMappings[k] = mappings[k];
      }
      return newMappings;
    }
  }, {
    key: 'copyProperties',
    value: function copyProperties() {}
  }, {
    key: 'deriveDateTimeType',
    value: function deriveDateTimeType(value) {
      for (var i = 0; i < RDFaProcessor.dateTimeTypes.length; i++) {
        // console.log("Checking "+value+" against "+RDFaProcessor.dateTimeTypes[i].type)
        var matched = RDFaProcessor.dateTimeTypes[i].pattern.exec(value);
        if (matched && matched[0].length === value.length) {
          // console.log("Matched!")
          return RDFaProcessor.dateTimeTypes[i].type;
        }
      }
      return null;
    }
  }, {
    key: 'init',
    value: function init() {}
  }, {
    key: 'newBlankNode',
    value: function newBlankNode() {
      this.blankCounter++;
      return '_:' + this.blankCounter;
    }
  }, {
    key: 'newSubjectOrigin',
    value: function newSubjectOrigin(origin, subject) {}
  }, {
    key: 'parseCURIE',
    value: function parseCURIE(value, prefixes, base) {
      var colon = value.indexOf(':');
      var uri;
      if (colon >= 0) {
        var prefix = value.substring(0, colon);
        if (prefix === '') {
          // default prefix
          uri = prefixes[''];
          return uri ? uri + value.substring(colon + 1) : null;
        } else if (prefix === '_') {
          // blank node
          return '_:' + value.substring(colon + 1);
        } else if (RDFaProcessor.NCNAME.test(prefix)) {
          uri = prefixes[prefix];
          if (uri) {
            return uri + value.substring(colon + 1);
          }
        }
      }
      return null;
    }
  }, {
    key: 'parseCURIEOrURI',
    value: function parseCURIEOrURI(value, prefixes, base) {
      var curie = this.parseCURIE(value, prefixes, base);
      if (curie) {
        return curie;
      }
      return this.resolveAndNormalize(base, value);
    }
  }, {
    key: 'parsePredicate',
    value: function parsePredicate(value, defaultVocabulary, terms, prefixes, base, ignoreTerms) {
      if (value === '') {
        return null;
      }
      var predicate = this.parseTermOrCURIEOrAbsURI(value, defaultVocabulary, ignoreTerms ? null : terms, prefixes, base);
      if (predicate && predicate.indexOf('_:') === 0) {
        return null;
      }
      return predicate;
    }
  }, {
    key: 'parsePrefixMappings',
    value: function parsePrefixMappings(str, target) {
      var values = this.tokenize(str);
      var prefix = null;
      // var uri = null
      for (var i = 0; i < values.length; i++) {
        if (values[i][values[i].length - 1] === ':') {
          prefix = values[i].substring(0, values[i].length - 1);
        } else if (prefix) {
          target[prefix] = this.options.base ? Uri.join(values[i], this.options.base) : values[i];
          prefix = null;
        }
      }
    }
  }, {
    key: 'parseSafeCURIEOrCURIEOrURI',
    value: function parseSafeCURIEOrCURIEOrURI(value, prefixes, base) {
      value = this.trim(value);
      if (value.charAt(0) === '[' && value.charAt(value.length - 1) === ']') {
        value = value.substring(1, value.length - 1);
        value = value.trim(value);
        if (value.length === 0) {
          return null;
        }
        if (value === '_:') {
          // the one node
          return this.theOne;
        }
        return this.parseCURIE(value, prefixes, base);
      } else {
        return this.parseCURIEOrURI(value, prefixes, base);
      }
    }
  }, {
    key: 'parseTermOrCURIEOrAbsURI',
    value: function parseTermOrCURIEOrAbsURI(value, defaultVocabulary, terms, prefixes, base) {
      // alert("Parsing "+value+" with default vocab "+defaultVocabulary)
      value = this.trim(value);
      var curie = this.parseCURIE(value, prefixes, base);
      if (curie) {
        return curie;
      } else if (terms) {
        if (defaultVocabulary && !this.absURIRE.exec(value)) {
          return defaultVocabulary + value;
        }
        var term = terms[value];
        if (term) {
          return term;
        }
        var lcvalue = value.toLowerCase();
        term = terms[lcvalue];
        if (term) {
          return term;
        }
      }
      if (this.absURIRE.exec(value)) {
        return this.resolveAndNormalize(base, value);
      }
      return null;
    }
  }, {
    key: 'parseTermOrCURIEOrURI',
    value: function parseTermOrCURIEOrURI(value, defaultVocabulary, terms, prefixes, base) {
      // alert("Parsing "+value+" with default vocab "+defaultVocabulary)
      value = this.trim(value);
      var curie = this.parseCURIE(value, prefixes, base);
      if (curie) {
        return curie;
      } else {
        var term = terms[value];
        if (term) {
          return term;
        }
        var lcvalue = value.toLowerCase();
        term = terms[lcvalue];
        if (term) {
          return term;
        }
        if (defaultVocabulary && !this.absURIRE.exec(value)) {
          return defaultVocabulary + value;
        }
      }
      return this.resolveAndNormalize(base, value);
    }
  }, {
    key: 'parseURI',
    value: function parseURI(uri) {
      return uri; // We just use strings as URIs, not objects now.
    }
  }, {
    key: 'process',
    value: function process(node, options) {
      /*
      if (!window.console) {
         window.console = { log: function() {} }
      }*/
      var base;
      if (node.nodeType === Node.DOCUMENT_NODE) {
        base = node.baseURI;
        node = node.documentElement;
        node.baseURI = base;
        this.setContext(node);
      } else if (node.parentNode.nodeType === Node.DOCUMENT_NODE) {
        this.setContext(node);
      }
      var queue = [];
      // Fix for Firefox that includes the hash in the base URI
      var removeHash = function removeHash(baseURI) {
        // Fix for undefined baseURI property
        if (!baseURI && options && options.baseURI) {
          return options.baseURI;
        }

        var hash = baseURI.indexOf('#');
        if (hash >= 0) {
          baseURI = baseURI.substring(0, hash);
        }
        if (options && options.baseURIMap) {
          baseURI = options.baseURIMap(baseURI);
        }
        return baseURI;
      };
      queue.push({ current: node,
        context: this.push(null, removeHash(node.baseURI))
      });
      while (queue.length > 0) {
        var item = queue.shift();
        if (item.parent) {
          // Sequence Step 14: list triple generation
          if (item.context.parent && item.context.parent.listMapping === item.listMapping) {
            // Skip a child context with exactly the same mapping
            continue;
          }
          // console.log("Generating lists for "+item.subject+", tag "+item.parent.localName)
          for (var _predicate in item.listMapping) {
            var list = item.listMapping[_predicate];
            if (list.length === 0) {
              this.addTriple(item.parent, item.subject, _predicate, { type: RDFaProcessor.objectURI, value: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#nil' });
              continue;
            }
            var bnodes = [];
            for (var _i = 0; _i < list.length; _i++) {
              bnodes.push(this.newBlankNode());
              // this.newSubject(item.parent,bnodes[i])
            }
            for (var _i2 = 0; _i2 < bnodes.length; _i2++) {
              this.addTriple(item.parent, bnodes[_i2], 'http://www.w3.org/1999/02/22-rdf-syntax-ns#first', list[_i2]);
              this.addTriple(item.parent, bnodes[_i2], 'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest', { type: RDFaProcessor.objectURI, value: _i2 + 1 < bnodes.length ? bnodes[_i2 + 1] : 'http://www.w3.org/1999/02/22-rdf-syntax-ns#nil' });
            }
            this.addTriple(item.parent, item.subject, _predicate, { type: RDFaProcessor.objectURI, value: bnodes[0] });
          }
          continue;
        }
        var current = item.current;
        var context = item.context;
        // console.log("Tag: "+current.localName+", listMapping="+JSON.stringify(context.listMapping))
        // Sequence Step 1
        var skip = false;
        var newSubject = null;
        var currentObjectResource = null;
        var typedResource = null;
        var prefixes = context.prefixes;
        var prefixesCopied = false;
        var incomplete = [];
        var listMapping = context.listMapping;
        var listMappingDifferent = !context.parent;
        var language = context.language;
        var vocabulary = context.vocabulary;
        // TODO: the "base" element may be used for HTML+RDFa 1.1
        base = this.parseURI(removeHash(current.baseURI));
        current.item = null;
        // Sequence Step 2: set the default vocabulary
        var vocabAtt = current.getAttributeNode('vocab');
        if (vocabAtt) {
          var value = this.trim(vocabAtt.value);
          if (value.length > 0) {
            vocabulary = value;
            var baseSubject = base.spec;
            // this.newSubject(current,baseSubject)
            this.addTriple(current, baseSubject, 'http://www.w3.org/ns/rdfa#usesVocabulary', { type: RDFaProcessor.objectURI, value: vocabulary });
          } else {
            vocabulary = this.vocabulary;
          }
        }
        // Sequence Step 3: IRI mappings
        // handle xmlns attributes
        for (var i = 0; i < current.attributes.length; i++) {
          var att = current.attributes[i];
          // if (att.namespaceURI=="http://www.w3.org/2000/xmlns/") {
          if (att.nodeName.charAt(0) === 'x' && att.nodeName.indexOf('xmlns:') === 0) {
            if (!prefixesCopied) {
              prefixes = this.copyMappings(prefixes);
              prefixesCopied = true;
            }
            var prefix = att.nodeName.substring(6);
            // TODO: resolve relative?
            var ref = RDFaProcessor.trim(att.value);
            prefixes[prefix] = this.options.base ? Uri.join(ref, this.options.base) : ref;
          }
        }
        // Handle prefix mappings (@prefix)
        var prefixAtt = current.getAttributeNode('prefix');
        if (prefixAtt) {
          if (!prefixesCopied) {
            prefixes = this.copyMappings(prefixes);
            prefixesCopied = true;
          }
          this.parsePrefixMappings(prefixAtt.value, prefixes);
        }
        // Sequence Step 4: language
        var xmlLangAtt = null;
        for (var _i3 = 0; !xmlLangAtt && _i3 < this.langAttributes.length; _i3++) {
          xmlLangAtt = current.getAttributeNodeNS(this.langAttributes[_i3].namespaceURI, this.langAttributes[_i3].localName);
        }
        if (xmlLangAtt) {
          var _value = RDFaProcessor.trim(xmlLangAtt.value);
          if (_value.length > 0) {
            language = _value;
          } else {
            language = null;
          }
        }
        var relAtt = current.getAttributeNode('rel');
        var revAtt = current.getAttributeNode('rev');
        var typeofAtt = current.getAttributeNode('typeof');
        var propertyAtt = current.getAttributeNode('property');
        var datatypeAtt = current.getAttributeNode('datatype');
        var datetimeAtt = this.inHTMLMode ? current.getAttributeNode('datetime') : null;
        var contentAtt = current.getAttributeNode('content');
        var aboutAtt = current.getAttributeNode('about');
        var srcAtt = current.getAttributeNode('src');
        var resourceAtt = current.getAttributeNode('resource');
        var hrefAtt = current.getAttributeNode('href');
        var inlistAtt = current.getAttributeNode('inlist');
        var relAttPredicates = [];
        var predicate, values;
        if (relAtt) {
          values = this.tokenize(relAtt.value);
          for (var _i4 = 0; _i4 < values.length; _i4++) {
            predicate = this.parsePredicate(values[_i4], vocabulary, context.terms, prefixes, base, this.inHTMLMode && propertyAtt !== null);
            if (predicate) {
              relAttPredicates.push(predicate);
            }
          }
        }
        var revAttPredicates = [];
        if (revAtt) {
          values = this.tokenize(revAtt.value);
          for (var _i5 = 0; _i5 < values.length; _i5++) {
            predicate = this.parsePredicate(values[_i5], vocabulary, context.terms, prefixes, base, this.inHTMLMode && propertyAtt);
            if (predicate) {
              revAttPredicates.push(predicate);
            }
          }
        }
        // Section 3.1, bullet 7
        if (this.inHTMLMode && (relAtt || revAtt) && propertyAtt) {
          if (relAttPredicates.length === 0) {
            relAtt = null;
          }
          if (revAttPredicates.length === 0) {
            revAtt = null;
          }
        }
        if (relAtt || revAtt) {
          // Sequence Step 6: establish new subject and value
          if (aboutAtt) {
            newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value, prefixes, base);
          }
          if (typeofAtt) {
            typedResource = newSubject;
          }
          if (!newSubject) {
            if (current.parentNode.nodeType === Node.DOCUMENT_NODE) {
              newSubject = removeHash(current.baseURI);
            } else if (context.parentObject) {
              // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI
              newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;
            }
          }
          if (resourceAtt) {
            currentObjectResource = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base);
          }
          if (!currentObjectResource) {
            if (hrefAtt) {
              currentObjectResource = this.resolveAndNormalize(base, encodeURI(hrefAtt.value));
            } else if (srcAtt) {
              currentObjectResource = this.resolveAndNormalize(base, encodeURI(srcAtt.value));
            } else if (typeofAtt && !aboutAtt && !(this.inXHTMLMode && (current.localName === 'head' || current.localName === 'body'))) {
              currentObjectResource = this.newBlankNode();
            }
          }
          if (typeofAtt && !aboutAtt && this.inXHTMLMode && (current.localName === 'head' || current.localName === 'body')) {
            typedResource = newSubject;
          } else if (typeofAtt && !aboutAtt) {
            typedResource = currentObjectResource;
          }
        } else if (propertyAtt && !contentAtt && !datatypeAtt) {
          // Sequence Step 5.1: establish a new subject
          if (aboutAtt) {
            newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value, prefixes, base);
            if (typeofAtt) {
              typedResource = newSubject;
            }
          }
          if (!newSubject && current.parentNode.nodeType === Node.DOCUMENT_NODE) {
            newSubject = removeHash(current.baseURI);
            if (typeofAtt) {
              typedResource = newSubject;
            }
          } else if (!newSubject && context.parentObject) {
            // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI
            newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;
          }
          if (typeofAtt && !typedResource) {
            if (resourceAtt) {
              typedResource = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base);
            }
            if (!typedResource && hrefAtt) {
              typedResource = this.resolveAndNormalize(base, encodeURI(hrefAtt.value));
            }
            if (!typedResource && srcAtt) {
              typedResource = this.resolveAndNormalize(base, encodeURI(srcAtt.value));
            }
            if (!typedResource && (this.inXHTMLMode || this.inHTMLMode) && (current.localName === 'head' || current.localName === 'body')) {
              typedResource = newSubject;
            }
            if (!typedResource) {
              typedResource = this.newBlankNode();
            }
            currentObjectResource = typedResource;
          }
          // console.log(current.localName+", newSubject="+newSubject+", typedResource="+typedResource+", currentObjectResource="+currentObjectResource)
        } else {
          // Sequence Step 5.2: establish a new subject
          if (aboutAtt) {
            newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value, prefixes, base);
          }
          if (!newSubject && resourceAtt) {
            newSubject = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base);
          }
          if (!newSubject && hrefAtt) {
            newSubject = this.resolveAndNormalize(base, encodeURI(hrefAtt.value));
          }
          if (!newSubject && srcAtt) {
            newSubject = this.resolveAndNormalize(base, encodeURI(srcAtt.value));
          }
          if (!newSubject) {
            if (current.parentNode.nodeType === Node.DOCUMENT_NODE) {
              newSubject = removeHash(current.baseURI);
            } else if ((this.inXHTMLMode || this.inHTMLMode) && (current.localName === 'head' || current.localName === 'body')) {
              newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;
            } else if (typeofAtt) {
              newSubject = this.newBlankNode();
            } else if (context.parentObject) {
              // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI
              newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;
              if (!propertyAtt) {
                skip = true;
              }
            }
          }
          if (typeofAtt) {
            typedResource = newSubject;
          }
        }
        // console.log(current.tagName+": newSubject="+newSubject+", currentObjectResource="+currentObjectResource+", typedResource="+typedResource+", skip="+skip)
        // var rdfaData = null
        if (newSubject) {
          // this.newSubject(current,newSubject)
          if (aboutAtt || resourceAtt || typedResource) {
            var id = newSubject;
            if (typeofAtt && !aboutAtt && !resourceAtt && currentObjectResource) {
              id = currentObjectResource;
            }
            // console.log("Setting data attribute for "+current.localName+" for subject "+id)
            this.newSubjectOrigin(current, id);
          }
        }
        // Sequence Step 7: generate type triple
        if (typedResource) {
          values = this.tokenize(typeofAtt.value);
          for (var _i6 = 0; _i6 < values.length; _i6++) {
            var object = this.parseTermOrCURIEOrAbsURI(values[_i6], vocabulary, context.terms, prefixes, base);
            if (object) {
              this.addTriple(current, typedResource, RDFaProcessor.typeURI, { type: RDFaProcessor.objectURI, value: object });
            }
          }
        }
        // Sequence Step 8: new list mappings if there is a new subject
        // console.log("Step 8: newSubject="+newSubject+", context.parentObject="+context.parentObject)
        if (newSubject && newSubject !== context.parentObject) {
          // console.log("Generating new list mapping for "+newSubject)
          listMapping = {};
          listMappingDifferent = true;
        }
        // Sequence Step 9: generate object triple
        if (currentObjectResource) {
          if (relAtt && inlistAtt) {
            for (var _i7 = 0; _i7 < relAttPredicates.length; _i7++) {
              var _list = listMapping[relAttPredicates[_i7]];
              if (!_list) {
                _list = [];
                listMapping[relAttPredicates[_i7]] = _list;
              }
              _list.push({ type: RDFaProcessor.objectURI, value: currentObjectResource });
            }
          } else if (relAtt) {
            for (var _i8 = 0; _i8 < relAttPredicates.length; _i8++) {
              this.addTriple(current, newSubject, relAttPredicates[_i8], { type: RDFaProcessor.objectURI, value: currentObjectResource });
            }
          }
          if (revAtt) {
            for (var _i9 = 0; _i9 < revAttPredicates.length; _i9++) {
              this.addTriple(current, currentObjectResource, revAttPredicates[_i9], { type: RDFaProcessor.objectURI, value: newSubject });
            }
          }
        } else {
          // Sequence Step 10: incomplete triples
          if (newSubject && !currentObjectResource && (relAtt || revAtt)) {
            currentObjectResource = this.newBlankNode();
            // alert(current.tagName+": generated blank node, newSubject="+newSubject+" currentObjectResource="+currentObjectResource)
          }
          if (relAtt && inlistAtt) {
            for (var _i10 = 0; _i10 < relAttPredicates.length; _i10++) {
              var _list2 = listMapping[relAttPredicates[_i10]];
              if (!_list2) {
                _list2 = [];
                listMapping[predicate] = _list2;
              }
              // console.log("Adding incomplete list for "+predicate)
              incomplete.push({ predicate: relAttPredicates[_i10], list: _list2 });
            }
          } else if (relAtt) {
            for (var _i11 = 0; _i11 < relAttPredicates.length; _i11++) {
              incomplete.push({ predicate: relAttPredicates[_i11], forward: true });
            }
          }
          if (revAtt) {
            for (var _i12 = 0; _i12 < revAttPredicates.length; _i12++) {
              incomplete.push({ predicate: revAttPredicates[_i12], forward: false });
            }
          }
        }
        // Step 11: Current property values
        if (propertyAtt) {
          var datatype = null;
          var content = null;
          if (datatypeAtt) {
            datatype = datatypeAtt.value === '' ? RDFaProcessor.PlainLiteralURI : this.parseTermOrCURIEOrAbsURI(datatypeAtt.value, vocabulary, context.terms, prefixes, base);
            if (datetimeAtt && !contentAtt) {
              content = datetimeAtt.value;
            } else {
              content = datatype === RDFaProcessor.XMLLiteralURI || datatype === RDFaProcessor.HTMLLiteralURI ? null : contentAtt ? contentAtt.value : current.textContent;
            }
          } else if (contentAtt) {
            datatype = RDFaProcessor.PlainLiteralURI;
            content = contentAtt.value;
          } else if (datetimeAtt) {
            content = datetimeAtt.value;
            datatype = RDFaProcessor.deriveDateTimeType(content);
            if (!datatype) {
              datatype = RDFaProcessor.PlainLiteralURI;
            }
          } else if (!relAtt && !revAtt) {
            if (resourceAtt) {
              content = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base);
            }
            if (!content && hrefAtt) {
              content = this.resolveAndNormalize(base, encodeURI(hrefAtt.value));
            } else if (!content && srcAtt) {
              content = this.resolveAndNormalize(base, encodeURI(srcAtt.value));
            }
            if (content) {
              datatype = RDFaProcessor.objectURI;
            }
          }
          if (!datatype) {
            if (typeofAtt && !aboutAtt) {
              datatype = RDFaProcessor.objectURI;
              content = typedResource;
            } else {
              content = current.textContent;
              if (this.inHTMLMode && current.localName === 'time') {
                datatype = RDFaProcessor.deriveDateTimeType(content);
              }
              if (!datatype) {
                datatype = RDFaProcessor.PlainLiteralURI;
              }
            }
          }
          values = this.tokenize(propertyAtt.value);
          for (var _i13 = 0; _i13 < values.length; _i13++) {
            var _predicate2 = this.parsePredicate(values[_i13], vocabulary, context.terms, prefixes, base);
            if (_predicate2) {
              if (inlistAtt) {
                var _list3 = listMapping[_predicate2];
                if (!_list3) {
                  _list3 = [];
                  listMapping[_predicate2] = _list3;
                }
                _list3.push(datatype === RDFaProcessor.XMLLiteralURI || datatype === RDFaProcessor.HTMLLiteralURI ? { type: datatype, value: current.childNodes } : { type: datatype ? datatype : RDFaProcessor.PlainLiteralURI, value: content, language: language });
              } else {
                if (datatype === RDFaProcessor.XMLLiteralURI || datatype === RDFaProcessor.HTMLLiteralURI) {
                  this.addTriple(current, newSubject, _predicate2, { type: datatype, value: current.childNodes });
                } else {
                  this.addTriple(current, newSubject, _predicate2, { type: datatype ? datatype : RDFaProcessor.PlainLiteralURI, value: content, language: language });
                  // console.log(newSubject+" "+predicate+"="+content)
                }
              }
            }
          }
        }
        // Sequence Step 12: complete incomplete triples with new subject
        if (newSubject && !skip) {
          for (var _i14 = 0; _i14 < context.incomplete.length; _i14++) {
            if (context.incomplete[_i14].list) {
              // console.log("Adding subject "+newSubject+" to list for "+context.incomplete[i].predicate)
              // TODO: it is unclear what to do here
              context.incomplete[_i14].list.push({ type: RDFaProcessor.objectURI, value: newSubject });
            } else if (context.incomplete[_i14].forward) {
              // console.log(current.tagName+": completing forward triple "+context.incomplete[i].predicate+" with object="+newSubject)
              this.addTriple(current, context.subject, context.incomplete[_i14].predicate, { type: RDFaProcessor.objectURI, value: newSubject });
            } else {
              // console.log(current.tagName+": completing reverse triple with object="+context.subject)
              this.addTriple(current, newSubject, context.incomplete[_i14].predicate, { type: RDFaProcessor.objectURI, value: context.subject });
            }
          }
        }
        var childContext = null;
        var listSubject = newSubject;
        if (skip) {
          // TODO: should subject be null?
          childContext = this.push(context, context.subject);
          // TODO: should the entObject be passed along?  If not, then intermediary children will keep properties from being associated with incomplete triples.
          // TODO: Verify: if the current baseURI has changed and the parentObject is the parent's base URI, then the baseURI should change
          childContext.parentObject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;
          childContext.incomplete = context.incomplete;
          childContext.language = language;
          childContext.prefixes = prefixes;
          childContext.vocabulary = vocabulary;
        } else {
          childContext = this.push(context, newSubject);
          childContext.parentObject = currentObjectResource ? currentObjectResource : newSubject ? newSubject : context.subject;
          childContext.prefixes = prefixes;
          childContext.incomplete = incomplete;
          if (currentObjectResource) {
            // console.log("Generating new list mapping for "+currentObjectResource)
            listSubject = currentObjectResource;
            listMapping = {};
            listMappingDifferent = true;
          }
          childContext.listMapping = listMapping;
          childContext.language = language;
          childContext.vocabulary = vocabulary;
        }
        if (listMappingDifferent) {
          // console.log("Pushing list parent "+current.localName)
          queue.unshift({ parent: current, context: context, subject: listSubject, listMapping: listMapping });
        }
        for (var child = current.lastChild; child; child = child.previousSibling) {
          if (child.nodeType === Node.ELEMENT_NODE) {
            // console.log("Pushing child "+child.localName)
            child.baseURI = current.baseURI;
            queue.unshift({ current: child, context: childContext });
          }
        }
      }
      if (this.inHTMLMode) {
        this.copyProperties();
      }
      for (var _i15 = 0; _i15 < this.finishedHandlers.length; _i15++) {
        this.finishedHandlers[_i15](node);
      }
    }
  }, {
    key: 'push',
    value: function push(parent, subject) {
      return {
        parent: parent,
        subject: subject ? subject : parent ? parent.subject : null,
        parentObject: null,
        incomplete: [],
        listMapping: parent ? parent.listMapping : {},
        language: parent ? parent.language : this.language,
        prefixes: parent ? parent.prefixes : this.target.graph.prefixes,
        terms: parent ? parent.terms : this.target.graph.terms,
        vocabulary: parent ? parent.vocabulary : this.vocabulary
      };
    }
  }, {
    key: 'resolveAndNormalize',
    value: function resolveAndNormalize(base, uri) {
      // console.log("Joining " + uri + " to " + base + " making " +  Uri.join(uri, base))
      return Uri.join(uri, base); // @@ normalize?
    }
  }, {
    key: 'setContext',
    value: function setContext(node) {
      // We only recognized XHTML+RDFa 1.1 if the version is set propertyly
      if (node.localName === 'html' && node.getAttribute('version') === 'XHTML+RDFa 1.1') {
        this.setXHTMLContext();
      } else if (node.localName === 'html' || node.namespaceURI === 'http://www.w3.org/1999/xhtml') {
        if (typeof document !== 'undefined' && document.doctype) {
          if (document.doctype.publicId === '-//W3C//DTD XHTML+RDFa 1.0//EN' && document.doctype.systemId === 'http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd') {
            console.log('WARNING: RDF 1.0 is not supported.  Defaulting to HTML5 mode.');
            this.setHTMLContext();
          } else if (document.doctype.publicId === '-//W3C//DTD XHTML+RDFa 1.1//EN' && document.doctype.systemId === 'http://www.w3.org/MarkUp/DTD/xhtml-rdfa-2.dtd') {
            this.setXHTMLContext();
          } else {
            this.setHTMLContext();
          }
        } else {
          this.setHTMLContext();
        }
      } else {
        this.setXMLContext();
      }
    }
  }, {
    key: 'setHTMLContext',
    value: function setHTMLContext() {
      this.setInitialContext();
      this.langAttributes = [{
        namespaceURI: 'http://www.w3.org/XML/1998/namespace',
        localName: 'lang'
      }, { namespaceURI: null, localName: 'lang' }];
      this.inXHTMLMode = false;
      this.inHTMLMode = true;
    }
  }, {
    key: 'setInitialContext',
    value: function setInitialContext() {
      this.vocabulary = null;
      // By default, the prefixes are terms are loaded to the RDFa 1.1. standard within the graph constructor
      this.langAttributes = [{
        namespaceURI: 'http://www.w3.org/XML/1998/namespace',
        localName: 'lang'
      }];
    }
  }, {
    key: 'setXHTMLContext',
    value: function setXHTMLContext() {
      this.setInitialContext();
      this.inXHTMLMode = true;
      this.inHTMLMode = false;
      this.langAttributes = [{
        namespaceURI: 'http://www.w3.org/XML/1998/namespace',
        localName: 'lang' }, { namespaceURI: null, localName: 'lang' }];
      // From http://www.w3.org/2011/rdfa-context/xhtml-rdfa-1.1
      this.target.graph.terms['alternate'] = 'http://www.w3.org/1999/xhtml/vocab#alternate';
      this.target.graph.terms['appendix'] = 'http://www.w3.org/1999/xhtml/vocab#appendix';
      this.target.graph.terms['bookmark'] = 'http://www.w3.org/1999/xhtml/vocab#bookmark';
      this.target.graph.terms['cite'] = 'http://www.w3.org/1999/xhtml/vocab#cite';
      this.target.graph.terms['chapter'] = 'http://www.w3.org/1999/xhtml/vocab#chapter';
      this.target.graph.terms['contents'] = 'http://www.w3.org/1999/xhtml/vocab#contents';
      this.target.graph.terms['copyright'] = 'http://www.w3.org/1999/xhtml/vocab#copyright';
      this.target.graph.terms['first'] = 'http://www.w3.org/1999/xhtml/vocab#first';
      this.target.graph.terms['glossary'] = 'http://www.w3.org/1999/xhtml/vocab#glossary';
      this.target.graph.terms['help'] = 'http://www.w3.org/1999/xhtml/vocab#help';
      this.target.graph.terms['icon'] = 'http://www.w3.org/1999/xhtml/vocab#icon';
      this.target.graph.terms['index'] = 'http://www.w3.org/1999/xhtml/vocab#index';
      this.target.graph.terms['last'] = 'http://www.w3.org/1999/xhtml/vocab#last';
      this.target.graph.terms['license'] = 'http://www.w3.org/1999/xhtml/vocab#license';
      this.target.graph.terms['meta'] = 'http://www.w3.org/1999/xhtml/vocab#meta';
      this.target.graph.terms['next'] = 'http://www.w3.org/1999/xhtml/vocab#next';
      this.target.graph.terms['prev'] = 'http://www.w3.org/1999/xhtml/vocab#prev';
      this.target.graph.terms['previous'] = 'http://www.w3.org/1999/xhtml/vocab#previous';
      this.target.graph.terms['section'] = 'http://www.w3.org/1999/xhtml/vocab#section';
      this.target.graph.terms['stylesheet'] = 'http://www.w3.org/1999/xhtml/vocab#stylesheet';
      this.target.graph.terms['subsection'] = 'http://www.w3.org/1999/xhtml/vocab#subsection';
      this.target.graph.terms['start'] = 'http://www.w3.org/1999/xhtml/vocab#start';
      this.target.graph.terms['top'] = 'http://www.w3.org/1999/xhtml/vocab#top';
      this.target.graph.terms['up'] = 'http://www.w3.org/1999/xhtml/vocab#up';
      this.target.graph.terms['p3pv1'] = 'http://www.w3.org/1999/xhtml/vocab#p3pv1';
      // other
      this.target.graph.terms['related'] = 'http://www.w3.org/1999/xhtml/vocab#related';
      this.target.graph.terms['role'] = 'http://www.w3.org/1999/xhtml/vocab#role';
      this.target.graph.terms['transformation'] = 'http://www.w3.org/1999/xhtml/vocab#transformation';
    }
  }, {
    key: 'setXMLContext',
    value: function setXMLContext() {
      this.setInitialContext();
      this.inXHTMLMode = false;
      this.inHTMLMode = false;
    }
  }, {
    key: 'tokenize',
    value: function tokenize(str) {
      return this.trim(str).split(/\s+/);
    }
  }, {
    key: 'toRDFNodeObject',
    value: function toRDFNodeObject(x) {
      if (typeof x === 'undefined') return undefined;
      if (typeof x === 'string') {
        if (x.substring(0, 2) === '_:') {
          if (typeof this.blankNodes[x.substring(2)] === 'undefined') {
            this.blankNodes[x.substring(2)] = new BlankNode(x.substring(2));
          }
          return this.blankNodes[x.substring(2)];
        }
        return rdf.namedNode(x);
      }
      switch (x.type) {
        case RDFaProcessor.objectURI:
          if (x.value.substring(0, 2) === '_:') {
            if (typeof this.blankNodes[x.value.substring(2)] === 'undefined') {
              this.blankNodes[x.value.substring(2)] = new BlankNode(x.value.substring(2));
            }
            return this.blankNodes[x.value.substring(2)];
          }
          return rdf.namedNode(x.value);
        case RDFaProcessor.PlainLiteralURI:
          return new Literal(x.value, x.language || '');
        case RDFaProcessor.XMLLiteralURI:
        case RDFaProcessor.HTMLLiteralURI:
          var string = '';
          Object.keys(x.value).forEach(function (i) {
            string += Util.domToString(x.value[i], this.htmlOptions);
          });
          return new Literal(string, '', new NamedNode(x.type));
        default:
          return new Literal(x.value, '', new NamedNode(x.type));
      }
    }
  }, {
    key: 'trim',
    value: function trim(str) {
      return str.replace(/^\s\s*/, '').replace(/\s\s*$/, '');
    }
  }], [{
    key: 'parseRDFaDOM',
    value: function parseRDFaDOM(dom, kb, base) {
      var p = new RDFaProcessor(kb, { 'base': base });
      dom.baseURI = base;
      p.process(dom);
    }
  }]);

  return RDFaProcessor;
}();

RDFaProcessor.XMLLiteralURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral';
RDFaProcessor.HTMLLiteralURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#HTML';
RDFaProcessor.PlainLiteralURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral';
RDFaProcessor.objectURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#object';
RDFaProcessor.typeURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';
RDFaProcessor.nameChar = '[-A-Z_a-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�က0-F.0-9·̀-ͯ‿-⁀]';
RDFaProcessor.nameStartChar = '[A-Za-zÀ-ÖØ-öø-ÿĀ-ıĴ-ľŁ-ňŊ-žƀ-ǃǍ-ǰǴ-ǵǺ-ȗɐ-ʨʻ-ˁΆΈ-ΊΌΎ-ΡΣ-ώϐ-ϖϚϜϞϠϢ-ϳЁ-ЌЎ-яё-ќў-ҁҐ-ӄӇ-ӈӋ-ӌӐ-ӫӮ-ӵӸ-ӹԱ-Ֆՙա-ֆא-תװ-ײء-غف-يٱ-ڷں-ھۀ-ێې-ۓەۥ-ۦअ-हऽक़-ॡঅ-ঌএ-ঐও-নপ-রলশ-হড়-ঢ়য়-ৡৰ-ৱਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઋઍએ-ઑઓ-નપ-રલ-ળવ-હઽૠଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଶ-ହଽଡ଼-ଢ଼ୟ-ୡஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-வஷ-ஹఅ-ఌఎ-ఐఒ-నప-ళవ-హౠ-ౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹೞೠ-ೡഅ-ഌഎ-ഐഒ-നപ-ഹൠ-ൡก-ฮะา-ำเ-ๅກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ຮະາ-ຳຽເ-ໄཀ-ཇཉ-ཀྵႠ-Ⴥა-ჶᄀᄂ-ᄃᄅ-ᄇᄉᄋ-ᄌᄎ-ᄒᄼᄾᅀᅌᅎᅐᅔ-ᅕᅙᅟ-ᅡᅣᅥᅧᅩᅭ-ᅮᅲ-ᅳᅵᆞᆨᆫᆮ-ᆯᆷ-ᆸᆺᆼ-ᇂᇫᇰᇹḀ-ẛẠ-ỹἀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼΩK-Å℮ↀ-ↂぁ-ゔァ-ヺㄅ-ㄬ가-힣一-龥〇〡-〩_]';
RDFaProcessor.NCNAME = new RegExp('^' + RDFaProcessor.nameStartChar + RDFaProcessor.nameChar + '*$');

/*
RDFaProcessor.prototype.resolveAndNormalize = function(base,href) {
   var u = base.resolve(href)
   var parsed = this.parseURI(u)
   parsed.normalize()
   return parsed.spec
}
*/

RDFaProcessor.dateTimeTypes = [{ pattern: /-?P(?:[0-9]+Y)?(?:[0-9]+M)?(?:[0-9]+D)?(?:T(?:[0-9]+H)?(?:[0-9]+M)?(?:[0-9]+(?:\.[0-9]+)?S)?)?/,
  type: 'http://www.w3.org/2001/XMLSchema#duration' }, { pattern: /-?(?:[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9])-[0-9][0-9]-[0-9][0-9]T(?:[0-1][0-9]|2[0-4]):[0-5][0-9]:[0-5][0-9](?:\.[0-9]+)?(?:Z|[+\-][0-9][0-9]:[0-9][0-9])?/,
  type: 'http://www.w3.org/2001/XMLSchema#dateTime' }, { pattern: /-?(?:[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9])-[0-9][0-9]-[0-9][0-9](?:Z|[+\-][0-9][0-9]:[0-9][0-9])?/,
  type: 'http://www.w3.org/2001/XMLSchema#date' }, { pattern: /(?:[0-1][0-9]|2[0-4]):[0-5][0-9]:[0-5][0-9](?:\.[0-9]+)?(?:Z|[+\-][0-9][0-9]:[0-9][0-9])?/,
  type: 'http://www.w3.org/2001/XMLSchema#time' }, { pattern: /-?(?:[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9])-[0-9][0-9]/,
  type: 'http://www.w3.org/2001/XMLSchema#gYearMonth' }, { pattern: /-?[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9]/,
  type: 'http://www.w3.org/2001/XMLSchema#gYear' }];

module.exports = RDFaProcessor;
},{"./blank-node":53,"./data-factory":57,"./literal":65,"./named-node":68,"./uri":83,"./util":84}],76:[function(require,module,exports){
'use strict';

/**
 * @fileoverview
 *  RDF/XML PARSER
 *
 * Version 0.1
 *  Parser believed to be in full positive RDF/XML parsing compliance
 *  with the possible exception of handling deprecated RDF attributes
 *  appropriately. Parser is believed to comply fully with other W3C
 *  and industry standards where appropriate (DOM, ECMAScript, &c.)
 *
 *  Author: David Sheets <dsheets@mit.edu>
 *
 * W3C® SOFTWARE NOTICE AND LICENSE
 * http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231
 * This work (and included software, documentation such as READMEs, or
 * other related items) is being provided by the copyright holders under
 * the following license. By obtaining, using and/or copying this work,
 * you (the licensee) agree that you have read, understood, and will
 * comply with the following terms and conditions.
 *
 * Permission to copy, modify, and distribute this software and its
 * documentation, with or without modification, for any purpose and
 * without fee or royalty is hereby granted, provided that you include
 * the following on ALL copies of the software and documentation or
 * portions thereof, including modifications:
 *
 * 1. The full text of this NOTICE in a location viewable to users of
 * the redistributed or derivative work.
 * 2. Any pre-existing intellectual property disclaimers, notices, or terms and
 * conditions. If none exist, the W3C Software Short Notice should be
 * included (hypertext is preferred, text is permitted) within the body
 * of any redistributed or derivative code.
 * 3. Notice of any changes or modifications to the files, including the
 * date changes were made. (We recommend you provide URIs to the location
 * from which the code is derived.)
 *
 * THIS SOFTWARE AND DOCUMENTATION IS PROVIDED "AS IS," AND COPYRIGHT
 * HOLDERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY OR FITNESS
 * FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE OR
 * DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS,
 * TRADEMARKS OR OTHER RIGHTS.
 *
 * COPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL
 * OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR
 * DOCUMENTATION.
 *
 * The name and trademarks of copyright holders may NOT be used in
 * advertising or publicity pertaining to the software without specific,
 * written prior permission. Title to copyright in this software and any
 * associated documentation will at all times remain with copyright
 * holders.
 */
/**
 * @class Class defining an RDFParser resource object tied to an RDFStore
 *
 * @author David Sheets <dsheets@mit.edu>
 * @version 0.1
 *
 * @constructor
 * @param {RDFStore} store An RDFStore object
 */
var uriUtil = require('./uri');

var RDFParser = function RDFParser(store) {
  var RDFParser = {};

  /** Standard namespaces that we know how to handle @final
   *  @member RDFParser
   */
  RDFParser.ns = { 'RDF': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#', 'RDFS': 'http://www.w3.org/2000/01/rdf-schema#' };

  /** DOM Level 2 node type magic numbers @final
   *  @member RDFParser
   */
  RDFParser.nodeType = { 'ELEMENT': 1, 'ATTRIBUTE': 2, 'TEXT': 3,
    'CDATA_SECTION': 4, 'ENTITY_REFERENCE': 5,
    'ENTITY': 6, 'PROCESSING_INSTRUCTION': 7,
    'COMMENT': 8, 'DOCUMENT': 9, 'DOCUMENT_TYPE': 10,
    'DOCUMENT_FRAGMENT': 11, 'NOTATION': 12 };

  /**
   * Frame class for namespace and base URI lookups
   * Base lookups will always resolve because the parser knows
   * the default base.
   *
   * @private
   */

  this.frameFactory = function (parser, parent, element) {
    return { 'NODE': 1, 'ARC': 2, 'parent': parent, 'parser': parser, 'store': parser.store, 'element': element,
      'lastChild': 0, 'base': null, 'lang': null, 'node': null, 'nodeType': null, 'listIndex': 1, 'rdfid': null, 'datatype': null, 'collection': false, /** Terminate the frame and notify the store that we're done */
      'terminateFrame': function terminateFrame() {
        if (this.collection) {
          this.node.close();
        }
      }, /** Add a symbol of a certain type to the this frame */'addSymbol': function addSymbol(type, uri) {
        uri = uriUtil.join(uri, this.base);
        this.node = this.store.sym(uri);

        this.nodeType = type;
      }, /** Load any constructed triples into the store */'loadTriple': function loadTriple() {
        if (this.parent.parent.collection) {
          this.parent.parent.node.append(this.node);
        } else {
          this.store.add(this.parent.parent.node, this.parent.node, this.node, this.parser.why);
        }
        if (this.parent.rdfid != null) {
          // reify
          var triple = this.store.sym(uriUtil.join('#' + this.parent.rdfid, this.base));
          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'type'), this.store.sym(RDFParser.ns.RDF + 'Statement'), this.parser.why);
          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'subject'), this.parent.parent.node, this.parser.why);
          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'predicate'), this.parent.node, this.parser.why);

          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'object'), this.node, this.parser.why);
        }
      }, /** Check if it's OK to load a triple */'isTripleToLoad': function isTripleToLoad() {
        return this.parent != null && this.parent.parent != null && this.nodeType === this.NODE && this.parent.nodeType === this.ARC && this.parent.parent.nodeType === this.NODE;
      }, /** Add a symbolic node to this frame */'addNode': function addNode(uri) {
        this.addSymbol(this.NODE, uri);
        if (this.isTripleToLoad()) {
          this.loadTriple();
        }
      }, /** Add a collection node to this frame */'addCollection': function addCollection() {
        this.nodeType = this.NODE;
        this.node = this.store.collection();
        this.collection = true;
        if (this.isTripleToLoad()) {
          this.loadTriple();
        }
      }, /** Add a collection arc to this frame */'addCollectionArc': function addCollectionArc() {
        this.nodeType = this.ARC;
      }, /** Add a bnode to this frame */'addBNode': function addBNode(id) {
        if (id != null) {
          if (this.parser.bnodes[id] != null) {
            this.node = this.parser.bnodes[id];
          } else {
            this.node = this.parser.bnodes[id] = this.store.bnode();
          }
        } else {
          this.node = this.store.bnode();
        }
        this.nodeType = this.NODE;
        if (this.isTripleToLoad()) {
          this.loadTriple();
        }
      }, /** Add an arc or property to this frame */'addArc': function addArc(uri) {
        if (uri === RDFParser.ns.RDF + 'li') {
          uri = RDFParser.ns.RDF + '_' + this.parent.listIndex;
          this.parent.listIndex++;
        }

        this.addSymbol(this.ARC, uri);
      }, /** Add a literal to this frame */'addLiteral': function addLiteral(value) {
        if (this.parent.datatype) {
          this.node = this.store.literal(value, '', this.store.sym(this.parent.datatype));
        } else {
          this.node = this.store.literal(value, this.lang);
        }
        this.nodeType = this.NODE;
        if (this.isTripleToLoad()) {
          this.loadTriple();
        }
      }
    };
  };

  // from the OpenLayers source .. needed to get around IE problems.
  this.getAttributeNodeNS = function (node, uri, name) {
    var attributeNode = null;
    if (node.getAttributeNodeNS) {
      attributeNode = node.getAttributeNodeNS(uri, name);
    } else {
      var attributes = node.attributes;
      var potentialNode, fullName;
      for (var i = 0; i < attributes.length; ++i) {
        potentialNode = attributes[i];
        if (potentialNode.namespaceURI === uri) {
          fullName = potentialNode.prefix ? potentialNode.prefix + ':' + name : name;
          if (fullName === potentialNode.nodeName) {
            attributeNode = potentialNode;
            break;
          }
        }
      }
    }
    return attributeNode;
  };

  /** Our triple store reference @private */

  this.store = store; /** Our identified blank nodes @private */
  this.bnodes = {}; /** A context for context-aware stores @private */
  this.why = null; /** Reification flag */
  this.reify = false;

  /**
   * Build our initial scope frame and parse the DOM into triples
   * @param {DOMTree} document The DOM to parse
   * @param {String} base The base URL to use
   * @param {Object} why The context to which this resource belongs
   */

  this.parse = function (document, base, why) {
    var children = document.childNodes; // clean up for the next run
    this.cleanParser(); // figure out the root element
    var root;
    if (document.nodeType === RDFParser.nodeType.DOCUMENT) {
      for (var c = 0; c < children.length; c++) {
        if (children[c].nodeType === RDFParser.nodeType.ELEMENT) {
          root = children[c];
          break;
        }
      }
    } else if (document.nodeType === RDFParser.nodeType.ELEMENT) {
      root = document;
    } else {
      throw new Error("RDFParser: can't find root in " + base + '. Halting. ');
      // return false
    }
    this.why = why; // our topmost frame
    var f = this.frameFactory(this);
    this.base = base;
    f.base = base;
    f.lang = null; // was '' but can't have langs like that 2015 (!)
    this.parseDOM(this.buildFrame(f, root));
    return true;
  };

  this.parseDOM = function (frame) {
    // a DOM utility function used in parsing
    var rdfid;
    var elementURI = function (el) {
      var result = '';
      if (el.namespaceURI == null) {
        throw new Error('RDF/XML syntax error: No namespace for ' + el.localName + ' in ' + this.base);
      }
      if (el.namespaceURI) {
        result = result + el.namespaceURI;
      }
      if (el.localName) {
        result = result + el.localName;
      } else if (el.nodeName) {
        if (el.nodeName.indexOf(':') >= 0) result = result + el.nodeName.split(':')[1];else result = result + el.nodeName;
      }
      return result;
    }.bind(this);
    var dig = true; // if we'll dig down in the tree on the next iter
    while (frame.parent) {
      var dom = frame.element;
      var attrs = dom.attributes;
      if (dom.nodeType === RDFParser.nodeType.TEXT || dom.nodeType === RDFParser.nodeType.CDATA_SECTION) {
        // we have a literal
        if (frame.parent.nodeType === frame.NODE) {
          // must have had attributes, store as rdf:value
          frame.addArc(RDFParser.ns.RDF + 'value');
          frame = this.buildFrame(frame);
        }
        frame.addLiteral(dom.nodeValue);
      } else if (elementURI(dom) !== RDFParser.ns.RDF + 'RDF') {
        // not root
        if (frame.parent && frame.parent.collection) {
          // we're a collection element
          frame.addCollectionArc();
          frame = this.buildFrame(frame, frame.element);
          frame.parent.element = null;
        }
        if (!frame.parent || !frame.parent.nodeType || frame.parent.nodeType === frame.ARC) {
          // we need a node
          var about = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'about');
          rdfid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'ID');
          if (about && rdfid) {
            throw new Error('RDFParser: ' + dom.nodeName + ' has both rdf:id and rdf:about.' + ' Halting. Only one of these' + ' properties may be specified on a' + ' node.');
          }
          if (!about && rdfid) {
            frame.addNode('#' + rdfid.nodeValue);
            dom.removeAttributeNode(rdfid);
          } else if (about == null && rdfid == null) {
            var bnid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'nodeID');
            if (bnid) {
              frame.addBNode(bnid.nodeValue);
              dom.removeAttributeNode(bnid);
            } else {
              frame.addBNode();
            }
          } else {
            frame.addNode(about.nodeValue);
            dom.removeAttributeNode(about);
          }
          // Typed nodes
          var rdftype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'type');
          if (RDFParser.ns.RDF + 'Description' !== elementURI(dom)) {
            rdftype = { 'nodeValue': elementURI(dom) };
          }
          if (rdftype != null) {
            this.store.add(frame.node, this.store.sym(RDFParser.ns.RDF + 'type'), this.store.sym(uriUtil.join(rdftype.nodeValue, frame.base)), this.why);
            if (rdftype.nodeName) {
              dom.removeAttributeNode(rdftype);
            }
          }
          // Property Attributes
          for (var x = attrs.length - 1; x >= 0; x--) {
            this.store.add(frame.node, this.store.sym(elementURI(attrs[x])), this.store.literal(attrs[x].nodeValue, frame.lang), this.why);
          }
        } else {
          // we should add an arc (or implicit bnode+arc)
          frame.addArc(elementURI(dom)); // save the arc's rdf:ID if it has one
          if (this.reify) {
            rdfid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'ID');
            if (rdfid) {
              frame.rdfid = rdfid.nodeValue;
              dom.removeAttributeNode(rdfid);
            }
          }
          var parsetype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'parseType');
          var datatype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'datatype');
          if (datatype) {
            frame.datatype = datatype.nodeValue;
            dom.removeAttributeNode(datatype);
          }
          if (parsetype) {
            var nv = parsetype.nodeValue;
            if (nv === 'Literal') {
              frame.datatype = RDFParser.ns.RDF + 'XMLLiteral'; // (this.buildFrame(frame)).addLiteral(dom)
              // should work but doesn't
              frame = this.buildFrame(frame);
              frame.addLiteral(dom);
              dig = false;
            } else if (nv === 'Resource') {
              frame = this.buildFrame(frame, frame.element);
              frame.parent.element = null;
              frame.addBNode();
            } else if (nv === 'Collection') {
              frame = this.buildFrame(frame, frame.element);
              frame.parent.element = null;
              frame.addCollection();
            }
            dom.removeAttributeNode(parsetype);
          }
          if (attrs.length !== 0) {
            var resource = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'resource');
            var bnid2 = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'nodeID');
            frame = this.buildFrame(frame);
            if (resource) {
              frame.addNode(resource.nodeValue);
              dom.removeAttributeNode(resource);
            } else {
              if (bnid2) {
                frame.addBNode(bnid2.nodeValue);
                dom.removeAttributeNode(bnid2);
              } else {
                frame.addBNode();
              }
            }
            for (var x1 = attrs.length - 1; x1 >= 0; x1--) {
              var f = this.buildFrame(frame);
              f.addArc(elementURI(attrs[x1]));
              if (elementURI(attrs[x1]) === RDFParser.ns.RDF + 'type') {
                this.buildFrame(f).addNode(attrs[x1].nodeValue);
              } else {
                this.buildFrame(f).addLiteral(attrs[x1].nodeValue);
              }
            }
          } else if (dom.childNodes.length === 0) {
            this.buildFrame(frame).addLiteral('');
          }
        }
      } // rdf:RDF
      // dig dug
      dom = frame.element;
      while (frame.parent) {
        var pframe = frame;
        while (dom == null) {
          frame = frame.parent;
          dom = frame.element;
        }
        var candidate = dom.childNodes && dom.childNodes[frame.lastChild];
        if (!candidate || !dig) {
          frame.terminateFrame();
          if (!(frame = frame.parent)) {
            break;
          } // done
          dom = frame.element;
          dig = true;
        } else if (candidate.nodeType !== RDFParser.nodeType.ELEMENT && candidate.nodeType !== RDFParser.nodeType.TEXT && candidate.nodeType !== RDFParser.nodeType.CDATA_SECTION || (candidate.nodeType === RDFParser.nodeType.TEXT || candidate.nodeType === RDFParser.nodeType.CDATA_SECTION) && dom.childNodes.length !== 1) {
          frame.lastChild++;
        } else {
          // not a leaf
          frame.lastChild++;
          frame = this.buildFrame(pframe, dom.childNodes[frame.lastChild - 1]);
          break;
        }
      }
    } // while
  };

  /**
   * Cleans out state from a previous parse run
   * @private
   */
  this.cleanParser = function () {
    this.bnodes = {};
    this.why = null;
  };

  /**
   * Builds scope frame
   * @private
   */
  this.buildFrame = function (parent, element) {
    var frame = this.frameFactory(this, parent, element);
    if (parent) {
      frame.base = parent.base;
      frame.lang = parent.lang;
    }
    if (!element || element.nodeType === RDFParser.nodeType.TEXT || element.nodeType === RDFParser.nodeType.CDATA_SECTION) {
      return frame;
    }
    var attrs = element.attributes;
    var base = element.getAttributeNode('xml:base');
    if (base != null) {
      frame.base = base.nodeValue;
      element.removeAttribute('xml:base');
    }
    var lang = element.getAttributeNode('xml:lang');
    if (lang != null) {
      frame.lang = lang.nodeValue;
      element.removeAttribute('xml:lang');
    }
    // remove all extraneous xml and xmlns attributes
    for (var x = attrs.length - 1; x >= 0; x--) {
      if (attrs[x].nodeName.substr(0, 3) === 'xml') {
        if (attrs[x].name.slice(0, 6) === 'xmlns:') {
          var uri = attrs[x].nodeValue; // alert('base for namespac attr:'+this.base)
          if (this.base) uri = uriUtil.join(uri, this.base);
          this.store.setPrefixForURI(attrs[x].name.slice(6), uri);
        }
        //		alert('rdfparser: xml atribute: '+attrs[x].name) //@@
        element.removeAttributeNode(attrs[x]);
      }
    }
    return frame;
  };
};

module.exports = RDFParser;
},{"./uri":83}],77:[function(require,module,exports){
'use strict';

module.exports = serialize;

var convert = require('./convert');
var Serializer = require('./serializer');

/**
 * Serialize to the appropriate format
 * @@ Currently NQuads and JSON/LD are deal with extrelemently inefficiently
 * through mutiple conversions.
 */
function serialize(target, kb, base, contentType, callback, options) {
  base = base || target.uri;
  options = options || {};
  contentType = contentType || 'text/turtle'; // text/n3 if complex?
  var documentString = null;
  try {
    var sz = Serializer(kb);
    if (options.flags) sz.setFlags(options.flags);
    var newSts = kb.statementsMatching(undefined, undefined, undefined, target);
    var n3String;
    sz.suggestNamespaces(kb.namespaces);
    sz.setBase(base);
    switch (contentType) {
      case 'application/rdf+xml':
        documentString = sz.statementsToXML(newSts);
        return executeCallback(null, documentString);
      case 'text/n3':
      case 'application/n3':
        // Legacy
        documentString = sz.statementsToN3(newSts);
        return executeCallback(null, documentString);
      case 'text/turtle':
      case 'application/x-turtle':
        // Legacy
        sz.setFlags('si'); // Suppress = for sameAs and => for implies
        documentString = sz.statementsToN3(newSts);
        return executeCallback(null, documentString);
      case 'application/n-triples':
        sz.setFlags('deinprstux'); // Suppress nice parts of N3 to make ntriples
        documentString = sz.statementsToNTriples(newSts);
        return executeCallback(null, documentString);
      case 'application/ld+json':
        sz.setFlags('deinprstux'); // Use adapters to connect to incmpatible parser
        n3String = sz.statementsToNTriples(newSts);
        // n3String = sz.statementsToN3(newSts)
        convert.convertToJson(n3String, callback);
        break;
      case 'application/n-quads':
      case 'application/nquads':
        // @@@ just outpout the quads? Does not work for collections
        sz.setFlags('deinprstux q'); // Suppress nice parts of N3 to make ntriples
        documentString = sz.statementsToNTriples(newSts); // q in flag means actually quads
        return executeCallback(null, documentString);
        // n3String = sz.statementsToN3(newSts)
        // documentString = convert.convertToNQuads(n3String, callback)
        break;
      default:
        throw new Error('Serialize: Content-type ' + contentType + ' not supported for data write.');
    }
  } catch (err) {
    if (callback) {
      return callback(err);
    }
    throw err; // Don't hide problems from caller in sync mode
  }

  function executeCallback(err, result) {
    if (callback) {
      callback(err, result);
      return;
    } else {
      return result;
    }
  }
}
},{"./convert":56,"./serializer":78}],78:[function(require,module,exports){
'use strict';

/*      Serialization of RDF Graphs
**
** Tim Berners-Lee 2006
** This is was http://dig.csail.mit.edu/2005/ajar/ajaw/js/rdf/serialize.js
** This is or was https://github.com/linkeddata/rdflib.js/blob/master/src/serializer.js
** Licence: MIT
*/
var NamedNode = require('./named-node');
var BlankNode = require('./blank-node');
var Uri = require('./uri');
var Util = require('./util');
var XSD = require('./xsd');

var Serializer = function () {
  var __Serializer = function __Serializer(store) {
    this.flags = '';
    this.base = null;

    this.prefixes = []; // suggested prefixes
    this.namespaces = []; // complementary indexes

    this.suggestPrefix('rdf', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#'); // XML code assumes this!
    this.suggestPrefix('xml', 'reserved:reservedForFutureUse'); // XML reserves xml: in the spec.

    this.namespacesUsed = []; // Count actually used and so needed in @prefixes
    this.keywords = ['a']; // The only one we generate at the moment
    this.prefixchars = 'abcdefghijklmnopqustuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    this.incoming = null; // Array not calculated yet
    this.formulas = []; // remebering original formulae from hashes
    this.store = store;
  };

  __Serializer.prototype.setBase = function (base) {
    this.base = base;return this;
  };

  __Serializer.prototype.setFlags = function (flags) {
    this.flags = flags || '';return this;
  };

  __Serializer.prototype.toStr = function (x) {
    var s = x.toNT();
    if (x.termType === 'Graph') {
      this.formulas[s] = x; // remember as reverse does not work
    }
    return s;
  };

  __Serializer.prototype.fromStr = function (s) {
    if (s[0] === '{') {
      var x = this.formulas[s];
      if (!x) console.log('No formula object for ' + s);
      return x;
    }
    return this.store.fromNT(s);
  };
  /* Accumulate Namespaces
  **
  ** These are only hints.  If two overlap, only one gets used
  ** There is therefore no guarantee in general.
  */
  __Serializer.prototype.suggestPrefix = function (prefix, uri) {
    if (prefix.slice(0, 7) === 'default') return; // Try to weed these out
    if (prefix.slice(0, 2) === 'ns') return; //  From others inferior algos
    if (!prefix || !uri) return; // empty strings not suitable
    if (prefix in this.namespaces || uri in this.prefixes) return; // already used
    this.prefixes[uri] = prefix;
    this.namespaces[prefix] = uri;
  };

  // Takes a namespace -> prefix map
  __Serializer.prototype.suggestNamespaces = function (namespaces) {
    for (var px in namespaces) {
      this.suggestPrefix(px, namespaces[px]);
      return this;
    }
  };

  __Serializer.prototype.checkIntegrity = function () {
    var p, ns;
    for (p in this.namespaces) {
      if (this.prefixes[this.namespaces[p]] !== p) {
        throw new Error('Serializer integity error 1: ' + p + ', ' + this.namespaces[p] + ', ' + this.prefixes[this.namespaces[p]] + '!');
      }
    }
    for (ns in this.prefixes) {
      if (this.namespaces[this.prefixes[ns]] !== ns) {
        throw new Error('Serializer integity error 2: ' + ns + ', ' + this.prefixs[ns] + ', ' + this.namespaces[this.prefixes[ns]] + '!');
      }
    }
  };

  // Make up an unused prefix for a random namespace
  __Serializer.prototype.makeUpPrefix = function (uri) {
    var p = uri;
    function canUseMethod(pp) {
      if (!__Serializer.prototype.validPrefix.test(pp)) return false; // bad format
      if (pp === 'ns') return false; // boring
      if (pp in this.namespaces) return false; // already used
      this.prefixes[uri] = pp;
      this.namespaces[pp] = uri;
      return pp;
    }
    var canUse = canUseMethod.bind(this);

    if ('#/'.indexOf(p[p.length - 1]) >= 0) p = p.slice(0, -1);
    var slash = p.lastIndexOf('/');
    if (slash >= 0) p = p.slice(slash + 1);
    var i = 0;
    while (i < p.length) {
      if (this.prefixchars.indexOf(p[i])) {
        i++;
      } else {
        break;
      }
    }
    p = p.slice(0, i);

    if (p.length < 6 && canUse(p)) return p; // exact is best
    if (canUse(p.slice(0, 3))) return p.slice(0, 3);
    if (canUse(p.slice(0, 2))) return p.slice(0, 2);
    if (canUse(p.slice(0, 4))) return p.slice(0, 4);
    if (canUse(p.slice(0, 1))) return p.slice(0, 1);
    if (canUse(p.slice(0, 5))) return p.slice(0, 5);
    if (!__Serializer.prototype.validPrefix.test(p)) {
      p = 'n'; // Otherwise the loop below may never termimnate
    }
    for (var j = 0;; j++) {
      if (canUse(p.slice(0, 3) + j)) return p.slice(0, 3) + j;
    }
  };

  __Serializer.prototype.rootSubjects = function (sts) {
    var incoming = {};
    var subjects = {};
    var allBnodes = {};

    /* This scan is to find out which nodes will have to be the roots of trees
    ** in the serialized form. This will be any symbols, and any bnodes
    ** which hve more or less than one incoming arc, and any bnodes which have
    ** one incoming arc but it is an uninterrupted loop of such nodes back to itself.
    ** This should be kept linear time with repect to the number of statements.
    ** Note it does not use any indexing of the store.
    */
    for (var i = 0; i < sts.length; i++) {
      var st = sts[i];
      var checkMentions = function checkMentions(x) {
        if (!incoming.hasOwnProperty(x)) incoming[x] = [];
        incoming[x].push(st.subject); // List of things which will cause this to be printed
      };
      var st2 = [st.subject, st.predicate, st.object];
      st2.map(function (y) {
        if (y.termType === 'BlankNode') {
          allBnodes[y.toNT()] = true;
        } else if (y.termType === 'Collection') {
          y.elements.forEach(function (z) {
            checkMentions(z); // bnodes in collections important
          });
        }
      });
      checkMentions(sts[i].object);
      var ss = subjects[this.toStr(st.subject)]; // Statements with this as subject
      if (!ss) ss = [];
      ss.push(st);
      subjects[this.toStr(st.subject)] = ss; // Make hash. @@ too slow for formula?
    }

    var roots = [];
    for (var xNT in subjects) {
      if (!subjects.hasOwnProperty(xNT)) continue;
      var y = this.fromStr(xNT);
      if (y.termType !== 'BlankNode' || !incoming[y] || incoming[y].length !== 1) {
        roots.push(y);
        continue;
      }
    }
    this.incoming = incoming; // Keep for serializing @@ Bug for nested formulas

    // Now do the scan using existing roots
    var rootsHash = {};
    for (var k = 0; k < roots.length; k++) {
      rootsHash[roots[k].toNT()] = true;
    }
    return { 'roots': roots, 'subjects': subjects,
      'rootsHash': rootsHash, 'incoming': incoming };
  };

  // //////////////////////////////////////////////////////

  __Serializer.prototype.toN3 = function (f) {
    return this.statementsToN3(f.statements);
  };

  __Serializer.prototype._notQNameChars = '\t\r\n !"#$%&\'()*.,+/;<=>?@[\\]^`{|}~';
  __Serializer.prototype._notNameChars = __Serializer.prototype._notQNameChars + ':';

  __Serializer.prototype.explicitURI = function (uri) {
    if (this.flags.indexOf('r') < 0 && this.base) {
      uri = Uri.refTo(this.base, uri);
    } else if (this.flags.indexOf('u') >= 0) {
      // Unicode encoding NTriples style
      uri = backslashUify(uri);
    } else {
      uri = hexify(uri);
    }
    return '<' + uri + '>';
  };

  __Serializer.prototype.statementsToNTriples = function (sts) {
    var sorted = sts.slice();
    sorted.sort();
    var str = '';
    var rdfns = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';
    var self = this;
    var kb = this.store;
    var termToNT = function termToNT(x) {
      if (x.termType !== 'Collection') {
        return self.atomicTermToN3(x);
      }
      var list = x.elements;
      var rest = kb.sym(rdfns + 'nill');
      for (var i = list.length - 1; i >= 0; i--) {
        var bnode = new BlankNode();
        str += termToNT(bnode) + ' ' + termToNT(kb.sym(rdfns + 'first')) + ' ' + termToNT(list[i]) + '.\n';
        str += termToNT(bnode) + ' ' + termToNT(kb.sym(rdfns + 'rest')) + ' ' + termToNT(rest) + '.\n';
        rest = bnode;
      }
      return self.atomicTermToN3(rest);
    };
    for (var i = 0; i < sorted.length; i++) {
      var st = sorted[i];
      var s = '';
      s += termToNT(st.subject) + ' ';
      s += termToNT(st.predicate) + ' ';
      s += termToNT(st.object) + ' ';
      if (this.flags.indexOf('q') >= 0) {
        // Do quads not nrtiples
        s += termToNT(st.why) + ' ';
      }
      s += '.\n';
      str += s;
    }
    return str;
  };

  __Serializer.prototype.statementsToN3 = function (sts) {
    var indent = 4;
    var width = 80;
    var kb = this.store;
    // A URI Map alows us to put the type statemnts at the top.
    var uriMap = { 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type': 'aaa:00' };
    var SPO = function SPO(x, y) {
      // Do limited canonicalization of bnodes
      return Util.heavyCompareSPO(x, y, kb, uriMap);
    };
    sts.sort(SPO);

    if (this.base && !this.defaultNamespace) {
      this.defaultNamespace = this.base + '#';
    }

    var predMap = {};
    if (this.flags.indexOf('s') < 0) {
      predMap['http://www.w3.org/2002/07/owl#sameAs'] = '=';
    }
    if (this.flags.indexOf('t') < 0) {
      predMap['http://www.w3.org/1999/02/22-rdf-syntax-ns#type'] = 'a';
    }
    if (this.flags.indexOf('i') < 0) {
      predMap['http://www.w3.org/2000/10/swap/log#implies'] = '=>';
    }
    // //////////////////////// Arrange the bits of text

    var spaces = function spaces(n) {
      var s = '';
      for (var i = 0; i < n; i++) {
        s += ' ';
      }return s;
    };

    var treeToLine = function treeToLine(tree) {
      var str = '';
      for (var i = 0; i < tree.length; i++) {
        var branch = tree[i];
        var s2 = typeof branch === 'string' ? branch : treeToLine(branch);
        // Note the space before the dot in case statement ends 123. which is in fact allowed but be conservative.
        if (i !== 0) {
          var ch = str.slice(-1) || ' ';
          if (s2 === ',' || s2 === ';') {
            // no gap
          } else if (s2 === '.' && !'0123456789.'.includes(ch)) {// no gap except after number
            // no gap
          } else {
            str += ' '; // separate from previous token
          }
        }
        str += s2;
      }
      return str;
    };

    // Convert a nested tree of lists and strings to a string
    var treeToString = function treeToString(tree, level) {
      var str = '';
      var lastLength = 100000;
      if (level === undefined) level = -1;
      for (var i = 0; i < tree.length; i++) {
        var branch = tree[i];
        if (typeof branch !== 'string') {
          var substr = treeToString(branch, level + 1);
          if (substr.length < 10 * (width - indent * level) && substr.indexOf('"""') < 0) {
            // Don't mess up multiline strings
            var line = treeToLine(branch);
            if (line.length < width - indent * level) {
              branch = line; //   Note! treat as string below
              substr = '';
            }
          }
          if (substr) lastLength = 10000;
          str += substr;
        }
        if (typeof branch === 'string') {
          if (branch.length === 1 && str.slice(-1) === '\n') {
            if (',.;'.indexOf(branch) >= 0) {
              str = str.slice(0, -1) + branch + '\n'; //  slip punct'n on end
              lastLength += 1;
              continue;
            }
          }
          if (lastLength < indent * level + 4 || // if new line not necessary
          lastLength + branch.length + 1 < width && ';.'.indexOf(str[str.length - 2]) < 0) {
            // or the string fits on last line
            str = str.slice(0, -1) + ' ' + branch + '\n'; // then continue on this line
            lastLength += branch.length + 1;
          } else {
            var _line = spaces(indent * level) + branch;
            str += _line + '\n';
            lastLength = _line.length;
            if (level < 0) {
              str += '\n'; // extra blank line
              lastLength = 100000; // don't touch
            }
          }
        }
      }
      return str;
    };

    // //////////////////////////////////////////// Structure for N3
    // Convert a set of statements into a nested tree of lists and strings
    function statementListToTreeMethod(statements) {
      var stats = this.rootSubjects(statements);
      var roots = stats.roots;
      var results = [];
      for (var i = 0; i < roots.length; i++) {
        var root = roots[i];
        results.push(subjectTree(root, stats));
      }
      return results;
    }
    var statementListToTree = statementListToTreeMethod.bind(this);

    // The tree for a subject
    function subjectTree(subject, stats) {
      if (subject.termType === 'BlankNode' && !stats.incoming[subject]) {
        return objectTree(subject, stats, true).concat(['.']); // Anonymous bnode subject
      }
      return [termToN3(subject, stats)].concat([propertyTree(subject, stats)]).concat(['.']);
    }
    // The property tree for a single subject or anonymous node
    function propertyTreeMethod(subject, stats) {
      var results = [];
      var lastPred = null;
      var sts = stats.subjects[this.toStr(subject)] || []; // relevant statements
      if (typeof sts === 'undefined') {
        throw new Error('Cant find statements for ' + subject);
      }

      var objects = [];
      for (var i = 0; i < sts.length; i++) {
        var st = sts[i];
        if (st.predicate.uri === lastPred) {
          objects.push(',');
        } else {
          if (lastPred) {
            results = results.concat([objects]).concat([';']);
            objects = [];
          }
          results.push(predMap[st.predicate.uri] ? predMap[st.predicate.uri] : termToN3(st.predicate, stats));
        }
        lastPred = st.predicate.uri;
        objects.push(objectTree(st.object, stats));
      }
      results = results.concat([objects]);
      return results;
    }
    var propertyTree = propertyTreeMethod.bind(this);

    function objectTreeMethod(obj, stats, force) {
      if (obj.termType === 'BlankNode' && (force || stats.rootsHash[obj.toNT()] === undefined)) {
        // if not a root
        if (stats.subjects[this.toStr(obj)]) {
          return ['[', propertyTree(obj, stats), ']'];
        } else {
          return '[]';
        }
      }
      return termToN3(obj, stats);
    }
    var objectTree = objectTreeMethod.bind(this);

    function termToN3Method(expr, stats) {
      //
      var i, res;
      switch (expr.termType) {
        case 'Graph':
          res = ['{'];
          res = res.concat(statementListToTree(expr.statements));
          return res.concat(['}']);

        case 'Collection':
          res = ['('];
          for (i = 0; i < expr.elements.length; i++) {
            res.push([objectTree(expr.elements[i], stats)]);
          }
          res.push(')');
          return res;

        default:
          return this.atomicTermToN3(expr);
      }
    }
    __Serializer.prototype.termToN3 = termToN3;
    var termToN3 = termToN3Method.bind(this);

    function prefixDirectivesMethod() {
      var str = '';
      if (this.defaultNamespace) {
        str += '@prefix : ' + this.explicitURI(this.defaultNamespace) + '.\n';
      }
      for (var ns in this.prefixes) {
        if (!this.prefixes.hasOwnProperty(ns)) continue;
        if (!this.namespacesUsed[ns]) continue;
        str += '@prefix ' + this.prefixes[ns] + ': ' + this.explicitURI(ns) + '.\n';
      }
      return str + '\n';
    }
    var prefixDirectives = prefixDirectivesMethod.bind(this);
    // Body of statementsToN3:
    var tree = statementListToTree(sts);
    return prefixDirectives() + treeToString(tree);
  };
  // //////////////////////////////////////////// Atomic Terms

  //  Deal with term level things and nesting with no bnode structure
  __Serializer.prototype.atomicTermToN3 = function atomicTermToN3(expr, stats) {
    switch (expr.termType) {
      case 'BlankNode':
      case 'Variable':
        return expr.toNT();
      case 'Literal':
        var val = expr.value.toString(); // should be a string already
        if (expr.datatype && this.flags.indexOf('x') < 0) {
          // Supress native numbers
          switch (expr.datatype.uri) {

            case 'http://www.w3.org/2001/XMLSchema#integer':
              return val;

            case 'http://www.w3.org/2001/XMLSchema#decimal':
              // In urtle must have dot
              if (val.indexOf('.') < 0) val += '.0';
              return val;

            case 'http://www.w3.org/2001/XMLSchema#double':
              // Must force use of 'e'
              if (val.indexOf('.') < 0) val += '.0';
              if (val.indexOf('e') < 0) val += 'e0';
              return val;

            case 'http://www.w3.org/2001/XMLSchema#boolean':
              return expr.value ? 'true' : 'false';
          }
        }
        var str = this.stringToN3(expr.value);
        if (expr.language) {
          str += '@' + expr.language;
        } else if (!expr.datatype.equals(XSD.string)) {
          str += '^^' + this.atomicTermToN3(expr.datatype, stats);
        }
        return str;
      case 'NamedNode':
        return this.symbolToN3(expr);
      default:
        throw new Error('Internal: atomicTermToN3 cannot handle ' + expr + ' of termType: ' + expr.termType);
    }
  };

  //  stringToN3:  String escaping for N3

  __Serializer.prototype.validPrefix = new RegExp(/^[a-zA-Z][a-zA-Z0-9]*$/);

  __Serializer.prototype.forbidden1 = new RegExp(/[\\"\b\f\r\v\t\n\u0080-\uffff]/gm);
  __Serializer.prototype.forbidden3 = new RegExp(/[\\"\b\f\r\v\u0080-\uffff]/gm);
  __Serializer.prototype.stringToN3 = function stringToN3(str, flags) {
    if (!flags) flags = 'e';
    var res = '';
    var i, j, k;
    var delim;
    var forbidden;
    if (str.length > 20 && // Long enough to make sense
    str.slice(-1) !== '"' && // corner case'
    flags.indexOf('n') < 0 && ( // Force single line
    str.indexOf('\n') > 0 || str.indexOf('"') > 0)) {
      delim = '"""';
      forbidden = __Serializer.prototype.forbidden3;
    } else {
      delim = '"';
      forbidden = __Serializer.prototype.forbidden1;
    }
    for (i = 0; i < str.length;) {
      forbidden.lastIndex = 0;
      var m = forbidden.exec(str.slice(i));
      if (m == null) break;
      j = i + forbidden.lastIndex - 1;
      res += str.slice(i, j);
      var ch = str[j];
      if (ch === '"' && delim === '"""' && str.slice(j, j + 3) !== '"""') {
        res += ch;
      } else {
        k = '\b\f\r\t\v\n\\"'.indexOf(ch); // No escaping of bell (7)?
        if (k >= 0) {
          res += '\\' + 'bfrtvn\\"'[k];
        } else {
          if (flags.indexOf('e') >= 0) {
            // Unicode escaping in strings not unix style
            res += '\\u' + ('000' + ch.charCodeAt(0).toString(16).toLowerCase()).slice(-4);
          } else {
            // no 'e' flag
            res += ch;
          }
        }
      }
      i = j + 1;
    }
    return delim + res + str.slice(i) + delim;
  };
  //  A single symbol, either in  <> or namespace notation

  __Serializer.prototype.symbolToN3 = function symbolToN3(x) {
    // c.f. symbolString() in notation3.py
    var uri = x.uri;
    var j = uri.indexOf('#');
    if (j < 0 && this.flags.indexOf('/') < 0) {
      j = uri.lastIndexOf('/');
    }
    if (j >= 0 && this.flags.indexOf('p') < 0 && (
    // Can split at namespace but only if http[s]: URI or file: or ws[s] (why not others?)
    uri.indexOf('http') === 0 || uri.indexOf('ws') === 0 || uri.indexOf('file') === 0)) {
      var canSplit = true;
      for (var k = j + 1; k < uri.length; k++) {
        if (__Serializer.prototype._notNameChars.indexOf(uri[k]) >= 0) {
          canSplit = false;
          break;
        }
      }
      /*
            if (uri.slice(0, j + 1) === this.base + '#') { // base-relative
              if (canSplit) {
                return ':' + uri.slice(j + 1) // assume deafult ns is local
              } else {
                return '<#' + uri.slice(j + 1) + '>'
              }
            }
      */
      if (canSplit) {
        var localid = uri.slice(j + 1);
        var namesp = uri.slice(0, j + 1);
        if (this.defaultNamespace && this.defaultNamespace === namesp && this.flags.indexOf('d') < 0) {
          // d -> suppress default
          if (this.flags.indexOf('k') >= 0 && this.keyords.indexOf(localid) < 0) {
            return localid;
          }
          return ':' + localid;
        }
        // this.checkIntegrity() //  @@@ Remove when not testing
        var prefix = this.prefixes[namesp];
        if (!prefix) prefix = this.makeUpPrefix(namesp);
        if (prefix) {
          this.namespacesUsed[namesp] = true;
          return prefix + ':' + localid;
        }
        // Fall though if can't do qname
      }
    }
    return this.explicitURI(uri);
  };
  // String escaping utilities

  function hexify(str) {
    // also used in parser
    return encodeURI(str);
  }

  function backslashUify(str) {
    var res = '';
    var k;
    for (var i = 0; i < str.length; i++) {
      k = str.charCodeAt(i);
      if (k > 65535) {
        res += '\\U' + ('00000000' + k.toString(16)).slice(-8); // convert to upper?
      } else if (k > 126) {
        res += '\\u' + ('0000' + k.toString(16)).slice(-4);
      } else {
        res += str[i];
      }
    }
    return res;
  }

  // /////////////////////////// Quad store serialization

  // @para. write  - a function taking a single string to be output
  //
  __Serializer.prototype.writeStore = function (write) {
    var kb = this.store;
    var fetcher = kb.fetcher;
    var session = fetcher && fetcher.appNode;

    // The core data

    var sources = this.store.index[3];
    for (var s in sources) {
      // -> assume we can use -> as short for log:semantics
      var source = kb.fromNT(s);
      if (session && source.sameTerm(session)) continue;
      write('\n' + this.atomicTermToN3(source) + ' ' + this.atomicTermToN3(kb.sym('http://www.w3.org/2000/10/swap/log#semantics')) + ' { ' + this.statementsToN3(kb.statementsMatching(undefined, undefined, undefined, source)) + ' }.\n');
    }

    // The metadata from HTTP interactions:

    kb.statementsMatching(undefined, kb.sym('http://www.w3.org/2007/ont/link#requestedURI')).map(function (st) {
      write('\n<' + st.object.value + '> log:metadata {\n');
      var sts = kb.statementsMatching(undefined, undefined, undefined, st.subject);
      write(this.statementsToN3(this.statementsToN3(sts)));
      write('}.\n');
    });

    // Inferences we have made ourselves not attributable to anyone else

    var metaSources = [];
    if (session) metaSources.push(session);
    var metadata = [];
    metaSources.map(function (source) {
      metadata = metadata.concat(kb.statementsMatching(undefined, undefined, undefined, source));
    });
    write(this.statementsToN3(metadata));
  };

  // ////////////////////////////////////////////// XML serialization

  __Serializer.prototype.statementsToXML = function (sts) {
    var indent = 4;
    var width = 80;

    var namespaceCounts = []; // which have been used
    namespaceCounts['http://www.w3.org/1999/02/22-rdf-syntax-ns#'] = true;

    var liPrefix = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#_'; // prefix for ordered list items

    // //////////////////////// Arrange the bits of XML text

    var spaces = function spaces(n) {
      var s = '';
      for (var i = 0; i < n; i++) {
        s += ' ';
      }return s;
    };

    var XMLtreeToLine = function XMLtreeToLine(tree) {
      var str = '';
      for (var i = 0; i < tree.length; i++) {
        var branch = tree[i];
        var s2 = typeof branch === 'string' ? branch : XMLtreeToLine(branch);
        str += s2;
      }
      return str;
    };

    // Convert a nested tree of lists and strings to a string
    var XMLtreeToString = function XMLtreeToString(tree, level) {
      var str = '';
      var line;
      var lastLength = 100000;
      if (!level) level = 0;
      for (var i = 0; i < tree.length; i++) {
        var branch = tree[i];
        if (typeof branch !== 'string') {
          var substr = XMLtreeToString(branch, level + 1);
          if (substr.length < 10 * (width - indent * level) && substr.indexOf('"""') < 0) {
            // Don't mess up multiline strings
            line = XMLtreeToLine(branch);
            if (line.length < width - indent * level) {
              branch = '   ' + line; //   @@ Hack: treat as string below
              substr = '';
            }
          }
          if (substr) lastLength = 10000;
          str += substr;
        }
        if (typeof branch === 'string') {
          if (lastLength < indent * level + 4) {
            // continue
            str = str.slice(0, -1) + ' ' + branch + '\n';
            lastLength += branch.length + 1;
          } else {
            line = spaces(indent * level) + branch;
            str += line + '\n';
            lastLength = line.length;
          }
        } else {// not string
        }
      }
      return str;
    };

    function statementListToXMLTreeMethod(statements) {
      this.suggestPrefix('rdf', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#');
      var stats = this.rootSubjects(statements);
      var roots = stats.roots;
      var results = [];
      for (var i = 0; i < roots.length; i++) {
        var root = roots[i];
        results.push(subjectXMLTree(root, stats));
      }
      return results;
    }
    var statementListToXMLTree = statementListToXMLTreeMethod.bind(this);

    function escapeForXML(str) {
      if (typeof str === 'undefined') return '@@@undefined@@@@';
      return str.replace(/[&<"]/g, function (m) {
        switch (m[0]) {
          case '&':
            return '&amp;';
          case '<':
            return '&lt;';
          case '"':
            return '&quot;'; // '
        }
      });
    }

    function relURIMethod(term) {
      return escapeForXML(this.base ? Util.uri.refTo(this.base, term.uri) : term.uri);
    }
    var relURI = relURIMethod.bind(this);

    // The tree for a subject
    function subjectXMLTreeMethod(subject, stats) {
      var results = [];
      var type, t, st, pred;
      var sts = stats.subjects[this.toStr(subject)]; // relevant statements
      if (typeof sts === 'undefined') {
        // empty bnode
        return propertyXMLTree(subject, stats);
      }

      // Sort only on the predicate, leave the order at object
      // level undisturbed.  This leaves multilingual content in
      // the order of entry (for partner literals), which helps
      // readability.
      //
      // For the predicate sort, we attempt to split the uri
      // as a hint to the sequence
      sts.sort(function (a, b) {
        var ap = a.predicate.uri;
        var bp = b.predicate.uri;
        if (ap.substring(0, liPrefix.length) === liPrefix || bp.substring(0, liPrefix.length) === liPrefix) {
          // we're only interested in sorting list items
          return ap.localeCompare(bp);
        }

        var as = ap.substring(liPrefix.length);
        var bs = bp.substring(liPrefix.length);
        var an = parseInt(as, 10);
        var bn = parseInt(bs, 10);
        if (isNaN(an) || isNaN(bn) || an !== as || bn !== bs) {
          // we only care about integers
          return ap.localeCompare(bp);
        }

        return an - bn;
      });

      for (var i = 0; i < sts.length; i++) {
        st = sts[i];
        // look for a type
        if (st.predicate.uri === 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type' && !type && st.object.termType === 'symbol') {
          type = st.object;
          continue; // don't include it as a child element
        }

        // see whether predicate can be replaced with "li"
        pred = st.predicate;
        if (pred.uri.substr(0, liPrefix.length) === liPrefix) {
          var number = pred.uri.substr(liPrefix.length);
          // make sure these are actually numeric list items
          var intNumber = parseInt(number, 10);
          if (number === intNumber.toString()) {
            // was numeric; don't need to worry about ordering since we've already
            // sorted the statements
            pred = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#li');
          }
        }

        t = qname(pred);
        switch (st.object.termType) {
          case 'BlankNode':
            if (stats.incoming[st.object].length === 1) {
              // there should always be something in the incoming array for a bnode
              results = results.concat(['<' + t + ' rdf:parseType="Resource">', subjectXMLTree(st.object, stats), '</' + t + '>']);
            } else {
              results = results.concat(['<' + t + ' rdf:nodeID="' + st.object.toNT().slice(2) + '"/>']);
            }
            break;
          case 'NamedNode':
            results = results.concat(['<' + t + ' rdf:resource="' + relURI(st.object) + '"/>']);
            break;
          case 'Literal':
            results = results.concat(['<' + t + (st.object.datatype.equals(XSD.string) ? '' : ' rdf:datatype="' + escapeForXML(st.object.datatype.uri) + '"') + (st.object.language ? ' xml:lang="' + st.object.language + '"' : '') + '>' + escapeForXML(st.object.value) + '</' + t + '>']);
            break;
          case 'Collection':
            results = results.concat(['<' + t + ' rdf:parseType="Collection">', collectionXMLTree(st.object, stats), '</' + t + '>']);
            break;
          default:
            throw new Error("Can't serialize object of type " + st.object.termType + ' into XML');
        } // switch
      }

      var tag = type ? qname(type) : 'rdf:Description';

      var attrs = '';
      if (subject.termType === 'BlankNode') {
        if (!stats.incoming[subject] || stats.incoming[subject].length !== 1) {
          // not an anonymous bnode
          attrs = ' rdf:nodeID="' + subject.toNT().slice(2) + '"';
        }
      } else {
        attrs = ' rdf:about="' + relURI(subject) + '"';
      }

      return ['<' + tag + attrs + '>'].concat([results]).concat(['</' + tag + '>']);
    }

    var subjectXMLTree = subjectXMLTreeMethod.bind(this);

    function collectionXMLTree(subject, stats) {
      var res = [];
      for (var i = 0; i < subject.elements.length; i++) {
        res.push(subjectXMLTree(subject.elements[i], stats));
      }
      return res;
    }

    // The property tree for a single subject or anonymos node
    function propertyXMLTreeMethod(subject, stats) {
      var results = [];
      var sts = stats.subjects[this.toStr(subject)]; // relevant statements
      if (!sts) return results; // No relevant statements
      sts.sort();
      for (var i = 0; i < sts.length; i++) {
        var st = sts[i];
        switch (st.object.termType) {
          case 'BlankNode':
            if (stats.rootsHash[st.object.toNT()]) {
              // This bnode has been done as a root -- no content here @@ what bout first time
              results = results.concat(['<' + qname(st.predicate) + ' rdf:nodeID="' + st.object.toNT().slice(2) + '">', '</' + qname(st.predicate) + '>']);
            } else {
              results = results.concat(['<' + qname(st.predicate) + ' rdf:parseType="Resource">', propertyXMLTree(st.object, stats), '</' + qname(st.predicate) + '>']);
            }
            break;
          case 'NamedNode':
            results = results.concat(['<' + qname(st.predicate) + ' rdf:resource="' + relURI(st.object) + '"/>']);
            break;
          case 'Literal':
            results = results.concat(['<' + qname(st.predicate) + (st.object.datatype.equals(XSD.string) ? '' : ' rdf:datatype="' + escapeForXML(st.object.datatype.value) + '"') + (st.object.language ? ' xml:lang="' + st.object.language + '"' : '') + '>' + escapeForXML(st.object.value) + '</' + qname(st.predicate) + '>']);
            break;
          case 'Collection':
            results = results.concat(['<' + qname(st.predicate) + ' rdf:parseType="Collection">', collectionXMLTree(st.object, stats), '</' + qname(st.predicate) + '>']);
            break;
          default:
            throw new Error("Can't serialize object of type " + st.object.termType + ' into XML');
        } // switch
      }
      return results;
    }
    var propertyXMLTree = propertyXMLTreeMethod.bind(this);

    function qnameMethod(term) {
      var uri = term.uri;

      var j = uri.indexOf('#');
      if (j < 0 && this.flags.indexOf('/') < 0) {
        j = uri.lastIndexOf('/');
      }
      if (j < 0) throw new Error('Cannot make qname out of <' + uri + '>');

      for (var k = j + 1; k < uri.length; k++) {
        if (__Serializer.prototype._notNameChars.indexOf(uri[k]) >= 0) {
          throw new Error('Invalid character "' + uri[k] + '" cannot be in XML qname for URI: ' + uri);
        }
      }
      var localid = uri.slice(j + 1);
      var namesp = uri.slice(0, j + 1);
      if (this.defaultNamespace && this.defaultNamespace === namesp && this.flags.indexOf('d') < 0) {
        // d -> suppress default
        return localid;
      }
      var prefix = this.prefixes[namesp];
      if (!prefix) prefix = this.makeUpPrefix(namesp);
      namespaceCounts[namesp] = true;
      return prefix + ':' + localid;
    }
    var qname = qnameMethod.bind(this);

    // Body of toXML:

    var tree = statementListToXMLTree(sts);
    var str = '<rdf:RDF';
    if (this.defaultNamespace) {
      str += ' xmlns="' + escapeForXML(this.defaultNamespace) + '"';
    }
    for (var ns in namespaceCounts) {
      if (!namespaceCounts.hasOwnProperty(ns)) continue;
      // Rel uris in xml ns is not strictly allowed in the XMLNS spec but needed in practice often
      var ns2 = this.base && this.flags.includes('z') ? Util.uri.refTo(this.base, ns) : ns;
      str += '\n xmlns:' + this.prefixes[ns] + '="' + escapeForXML(ns2) + '"';
    }
    str += '>';

    var tree2 = [str, tree, '</rdf:RDF>']; // @@ namespace declrations
    return XMLtreeToString(tree2, -1);
  }; // End @@ body

  var Serializer = function Serializer(store) {
    return new __Serializer(store);
  };
  return Serializer;
}();

module.exports = Serializer;
},{"./blank-node":53,"./named-node":68,"./uri":83,"./util":84,"./xsd":86}],79:[function(require,module,exports){
'use strict';

// Converting between SPARQL queries and the $rdf query API
/*

function SQuery () {
  this.terms = []
  return this
}

STerm.prototype.toString = STerm.val
SQuery.prototype.add = function (str) {this.terms.push()}*/

var log = require('./log');
var Query = require('./query').Query;
// const Fetcher = require('./fetcher')

/**
 * @SPARQL: SPARQL text that is converted to a query object which is returned.
 * @testMode: testing flag. Prevents loading of sources.
 */
function SPARQLToQuery(SPARQL, testMode, kb) {
  // AJAR_ClearTable()
  var variableHash = [];
  function makeVar(name) {
    if (variableHash[name]) {
      return variableHash[name];
    }
    var newVar = kb.variable(name);
    variableHash[name] = newVar;
    return newVar;
  }

  // term type functions
  function isRealText(term) {
    return typeof term === 'string' && term.match(/[^ \n\t]/);
  }
  function isVar(term) {
    return typeof term === 'string' && term.match(/^[\?\$]/);
  }
  function fixSymbolBrackets(term) {
    if (typeof term === 'string') {
      return term.replace(/^&lt;/, '<').replace(/&gt;$/, '>');
    } else {
      return term;
    }
  }
  function isSymbol(term) {
    return typeof term === 'string' && term.match(/^<[^>]*>$/);
  }
  function isBnode(term) {
    return typeof term === 'string' && (term.match(/^_:/) || term.match(/^$/));
  }
  function isPrefix(term) {
    return typeof term === 'string' && term.match(/:$/);
  }
  function isPrefixedSymbol(term) {
    return typeof term === 'string' && term.match(/^:|^[^_][^:]*:/);
  }
  function getPrefix(term) {
    var a = term.split(':');
    return a[0];
  }
  function getSuffix(term) {
    var a = term.split(':');
    return a[1];
  }
  function removeBrackets(term) {
    if (isSymbol(term)) {
      return term.slice(1, term.length - 1);
    } else {
      return term;
    }
  }
  // takes a string and returns an array of strings and Literals in the place of literals
  function parseLiterals(str) {
    // var sin = (str.indexOf(/[ \n]\'/)==-1)?null:str.indexOf(/[ \n]\'/), doub = (str.indexOf(/[ \n]\"/)==-1)?null:str.indexOf(/[ \n]\"/)
    var sin = str.indexOf("'") === -1 ? null : str.indexOf("'");
    var doub = str.indexOf('"') === -1 ? null : str.indexOf('"');
    // alert("S: "+sin+" D: "+doub)
    if (!sin && !doub) {
      var a = new Array(1);
      a[0] = str;
      return a;
    }
    var res = new Array(2);
    var br;
    var ind;
    if (!sin || doub && doub < sin) {
      br = '"';
      ind = doub;
    } else if (!doub || sin && sin < doub) {
      br = "'";
      ind = sin;
    } else {
      log.error('SQARQL QUERY OOPS!');
      return res;
    }
    res[0] = str.slice(0, ind);
    var end = str.slice(ind + 1).indexOf(br);
    if (end === -1) {
      log.error('SPARQL parsing error: no matching parentheses in literal ' + str);
      return str;
    }
    // alert(str.slice(end + ind + 2).match(/^\^\^/))
    var end2;
    if (str.slice(end + ind + 2).match(/^\^\^/)) {
      end2 = str.slice(end + ind + 2).indexOf(' ');
      // alert(end2)
      res[1] = kb.literal(str.slice(ind + 1, ind + 1 + end), '', kb.sym(removeBrackets(str.slice(ind + 4 + end, ind + 2 + end + end2))));
      // alert(res[1].datatype.uri)
      res = res.concat(parseLiterals(str.slice(end + ind + 3 + end2)));
    } else if (str.slice(end + ind + 2).match(/^@/)) {
      end2 = str.slice(end + ind + 2).indexOf(' ');
      // alert(end2)
      res[1] = kb.literal(str.slice(ind + 1, ind + 1 + end), str.slice(ind + 3 + end, ind + 2 + end + end2), null);
      // alert(res[1].datatype.uri)
      res = res.concat(parseLiterals(str.slice(end + ind + 2 + end2)));
    } else {
      res[1] = kb.literal(str.slice(ind + 1, ind + 1 + end), '', null);
      log.info('Literal found: ' + res[1]);
      res = res.concat(parseLiterals(str.slice(end + ind + 2))); // finds any other literals
    }
    return res;
  }

  function spaceDelimit(str) {
    str = str.replace(/\(/g, ' ( ').replace(/\)/g, ' ) ').replace(/</g, ' <').replace(/>/g, '> ').replace(/{/g, ' { ').replace(/}/g, ' } ').replace(/[\t\n\r]/g, ' ').replace(/; /g, ' ; ').replace(/\. /g, ' . ').replace(/, /g, ' , ');
    log.info('New str into spaceDelimit: \n' + str);
    var res = [];
    var br = str.split(' ');
    for (var x in br) {
      if (isRealText(br[x])) {
        res = res.concat(br[x]);
      }
    }
    return res;
  }

  function replaceKeywords(input) {
    var strarr = input;
    for (var x = 0; x < strarr.length; x++) {
      if (strarr[x] === 'a') {
        strarr[x] = '<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>';
      }
      if (strarr[x] === 'is' && strarr[x + 2] === 'of') {
        strarr.splice(x, 1);
        strarr.splice(x + 1, 1);
        var s = strarr[x - 1];
        strarr[x - 1] = strarr[x + 1];
        strarr[x + 1] = s;
      }
    }
    return strarr;
  }

  function toTerms(input) {
    var res = [];
    for (var x = 0; x < input.length; x++) {
      if (typeof input[x] !== 'string') {
        res[x] = input[x];
        continue;
      }
      input[x] = fixSymbolBrackets(input[x]);
      if (isVar(input[x])) {
        res[x] = makeVar(input[x].slice(1));
      } else if (isBnode(input[x])) {
        log.info(input[x] + ' was identified as a bnode.');
        res[x] = kb.bnode();
      } else if (isSymbol(input[x])) {
        log.info(input[x] + ' was identified as a symbol.');
        res[x] = kb.sym(removeBrackets(input[x]));
      } else if (isPrefixedSymbol(input[x])) {
        log.info(input[x] + ' was identified as a prefixed symbol');
        if (prefixes[getPrefix(input[x])]) {
          res[x] = kb.sym(input[x] = prefixes[getPrefix(input[x])] + getSuffix(input[x]));
        } else {
          log.error('SPARQL error: ' + input[x] + ' with prefix ' + getPrefix(input[x]) + ' does not have a correct prefix entry.');
          res[x] = input[x];
        }
      } else {
        res[x] = input[x];
      }
    }
    return res;
  }

  function tokenize(str) {
    var token1 = parseLiterals(str);
    var token2 = [];
    for (var x in token1) {
      if (typeof token1[x] === 'string') {
        token2 = token2.concat(spaceDelimit(token1[x]));
      } else {
        token2 = token2.concat(token1[x]);
      }
    }
    token2 = replaceKeywords(token2);
    log.info('SPARQL Tokens: ' + token2);
    return token2;
  }

  // CASE-INSENSITIVE
  function arrayIndexOf(str, arr) {
    for (var i = 0; i < arr.length; i++) {
      if (typeof arr[i] !== 'string') {
        continue;
      }
      if (arr[i].toLowerCase() === str.toLowerCase()) {
        return i;
      }
    }
    // log.warn("No instance of "+str+" in array "+arr)
    return null;
  }

  // CASE-INSENSITIVE
  function arrayIndicesOf(str, arr) {
    var ind = [];
    for (var i = 0; i < arr.length; i++) {
      if (typeof arr[i] !== 'string') {
        continue;
      }
      if (arr[i].toLowerCase() === str.toLowerCase()) {
        ind.push(i);
      }
    }
    return ind;
  }

  function setVars(input, query) {
    log.info('SPARQL vars: ' + input);
    for (var x in input) {
      if (isVar(input[x])) {
        log.info('Added ' + input[x] + ' to query variables from SPARQL');
        var v = makeVar(input[x].slice(1));
        query.vars.push(v);
        v.label = input[x].slice(1);
      } else {
        log.warn('Incorrect SPARQL variable in SELECT: ' + input[x]);
      }
    }
  }

  function getPrefixDeclarations(input) {
    var prefInd = arrayIndicesOf('PREFIX', input);
    var res = [];
    for (var i in prefInd) {
      var a = input[prefInd[i] + 1];
      var b = input[prefInd[i] + 2];
      if (!isPrefix(a)) {
        log.error('Invalid SPARQL prefix: ' + a);
      } else if (!isSymbol(b)) {
        log.error('Invalid SPARQL symbol: ' + b);
      } else {
        log.info('Prefix found: ' + a + ' -> ' + b);
        var pref = getPrefix(a);
        var symbol = removeBrackets(b);
        res[pref] = symbol;
      }
    }
    return res;
  }

  function getMatchingBracket(arr, open, close) {
    log.info('Looking for a close bracket of type ' + close + ' in ' + arr);
    var index = 0;
    for (var i = 0; i < arr.length; i++) {
      if (arr[i] === open) {
        index++;
      }
      if (arr[i] === close) {
        index--;
      }
      if (index < 0) {
        return i;
      }
    }
    log.error('Statement had no close parenthesis in SPARQL query');
    return 0;
  }

  function constraintGreaterThan(value) {
    this.describe = function (varstr) {
      return varstr + ' > ' + value.toNT();
    };
    this.test = function (term) {
      if (term.value.match(/[0-9]+(\.[0-9]+)?([eE][+-]?[0-9]+)?/)) {
        return parseFloat(term.value) > parseFloat(value);
      } else {
        return term.toNT() > value.toNT();
      }
    };
    return this;
  }

  function constraintLessThan(value) {
    // this is not the recommended usage. Should only work on literal, numeric, dateTime
    this.describe = function (varstr) {
      return varstr + ' < ' + value.toNT();
    };
    this.test = function (term) {
      // this.describe = function (varstr) { return varstr + " < "+value }
      if (term.value.match(/[0-9]+(\.[0-9]+)?([eE][+-]?[0-9]+)?/)) {
        return parseFloat(term.value) < parseFloat(value);
      } else {
        return term.toNT() < value.toNT();
      }
    };
    return this;
  }
  // This should only work on literals but doesn't.
  function ConstraintEqualTo(value) {
    this.describe = function (varstr) {
      return varstr + ' = ' + value.toNT();
    };
    this.test = function (term) {
      return value.sameTerm(term);
    };
    return this;
  }

  // value must be a literal
  function ConstraintRegexp(value) {
    this.describe = function (varstr) {
      return "REGEXP( '" + value + "' , " + varstr + ' )';
    };
    this.test = function (term) {
      var str = value;
      // str = str.replace(/^//,"").replace(//$/,"")
      var rg = new RegExp(str);
      if (term.value) {
        return rg.test(term.value);
      } else {
        return false;
      }
    };
  }

  function setConstraint(input, pat) {
    if (input.length === 3 && input[0].termType === 'Variable' && (input[2].termType === 'NamedNode' || input[2].termType === 'Literal')) {
      if (input[1] === '=') {
        log.debug('Constraint added: ' + input);
        pat.constraints[input[0]] = new ConstraintEqualTo(input[2]);
      } else if (input[1] === '>') {
        log.debug('Constraint added: ' + input);
        pat.constraints[input[0]] = new ConstraintEqualTo(input[2]);
      } else if (input[1] === '<') {
        log.debug('Constraint added: ' + input);
        pat.constraints[input[0]] = new ConstraintEqualTo(input[2]);
      } else {
        log.warn("I don't know how to handle the constraint: " + input);
      }
    } else if (input.length === 6 && typeof input[0] === 'string' && input[0].toLowerCase() === 'regexp' && input[1] === '(' && input[5] === ')' && input[3] === ',' && input[4].termType === 'Variable' && input[2].termType === 'Literal') {
      log.debug('Constraint added: ' + input);
      pat.constraints[input[4]] = new ConstraintRegexp(input[2].value);
    }
    // log.warn("I don't know how to handle the constraint: "+input)
    // alert("length: "+input.length+" input 0 type: "+input[0].termType+" input 1: "+input[1]+" input[2] type: "+input[2].termType)
  }

  function setOptional(terms, pat) {
    log.debug('Optional query: ' + terms + ' not yet implemented.');
    var opt = kb.formula();
    setWhere(terms, opt);
    pat.optional.push(opt);
  }

  function setWhere(input, pat) {
    var terms = toTerms(input);
    var end;
    log.debug('WHERE: ' + terms);
    var opt;
    // var opt = arrayIndicesOf("OPTIONAL",terms)
    while (arrayIndexOf('OPTIONAL', terms)) {
      opt = arrayIndexOf('OPTIONAL', terms);
      log.debug('OPT: ' + opt + ' ' + terms[opt] + ' in ' + terms);
      if (terms[opt + 1] !== '{') {
        log.warn('Bad optional opening bracket in word ' + opt);
      }
      end = getMatchingBracket(terms.slice(opt + 2), '{', '}');
      if (end === -1) {
        log.error('No matching bracket in word ' + opt);
      } else {
        setOptional(terms.slice(opt + 2, opt + 2 + end), pat);
        // alert(pat.statements[0].toNT())
        opt = arrayIndexOf('OPTIONAL', terms);
        end = getMatchingBracket(terms.slice(opt + 2), '{', '}');
        terms.splice(opt, end + 3);
      }
    }
    log.debug('WHERE after optionals: ' + terms);
    while (arrayIndexOf('FILTER', terms)) {
      var filt = arrayIndexOf('FILTER', terms);
      if (terms[filt + 1] !== '(') {
        log.warn('Bad filter opening bracket in word ' + filt);
      }
      end = getMatchingBracket(terms.slice(filt + 2), '(', ')');
      if (end === -1) {
        log.error('No matching bracket in word ' + filt);
      } else {
        setConstraint(terms.slice(filt + 2, filt + 2 + end), pat);
        filt = arrayIndexOf('FILTER', terms);
        end = getMatchingBracket(terms.slice(filt + 2), '(', ')');
        terms.splice(filt, end + 3);
      }
    }
    log.debug('WHERE after filters and optionals: ' + terms);
    extractStatements(terms, pat);
  }

  function extractStatements(terms, formula) {
    var arrayZero = new Array(1);
    arrayZero[0] = -1; // this is just to add the beginning of the where to the periods index.
    var per = arrayZero.concat(arrayIndicesOf('.', terms));
    var stat = [];
    for (var x = 0; x < per.length - 1; x++) {
      stat[x] = terms.slice(per[x] + 1, per[x + 1]);
    }
    // Now it's in an array of statements
    for (x in stat) {
      // THIS MUST BE CHANGED FOR COMMA, SEMICOLON
      log.info('s+p+o ' + x + ' = ' + stat[x]);
      var subj = stat[x][0];
      stat[x].splice(0, 1);
      var sem = arrayZero.concat(arrayIndicesOf(';', stat[x]));
      sem.push(stat[x].length);
      var stat2 = [];
      for (var y = 0; y < sem.length - 1; y++) {
        stat2[y] = stat[x].slice(sem[y] + 1, sem[y + 1]);
      }
      for (x in stat2) {
        log.info('p+o ' + x + ' = ' + stat[x]);
        var pred = stat2[x][0];
        stat2[x].splice(0, 1);
        var com = arrayZero.concat(arrayIndicesOf(',', stat2[x]));
        com.push(stat2[x].length);
        var stat3 = [];
        for (y = 0; y < com.length - 1; y++) {
          stat3[y] = stat2[x].slice(com[y] + 1, com[y + 1]);
        }
        for (x in stat3) {
          var obj = stat3[x][0];
          log.info('Subj=' + subj + ' Pred=' + pred + ' Obj=' + obj);
          formula.add(subj, pred, obj);
        }
      }
    }
  }

  // ******************************* Body of SPARQLToQuery ***************************//
  log.info('SPARQL input: \n' + SPARQL);
  var q = new Query();
  var sp = tokenize(SPARQL); // first tokenize everything
  var prefixes = getPrefixDeclarations(sp);
  if (!prefixes.rdf) {
    prefixes.rdf = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';
  }
  if (!prefixes.rdfs) {
    prefixes.rdfs = 'http://www.w3.org/2000/01/rdf-schema#';
  }
  var selectLoc = arrayIndexOf('SELECT', sp);
  var whereLoc = arrayIndexOf('WHERE', sp);
  if (selectLoc < 0 || whereLoc < 0 || selectLoc > whereLoc) {
    log.error('Invalid or nonexistent SELECT and WHERE tags in SPARQL query');
    return false;
  }
  setVars(sp.slice(selectLoc + 1, whereLoc), q);

  setWhere(sp.slice(whereLoc + 2, sp.length - 1), q.pat);

  if (testMode) {
    return q;
  }

  for (var x in q.pat.statements) {
    var st = q.pat.statements[x];
    if (st.subject.termType === 'NamedNode') {
      /* && sf.isPending(st.subject.uri) */ // This doesn't work.
      // sf.requestURI(st.subject.uri,"sparql:"+st.subject) Kenny: I remove these two
      if (kb.fetcher) {
        kb.fetcher.lookUpThing(st.subject, 'sparql:' + st.subject);
      }
    }
    if (st.object.termType === 'NamedNode') {
      /* && sf.isPending(st.object.uri) */
      // sf.requestURI(st.object.uri,"sparql:"+st.object)
      if (kb.fetcher) {
        kb.fetcher.lookUpThing(st.object, 'sparql:' + st.object);
      }
    }
  }
  // alert(q.pat)
  return q;
  // checkVars()
  // *******************************************************************//
}

module.exports = SPARQLToQuery;
},{"./log":66,"./query":74}],80:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Node = require('./node');

var Statement = function () {
  function Statement(subject, predicate, object, graph) {
    _classCallCheck(this, Statement);

    this.subject = Node.fromValue(subject);
    this.predicate = Node.fromValue(predicate);
    this.object = Node.fromValue(object);
    this.why = graph; // property currently used by rdflib
  }

  _createClass(Statement, [{
    key: 'equals',
    value: function equals(other) {
      return other.subject.equals(this.subject) && other.predicate.equals(this.predicate) && other.object.equals(this.object) && other.graph.equals(this.graph);
    }
  }, {
    key: 'substitute',
    value: function substitute(bindings) {
      var y = new Statement(this.subject.substitute(bindings), this.predicate.substitute(bindings), this.object.substitute(bindings), this.why.substitute(bindings)); // 2016
      console.log('@@@ statement substitute:' + y);
      return y;
    }
  }, {
    key: 'toCanonical',
    value: function toCanonical() {
      var terms = [this.subject.toCanonical(), this.predicate.toCanonical(), this.object.toCanonical()];
      if (this.graph && this.graph.termType !== 'DefaultGraph') {
        terms.push(this.graph.toCanonical());
      }
      return terms.join(' ') + ' .';
    }
  }, {
    key: 'toNT',
    value: function toNT() {
      return [this.subject.toNT(), this.predicate.toNT(), this.object.toNT()].join(' ') + ' .';
    }
  }, {
    key: 'toString',
    value: function toString() {
      return this.toNT();
    }
  }, {
    key: 'graph',
    get: function get() {
      return this.why;
    },
    set: function set(g) {
      this.why = g;
    }
  }]);

  return Statement;
}();

module.exports = Statement;
},{"./node":70}],81:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _indexedFormula = require('./indexed-formula');

var _indexedFormula2 = _interopRequireDefault(_indexedFormula);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Joe Presbrey <presbrey@mit.edu>
// 2007-07-15
// 2010-08-08 TimBL folded in Kenny's WEBDAV
// 2010-12-07 TimBL addred local file write code
var docpart = require('./uri').docpart;
var Fetcher = require('./fetcher');
var graph = require('./data-factory').graph;

var namedNode = require('./data-factory').namedNode;
var Namespace = require('./namespace');
var Serializer = require('./serializer');
var uriJoin = require('./uri').join;
var Util = require('./util');

var UpdateManager = function () {
  var sparql = function sparql(store) {
    this.store = store;
    if (store.updater) {
      throw new Error("You can't have two UpdateManagers for the same store");
    }
    if (!store.fetcher) {
      // The store must also/already have a fetcher
      new Fetcher(store);
    }
    store.updater = this;
    this.ifps = {};
    this.fps = {};
    this.ns = {};
    this.ns.link = Namespace('http://www.w3.org/2007/ont/link#');
    this.ns.http = Namespace('http://www.w3.org/2007/ont/http#');
    this.ns.httph = Namespace('http://www.w3.org/2007/ont/httph#');
    this.ns.ldp = Namespace('http://www.w3.org/ns/ldp#');
    this.ns.rdf = Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#');
    this.ns.rdfs = Namespace('http://www.w3.org/2000/01/rdf-schema#');
    this.ns.rdf = Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#');
    this.ns.owl = Namespace('http://www.w3.org/2002/07/owl#');

    this.patchControl = []; // index of objects fro coordinating incomng and outgoing patches
  };

  sparql.prototype.patchControlFor = function (doc) {
    if (!this.patchControl[doc.uri]) {
      this.patchControl[doc.uri] = [];
    }
    return this.patchControl[doc.uri];
  };

  // Returns The method string SPARQL or DAV or LOCALFILE or false if known, undefined if not known.
  //
  // Files have to have a specific annotaton that they are machine written, for safety.
  // We don't actually check for write access on files.
  //
  sparql.prototype.editable = function (uri, kb) {
    if (!uri) {
      return false; // Eg subject is bnode, no known doc to write to
    }
    if (!kb) {
      kb = this.store;
    }

    if (uri.slice(0, 8) === 'file:///') {
      if (kb.holds(kb.sym(uri), namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'), namedNode('http://www.w3.org/2007/ont/link#MachineEditableDocument'))) {
        return 'LOCALFILE';
      }

      var sts = kb.statementsMatching(kb.sym(uri), undefined, undefined);

      console.log('sparql.editable: Not MachineEditableDocument file ' + uri + '\n');
      console.log(sts.map(function (x) {
        return x.toNT();
      }).join('\n'));
      return false;
      // @@ Would be nifty of course to see whether we actually have write acess first.
    }

    var request;
    var definitive = false;
    var requests = kb.each(undefined, this.ns.link('requestedURI'), docpart(uri));

    // Hack for the moment @@@@ 2016-02-12
    if (kb.holds(namedNode(uri), this.ns.rdf('type'), this.ns.ldp('Resource'))) {
      return 'SPARQL';
    }
    var i;
    var method;
    for (var r = 0; r < requests.length; r++) {
      request = requests[r];
      if (request !== undefined) {
        var response = kb.any(request, this.ns.link('response'));
        if (request !== undefined) {
          var acceptPatch = kb.each(response, this.ns.httph('accept-patch'));
          if (acceptPatch.length) {
            for (i = 0; i < acceptPatch.length; i++) {
              method = acceptPatch[i].value.trim();
              if (method.indexOf('application/sparql-update') >= 0) return 'SPARQL';
            }
          }
          var author_via = kb.each(response, this.ns.httph('ms-author-via'));
          if (author_via.length) {
            for (i = 0; i < author_via.length; i++) {
              method = author_via[i].value.trim();
              if (method.indexOf('SPARQL') >= 0) {
                return 'SPARQL';
              }
              if (method.indexOf('DAV') >= 0) {
                return 'DAV';
              }
            }
          }
          var status = kb.each(response, this.ns.http('status'));
          if (status.length) {
            for (i = 0; i < status.length; i++) {
              if (status[i] === 200 || status[i] === 404) {
                definitive = true;
                // return false // A definitive answer
              }
            }
          }
        } else {
          console.log('sparql.editable: No response for ' + uri + '\n');
        }
      }
    }
    if (requests.length === 0) {
      console.log('sparql.editable: No request for ' + uri + '\n');
    } else {
      if (definitive) {
        return false; // We have got a request and it did NOT say editable => not editable
      }
    }
    console.log('sparql.editable: inconclusive for ' + uri + '\n');
    return undefined; // We don't know (yet) as we haven't had a response (yet)
  };

  // /////////  The identification of bnodes

  sparql.prototype.anonymize = function (obj) {
    return obj.toNT().substr(0, 2) === '_:' && this._mentioned(obj) ? '?' + obj.toNT().substr(2) : obj.toNT();
  };

  sparql.prototype.anonymizeNT = function (stmt) {
    return this.anonymize(stmt.subject) + ' ' + this.anonymize(stmt.predicate) + ' ' + this.anonymize(stmt.object) + ' .';
  };

  // A list of all bnodes occuring in a statement
  sparql.prototype._statement_bnodes = function (st) {
    return [st.subject, st.predicate, st.object].filter(function (x) {
      return x.isBlank;
    });
  };

  // A list of all bnodes occuring in a list of statements
  sparql.prototype._statement_array_bnodes = function (sts) {
    var bnodes = [];
    for (var i = 0; i < sts.length; i++) {
      bnodes = bnodes.concat(this._statement_bnodes(sts[i]));
    }
    bnodes.sort(); // in place sort - result may have duplicates
    var bnodes2 = [];
    for (var j = 0; j < bnodes.length; j++) {
      if (j === 0 || !bnodes[j].sameTerm(bnodes[j - 1])) {
        bnodes2.push(bnodes[j]);
      }
    }
    return bnodes2;
  };

  sparql.prototype._cache_ifps = function () {
    // Make a cached list of [Inverse-]Functional properties
    // Call this once before calling context_statements
    this.ifps = {};
    var a = this.store.each(undefined, this.ns.rdf('type'), this.ns.owl('InverseFunctionalProperty'));
    for (var i = 0; i < a.length; i++) {
      this.ifps[a[i].uri] = true;
    }
    this.fps = {};
    a = this.store.each(undefined, this.ns.rdf('type'), this.ns.owl('FunctionalProperty'));
    for (i = 0; i < a.length; i++) {
      this.fps[a[i].uri] = true;
    }
  };

  // Returns a context to bind a given node, up to a given depth
  sparql.prototype._bnode_context2 = function (x, source, depth) {
    // Return a list of statements which indirectly identify a node
    //  Depth > 1 if try further indirection.
    //  Return array of statements (possibly empty), or null if failure
    var sts = this.store.statementsMatching(undefined, undefined, x, source); // incoming links
    var y;
    var res;
    for (var i = 0; i < sts.length; i++) {
      if (this.fps[sts[i].predicate.uri]) {
        y = sts[i].subject;
        if (!y.isBlank) {
          return [sts[i]];
        }
        if (depth) {
          res = this._bnode_context2(y, source, depth - 1);
          if (res) {
            return res.concat([sts[i]]);
          }
        }
      }
    }
    // outgoing links
    sts = this.store.statementsMatching(x, undefined, undefined, source);
    for (i = 0; i < sts.length; i++) {
      if (this.ifps[sts[i].predicate.uri]) {
        y = sts[i].object;
        if (!y.isBlank) {
          return [sts[i]];
        }
        if (depth) {
          res = this._bnode_context2(y, source, depth - 1);
          if (res) {
            return res.concat([sts[i]]);
          }
        }
      }
    }
    return null; // Failure
  };

  // Returns the smallest context to bind a given single bnode
  sparql.prototype._bnode_context_1 = function (x, source) {
    // Return a list of statements which indirectly identify a node
    //   Breadth-first
    var self = this;
    for (var depth = 0; depth < 3; depth++) {
      // Try simple first
      var con = this._bnode_context2(x, source, depth);
      if (con !== null) return con;
    }
    // If we can't guarantee unique with logic just send all info about node
    return this.store.connectedStatements(x, source); // was:
    // throw new Error('Unable to uniquely identify bnode: ' + x.toNT())
  };

  sparql.prototype._mentioned = function (x) {
    return this.store.statementsMatching(x).length !== 0 || // Don't pin fresh bnodes
    this.store.statementsMatching(undefined, x).length !== 0 || this.store.statementsMatching(undefined, undefined, x).length !== 0;
  };

  sparql.prototype._bnode_context = function (bnodes, doc) {
    var context = [];
    if (bnodes.length) {
      this._cache_ifps();
      for (var i = 0; i < bnodes.length; i++) {
        // Does this occur in old graph?
        var bnode = bnodes[i];
        if (!this._mentioned(bnode)) continue;
        context = context.concat(this._bnode_context_1(bnode, doc));
      }
    }
    return context;
  };

  /*  Weird code does not make sense -- some code corruption along the line -- st undefined -- weird
      sparql.prototype._bnode_context = function(bnodes) {
          var context = []
          if (bnodes.length) {
              if (this.store.statementsMatching(st.subject.isBlank?undefined:st.subject,
                                        st.predicate.isBlank?undefined:st.predicate,
                                        st.object.isBlank?undefined:st.object,
                                        st.why).length <= 1) {
                  context = context.concat(st)
              } else {
                  this._cache_ifps()
                  for (x in bnodes) {
                      context = context.concat(this._bnode_context_1(bnodes[x], st.why))
                  }
              }
          }
          return context
      }
  */
  // Returns the best context for a single statement
  sparql.prototype._statement_context = function (st) {
    var bnodes = this._statement_bnodes(st);
    return this._bnode_context(bnodes, st.why);
  };

  sparql.prototype._context_where = function (context) {
    var sparql = this;
    return !context || context.length === 0 ? '' : 'WHERE { ' + context.map(function (x) {
      return sparql.anonymizeNT(x);
    }).join('\n') + ' }\n';
  };

  sparql.prototype._fire = function (uri, query, callback) {
    if (!uri) {
      throw new Error('No URI given for remote editing operation: ' + query);
    }
    console.log('sparql: sending update to <' + uri + '>');
    var xhr = Util.XMLHTTPFactory();
    xhr.options = {};

    xhr.onreadystatechange = function () {
      // dump("SPARQL update ready state for <"+uri+"> readyState="+xhr.readyState+"\n"+query+"\n")
      if (xhr.readyState === 4) {
        var success = !xhr.status || xhr.status >= 200 && xhr.status < 300;
        if (!success) {
          console.log('sparql: update failed for <' + uri + '> status=' + xhr.status + ', ' + xhr.statusText + ', body length=' + xhr.responseText.length + '\n   for query: ' + query);
        } else {
          console.log('sparql: update Ok for <' + uri + '>');
        }
        callback(uri, success, xhr.responseText, xhr);
      }
    };

    xhr.open('PATCH', uri, true); // async=true
    xhr.setRequestHeader('Content-type', 'application/sparql-update');
    xhr.send(query);
  };

  // This does NOT update the statement.
  // It returns an object whcih includes
  //  function which can be used to change the object of the statement.
  //
  sparql.prototype.update_statement = function (statement) {
    if (statement && !statement.why) {
      return;
    }
    var sparql = this;
    var context = this._statement_context(statement);

    return {
      statement: statement ? [statement.subject, statement.predicate, statement.object, statement.why] : undefined,
      statementNT: statement ? this.anonymizeNT(statement) : undefined,
      where: sparql._context_where(context),

      set_object: function set_object(obj, callback) {
        var query = this.where;
        query += 'DELETE DATA { ' + this.statementNT + ' } ;\n';
        query += 'INSERT DATA { ' + this.anonymize(this.statement[0]) + ' ' + this.anonymize(this.statement[1]) + ' ' + this.anonymize(obj) + ' ' + ' . }\n';

        sparql._fire(this.statement[3].uri, query, callback);
      }
    };
  };

  sparql.prototype.insert_statement = function (st, callback) {
    var st0 = st instanceof Array ? st[0] : st;
    var query = this._context_where(this._statement_context(st0));

    if (st instanceof Array) {
      var stText = '';
      for (var i = 0; i < st.length; i++) {
        stText += st[i] + '\n';
      }query += 'INSERT DATA { ' + stText + ' }\n';
    } else {
      query += 'INSERT DATA { ' + this.anonymize(st.subject) + ' ' + this.anonymize(st.predicate) + ' ' + this.anonymize(st.object) + ' ' + ' . }\n';
    }

    this._fire(st0.why.uri, query, callback);
  };

  sparql.prototype.delete_statement = function (st, callback) {
    var st0 = st instanceof Array ? st[0] : st;
    var query = this._context_where(this._statement_context(st0));

    if (st instanceof Array) {
      var stText = '';
      for (var i = 0; i < st.length; i++) {
        stText += st[i] + '\n';
      }query += 'DELETE DATA { ' + stText + ' }\n';
    } else {
      query += 'DELETE DATA { ' + this.anonymize(st.subject) + ' ' + this.anonymize(st.predicate) + ' ' + this.anonymize(st.object) + ' ' + ' . }\n';
    }

    this._fire(st0.why.uri, query, callback);
  };

  //  Request a now or future action to refresh changes coming downstream
  //
  // This is designed to allow the system to re-request the server version,
  // when a websocket has pinged to say there are changes.
  // If thewebsocket, by contrast, has sent a patch, then this may not be necessary.
  // This may be called out of context so *this* cannot be used.

  sparql.prototype.requestDownstreamAction = function (doc, action) {
    var control = this.patchControlFor(doc);
    if (!control.pendingUpstream) {
      action(doc);
    } else {
      if (control.downstreamAction) {
        if (control.downstreamAction === action) {
          return;
        } else {
          throw new Error("Can't wait for > 1 differnt downstream actions");
        }
      } else {
        control.downstreamAction = action;
      }
    }
  };

  // We want to start counting websockt notifications
  // to distinguish the ones from others from our own.
  sparql.prototype.clearUpstreamCount = function (doc) {
    var control = this.patchControlFor(doc);
    control.upstreamCount = 0;
  };

  sparql.prototype.getUpdatesVia = function (doc) {
    var linkHeaders = this.store.fetcher.getHeader(doc, 'updates-via');
    if (!linkHeaders || !linkHeaders.length) return null;
    return linkHeaders[0].trim();
  };

  sparql.prototype.addDownstreamChangeListener = function (doc, listener) {
    var control = this.patchControlFor(doc);
    if (!control.downstreamChangeListeners) control.downstreamChangeListeners = [];
    control.downstreamChangeListeners.push(listener);
    var self = this;
    this.setRefreshHandler(doc, function (doc) {
      // a function not a method
      self.reloadAndSync(doc);
    });
  };

  sparql.prototype.reloadAndSync = function (doc) {
    var control = this.patchControlFor(doc);
    var updater = this;

    if (control.reloading) {
      console.log('   Already reloading - stop');
      return; // once only needed
    }
    control.reloading = true;
    var retryTimeout = 1000; // ms
    var tryReload = function tryReload() {
      console.log('try reload - timeout = ' + retryTimeout);
      updater.reload(updater.store, doc, function (ok, message, xhr) {
        control.reloading = false;
        if (ok) {
          if (control.downstreamChangeListeners) {
            for (var i = 0; i < control.downstreamChangeListeners.length; i++) {
              console.log('        Calling downstream listener ' + i);
              control.downstreamChangeListeners[i]();
            }
          }
        } else {
          if (xhr.status === 0) {
            console.log('Network error refreshing the data. Retrying in ' + retryTimeout / 1000);
            control.reloading = true;
            retryTimeout = retryTimeout * 2;
            setTimeout(tryReload, retryTimeout);
          } else {
            console.log('Error ' + xhr.status + 'refreshing the data:' + message + '. Stopped' + doc);
          }
        }
      });
    };
    tryReload();
  };

  // Set up websocket to listen on
  //
  // There is coordination between upstream changes and downstream ones
  // so that a reload is not done in the middle of an upsteeam patch.
  // If you usie this API then you get called when a change happens, and you
  // have to reload the file yourself, and then refresh the UI.
  // Alternative is addDownstreamChangeListener(), where you do not
  // have to do the reload yourslf. Do mot mix them.
  //
  //  kb contains the HTTP  metadata from prefvious operations
  //
  sparql.prototype.setRefreshHandler = function (doc, handler) {
    var wssURI = this.getUpdatesVia(doc); // relative
    // var kb = this.store
    var theHandler = handler;
    var self = this;
    var updater = this;
    var retryTimeout = 1500; // *2 will be 3 Seconds, 6, 12, etc
    var retries = 0;

    if (!wssURI) {
      console.log('Server doies not support live updates thoughUpdates-Via :-(');
      return false;
    }

    wssURI = uriJoin(wssURI, doc.uri);
    wssURI = wssURI.replace(/^http:/, 'ws:').replace(/^https:/, 'wss:');
    console.log('Web socket URI ' + wssURI);

    var openWebsocket = function openWebsocket() {
      // From https://github.com/solid/solid-spec#live-updates
      var socket;
      if (typeof WebSocket !== 'undefined') {
        socket = new WebSocket(wssURI);
      } else if (typeof Services !== 'undefined') {
        // Firefox add on http://stackoverflow.com/questions/24244886/is-websocket-supported-in-firefox-for-android-addons
        socket = Services.wm.getMostRecentWindow('navigator:browser').WebSocket(wssURI);
      } else if (typeof window !== 'undefined' && window.WebSocket) {
        socket = window.WebSocket(wssURI);
      } else {
        console.log('Live update disabled, as WebSocket not supported by platform :-(');
        return;
      }
      socket.onopen = function () {
        console.log('    websocket open');
        retryTimeout = 1500; // reset timeout to fast on success
        this.send('sub ' + doc.uri);
        if (retries) {
          console.log('Web socket has been down, better check for any news.');
          updater.requestDownstreamAction(doc, theHandler);
        }
      };
      var control = self.patchControlFor(doc);
      control.upstreamCount = 0;

      // https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent
      //
      // 1000	CLOSE_NORMAL	Normal closure; the connection successfully completed whatever purpose for which it was created.
      // 1001	CLOSE_GOING_AWAY	The endpoint is going away, either
      //                                  because of a server failure or because the browser is navigating away from the page that opened the connection.
      // 1002	CLOSE_PROTOCOL_ERROR	The endpoint is terminating the connection due to a protocol error.
      // 1003	CLOSE_UNSUPPORTED	The connection is being terminated because the endpoint
      //                                  received data of a type it cannot accept (for example, a text-only endpoint received binary data).
      // 1004                             Reserved. A meaning might be defined in the future.
      // 1005	CLOSE_NO_STATUS	Reserved.  Indicates that no status code was provided even though one was expected.
      // 1006	CLOSE_ABNORMAL	Reserved. Used to indicate that a connection was closed abnormally (
      //
      //
      socket.onclose = function (event) {
        console.log('*** Websocket closed with code ' + event.code + ", reason '" + event.reason + "' clean = " + event.clean);
        retryTimeout *= 2;
        retries += 1;
        console.log('Retrying in ' + retryTimeout + 'ms'); // (ask user?)
        setTimeout(function () {
          console.log('Trying websocket again');
          openWebsocket();
        }, retryTimeout);
      };
      socket.onmessage = function (msg) {
        if (msg.data && msg.data.slice(0, 3) === 'pub') {
          if ('upstreamCount' in control) {
            control.upstreamCount -= 1;
            if (control.upstreamCount >= 0) {
              console.log('just an echo: ' + control.upstreamCount);
              return; // Just an echo
            }
          }
          console.log('Assume a real downstream change: ' + control.upstreamCount + ' -> 0');
          control.upstreamCount = 0;
          self.requestDownstreamAction(doc, theHandler);
        }
      };
    }; // openWebsocket
    openWebsocket();

    return true;
  };

  // This high-level function updates the local store iff the web is changed successfully.
  //
  //  - deletions, insertions may be undefined or single statements or lists or formulae.
  //      (may contain bnodes which can be indirectly identified by a where clause)
  //
  //  - callback is called as callback(uri, success, errorbody)
  //
  sparql.prototype.update = function (deletions, insertions, callback) {
    try {
      var kb = this.store;
      var ds = !deletions ? [] : deletions instanceof _indexedFormula2.default ? deletions.statements : deletions instanceof Array ? deletions : [deletions];
      var is = !insertions ? [] : insertions instanceof _indexedFormula2.default ? insertions.statements : insertions instanceof Array ? insertions : [insertions];
      if (!(ds instanceof Array)) {
        throw new Error('Type Error ' + (typeof ds === 'undefined' ? 'undefined' : _typeof(ds)) + ': ' + ds);
      }
      if (!(is instanceof Array)) {
        throw new Error('Type Error ' + (typeof is === 'undefined' ? 'undefined' : _typeof(is)) + ': ' + is);
      }
      if (ds.length === 0 && is.length === 0) {
        return callback(null, true); // success -- nothing needed to be done.
      }
      var doc = ds.length ? ds[0].why : is[0].why;
      var control = this.patchControlFor(doc);
      var startTime = Date.now();

      var props = ['subject', 'predicate', 'object', 'why'];
      var verbs = ['insert', 'delete'];
      var clauses = { 'delete': ds, 'insert': is };
      verbs.map(function (verb) {
        clauses[verb].map(function (st) {
          if (!doc.sameTerm(st.why)) {
            throw new Error('update: destination ' + doc + ' inconsistent with delete quad ' + st.why);
          }
          props.map(function (prop) {
            if (typeof st[prop] === 'undefined') {
              throw new Error('update: undefined ' + prop + ' of statement.');
            }
          });
        });
      });

      var protocol = this.editable(doc.uri, kb);
      if (!protocol) {
        throw new Error("Can't make changes in uneditable " + doc);
      }
      var i;
      var newSts;
      var documentString;
      var sz;
      if (protocol.indexOf('SPARQL') >= 0) {
        var bnodes = [];
        if (ds.length) bnodes = this._statement_array_bnodes(ds);
        if (is.length) bnodes = bnodes.concat(this._statement_array_bnodes(is));
        var context = this._bnode_context(bnodes, doc);
        var whereClause = this._context_where(context);
        var query = '';
        if (whereClause.length) {
          // Is there a WHERE clause?
          if (ds.length) {
            query += 'DELETE { ';
            for (i = 0; i < ds.length; i++) {
              query += this.anonymizeNT(ds[i]) + '\n';
            }
            query += ' }\n';
          }
          if (is.length) {
            query += 'INSERT { ';
            for (i = 0; i < is.length; i++) {
              query += this.anonymizeNT(is[i]) + '\n';
            }
            query += ' }\n';
          }
          query += whereClause;
        } else {
          // no where clause
          if (ds.length) {
            query += 'DELETE DATA { ';
            for (i = 0; i < ds.length; i++) {
              query += this.anonymizeNT(ds[i]) + '\n';
            }
            query += ' } \n';
          }
          if (is.length) {
            if (ds.length) query += ' ; ';
            query += 'INSERT DATA { ';
            for (i = 0; i < is.length; i++) {
              query += this.anonymizeNT(is[i]) + '\n';
            }
            query += ' }\n';
          }
        }
        // Track pending upstream patches until they have fnished their callback
        control.pendingUpstream = control.pendingUpstream ? control.pendingUpstream + 1 : 1;
        if ('upstreamCount' in control) {
          control.upstreamCount += 1; // count changes we originated ourselves
          console.log('upstream count up to : ' + control.upstreamCount);
        }

        this._fire(doc.uri, query, function (uri, success, body, xhr) {
          xhr.elapsedTime_ms = Date.now() - startTime;
          console.log('    sparql: Return ' + (success ? 'success' : 'FAILURE ' + xhr.status) + ' elapsed ' + xhr.elapsedTime_ms + 'ms');
          if (success) {
            try {
              kb.remove(ds);
            } catch (e) {
              success = false;
              body = 'Remote Ok BUT error deleting ' + ds.length + ' from store!!! ' + e;
            } // Add in any case -- help recover from weirdness??
            for (var i = 0; i < is.length; i++) {
              kb.add(is[i].subject, is[i].predicate, is[i].object, doc);
            }
          }

          callback(uri, success, body, xhr);
          control.pendingUpstream -= 1;
          // When upstream patches have been sent, reload state if downstream waiting
          if (control.pendingUpstream === 0 && control.downstreamAction) {
            var downstreamAction = control.downstreamAction;
            delete control.downstreamAction;
            console.log('delayed downstream action:');
            downstreamAction(doc);
          }
        });
      } else if (protocol.indexOf('DAV') >= 0) {
        // The code below is derived from Kenny's UpdateCenter.js
        documentString;
        var request = kb.any(doc, this.ns.link('request'));
        if (!request) {
          throw new Error('No record of our HTTP GET request for document: ' + doc);
        } // should not happen
        var response = kb.any(request, this.ns.link('response'));
        if (!response) {
          return null; // throw "No record HTTP GET response for document: "+doc
        }
        var content_type = kb.the(response, this.ns.httph('content-type')).value;

        // prepare contents of revised document
        newSts = kb.statementsMatching(undefined, undefined, undefined, doc).slice(); // copy!
        for (i = 0; i < ds.length; i++) {
          Util.RDFArrayRemove(newSts, ds[i]);
        }
        for (i = 0; i < is.length; i++) {
          newSts.push(is[i]);
        }

        // serialize to te appropriate format
        sz = Serializer(kb);
        sz.suggestNamespaces(kb.namespaces);
        sz.setBase(doc.uri); // ?? beware of this - kenny (why? tim)
        switch (content_type) {
          case 'application/rdf+xml':
            documentString = sz.statementsToXML(newSts);
            break;
          case 'text/n3':
          case 'text/turtle':
          case 'application/x-turtle': // Legacy
          case 'application/n3':
            // Legacy
            documentString = sz.statementsToN3(newSts);
            break;
          default:
            throw new Error('Content-type ' + content_type + ' not supported for data write');
        }

        // Write the new version back

        var candidateTarget = kb.the(response, this.ns.httph('content-location'));
        var targetURI;
        if (candidateTarget) {
          targetURI = uriJoin(candidateTarget.value, targetURI);
        }
        var xhr = Util.XMLHTTPFactory();
        xhr.options = {};
        xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            // formula from sparqlUpdate.js, what about redirects?
            var success = !xhr.status || xhr.status >= 200 && xhr.status < 300;
            if (success) {
              for (var i = 0; i < ds.length; i++) {
                kb.remove(ds[i]);
              }
              for (i = 0; i < is.length; i++) {
                kb.add(is[i].subject, is[i].predicate, is[i].object, doc);
              }
            }
            callback(doc.uri, success, xhr.responseText);
          }
        };
        xhr.open('PUT', targetURI, true);
        // assume the server does PUT content-negotiation.
        xhr.setRequestHeader('Content-type', content_type); // OK?
        xhr.send(documentString);
      } else {
        if (protocol.indexOf('LOCALFILE') >= 0) {
          try {
            console.log('Writing back to local file\n');
            // See http://simon-jung.blogspot.com/2007/10/firefox-extension-file-io.html
            // prepare contents of revised document
            newSts = kb.statementsMatching(undefined, undefined, undefined, doc).slice(); // copy!
            for (i = 0; i < ds.length; i++) {
              Util.RDFArrayRemove(newSts, ds[i]);
            }
            for (i = 0; i < is.length; i++) {
              newSts.push(is[i]);
            }
            // serialize to the appropriate format
            documentString;
            sz = Serializer(kb);
            sz.suggestNamespaces(kb.namespaces);
            sz.setBase(doc.uri); // ?? beware of this - kenny (why? tim)
            var dot = doc.uri.lastIndexOf('.');
            if (dot < 1) {
              throw new Error('Rewriting file: No filename extension: ' + doc.uri);
            }
            var ext = doc.uri.slice(dot + 1);
            switch (ext) {
              case 'rdf':
              case 'owl': // Just my experence   ...@@ we should keep the format in which it was parsed
              case 'xml':
                documentString = sz.statementsToXML(newSts);
                break;
              case 'n3':
              case 'nt':
              case 'ttl':
                documentString = sz.statementsToN3(newSts);
                break;
              default:
                throw new Error('File extension .' + ext + ' not supported for data write');
            }
            // Write the new version back
            // create component for file writing
            console.log('Writing back: <<<' + documentString + '>>>');
            var filename = doc.uri.slice(7); // chop off   file://  leaving /path
            // console.log("Writeback: Filename: "+filename+"\n")
            var file = Components.classes['@mozilla.org/file/local;1'].createInstance(Components.interfaces.nsILocalFile);
            file.initWithPath(filename);
            if (!file.exists()) {
              throw new Error('Rewriting file <' + doc.uri + '> but it does not exist!');
            }
            // {
            // file.create( Components.interfaces.nsIFile.NORMAL_FILE_TYPE, 420)
            // }
            // create file output stream and use write/create/truncate mode
            // 0x02 writing, 0x08 create file, 0x20 truncate length if exist
            var stream = Components.classes['@mozilla.org/network/file-output-stream;1'].createInstance(Components.interfaces.nsIFileOutputStream);

            // Various JS systems object to 0666 in struct mode as dangerous
            stream.init(file, 0x02 | 0x08 | 0x20, parseInt('0666', 8), 0);

            // write data to file then close output stream
            stream.write(documentString, documentString.length);
            stream.close();

            for (i = 0; i < ds.length; i++) {
              kb.remove(ds[i]);
            }
            for (i = 0; i < is.length; i++) {
              kb.add(is[i].subject, is[i].predicate, is[i].object, doc);
            }
            callback(doc.uri, true, ''); // success!
          } catch (e) {
            callback(doc.uri, false, 'Exception trying to write back file <' + doc.uri + '>\n'
            // + tabulator.Util.stackString(e))
            );
          }
        } else {
          throw new Error("Unhandled edit method: '" + protocol + "' for " + doc);
        }
      }
    } catch (e) {
      callback(undefined, false, 'Exception in update: ' + e + '\n' + $rdf.Util.stackString(e));
    }
  }; // wnd update

  // This suitable for an inital creation of a document
  //
  // data:    string, or array of statements
  //
  sparql.prototype.put = function (doc, data, content_type, callback) {
    var documentString;
    var kb = this.store;

    if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === _typeof('')) {
      documentString = data;
    } else {
      // serialize to te appropriate format
      var sz = Serializer(kb);
      sz.suggestNamespaces(kb.namespaces);
      sz.setBase(doc.uri);
      switch (content_type) {
        case 'application/rdf+xml':
          documentString = sz.statementsToXML(data);
          break;
        case 'text/n3':
        case 'text/turtle':
        case 'application/x-turtle': // Legacy
        case 'application/n3':
          // Legacy
          documentString = sz.statementsToN3(data);
          break;
        default:
          throw new Error('Content-type ' + content_type + ' not supported for data PUT');
      }
    }
    var xhr = Util.XMLHTTPFactory();
    xhr.options = {};
    xhr.onreadystatechange = function () {
      if (xhr.readyState === 4) {
        // formula from sparqlUpdate.js, what about redirects?
        var success = !xhr.status || xhr.status >= 200 && xhr.status < 300;
        if (success && typeof data !== 'string') {
          data.map(function (st) {
            kb.addStatement(st);
          });
          // kb.fetcher.requested[doc.uri] = true // as though fetched
        }
        if (success) {
          delete kb.fetcher.nonexistant[doc.uri];
          delete kb.fetcher.requested[doc.uri];
          // @@ later we can fake it has been requestd if put gives us the header sand we save them.
        }
        callback(doc.uri, success, xhr.responseText, xhr);
      }
    };
    xhr.open('PUT', doc.uri, true);
    xhr.setRequestHeader('Content-type', content_type);
    xhr.send(documentString);
  };

  // Reload a document.
  //
  // Fast and cheap, no metaata
  // Measure times for the document
  // Load it provisionally
  // Don't delete the statemenst before the load, or it will leave a broken document
  // in the meantime.

  sparql.prototype.reload = function (kb, doc, callback) {
    var startTime = Date.now();
    // force sets no-cache and
    kb.fetcher.nowOrWhenFetched(doc.uri, { force: true, noMeta: true, clearPreviousData: true }, function (ok, body, xhr) {
      if (!ok) {
        console.log('    ERROR reloading data: ' + body);
        callback(false, 'Error reloading data: ' + body, xhr);
      } else if (xhr.onErrorWasCalled || xhr.status !== 200) {
        console.log('    Non-HTTP error reloading data! onErrorWasCalled=' + xhr.onErrorWasCalled + ' status: ' + xhr.status);
        callback(false, 'Non-HTTP error reloading data: ' + body, xhr);
      } else {
        var elapsedTime_ms = Date.now() - startTime;
        if (!doc.reloadTime_total) doc.reloadTime_total = 0;
        if (!doc.reloadTime_count) doc.reloadTime_count = 0;
        doc.reloadTime_total += elapsedTime_ms;
        doc.reloadTime_count += 1;
        console.log('    Fetch took ' + elapsedTime_ms + 'ms, av. of ' + doc.reloadTime_count + ' = ' + doc.reloadTime_total / doc.reloadTime_count + 'ms.');
        callback(true);
      }
    });
  };

  sparql.prototype.oldReload = function (kb, doc, callback) {
    var g2 = graph(); // A separate store to hold the data as we load it
    var f2 = fetcher(g2);
    var startTime = Date.now();
    // force sets no-cache and
    f2.nowOrWhenFetched(doc.uri, { force: true, noMeta: true, clearPreviousData: true }, function (ok, body, xhr) {
      if (!ok) {
        console.log('    ERROR reloading data: ' + body);
        callback(false, 'Error reloading data: ' + body, xhr);
      } else if (xhr.onErrorWasCalled || xhr.status !== 200) {
        console.log('    Non-HTTP error reloading data! onErrorWasCalled=' + xhr.onErrorWasCalled + ' status: ' + xhr.status);
        callback(false, 'Non-HTTP error reloading data: ' + body, xhr);
      } else {
        var sts1 = kb.statementsMatching(undefined, undefined, undefined, doc).slice(); // Take a copy!!
        var sts2 = g2.statementsMatching(undefined, undefined, undefined, doc).slice();
        console.log('    replacing ' + sts1.length + ' with ' + sts2.length + ' out of total statements ' + kb.statements.length);
        kb.remove(sts1);
        kb.add(sts2);
        var elapsedTime_ms = Date.now() - startTime;
        if (sts2.length === 0) {
          console.log('????????????????? 0000000');
        }
        if (!doc.reloadTime_total) doc.reloadTime_total = 0;
        if (!doc.reloadTime_count) doc.reloadTime_count = 0;
        doc.reloadTime_total += elapsedTime_ms;
        doc.reloadTime_count += 1;
        console.log('    fetch took ' + elapsedTime_ms + 'ms, av. of ' + doc.reloadTime_count + ' = ' + doc.reloadTime_total / doc.reloadTime_count + 'ms.');
        callback(true);
      }
    });
  };
  return sparql;
}();

module.exports = UpdateManager;
},{"./data-factory":57,"./fetcher":60,"./indexed-formula":63,"./namespace":69,"./serializer":78,"./uri":83,"./util":84}],82:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/*
 * Updates-Via
 */
var namedNode = require('./data-factory').namedNode;

var UpdatesSocket = function () {
  function UpdatesSocket(parent, via) {
    _classCallCheck(this, UpdatesSocket);

    this.parent = parent;
    this.via = via;
    this.connected = false;
    this.pending = {};
    this.subscribed = {};
    this.socket = {};
    try {
      this.socket = new WebSocket(via);
      this.socket.onopen = this.onOpen;
      this.socket.onclose = this.onClose;
      this.socket.onmessage = this.onMessage;
      this.socket.onerror = this.onError;
    } catch (error) {
      this.onError(error);
    }
  }

  _createClass(UpdatesSocket, [{
    key: '_decode',
    value: function _decode(q) {
      var elt;
      var i;
      var k;
      var r;
      var ref;
      var ref1;
      var v;
      r = {};
      ref = function () {
        var j, len, ref, results;
        ref = q.split('&');
        results = [];
        for (j = 0, len = ref.length; j < len; j++) {
          elt = ref[j];
          results.push(elt.split('='));
        }
        return results;
      }();
      for (i in ref) {
        elt = ref[i];
        ref1 = [decodeURIComponent(elt[0]), decodeURIComponent(elt[1])];
        k = ref1[0];
        v = ref1[1];
        if (r[k] == null) {
          r[k] = [];
        }
        r[k].push(v);
      }
      return r;
    }
  }, {
    key: '_send',
    value: function _send(method, uri, data) {
      var base, message;
      message = [method, uri, data].join(' ');
      return typeof (base = this.socket).send === 'function' ? base.send(message) : void 0;
    }
  }, {
    key: '_subscribe',
    value: function _subscribe(uri) {
      this._send('sub', uri, '');
      this.subscribed[uri] = true;
      return this.subscribed[uri];
    }
  }, {
    key: 'onClose',
    value: function onClose(e) {
      var uri;
      this.connected = false;
      for (uri in this.subscribed) {
        this.pending[uri] = true;
      }
      this.subscribed = {};
      return this.subscribed;
    }
  }, {
    key: 'onError',
    value: function onError(e) {
      throw new Error('onError' + e);
    }
  }, {
    key: 'onMessage',
    value: function onMessage(e) {
      var base, message;
      message = e.data.split(' ');
      if (message[0] === 'ping') {
        return typeof (base = this.socket).send === 'function' ? base.send('pong ' + message.slice(1).join(' ')) : void 0;
      } else if (message[0] === 'pub') {
        return this.parent.onUpdate(message[1], this._decode(message[2]));
      }
    }
  }, {
    key: 'onOpen',
    value: function onOpen(e) {
      var results, uri;
      this.connected = true;
      results = [];
      for (uri in this.pending) {
        delete this.pending[uri];
        results.push(this._subscribe(uri));
      }
      return results;
    }
  }, {
    key: 'subscribe',
    value: function subscribe(uri) {
      if (this.connected) {
        return this._subscribe(uri);
      } else {
        this.pending[uri] = true;
        return this.pending[uri];
      }
    }
  }]);

  return UpdatesSocket;
}();

var UpdatesVia = function () {
  function UpdatesVia(fetcher) {
    _classCallCheck(this, UpdatesVia);

    this.fetcher = fetcher;
    this.graph = {};
    this.via = {};
    this.fetcher.addCallback('headers', this.onHeaders);
  }

  _createClass(UpdatesVia, [{
    key: 'onHeaders',
    value: function onHeaders(d) {
      var etag, uri, via;
      if (d.headers == null) {
        return true;
      }
      if (typeof WebSocket === 'undefined' || WebSocket === null) {
        return true;
      }
      etag = d.headers['etag'];
      via = d.headers['updates-via'];
      uri = d.uri;
      if (etag && via) {
        this.graph[uri] = {
          etag: etag,
          via: via
        };
        this.register(via, uri);
      }
      return true;
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate(uri, d) {
      return this.fetcher.refresh(namedNode(uri));
    }
  }, {
    key: 'register',
    value: function register(via, uri) {
      if (this.via[via] == null) {
        this.via[via] = new UpdatesSocket(this, via);
      }
      return this.via[via].subscribe(uri);
    }
  }]);

  return UpdatesVia;
}();

module.exports.UpdatesSocket = UpdatesSocket;
module.exports.UpdatesVia = UpdatesVia;
},{"./data-factory":57}],83:[function(require,module,exports){
'use strict';

/*
 * Implements URI-specific functions
 *
 * See RFC 2386
 *
 * See also:
 *   http://www.w3.org/2005/10/ajaw/uri.js
 *   http://www.w3.org/2000/10/swap/uripath.py
 *
 */
var alert = alert || console.log;

module.exports.docpart = docpart;
module.exports.document = document;
module.exports.hostpart = hostpart;
module.exports.join = join;
module.exports.protocol = protocol;
module.exports.refTo = refTo;

var NamedNode = require('./named-node');

function docpart(uri) {
  var i;
  i = uri.indexOf('#');
  if (i < 0) {
    return uri;
  } else {
    return uri.slice(0, i);
  }
}

function document(x) {
  return new NamedNode(docpart(x.uri));
}

function hostpart(u) {
  var m = /[^\/]*\/\/([^\/]*)\//.exec(u);
  if (m) {
    return m[1];
  } else {
    return '';
  }
}

function join(given, base) {
  var baseColon, baseScheme, baseSingle;
  var colon, lastSlash, path;
  var baseHash = base.indexOf('#');
  if (baseHash > 0) {
    base = base.slice(0, baseHash);
  }
  if (given.length === 0) {
    return base;
  }
  if (given.indexOf('#') === 0) {
    return base + given;
  }
  colon = given.indexOf(':');
  if (colon >= 0) {
    return given;
  }
  baseColon = base.indexOf(':');
  if (base.length === 0) {
    return given;
  }
  if (baseColon < 0) {
    alert('Invalid base: ' + base + ' in join with given: ' + given);
    return given;
  }
  baseScheme = base.slice(0, +baseColon + 1 || 9e9);
  if (given.indexOf('//') === 0) {
    return baseScheme + given;
  }
  if (base.indexOf('//', baseColon) === baseColon + 1) {
    baseSingle = base.indexOf('/', baseColon + 3);
    if (baseSingle < 0) {
      if (base.length - baseColon - 3 > 0) {
        return base + '/' + given;
      } else {
        return baseScheme + given;
      }
    }
  } else {
    baseSingle = base.indexOf('/', baseColon + 1);
    if (baseSingle < 0) {
      if (base.length - baseColon - 1 > 0) {
        return base + '/' + given;
      } else {
        return baseScheme + given;
      }
    }
  }
  if (given.indexOf('/') === 0) {
    return base.slice(0, baseSingle) + given;
  }
  path = base.slice(baseSingle);
  lastSlash = path.lastIndexOf('/');
  if (lastSlash < 0) {
    return baseScheme + given;
  }
  if (lastSlash >= 0 && lastSlash < path.length - 1) {
    path = path.slice(0, +lastSlash + 1 || 9e9);
  }
  path += given;
  while (path.match(/[^\/]*\/\.\.\//)) {
    path = path.replace(/[^\/]*\/\.\.\//, '');
  }
  path = path.replace(/\.\//g, '');
  path = path.replace(/\/\.$/, '/');
  return base.slice(0, baseSingle) + path;
}

function protocol(uri) {
  var i;
  i = uri.indexOf(':');
  if (i < 0) {
    return null;
  } else {
    return uri.slice(0, i);
  }
}

function refTo(base, uri) {
  var c, i, k, l, len, len1, n, o, p, q, ref, ref1, s;
  var commonHost = new RegExp('^[-_a-zA-Z0-9.]+:(//[^/]*)?/[^/]*$');
  if (!base) {
    return uri;
  }
  if (base === uri) {
    return '';
  }
  for (i = o = 0, len = uri.length; o < len; i = ++o) {
    c = uri[i];
    if (c !== base[i]) {
      break;
    }
  }
  if (base.slice(0, i).match(commonHost)) {
    k = uri.indexOf('//');
    if (k < 0) {
      k = -2;
    }
    l = uri.indexOf('/', k + 2);
    if (uri[l + 1] !== '/' && base[l + 1] !== '/' && uri.slice(0, l) === base.slice(0, l)) {
      return uri.slice(l);
    }
  }
  if (uri[i] === '#' && base.length === i) {
    return uri.slice(i);
  }
  while (i > 0 && uri[i - 1] !== '/') {
    i--;
  }
  if (i < 3) {
    return uri;
  }
  if (base.indexOf('//', i - 2) > 0 || uri.indexOf('//', i - 2) > 0) {
    return uri;
  }
  if (base.indexOf(':', i) > 0) {
    return uri;
  }
  n = 0;
  ref = base.slice(i);
  for (p = 0, len1 = ref.length; p < len1; p++) {
    c = ref[p];
    if (c === '/') {
      n++;
    }
  }
  if (n === 0 && i < uri.length && uri[i] === '#') {
    return './' + uri.slice(i);
  }
  if (n === 0 && i === uri.length) {
    return './';
  }
  s = '';
  if (n > 0) {
    for (q = 1, ref1 = n; ref1 >= 1 ? q <= ref1 : q >= ref1; ref1 >= 1 ? ++q : --q) {
      s += '../';
    }
  }
  return s + uri.slice(i);
}
},{"./named-node":68}],84:[function(require,module,exports){
'use strict';

/**
 * Utility functions for $rdf
 * @module util
 */
var docpart = require('./uri').docpart;
var log = require('./log');
var NamedNode = require('./named-node');

module.exports.AJAR_handleNewTerm = ajarHandleNewTerm;
module.exports.ArrayIndexOf = arrayIndexOf;
module.exports.callbackify = callbackify;
module.exports.dtstamp = dtstamp;
module.exports.DOMParserFactory = domParser;
module.exports.domToString = domToString;
module.exports.dumpNode = dumpNode;
module.exports.getHTTPHeaders = getHTTPHeaders;
module.exports.heavyCompare = heavyCompare;
module.exports.heavyCompareSPO = heavyCompareSPO;
module.exports.output = output;
module.exports.parseXML = parseXML;
module.exports.RDFArrayRemove = rdfArrayRemove;
module.exports.stackString = stackString;
module.exports.string_startswith = stringStartsWith;
module.exports.string = {};
module.exports.string.template = stringTemplate;
module.exports.uri = require('./uri'); // TODO: Remove this mixed usage
// module.exports.variablesIn = variablesIn
module.exports.XMLHTTPFactory = xhr;
module.exports.log = log;

module.exports.mediaTypeClass = function (mediaType) {
  mediaType = mediaType.split(';')[0].trim(); // remove media type parameters
  return new NamedNode('http://www.w3.org/ns/iana/media-types/' + mediaType + '#Resource');
};

/**
 * Loads ontologies of the data we load (this is the callback from the kb to
 * the fetcher). Exports as `AJAR_handleNewTerm`
 */
function ajarHandleNewTerm(kb, p, requestedBy) {
  var sf = null;
  if (typeof kb.fetcher !== 'undefined') {
    sf = kb.fetcher;
  } else {
    return;
  }
  if (p.termType !== 'NamedNode') return;
  var docuri = docpart(p.uri);
  var fixuri;
  if (p.uri.indexOf('#') < 0) {
    // No hash
    // @@ major hack for dbpedia Categories, which spread indefinitely
    if (stringStartsWith(p.uri, 'http://dbpedia.org/resource/Category:')) return;

    /*
      if (string_startswith(p.uri, 'http://xmlns.com/foaf/0.1/')) {
      fixuri = "http://dig.csail.mit.edu/2005/ajar/ajaw/test/foaf"
      // should give HTTP 303 to ontology -- now is :-)
      } else
    */
    if (stringStartsWith(p.uri, 'http://purl.org/dc/elements/1.1/') || stringStartsWith(p.uri, 'http://purl.org/dc/terms/')) {
      fixuri = 'http://dublincore.org/2005/06/13/dcq';
      // dc fetched multiple times
    } else if (stringStartsWith(p.uri, 'http://xmlns.com/wot/0.1/')) {
      fixuri = 'http://xmlns.com/wot/0.1/index.rdf';
    } else if (stringStartsWith(p.uri, 'http://web.resource.org/cc/')) {
      //            log.warn("creative commons links to html instead of rdf. doesn't seem to content-negotiate.")
      fixuri = 'http://web.resource.org/cc/schema.rdf';
    }
  }
  if (fixuri) {
    docuri = fixuri;
  }
  if (sf && sf.getState(docuri) !== 'unrequested') return;

  if (fixuri) {
    // only give warning once: else happens too often
    log.warn('Assuming server still broken, faking redirect of <' + p.uri + '> to <' + docuri + '>');
  }
  sf.requestURI(docuri, requestedBy);
}

/**
 * Exports as `ArrayIndexOf`.
 */
function arrayIndexOf(arr, item, i) {
  i || (i = 0);
  var length = arr.length;
  if (i < 0) i = length + i;
  for (; i < length; i++) {
    if (arr[i] === item) {
      return i;
    }
  }
  return -1;
}

/**
 * Adds callback functionality to an object.
 * Callback functions are indexed by a 'hook' string.
 * They return true if they want to be called again.
 * @method callbackify
 * @param obj {Object}
 * @param callbacks {Array<Function>}
 */
function callbackify(obj, callbacks) {
  obj.callbacks = {};
  for (var x = callbacks.length - 1; x >= 0; x--) {
    obj.callbacks[callbacks[x]] = [];
  }

  obj.addHook = function (hook) {
    if (!obj.callbacks[hook]) {
      obj.callbacks[hook] = [];
    }
  };

  obj.addCallback = function (hook, func) {
    obj.callbacks[hook].push(func);
  };

  obj.removeCallback = function (hook, funcName) {
    for (var i = 0; i < obj.callbacks[hook].length; i++) {
      if (obj.callbacks[hook][i].name === funcName) {
        obj.callbacks[hook].splice(i, 1);
        return true;
      }
    }
    return false;
  };

  obj.insertCallback = function (hook, func) {
    obj.callbacks[hook].unshift(func);
  };

  obj.fireCallbacks = function (hook, args) {
    var newCallbacks = [];
    var replaceCallbacks = [];
    var len = obj.callbacks[hook].length;
    var x;
    // log.info('!@$ Firing '+hook+' call back with length'+len)
    for (x = len - 1; x >= 0; x--) {
      // log.info('@@ Firing '+hook+' callback '+ obj.callbacks[hook][x])
      if (obj.callbacks[hook][x].apply(obj, args)) {
        newCallbacks.push(obj.callbacks[hook][x]);
      }
    }

    for (x = newCallbacks.length - 1; x >= 0; x--) {
      replaceCallbacks.push(newCallbacks[x]);
    }

    for (x = len; x < obj.callbacks[hook].length; x++) {
      replaceCallbacks.push(obj.callbacks[hook][x]);
    }

    obj.callbacks[hook] = replaceCallbacks;
  };
}

/**
 * Returns a DOM parser based on current runtime environment.
 * Exports as `DOMParserFactory`
 */
function domParser() {
  if (tabulator && tabulator.isExtension) {
    return Components.classes['@mozilla.org/xmlextras/domparser;1'].getService(Components.interfaces.nsIDOMParser);
  } else if (window.DOMParser) {
    return new DOMParser();
  } else if (window.ActiveXObject) {
    return new ActiveXObject('Microsoft.XMLDOM');
  } else {
    return false;
  }
}

// From https://github.com/linkeddata/dokieli
function domToString(node, options) {
  options = options || {};
  var selfClosing = [];
  if ('selfClosing' in options) {
    options.selfClosing.split(' ').forEach(function (n) {
      selfClosing[n] = true;
    });
  }
  var skipAttributes = [];
  if ('skipAttributes' in options) {
    options.skipAttributes.split(' ').forEach(function (n) {
      skipAttributes[n] = true;
    });
  }
  return dumpNode(node, options, selfClosing, skipAttributes);
}

function dumpNode(node, options, selfClosing, skipAttributes) {
  var i;
  var out = '';
  var noEsc = [false];
  if (typeof node.nodeType === 'undefined') return out;
  if (node.nodeType === 1) {
    if (node.hasAttribute('class') && 'classWithChildText' in options && node.matches(options.classWithChildText.class)) {
      out += node.querySelector(options.classWithChildText.element).textContent;
    } else if (!('skipNodeWithClass' in options && node.matches('.' + options.skipNodeWithClass))) {
      var ename = node.nodeName.toLowerCase();
      out += '<' + ename;

      var attrList = [];
      for (i = node.attributes.length - 1; i >= 0; i--) {
        var atn = node.attributes[i];
        if (skipAttributes.length > 0 && skipAttributes[atn.name]) continue;
        if (/^\d+$/.test(atn.name)) continue;
        if (atn.name === 'class' && 'replaceClassItemWith' in options && atn.value.split(' ').indexOf(options.replaceClassItemWith.source) > -1) {
          var re = new RegExp(options.replaceClassItemWith.source, 'g');
          atn.value = atn.value.replace(re, options.replaceClassItemWith.target).trim();
        }
        if (!(atn.name === 'class' && 'skipClassWithValue' in options && options.skipClassWithValue === atn.value)) {
          attrList.push(atn.name + '=\'' + atn.value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&quot;') + '\'');
        }
      }
      if (attrList.length > 0) {
        if ('sortAttributes' in options && options.sortAttributes) {
          attrList.sort(function (a, b) {
            return a.toLowerCase().localeCompare(b.toLowerCase());
          });
        }
        out += ' ' + attrList.join(' ');
      }
      if (selfClosing[ename]) {
        out += ' />';
      } else {
        out += '>';
        out += ename === 'html' ? '\n  ' : '';
        noEsc.push(ename === 'style' || ename === 'script');
        for (i = 0; i < node.childNodes.length; i++) {
          out += dumpNode(node.childNodes[i]);
        }noEsc.pop();
        out += ename === 'body' ? '</' + ename + '>' + '\n' : '</' + ename + '>';
      }
    }
  } else if (node.nodeType === 8) {
    // FIXME: If comments are not tabbed in source, a new line is not prepended
    out += '<!--' + node.nodeValue + '-->';
  } else if (node.nodeType === 3 || node.nodeType === 4) {
    // XXX: Remove new lines which were added after DOM ready
    var nl = node.nodeValue.replace(/\n+$/, '');
    out += noEsc[noEsc.length - 1] ? nl : nl.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
  } else {
    console.log('Warning; Cannot handle serialising nodes of type: ' + node.nodeType);
    console.log(node);
  }
  return out;
}

function dtstamp() {
  var now = new Date();
  var year = now.getYear() + 1900;
  var month = now.getMonth() + 1;
  var day = now.getDate();
  var hour = now.getUTCHours();
  var minute = now.getUTCMinutes();
  var second = now.getSeconds();
  if (month < 10) month = '0' + month;
  if (day < 10) day = '0' + day;
  if (hour < 10) hour = '0' + hour;
  if (minute < 10) minute = '0' + minute;
  if (second < 10) second = '0' + second;
  return year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second + 'Z';
}

/**
 * Returns a hashmap of HTTP headers and their values.
 * @@ Bug: Assumes that each header only occurs once.
 * Also note that a , in a header value is just the same as having two headers.
 */
function getHTTPHeaders(xhr) {
  var lines = xhr.getAllResponseHeaders().split('\n');
  var headers = {};
  var last;
  for (var x = 0; x < lines.length; x++) {
    if (lines[x].length > 0) {
      var pair = lines[x].split(': ');
      if (typeof pair[1] === 'undefined') {
        // continuation
        headers[last] += '\n' + pair[0];
      } else {
        last = pair[0].toLowerCase();
        headers[last] = pair[1];
      }
    }
  }
  return headers;
}

/**
 * Compares statements (heavy comparison for repeatable canonical ordering)
 */
function heavyCompare(x, y, g, uriMap) {
  var nonBlank = function nonBlank(x) {
    return x.termType === 'BlankNode' ? null : x;
  };
  var signature = function signature(x) {
    var lis = g.statementsMatching(x).map(function (st) {
      return '' + nonBlank(st.subject) + ' ' + nonBlank(st.predicate) + ' ' + nonBlank(st.object);
    }).concat(g.statementsMatching(undefined, undefined, x).map(function (st) {
      return '' + nonBlank(st.subject) + ' ' + nonBlank(st.predicate) + ' ' + nonBlank(st.object);
    }));
    lis.sort();
    return lis.join('\n');
  };
  if (x.termType === 'BlankNode' && y.termType === 'BlankNode') {
    if (x.compareTerm(y) === 0) return 0; // Same
    if (signature(x) > signature(y)) return +1;
    if (signature(x) < signature(y)) return -1;
    return x.compareTerm(y); // Too bad -- this order not canonical.
    // throw "different bnodes indistinquishable for sorting"
  } else {
    if (uriMap && x.uri && y.uri) {
      return (uriMap[x.uri] || x.uri).localeCompare(uriMap[y.uri] || y.uri);
    }
    return x.compareTerm(y);
  }
}

function heavyCompareSPO(x, y, g, uriMap) {
  return heavyCompare(x.subject, y.subject, g, uriMap) || heavyCompare(x.predicate, y.predicate, g, uriMap) || heavyCompare(x.object, y.object, g, uriMap);
}

/**
 * Defines a simple debugging function
 * @method output
 * @param o {String}
 */
function output(o) {
  var k = document.createElement('div');
  k.textContent = o;
  document.body.appendChild(k);
}

/**
 * Returns a DOM from parsex XML.
 */
function parseXML(str, options) {
  var dparser;
  options = options || {};
  if (typeof tabulator !== 'undefined' && tabulator.isExtension) {
    dparser = Components.classes['@mozilla.org/xmlextras/domparser;1'].getService(Components.interfaces.nsIDOMParser);
  } else if (typeof module !== 'undefined' && module && module.exports) {
    // Node.js
    // var libxmljs = require('libxmljs'); // Was jsdom before 2012-01 then libxmljs but that nonstandard
    // return libxmljs.parseXmlString(str)

    // var jsdom = require('jsdom');   2012-01 though 2015-08 no worky with new Node
    // var dom = jsdom.jsdom(str, undefined, {} );// html, level, options

    var DOMParser = require('xmldom').DOMParser; // 2015-08 on https://github.com/jindw/xmldom
    var dom = new DOMParser().parseFromString(str, options.contentType || 'application/xhtml+xml');
    return dom;
  } else {
    if (typeof window !== 'undefined' && window.DOMParser) {
      dparser = new window.DOMParser(); // seems to actually work
    } else {
      dparser = new DOMParser(); // Doc says this works
    }
  }
  return dparser.parseFromString(str, 'application/xml');
}

/**
 * Removes all statements equal to x from a
 * Exports as `RDFArrayRemove`
 */
function rdfArrayRemove(a, x) {
  for (var i = 0; i < a.length; i++) {
    // TODO: This used to be the following, which didnt always work..why
    // if(a[i] === x)
    if (a[i].subject.sameTerm(x.subject) && a[i].predicate.sameTerm(x.predicate) && a[i].object.sameTerm(x.object) && a[i].why.sameTerm(x.why)) {
      a.splice(i, 1);
      return;
    }
  }
  throw new Error('RDFArrayRemove: Array did not contain ' + x + ' ' + x.why);
}

function stringStartsWith(str, pref) {
  // missing library routines
  return str.slice(0, pref.length) === pref;
}

/**
 * C++, python style %s -> subs
 */
function stringTemplate(base, subs) {
  var baseA = base.split('%s');
  var result = '';
  for (var i = 0; i < subs.length; i++) {
    subs[i] += '';
    result += baseA[i] + subs[i];
  }
  return result + baseA.slice(subs.length).join();
}

// Stack dump on errors - to pass errors back

function stackString(e) {
  var str = '' + e + '\n';
  if (!e.stack) {
    return str + 'No stack available.\n';
  }
  var lines = e.stack.toString().split('\n');
  var toprint = [];
  for (var i = 0; i < lines.length; i++) {
    var line = lines[i];
    if (line.indexOf('ecmaunit.js') > -1) {
      // remove useless bit of traceback
      break;
    }
    if (line.charAt(0) == '(') {
      line = 'function' + line;
    }
    var chunks = line.split('@');
    toprint.push(chunks);
  }
  // toprint.reverse();  No - I prefer the latest at the top by the error message -tbl

  for (var i = 0; i < toprint.length; i++) {
    str += '  ' + toprint[i][1] + '\n    ' + toprint[i][0];
  }
  return str;
}

/**
 * Finds the variables in a graph (shallow).
 * Note: UNUSED.
 */
// function variablesIn (g) {
//   for (var i = 0; i < g.statements.length; i++) {
//     var st = g.statatements[i]
//     var vars = {}
//     if (st.subject instanceof $rdf.Variable) {
//       vars[st.subject.toNT()] = true
//     }
//     if (st.predicate instanceof $rdf.Variable) {
//       vars[st.predicate.toNT()] = true
//     }
//     if (st.object instanceof $rdf.Variable) {
//       vars[st.object.toNT()] = true
//     }
//   }
//   return vars
// }

/**
 * Returns an XMLHttpRequest object for the appropriate current runtime
 * environment. Exports as `XMLHTTPFactory`
 */
function xhr() {
  var XMLHttpRequest;
  // Running inside the Tabulator Firefox extension
  if (typeof tabulator !== 'undefined' && tabulator.isExtension) {
    // Cannot use XMLHttpRequest natively, must request it through SDK
    return Components.classes['@mozilla.org/xmlextras/xmlhttprequest;1'].createInstance().QueryInterface(Components.interfaces.nsIXMLHttpRequest);
  } else if (typeof window !== 'undefined' && 'XMLHttpRequest' in window) {
    // Running inside the browser
    XMLHttpRequest = window.XMLHttpRequest;
    return new XMLHttpRequest();
  } else if (typeof module !== 'undefined' && module && module.exports) {
    // Running in Node.js
    XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;
    return new XMLHttpRequest();
  } else if (window.ActiveXObject) {
    try {
      return new ActiveXObject('Msxml2.XMLHTTP');
    } catch (e) {
      return new ActiveXObject('Microsoft.XMLHTTP');
    }
  } else {
    return false;
  }
}
},{"./log":66,"./named-node":68,"./uri":83,"xmldom":87,"xmlhttprequest":90}],85:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ClassOrder = require('./class-order');
var Node = require('./node');
var Uri = require('./uri');

/**
 * Variables are placeholders used in patterns to be matched.
 * In cwm they are symbols which are the formula's list of quantified variables.
 * In sparql they are not visibly URIs.  Here we compromise, by having
 * a common special base URI for variables. Their names are uris,
 * but the ? notation has an implicit base uri of 'varid:'
 * @class Variable
 */

var Variable = function (_Node) {
  _inherits(Variable, _Node);

  function Variable() {
    var name = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];

    _classCallCheck(this, Variable);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Variable).call(this));

    _this.termType = Variable.termType;
    _this.value = name;
    _this.base = 'varid:';
    _this.uri = Uri.join(name, _this.base);
    return _this;
  }

  _createClass(Variable, [{
    key: 'equals',
    value: function equals(other) {
      if (!other) {
        return false;
      }
      return this.termType === other.termType && this.value === other.value;
    }
  }, {
    key: 'hashString',
    value: function hashString() {
      return this.toString();
    }
  }, {
    key: 'substitute',
    value: function substitute(bindings) {
      var ref;
      return (ref = bindings[this.toNT()]) != null ? ref : this;
    }
  }, {
    key: 'toString',
    value: function toString() {
      if (this.uri.slice(0, this.base.length) === this.base) {
        return '?' + this.uri.slice(this.base.length);
      }
      return '?' + this.uri;
    }
  }]);

  return Variable;
}(Node);

Variable.termType = 'Variable';
Variable.prototype.classOrder = ClassOrder['Variable'];
Variable.prototype.isVar = 1;

module.exports = Variable;
},{"./class-order":54,"./node":70,"./uri":83}],86:[function(require,module,exports){
'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var NamedNode = require('./named-node');

var XSD = function XSD() {
  _classCallCheck(this, XSD);
};

XSD.boolean = new NamedNode('http://www.w3.org/2001/XMLSchema#boolean');
XSD.dateTime = new NamedNode('http://www.w3.org/2001/XMLSchema#dateTime');
XSD.decimal = new NamedNode('http://www.w3.org/2001/XMLSchema#decimal');
XSD.double = new NamedNode('http://www.w3.org/2001/XMLSchema#double');
XSD.integer = new NamedNode('http://www.w3.org/2001/XMLSchema#integer');
XSD.langString = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');
XSD.string = new NamedNode('http://www.w3.org/2001/XMLSchema#string');

module.exports = XSD;
},{"./named-node":68}],87:[function(require,module,exports){
function DOMParser(options){
	this.options = options ||{locator:{}};
	
}
DOMParser.prototype.parseFromString = function(source,mimeType){
	var options = this.options;
	var sax =  new XMLReader();
	var domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler
	var errorHandler = options.errorHandler;
	var locator = options.locator;
	var defaultNSMap = options.xmlns||{};
	var entityMap = {'lt':'<','gt':'>','amp':'&','quot':'"','apos':"'"}
	if(locator){
		domBuilder.setDocumentLocator(locator)
	}
	
	sax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);
	sax.domBuilder = options.domBuilder || domBuilder;
	if(/\/x?html?$/.test(mimeType)){
		entityMap.nbsp = '\xa0';
		entityMap.copy = '\xa9';
		defaultNSMap['']= 'http://www.w3.org/1999/xhtml';
	}
	defaultNSMap.xml = defaultNSMap.xml || 'http://www.w3.org/XML/1998/namespace';
	if(source){
		sax.parse(source,defaultNSMap,entityMap);
	}else{
		sax.errorHandler.error("invalid doc source");
	}
	return domBuilder.doc;
}
function buildErrorHandler(errorImpl,domBuilder,locator){
	if(!errorImpl){
		if(domBuilder instanceof DOMHandler){
			return domBuilder;
		}
		errorImpl = domBuilder ;
	}
	var errorHandler = {}
	var isCallback = errorImpl instanceof Function;
	locator = locator||{}
	function build(key){
		var fn = errorImpl[key];
		if(!fn && isCallback){
			fn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;
		}
		errorHandler[key] = fn && function(msg){
			fn('[xmldom '+key+']\t'+msg+_locator(locator));
		}||function(){};
	}
	build('warning');
	build('error');
	build('fatalError');
	return errorHandler;
}

//console.log('#\n\n\n\n\n\n\n####')
/**
 * +ContentHandler+ErrorHandler
 * +LexicalHandler+EntityResolver2
 * -DeclHandler-DTDHandler 
 * 
 * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler
 * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2
 * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html
 */
function DOMHandler() {
    this.cdata = false;
}
function position(locator,node){
	node.lineNumber = locator.lineNumber;
	node.columnNumber = locator.columnNumber;
}
/**
 * @see org.xml.sax.ContentHandler#startDocument
 * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html
 */ 
DOMHandler.prototype = {
	startDocument : function() {
    	this.doc = new DOMImplementation().createDocument(null, null, null);
    	if (this.locator) {
        	this.doc.documentURI = this.locator.systemId;
    	}
	},
	startElement:function(namespaceURI, localName, qName, attrs) {
		var doc = this.doc;
	    var el = doc.createElementNS(namespaceURI, qName||localName);
	    var len = attrs.length;
	    appendElement(this, el);
	    this.currentElement = el;
	    
		this.locator && position(this.locator,el)
	    for (var i = 0 ; i < len; i++) {
	        var namespaceURI = attrs.getURI(i);
	        var value = attrs.getValue(i);
	        var qName = attrs.getQName(i);
			var attr = doc.createAttributeNS(namespaceURI, qName);
			this.locator &&position(attrs.getLocator(i),attr);
			attr.value = attr.nodeValue = value;
			el.setAttributeNode(attr)
	    }
	},
	endElement:function(namespaceURI, localName, qName) {
		var current = this.currentElement
		var tagName = current.tagName;
		this.currentElement = current.parentNode;
	},
	startPrefixMapping:function(prefix, uri) {
	},
	endPrefixMapping:function(prefix) {
	},
	processingInstruction:function(target, data) {
	    var ins = this.doc.createProcessingInstruction(target, data);
	    this.locator && position(this.locator,ins)
	    appendElement(this, ins);
	},
	ignorableWhitespace:function(ch, start, length) {
	},
	characters:function(chars, start, length) {
		chars = _toString.apply(this,arguments)
		//console.log(chars)
		if(chars){
			if (this.cdata) {
				var charNode = this.doc.createCDATASection(chars);
			} else {
				var charNode = this.doc.createTextNode(chars);
			}
			if(this.currentElement){
				this.currentElement.appendChild(charNode);
			}else if(/^\s*$/.test(chars)){
				this.doc.appendChild(charNode);
				//process xml
			}
			this.locator && position(this.locator,charNode)
		}
	},
	skippedEntity:function(name) {
	},
	endDocument:function() {
		this.doc.normalize();
	},
	setDocumentLocator:function (locator) {
	    if(this.locator = locator){// && !('lineNumber' in locator)){
	    	locator.lineNumber = 0;
	    }
	},
	//LexicalHandler
	comment:function(chars, start, length) {
		chars = _toString.apply(this,arguments)
	    var comm = this.doc.createComment(chars);
	    this.locator && position(this.locator,comm)
	    appendElement(this, comm);
	},
	
	startCDATA:function() {
	    //used in characters() methods
	    this.cdata = true;
	},
	endCDATA:function() {
	    this.cdata = false;
	},
	
	startDTD:function(name, publicId, systemId) {
		var impl = this.doc.implementation;
	    if (impl && impl.createDocumentType) {
	        var dt = impl.createDocumentType(name, publicId, systemId);
	        this.locator && position(this.locator,dt)
	        appendElement(this, dt);
	    }
	},
	/**
	 * @see org.xml.sax.ErrorHandler
	 * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html
	 */
	warning:function(error) {
		console.warn('[xmldom warning]\t'+error,_locator(this.locator));
	},
	error:function(error) {
		console.error('[xmldom error]\t'+error,_locator(this.locator));
	},
	fatalError:function(error) {
		console.error('[xmldom fatalError]\t'+error,_locator(this.locator));
	    throw error;
	}
}
function _locator(l){
	if(l){
		return '\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'
	}
}
function _toString(chars,start,length){
	if(typeof chars == 'string'){
		return chars.substr(start,length)
	}else{//java sax connect width xmldom on rhino(what about: "? && !(chars instanceof String)")
		if(chars.length >= start+length || start){
			return new java.lang.String(chars,start,length)+'';
		}
		return chars;
	}
}

/*
 * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html
 * used method of org.xml.sax.ext.LexicalHandler:
 *  #comment(chars, start, length)
 *  #startCDATA()
 *  #endCDATA()
 *  #startDTD(name, publicId, systemId)
 *
 *
 * IGNORED method of org.xml.sax.ext.LexicalHandler:
 *  #endDTD()
 *  #startEntity(name)
 *  #endEntity(name)
 *
 *
 * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html
 * IGNORED method of org.xml.sax.ext.DeclHandler
 * 	#attributeDecl(eName, aName, type, mode, value)
 *  #elementDecl(name, model)
 *  #externalEntityDecl(name, publicId, systemId)
 *  #internalEntityDecl(name, value)
 * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html
 * IGNORED method of org.xml.sax.EntityResolver2
 *  #resolveEntity(String name,String publicId,String baseURI,String systemId)
 *  #resolveEntity(publicId, systemId)
 *  #getExternalSubset(name, baseURI)
 * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html
 * IGNORED method of org.xml.sax.DTDHandler
 *  #notationDecl(name, publicId, systemId) {};
 *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};
 */
"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g,function(key){
	DOMHandler.prototype[key] = function(){return null}
})

/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */
function appendElement (hander,node) {
    if (!hander.currentElement) {
        hander.doc.appendChild(node);
    } else {
        hander.currentElement.appendChild(node);
    }
}//appendChild and setAttributeNS are preformance key

//if(typeof require == 'function'){
	var XMLReader = require('./sax').XMLReader;
	var DOMImplementation = exports.DOMImplementation = require('./dom').DOMImplementation;
	exports.XMLSerializer = require('./dom').XMLSerializer ;
	exports.DOMParser = DOMParser;
//}

},{"./dom":88,"./sax":89}],88:[function(require,module,exports){
/*
 * DOM Level 2
 * Object DOMException
 * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html
 * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
 */

function copy(src,dest){
	for(var p in src){
		dest[p] = src[p];
	}
}
/**
^\w+\.prototype\.([_\w]+)\s*=\s*((?:.*\{\s*?[\r\n][\s\S]*?^})|\S.*?(?=[;\r\n]));?
^\w+\.prototype\.([_\w]+)\s*=\s*(\S.*?(?=[;\r\n]));?
 */
function _extends(Class,Super){
	var pt = Class.prototype;
	if(Object.create){
		var ppt = Object.create(Super.prototype)
		pt.__proto__ = ppt;
	}
	if(!(pt instanceof Super)){
		function t(){};
		t.prototype = Super.prototype;
		t = new t();
		copy(pt,t);
		Class.prototype = pt = t;
	}
	if(pt.constructor != Class){
		if(typeof Class != 'function'){
			console.error("unknow Class:"+Class)
		}
		pt.constructor = Class
	}
}
var htmlns = 'http://www.w3.org/1999/xhtml' ;
// Node Types
var NodeType = {}
var ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;
var ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;
var TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;
var CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;
var ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;
var ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;
var PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;
var COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;
var DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;
var DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;
var DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;
var NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;

// ExceptionCode
var ExceptionCode = {}
var ExceptionMessage = {};
var INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]="Index size error"),1);
var DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]="DOMString size error"),2);
var HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]="Hierarchy request error"),3);
var WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]="Wrong document"),4);
var INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]="Invalid character"),5);
var NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]="No data allowed"),6);
var NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]="No modification allowed"),7);
var NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]="Not found"),8);
var NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]="Not supported"),9);
var INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]="Attribute in use"),10);
//level2
var INVALID_STATE_ERR        	= ExceptionCode.INVALID_STATE_ERR        	= ((ExceptionMessage[11]="Invalid state"),11);
var SYNTAX_ERR               	= ExceptionCode.SYNTAX_ERR               	= ((ExceptionMessage[12]="Syntax error"),12);
var INVALID_MODIFICATION_ERR 	= ExceptionCode.INVALID_MODIFICATION_ERR 	= ((ExceptionMessage[13]="Invalid modification"),13);
var NAMESPACE_ERR            	= ExceptionCode.NAMESPACE_ERR           	= ((ExceptionMessage[14]="Invalid namespace"),14);
var INVALID_ACCESS_ERR       	= ExceptionCode.INVALID_ACCESS_ERR      	= ((ExceptionMessage[15]="Invalid access"),15);


function DOMException(code, message) {
	if(message instanceof Error){
		var error = message;
	}else{
		error = this;
		Error.call(this, ExceptionMessage[code]);
		this.message = ExceptionMessage[code];
		if(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);
	}
	error.code = code;
	if(message) this.message = this.message + ": " + message;
	return error;
};
DOMException.prototype = Error.prototype;
copy(ExceptionCode,DOMException)
/**
 * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177
 * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.
 * The items in the NodeList are accessible via an integral index, starting from 0.
 */
function NodeList() {
};
NodeList.prototype = {
	/**
	 * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.
	 * @standard level1
	 */
	length:0, 
	/**
	 * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
	 * @standard level1
	 * @param index  unsigned long 
	 *   Index into the collection.
	 * @return Node
	 * 	The node at the indexth position in the NodeList, or null if that is not a valid index. 
	 */
	item: function(index) {
		return this[index] || null;
	},
	toString:function(isHTML,nodeFilter){
		for(var buf = [], i = 0;i<this.length;i++){
			serializeToString(this[i],buf,isHTML,nodeFilter);
		}
		return buf.join('');
	}
};
function LiveNodeList(node,refresh){
	this._node = node;
	this._refresh = refresh
	_updateLiveList(this);
}
function _updateLiveList(list){
	var inc = list._node._inc || list._node.ownerDocument._inc;
	if(list._inc != inc){
		var ls = list._refresh(list._node);
		//console.log(ls.length)
		__set__(list,'length',ls.length);
		copy(ls,list);
		list._inc = inc;
	}
}
LiveNodeList.prototype.item = function(i){
	_updateLiveList(this);
	return this[i];
}

_extends(LiveNodeList,NodeList);
/**
 * 
 * Objects implementing the NamedNodeMap interface are used to represent collections of nodes that can be accessed by name. Note that NamedNodeMap does not inherit from NodeList; NamedNodeMaps are not maintained in any particular order. Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a NamedNodeMap, and does not imply that the DOM specifies an order to these Nodes.
 * NamedNodeMap objects in the DOM are live.
 * used for attributes or DocumentType entities 
 */
function NamedNodeMap() {
};

function _findNodeIndex(list,node){
	var i = list.length;
	while(i--){
		if(list[i] === node){return i}
	}
}

function _addNamedNode(el,list,newAttr,oldAttr){
	if(oldAttr){
		list[_findNodeIndex(list,oldAttr)] = newAttr;
	}else{
		list[list.length++] = newAttr;
	}
	if(el){
		newAttr.ownerElement = el;
		var doc = el.ownerDocument;
		if(doc){
			oldAttr && _onRemoveAttribute(doc,el,oldAttr);
			_onAddAttribute(doc,el,newAttr);
		}
	}
}
function _removeNamedNode(el,list,attr){
	//console.log('remove attr:'+attr)
	var i = _findNodeIndex(list,attr);
	if(i>=0){
		var lastIndex = list.length-1
		while(i<lastIndex){
			list[i] = list[++i]
		}
		list.length = lastIndex;
		if(el){
			var doc = el.ownerDocument;
			if(doc){
				_onRemoveAttribute(doc,el,attr);
				attr.ownerElement = null;
			}
		}
	}else{
		throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))
	}
}
NamedNodeMap.prototype = {
	length:0,
	item:NodeList.prototype.item,
	getNamedItem: function(key) {
//		if(key.indexOf(':')>0 || key == 'xmlns'){
//			return null;
//		}
		//console.log()
		var i = this.length;
		while(i--){
			var attr = this[i];
			//console.log(attr.nodeName,key)
			if(attr.nodeName == key){
				return attr;
			}
		}
	},
	setNamedItem: function(attr) {
		var el = attr.ownerElement;
		if(el && el!=this._ownerElement){
			throw new DOMException(INUSE_ATTRIBUTE_ERR);
		}
		var oldAttr = this.getNamedItem(attr.nodeName);
		_addNamedNode(this._ownerElement,this,attr,oldAttr);
		return oldAttr;
	},
	/* returns Node */
	setNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR
		var el = attr.ownerElement, oldAttr;
		if(el && el!=this._ownerElement){
			throw new DOMException(INUSE_ATTRIBUTE_ERR);
		}
		oldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);
		_addNamedNode(this._ownerElement,this,attr,oldAttr);
		return oldAttr;
	},

	/* returns Node */
	removeNamedItem: function(key) {
		var attr = this.getNamedItem(key);
		_removeNamedNode(this._ownerElement,this,attr);
		return attr;
		
		
	},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR
	
	//for level2
	removeNamedItemNS:function(namespaceURI,localName){
		var attr = this.getNamedItemNS(namespaceURI,localName);
		_removeNamedNode(this._ownerElement,this,attr);
		return attr;
	},
	getNamedItemNS: function(namespaceURI, localName) {
		var i = this.length;
		while(i--){
			var node = this[i];
			if(node.localName == localName && node.namespaceURI == namespaceURI){
				return node;
			}
		}
		return null;
	}
};
/**
 * @see http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490
 */
function DOMImplementation(/* Object */ features) {
	this._features = {};
	if (features) {
		for (var feature in features) {
			 this._features = features[feature];
		}
	}
};

DOMImplementation.prototype = {
	hasFeature: function(/* string */ feature, /* string */ version) {
		var versions = this._features[feature.toLowerCase()];
		if (versions && (!version || version in versions)) {
			return true;
		} else {
			return false;
		}
	},
	// Introduced in DOM Level 2:
	createDocument:function(namespaceURI,  qualifiedName, doctype){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR,WRONG_DOCUMENT_ERR
		var doc = new Document();
		doc.implementation = this;
		doc.childNodes = new NodeList();
		doc.doctype = doctype;
		if(doctype){
			doc.appendChild(doctype);
		}
		if(qualifiedName){
			var root = doc.createElementNS(namespaceURI,qualifiedName);
			doc.appendChild(root);
		}
		return doc;
	},
	// Introduced in DOM Level 2:
	createDocumentType:function(qualifiedName, publicId, systemId){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR
		var node = new DocumentType();
		node.name = qualifiedName;
		node.nodeName = qualifiedName;
		node.publicId = publicId;
		node.systemId = systemId;
		// Introduced in DOM Level 2:
		//readonly attribute DOMString        internalSubset;
		
		//TODO:..
		//  readonly attribute NamedNodeMap     entities;
		//  readonly attribute NamedNodeMap     notations;
		return node;
	}
};


/**
 * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247
 */

function Node() {
};

Node.prototype = {
	firstChild : null,
	lastChild : null,
	previousSibling : null,
	nextSibling : null,
	attributes : null,
	parentNode : null,
	childNodes : null,
	ownerDocument : null,
	nodeValue : null,
	namespaceURI : null,
	prefix : null,
	localName : null,
	// Modified in DOM Level 2:
	insertBefore:function(newChild, refChild){//raises 
		return _insertBefore(this,newChild,refChild);
	},
	replaceChild:function(newChild, oldChild){//raises 
		this.insertBefore(newChild,oldChild);
		if(oldChild){
			this.removeChild(oldChild);
		}
	},
	removeChild:function(oldChild){
		return _removeChild(this,oldChild);
	},
	appendChild:function(newChild){
		return this.insertBefore(newChild,null);
	},
	hasChildNodes:function(){
		return this.firstChild != null;
	},
	cloneNode:function(deep){
		return cloneNode(this.ownerDocument||this,this,deep);
	},
	// Modified in DOM Level 2:
	normalize:function(){
		var child = this.firstChild;
		while(child){
			var next = child.nextSibling;
			if(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){
				this.removeChild(next);
				child.appendData(next.data);
			}else{
				child.normalize();
				child = next;
			}
		}
	},
  	// Introduced in DOM Level 2:
	isSupported:function(feature, version){
		return this.ownerDocument.implementation.hasFeature(feature,version);
	},
    // Introduced in DOM Level 2:
    hasAttributes:function(){
    	return this.attributes.length>0;
    },
    lookupPrefix:function(namespaceURI){
    	var el = this;
    	while(el){
    		var map = el._nsMap;
    		//console.dir(map)
    		if(map){
    			for(var n in map){
    				if(map[n] == namespaceURI){
    					return n;
    				}
    			}
    		}
    		el = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;
    	}
    	return null;
    },
    // Introduced in DOM Level 3:
    lookupNamespaceURI:function(prefix){
    	var el = this;
    	while(el){
    		var map = el._nsMap;
    		//console.dir(map)
    		if(map){
    			if(prefix in map){
    				return map[prefix] ;
    			}
    		}
    		el = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;
    	}
    	return null;
    },
    // Introduced in DOM Level 3:
    isDefaultNamespace:function(namespaceURI){
    	var prefix = this.lookupPrefix(namespaceURI);
    	return prefix == null;
    }
};


function _xmlEncoder(c){
	return c == '<' && '&lt;' ||
         c == '>' && '&gt;' ||
         c == '&' && '&amp;' ||
         c == '"' && '&quot;' ||
         '&#'+c.charCodeAt()+';'
}


copy(NodeType,Node);
copy(NodeType,Node.prototype);

/**
 * @param callback return true for continue,false for break
 * @return boolean true: break visit;
 */
function _visitNode(node,callback){
	if(callback(node)){
		return true;
	}
	if(node = node.firstChild){
		do{
			if(_visitNode(node,callback)){return true}
        }while(node=node.nextSibling)
    }
}



function Document(){
}
function _onAddAttribute(doc,el,newAttr){
	doc && doc._inc++;
	var ns = newAttr.namespaceURI ;
	if(ns == 'http://www.w3.org/2000/xmlns/'){
		//update namespace
		el._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value
	}
}
function _onRemoveAttribute(doc,el,newAttr,remove){
	doc && doc._inc++;
	var ns = newAttr.namespaceURI ;
	if(ns == 'http://www.w3.org/2000/xmlns/'){
		//update namespace
		delete el._nsMap[newAttr.prefix?newAttr.localName:'']
	}
}
function _onUpdateChild(doc,el,newChild){
	if(doc && doc._inc){
		doc._inc++;
		//update childNodes
		var cs = el.childNodes;
		if(newChild){
			cs[cs.length++] = newChild;
		}else{
			//console.log(1)
			var child = el.firstChild;
			var i = 0;
			while(child){
				cs[i++] = child;
				child =child.nextSibling;
			}
			cs.length = i;
		}
	}
}

/**
 * attributes;
 * children;
 * 
 * writeable properties:
 * nodeValue,Attr:value,CharacterData:data
 * prefix
 */
function _removeChild(parentNode,child){
	var previous = child.previousSibling;
	var next = child.nextSibling;
	if(previous){
		previous.nextSibling = next;
	}else{
		parentNode.firstChild = next
	}
	if(next){
		next.previousSibling = previous;
	}else{
		parentNode.lastChild = previous;
	}
	_onUpdateChild(parentNode.ownerDocument,parentNode);
	return child;
}
/**
 * preformance key(refChild == null)
 */
function _insertBefore(parentNode,newChild,nextChild){
	var cp = newChild.parentNode;
	if(cp){
		cp.removeChild(newChild);//remove and update
	}
	if(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){
		var newFirst = newChild.firstChild;
		if (newFirst == null) {
			return newChild;
		}
		var newLast = newChild.lastChild;
	}else{
		newFirst = newLast = newChild;
	}
	var pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;

	newFirst.previousSibling = pre;
	newLast.nextSibling = nextChild;
	
	
	if(pre){
		pre.nextSibling = newFirst;
	}else{
		parentNode.firstChild = newFirst;
	}
	if(nextChild == null){
		parentNode.lastChild = newLast;
	}else{
		nextChild.previousSibling = newLast;
	}
	do{
		newFirst.parentNode = parentNode;
	}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))
	_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);
	//console.log(parentNode.lastChild.nextSibling == null)
	if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {
		newChild.firstChild = newChild.lastChild = null;
	}
	return newChild;
}
function _appendSingleChild(parentNode,newChild){
	var cp = newChild.parentNode;
	if(cp){
		var pre = parentNode.lastChild;
		cp.removeChild(newChild);//remove and update
		var pre = parentNode.lastChild;
	}
	var pre = parentNode.lastChild;
	newChild.parentNode = parentNode;
	newChild.previousSibling = pre;
	newChild.nextSibling = null;
	if(pre){
		pre.nextSibling = newChild;
	}else{
		parentNode.firstChild = newChild;
	}
	parentNode.lastChild = newChild;
	_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);
	return newChild;
	//console.log("__aa",parentNode.lastChild.nextSibling == null)
}
Document.prototype = {
	//implementation : null,
	nodeName :  '#document',
	nodeType :  DOCUMENT_NODE,
	doctype :  null,
	documentElement :  null,
	_inc : 1,
	
	insertBefore :  function(newChild, refChild){//raises 
		if(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){
			var child = newChild.firstChild;
			while(child){
				var next = child.nextSibling;
				this.insertBefore(child,refChild);
				child = next;
			}
			return newChild;
		}
		if(this.documentElement == null && newChild.nodeType == ELEMENT_NODE){
			this.documentElement = newChild;
		}
		
		return _insertBefore(this,newChild,refChild),(newChild.ownerDocument = this),newChild;
	},
	removeChild :  function(oldChild){
		if(this.documentElement == oldChild){
			this.documentElement = null;
		}
		return _removeChild(this,oldChild);
	},
	// Introduced in DOM Level 2:
	importNode : function(importedNode,deep){
		return importNode(this,importedNode,deep);
	},
	// Introduced in DOM Level 2:
	getElementById :	function(id){
		var rtv = null;
		_visitNode(this.documentElement,function(node){
			if(node.nodeType == ELEMENT_NODE){
				if(node.getAttribute('id') == id){
					rtv = node;
					return true;
				}
			}
		})
		return rtv;
	},
	
	//document factory method:
	createElement :	function(tagName){
		var node = new Element();
		node.ownerDocument = this;
		node.nodeName = tagName;
		node.tagName = tagName;
		node.childNodes = new NodeList();
		var attrs	= node.attributes = new NamedNodeMap();
		attrs._ownerElement = node;
		return node;
	},
	createDocumentFragment :	function(){
		var node = new DocumentFragment();
		node.ownerDocument = this;
		node.childNodes = new NodeList();
		return node;
	},
	createTextNode :	function(data){
		var node = new Text();
		node.ownerDocument = this;
		node.appendData(data)
		return node;
	},
	createComment :	function(data){
		var node = new Comment();
		node.ownerDocument = this;
		node.appendData(data)
		return node;
	},
	createCDATASection :	function(data){
		var node = new CDATASection();
		node.ownerDocument = this;
		node.appendData(data)
		return node;
	},
	createProcessingInstruction :	function(target,data){
		var node = new ProcessingInstruction();
		node.ownerDocument = this;
		node.tagName = node.target = target;
		node.nodeValue= node.data = data;
		return node;
	},
	createAttribute :	function(name){
		var node = new Attr();
		node.ownerDocument	= this;
		node.name = name;
		node.nodeName	= name;
		node.localName = name;
		node.specified = true;
		return node;
	},
	createEntityReference :	function(name){
		var node = new EntityReference();
		node.ownerDocument	= this;
		node.nodeName	= name;
		return node;
	},
	// Introduced in DOM Level 2:
	createElementNS :	function(namespaceURI,qualifiedName){
		var node = new Element();
		var pl = qualifiedName.split(':');
		var attrs	= node.attributes = new NamedNodeMap();
		node.childNodes = new NodeList();
		node.ownerDocument = this;
		node.nodeName = qualifiedName;
		node.tagName = qualifiedName;
		node.namespaceURI = namespaceURI;
		if(pl.length == 2){
			node.prefix = pl[0];
			node.localName = pl[1];
		}else{
			//el.prefix = null;
			node.localName = qualifiedName;
		}
		attrs._ownerElement = node;
		return node;
	},
	// Introduced in DOM Level 2:
	createAttributeNS :	function(namespaceURI,qualifiedName){
		var node = new Attr();
		var pl = qualifiedName.split(':');
		node.ownerDocument = this;
		node.nodeName = qualifiedName;
		node.name = qualifiedName;
		node.namespaceURI = namespaceURI;
		node.specified = true;
		if(pl.length == 2){
			node.prefix = pl[0];
			node.localName = pl[1];
		}else{
			//el.prefix = null;
			node.localName = qualifiedName;
		}
		return node;
	}
};
_extends(Document,Node);


function Element() {
	this._nsMap = {};
};
Element.prototype = {
	nodeType : ELEMENT_NODE,
	hasAttribute : function(name){
		return this.getAttributeNode(name)!=null;
	},
	getAttribute : function(name){
		var attr = this.getAttributeNode(name);
		return attr && attr.value || '';
	},
	getAttributeNode : function(name){
		return this.attributes.getNamedItem(name);
	},
	setAttribute : function(name, value){
		var attr = this.ownerDocument.createAttribute(name);
		attr.value = attr.nodeValue = "" + value;
		this.setAttributeNode(attr)
	},
	removeAttribute : function(name){
		var attr = this.getAttributeNode(name)
		attr && this.removeAttributeNode(attr);
	},
	
	//four real opeartion method
	appendChild:function(newChild){
		if(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){
			return this.insertBefore(newChild,null);
		}else{
			return _appendSingleChild(this,newChild);
		}
	},
	setAttributeNode : function(newAttr){
		return this.attributes.setNamedItem(newAttr);
	},
	setAttributeNodeNS : function(newAttr){
		return this.attributes.setNamedItemNS(newAttr);
	},
	removeAttributeNode : function(oldAttr){
		//console.log(this == oldAttr.ownerElement)
		return this.attributes.removeNamedItem(oldAttr.nodeName);
	},
	//get real attribute name,and remove it by removeAttributeNode
	removeAttributeNS : function(namespaceURI, localName){
		var old = this.getAttributeNodeNS(namespaceURI, localName);
		old && this.removeAttributeNode(old);
	},
	
	hasAttributeNS : function(namespaceURI, localName){
		return this.getAttributeNodeNS(namespaceURI, localName)!=null;
	},
	getAttributeNS : function(namespaceURI, localName){
		var attr = this.getAttributeNodeNS(namespaceURI, localName);
		return attr && attr.value || '';
	},
	setAttributeNS : function(namespaceURI, qualifiedName, value){
		var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);
		attr.value = attr.nodeValue = "" + value;
		this.setAttributeNode(attr)
	},
	getAttributeNodeNS : function(namespaceURI, localName){
		return this.attributes.getNamedItemNS(namespaceURI, localName);
	},
	
	getElementsByTagName : function(tagName){
		return new LiveNodeList(this,function(base){
			var ls = [];
			_visitNode(base,function(node){
				if(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){
					ls.push(node);
				}
			});
			return ls;
		});
	},
	getElementsByTagNameNS : function(namespaceURI, localName){
		return new LiveNodeList(this,function(base){
			var ls = [];
			_visitNode(base,function(node){
				if(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){
					ls.push(node);
				}
			});
			return ls;
			
		});
	}
};
Document.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;
Document.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;


_extends(Element,Node);
function Attr() {
};
Attr.prototype.nodeType = ATTRIBUTE_NODE;
_extends(Attr,Node);


function CharacterData() {
};
CharacterData.prototype = {
	data : '',
	substringData : function(offset, count) {
		return this.data.substring(offset, offset+count);
	},
	appendData: function(text) {
		text = this.data+text;
		this.nodeValue = this.data = text;
		this.length = text.length;
	},
	insertData: function(offset,text) {
		this.replaceData(offset,0,text);
	
	},
	appendChild:function(newChild){
		throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])
	},
	deleteData: function(offset, count) {
		this.replaceData(offset,count,"");
	},
	replaceData: function(offset, count, text) {
		var start = this.data.substring(0,offset);
		var end = this.data.substring(offset+count);
		text = start + text + end;
		this.nodeValue = this.data = text;
		this.length = text.length;
	}
}
_extends(CharacterData,Node);
function Text() {
};
Text.prototype = {
	nodeName : "#text",
	nodeType : TEXT_NODE,
	splitText : function(offset) {
		var text = this.data;
		var newText = text.substring(offset);
		text = text.substring(0, offset);
		this.data = this.nodeValue = text;
		this.length = text.length;
		var newNode = this.ownerDocument.createTextNode(newText);
		if(this.parentNode){
			this.parentNode.insertBefore(newNode, this.nextSibling);
		}
		return newNode;
	}
}
_extends(Text,CharacterData);
function Comment() {
};
Comment.prototype = {
	nodeName : "#comment",
	nodeType : COMMENT_NODE
}
_extends(Comment,CharacterData);

function CDATASection() {
};
CDATASection.prototype = {
	nodeName : "#cdata-section",
	nodeType : CDATA_SECTION_NODE
}
_extends(CDATASection,CharacterData);


function DocumentType() {
};
DocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;
_extends(DocumentType,Node);

function Notation() {
};
Notation.prototype.nodeType = NOTATION_NODE;
_extends(Notation,Node);

function Entity() {
};
Entity.prototype.nodeType = ENTITY_NODE;
_extends(Entity,Node);

function EntityReference() {
};
EntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;
_extends(EntityReference,Node);

function DocumentFragment() {
};
DocumentFragment.prototype.nodeName =	"#document-fragment";
DocumentFragment.prototype.nodeType =	DOCUMENT_FRAGMENT_NODE;
_extends(DocumentFragment,Node);


function ProcessingInstruction() {
}
ProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;
_extends(ProcessingInstruction,Node);
function XMLSerializer(){}
XMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){
	return nodeSerializeToString.call(node,isHtml,nodeFilter);
}
Node.prototype.toString = nodeSerializeToString;
function nodeSerializeToString(isHtml,nodeFilter){
	var buf = [];
	var refNode = this.nodeType == 9?this.documentElement:this;
	var prefix = refNode.prefix;
	var uri = refNode.namespaceURI;
	
	if(uri && prefix == null){
		//console.log(prefix)
		var prefix = refNode.lookupPrefix(uri);
		if(prefix == null){
			//isHTML = true;
			var visibleNamespaces=[
			{namespace:uri,prefix:null}
			//{namespace:uri,prefix:''}
			]
		}
	}
	serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);
	//console.log('###',this.nodeType,uri,prefix,buf.join(''))
	return buf.join('');
}
function needNamespaceDefine(node,isHTML, visibleNamespaces) {
	var prefix = node.prefix||'';
	var uri = node.namespaceURI;
	if (!prefix && !uri){
		return false;
	}
	if (prefix === "xml" && uri === "http://www.w3.org/XML/1998/namespace" 
		|| uri == 'http://www.w3.org/2000/xmlns/'){
		return false;
	}
	
	var i = visibleNamespaces.length 
	//console.log('@@@@',node.tagName,prefix,uri,visibleNamespaces)
	while (i--) {
		var ns = visibleNamespaces[i];
		// get namespace prefix
		//console.log(node.nodeType,node.tagName,ns.prefix,prefix)
		if (ns.prefix == prefix){
			return ns.namespace != uri;
		}
	}
	//console.log(isHTML,uri,prefix=='')
	//if(isHTML && prefix ==null && uri == 'http://www.w3.org/1999/xhtml'){
	//	return false;
	//}
	//node.flag = '11111'
	//console.error(3,true,node.flag,node.prefix,node.namespaceURI)
	return true;
}
function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){
	if(nodeFilter){
		node = nodeFilter(node);
		if(node){
			if(typeof node == 'string'){
				buf.push(node);
				return;
			}
		}else{
			return;
		}
		//buf.sort.apply(attrs, attributeSorter);
	}
	switch(node.nodeType){
	case ELEMENT_NODE:
		if (!visibleNamespaces) visibleNamespaces = [];
		var startVisibleNamespaces = visibleNamespaces.length;
		var attrs = node.attributes;
		var len = attrs.length;
		var child = node.firstChild;
		var nodeName = node.tagName;
		
		isHTML =  (htmlns === node.namespaceURI) ||isHTML 
		buf.push('<',nodeName);
		
		
		
		for(var i=0;i<len;i++){
			// add namespaces for attributes
			var attr = attrs.item(i);
			if (attr.prefix == 'xmlns') {
				visibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });
			}else if(attr.nodeName == 'xmlns'){
				visibleNamespaces.push({ prefix: '', namespace: attr.value });
			}
		}
		for(var i=0;i<len;i++){
			var attr = attrs.item(i);
			if (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {
				var prefix = attr.prefix||'';
				var uri = attr.namespaceURI;
				var ns = prefix ? ' xmlns:' + prefix : " xmlns";
				buf.push(ns, '="' , uri , '"');
				visibleNamespaces.push({ prefix: prefix, namespace:uri });
			}
			serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);
		}
		// add namespace for current node		
		if (needNamespaceDefine(node,isHTML, visibleNamespaces)) {
			var prefix = node.prefix||'';
			var uri = node.namespaceURI;
			var ns = prefix ? ' xmlns:' + prefix : " xmlns";
			buf.push(ns, '="' , uri , '"');
			visibleNamespaces.push({ prefix: prefix, namespace:uri });
		}
		
		if(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){
			buf.push('>');
			//if is cdata child node
			if(isHTML && /^script$/i.test(nodeName)){
				while(child){
					if(child.data){
						buf.push(child.data);
					}else{
						serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);
					}
					child = child.nextSibling;
				}
			}else
			{
				while(child){
					serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);
					child = child.nextSibling;
				}
			}
			buf.push('</',nodeName,'>');
		}else{
			buf.push('/>');
		}
		// remove added visible namespaces
		//visibleNamespaces.length = startVisibleNamespaces;
		return;
	case DOCUMENT_NODE:
	case DOCUMENT_FRAGMENT_NODE:
		var child = node.firstChild;
		while(child){
			serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);
			child = child.nextSibling;
		}
		return;
	case ATTRIBUTE_NODE:
		return buf.push(' ',node.name,'="',node.value.replace(/[<&"]/g,_xmlEncoder),'"');
	case TEXT_NODE:
		return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));
	case CDATA_SECTION_NODE:
		return buf.push( '<![CDATA[',node.data,']]>');
	case COMMENT_NODE:
		return buf.push( "<!--",node.data,"-->");
	case DOCUMENT_TYPE_NODE:
		var pubid = node.publicId;
		var sysid = node.systemId;
		buf.push('<!DOCTYPE ',node.name);
		if(pubid){
			buf.push(' PUBLIC "',pubid);
			if (sysid && sysid!='.') {
				buf.push( '" "',sysid);
			}
			buf.push('">');
		}else if(sysid && sysid!='.'){
			buf.push(' SYSTEM "',sysid,'">');
		}else{
			var sub = node.internalSubset;
			if(sub){
				buf.push(" [",sub,"]");
			}
			buf.push(">");
		}
		return;
	case PROCESSING_INSTRUCTION_NODE:
		return buf.push( "<?",node.target," ",node.data,"?>");
	case ENTITY_REFERENCE_NODE:
		return buf.push( '&',node.nodeName,';');
	//case ENTITY_NODE:
	//case NOTATION_NODE:
	default:
		buf.push('??',node.nodeName);
	}
}
function importNode(doc,node,deep){
	var node2;
	switch (node.nodeType) {
	case ELEMENT_NODE:
		node2 = node.cloneNode(false);
		node2.ownerDocument = doc;
		//var attrs = node2.attributes;
		//var len = attrs.length;
		//for(var i=0;i<len;i++){
			//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));
		//}
	case DOCUMENT_FRAGMENT_NODE:
		break;
	case ATTRIBUTE_NODE:
		deep = true;
		break;
	//case ENTITY_REFERENCE_NODE:
	//case PROCESSING_INSTRUCTION_NODE:
	////case TEXT_NODE:
	//case CDATA_SECTION_NODE:
	//case COMMENT_NODE:
	//	deep = false;
	//	break;
	//case DOCUMENT_NODE:
	//case DOCUMENT_TYPE_NODE:
	//cannot be imported.
	//case ENTITY_NODE:
	//case NOTATION_NODE：
	//can not hit in level3
	//default:throw e;
	}
	if(!node2){
		node2 = node.cloneNode(false);//false
	}
	node2.ownerDocument = doc;
	node2.parentNode = null;
	if(deep){
		var child = node.firstChild;
		while(child){
			node2.appendChild(importNode(doc,child,deep));
			child = child.nextSibling;
		}
	}
	return node2;
}
//
//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,
//					attributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};
function cloneNode(doc,node,deep){
	var node2 = new node.constructor();
	for(var n in node){
		var v = node[n];
		if(typeof v != 'object' ){
			if(v != node2[n]){
				node2[n] = v;
			}
		}
	}
	if(node.childNodes){
		node2.childNodes = new NodeList();
	}
	node2.ownerDocument = doc;
	switch (node2.nodeType) {
	case ELEMENT_NODE:
		var attrs	= node.attributes;
		var attrs2	= node2.attributes = new NamedNodeMap();
		var len = attrs.length
		attrs2._ownerElement = node2;
		for(var i=0;i<len;i++){
			node2.setAttributeNode(cloneNode(doc,attrs.item(i),true));
		}
		break;;
	case ATTRIBUTE_NODE:
		deep = true;
	}
	if(deep){
		var child = node.firstChild;
		while(child){
			node2.appendChild(cloneNode(doc,child,deep));
			child = child.nextSibling;
		}
	}
	return node2;
}

function __set__(object,key,value){
	object[key] = value
}
//do dynamic
try{
	if(Object.defineProperty){
		Object.defineProperty(LiveNodeList.prototype,'length',{
			get:function(){
				_updateLiveList(this);
				return this.$$length;
			}
		});
		Object.defineProperty(Node.prototype,'textContent',{
			get:function(){
				return getTextContent(this);
			},
			set:function(data){
				switch(this.nodeType){
				case ELEMENT_NODE:
				case DOCUMENT_FRAGMENT_NODE:
					while(this.firstChild){
						this.removeChild(this.firstChild);
					}
					if(data || String(data)){
						this.appendChild(this.ownerDocument.createTextNode(data));
					}
					break;
				default:
					//TODO:
					this.data = data;
					this.value = data;
					this.nodeValue = data;
				}
			}
		})
		
		function getTextContent(node){
			switch(node.nodeType){
			case ELEMENT_NODE:
			case DOCUMENT_FRAGMENT_NODE:
				var buf = [];
				node = node.firstChild;
				while(node){
					if(node.nodeType!==7 && node.nodeType !==8){
						buf.push(getTextContent(node));
					}
					node = node.nextSibling;
				}
				return buf.join('');
			default:
				return node.nodeValue;
			}
		}
		__set__ = function(object,key,value){
			//console.log(value)
			object['$$'+key] = value
		}
	}
}catch(e){//ie8
}

//if(typeof require == 'function'){
	exports.DOMImplementation = DOMImplementation;
	exports.XMLSerializer = XMLSerializer;
//}

},{}],89:[function(require,module,exports){
//[4]   	NameStartChar	   ::=   	":" | [A-Z] | "_" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]
//[4a]   	NameChar	   ::=   	NameStartChar | "-" | "." | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]
//[5]   	Name	   ::=   	NameStartChar (NameChar)*
var nameStartChar = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]///\u10000-\uEFFFF
var nameChar = new RegExp("[\\-\\.0-9"+nameStartChar.source.slice(1,-1)+"\\u00B7\\u0300-\\u036F\\u203F-\\u2040]");
var tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\:'+nameStartChar.source+nameChar.source+'*)?$');
//var tagNamePattern = /^[a-zA-Z_][\w\-\.]*(?:\:[a-zA-Z_][\w\-\.]*)?$/
//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')

//S_TAG,	S_ATTR,	S_EQ,	S_ATTR_NOQUOT_VALUE
//S_ATTR_SPACE,	S_ATTR_END,	S_TAG_SPACE, S_TAG_CLOSE
var S_TAG = 0;//tag name offerring
var S_ATTR = 1;//attr name offerring 
var S_ATTR_SPACE=2;//attr name end and space offer
var S_EQ = 3;//=space?
var S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)
var S_ATTR_END = 5;//attr value end and no space(quot end)
var S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)
var S_TAG_CLOSE = 7;//closed el<el />

function XMLReader(){
	
}

XMLReader.prototype = {
	parse:function(source,defaultNSMap,entityMap){
		var domBuilder = this.domBuilder;
		domBuilder.startDocument();
		_copy(defaultNSMap ,defaultNSMap = {})
		parse(source,defaultNSMap,entityMap,
				domBuilder,this.errorHandler);
		domBuilder.endDocument();
	}
}
function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){
	function fixedFromCharCode(code) {
		// String.prototype.fromCharCode does not supports
		// > 2 bytes unicode chars directly
		if (code > 0xffff) {
			code -= 0x10000;
			var surrogate1 = 0xd800 + (code >> 10)
				, surrogate2 = 0xdc00 + (code & 0x3ff);

			return String.fromCharCode(surrogate1, surrogate2);
		} else {
			return String.fromCharCode(code);
		}
	}
	function entityReplacer(a){
		var k = a.slice(1,-1);
		if(k in entityMap){
			return entityMap[k]; 
		}else if(k.charAt(0) === '#'){
			return fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))
		}else{
			errorHandler.error('entity not found:'+a);
			return a;
		}
	}
	function appendText(end){//has some bugs
		if(end>start){
			var xt = source.substring(start,end).replace(/&#?\w+;/g,entityReplacer);
			locator&&position(start);
			domBuilder.characters(xt,0,end-start);
			start = end
		}
	}
	function position(p,m){
		while(p>=lineEnd && (m = linePattern.exec(source))){
			lineStart = m.index;
			lineEnd = lineStart + m[0].length;
			locator.lineNumber++;
			//console.log('line++:',locator,startPos,endPos)
		}
		locator.columnNumber = p-lineStart+1;
	}
	var lineStart = 0;
	var lineEnd = 0;
	var linePattern = /.*(?:\r\n?|\n)|.*$/g
	var locator = domBuilder.locator;
	
	var parseStack = [{currentNSMap:defaultNSMapCopy}]
	var closeMap = {};
	var start = 0;
	while(true){
		try{
			var tagStart = source.indexOf('<',start);
			if(tagStart<0){
				if(!source.substr(start).match(/^\s*$/)){
					var doc = domBuilder.doc;
	    			var text = doc.createTextNode(source.substr(start));
	    			doc.appendChild(text);
	    			domBuilder.currentElement = text;
				}
				return;
			}
			if(tagStart>start){
				appendText(tagStart);
			}
			switch(source.charAt(tagStart+1)){
			case '/':
				var end = source.indexOf('>',tagStart+3);
				var tagName = source.substring(tagStart+2,end);
				var config = parseStack.pop();
				if(end<0){
					
	        		tagName = source.substring(tagStart+2).replace(/[\s<].*/,'');
	        		//console.error('#@@@@@@'+tagName)
	        		errorHandler.error("end tag name: "+tagName+' is not complete:'+config.tagName);
	        		end = tagStart+1+tagName.length;
	        	}else if(tagName.match(/\s</)){
	        		tagName = tagName.replace(/[\s<].*/,'');
	        		errorHandler.error("end tag name: "+tagName+' maybe not complete');
	        		end = tagStart+1+tagName.length;
				}
				//console.error(parseStack.length,parseStack)
				//console.error(config);
				var localNSMap = config.localNSMap;
				var endMatch = config.tagName == tagName;
				var endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()
		        if(endIgnoreCaseMach){
		        	domBuilder.endElement(config.uri,config.localName,tagName);
					if(localNSMap){
						for(var prefix in localNSMap){
							domBuilder.endPrefixMapping(prefix) ;
						}
					}
					if(!endMatch){
		            	errorHandler.fatalError("end tag name: "+tagName+' is not match the current start tagName:'+config.tagName );
					}
		        }else{
		        	parseStack.push(config)
		        }
				
				end++;
				break;
				// end elment
			case '?':// <?...?>
				locator&&position(tagStart);
				end = parseInstruction(source,tagStart,domBuilder);
				break;
			case '!':// <!doctype,<![CDATA,<!--
				locator&&position(tagStart);
				end = parseDCC(source,tagStart,domBuilder,errorHandler);
				break;
			default:
				locator&&position(tagStart);
				var el = new ElementAttributes();
				var currentNSMap = parseStack[parseStack.length-1].currentNSMap;
				//elStartEnd
				var end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);
				var len = el.length;
				
				
				if(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){
					el.closed = true;
					if(!entityMap.nbsp){
						errorHandler.warning('unclosed xml attribute');
					}
				}
				if(locator && len){
					var locator2 = copyLocator(locator,{});
					//try{//attribute position fixed
					for(var i = 0;i<len;i++){
						var a = el[i];
						position(a.offset);
						a.locator = copyLocator(locator,{});
					}
					//}catch(e){console.error('@@@@@'+e)}
					domBuilder.locator = locator2
					if(appendElement(el,domBuilder,currentNSMap)){
						parseStack.push(el)
					}
					domBuilder.locator = locator;
				}else{
					if(appendElement(el,domBuilder,currentNSMap)){
						parseStack.push(el)
					}
				}
				
				
				
				if(el.uri === 'http://www.w3.org/1999/xhtml' && !el.closed){
					end = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)
				}else{
					end++;
				}
			}
		}catch(e){
			errorHandler.error('element parse error: '+e)
			//errorHandler.error('element parse error: '+e);
			end = -1;
			//throw e;
		}
		if(end>start){
			start = end;
		}else{
			//TODO: 这里有可能sax回退，有位置错误风险
			appendText(Math.max(tagStart,start)+1);
		}
	}
}
function copyLocator(f,t){
	t.lineNumber = f.lineNumber;
	t.columnNumber = f.columnNumber;
	return t;
}

/**
 * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);
 * @return end of the elementStartPart(end of elementEndPart for selfClosed el)
 */
function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){
	var attrName;
	var value;
	var p = ++start;
	var s = S_TAG;//status
	while(true){
		var c = source.charAt(p);
		switch(c){
		case '=':
			if(s === S_ATTR){//attrName
				attrName = source.slice(start,p);
				s = S_EQ;
			}else if(s === S_ATTR_SPACE){
				s = S_EQ;
			}else{
				//fatalError: equal must after attrName or space after attrName
				throw new Error('attribute equal must after attrName');
			}
			break;
		case '\'':
		case '"':
			if(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE
				){//equal
				if(s === S_ATTR){
					errorHandler.warning('attribute value must after "="')
					attrName = source.slice(start,p)
				}
				start = p+1;
				p = source.indexOf(c,start)
				if(p>0){
					value = source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);
					el.add(attrName,value,start-1);
					s = S_ATTR_END;
				}else{
					//fatalError: no end quot match
					throw new Error('attribute value no end \''+c+'\' match');
				}
			}else if(s == S_ATTR_NOQUOT_VALUE){
				value = source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);
				//console.log(attrName,value,start,p)
				el.add(attrName,value,start);
				//console.dir(el)
				errorHandler.warning('attribute "'+attrName+'" missed start quot('+c+')!!');
				start = p+1;
				s = S_ATTR_END
			}else{
				//fatalError: no equal before
				throw new Error('attribute value must after "="');
			}
			break;
		case '/':
			switch(s){
			case S_TAG:
				el.setTagName(source.slice(start,p));
			case S_ATTR_END:
			case S_TAG_SPACE:
			case S_TAG_CLOSE:
				s =S_TAG_CLOSE;
				el.closed = true;
			case S_ATTR_NOQUOT_VALUE:
			case S_ATTR:
			case S_ATTR_SPACE:
				break;
			//case S_EQ:
			default:
				throw new Error("attribute invalid close char('/')")
			}
			break;
		case ''://end document
			//throw new Error('unexpected end of input')
			errorHandler.error('unexpected end of input');
			if(s == S_TAG){
				el.setTagName(source.slice(start,p));
			}
			return p;
		case '>':
			switch(s){
			case S_TAG:
				el.setTagName(source.slice(start,p));
			case S_ATTR_END:
			case S_TAG_SPACE:
			case S_TAG_CLOSE:
				break;//normal
			case S_ATTR_NOQUOT_VALUE://Compatible state
			case S_ATTR:
				value = source.slice(start,p);
				if(value.slice(-1) === '/'){
					el.closed  = true;
					value = value.slice(0,-1)
				}
			case S_ATTR_SPACE:
				if(s === S_ATTR_SPACE){
					value = attrName;
				}
				if(s == S_ATTR_NOQUOT_VALUE){
					errorHandler.warning('attribute "'+value+'" missed quot(")!!');
					el.add(attrName,value.replace(/&#?\w+;/g,entityReplacer),start)
				}else{
					if(currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !value.match(/^(?:disabled|checked|selected)$/i)){
						errorHandler.warning('attribute "'+value+'" missed value!! "'+value+'" instead!!')
					}
					el.add(value,value,start)
				}
				break;
			case S_EQ:
				throw new Error('attribute value missed!!');
			}
//			console.log(tagName,tagNamePattern,tagNamePattern.test(tagName))
			return p;
		/*xml space '\x20' | #x9 | #xD | #xA; */
		case '\u0080':
			c = ' ';
		default:
			if(c<= ' '){//space
				switch(s){
				case S_TAG:
					el.setTagName(source.slice(start,p));//tagName
					s = S_TAG_SPACE;
					break;
				case S_ATTR:
					attrName = source.slice(start,p)
					s = S_ATTR_SPACE;
					break;
				case S_ATTR_NOQUOT_VALUE:
					var value = source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);
					errorHandler.warning('attribute "'+value+'" missed quot(")!!');
					el.add(attrName,value,start)
				case S_ATTR_END:
					s = S_TAG_SPACE;
					break;
				//case S_TAG_SPACE:
				//case S_EQ:
				//case S_ATTR_SPACE:
				//	void();break;
				//case S_TAG_CLOSE:
					//ignore warning
				}
			}else{//not space
//S_TAG,	S_ATTR,	S_EQ,	S_ATTR_NOQUOT_VALUE
//S_ATTR_SPACE,	S_ATTR_END,	S_TAG_SPACE, S_TAG_CLOSE
				switch(s){
				//case S_TAG:void();break;
				//case S_ATTR:void();break;
				//case S_ATTR_NOQUOT_VALUE:void();break;
				case S_ATTR_SPACE:
					var tagName =  el.tagName;
					if(currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !attrName.match(/^(?:disabled|checked|selected)$/i)){
						errorHandler.warning('attribute "'+attrName+'" missed value!! "'+attrName+'" instead2!!')
					}
					el.add(attrName,attrName,start);
					start = p;
					s = S_ATTR;
					break;
				case S_ATTR_END:
					errorHandler.warning('attribute space is required"'+attrName+'"!!')
				case S_TAG_SPACE:
					s = S_ATTR;
					start = p;
					break;
				case S_EQ:
					s = S_ATTR_NOQUOT_VALUE;
					start = p;
					break;
				case S_TAG_CLOSE:
					throw new Error("elements closed character '/' and '>' must be connected to");
				}
			}
		}//end outer switch
		//console.log('p++',p)
		p++;
	}
}
/**
 * @return true if has new namespace define
 */
function appendElement(el,domBuilder,currentNSMap){
	var tagName = el.tagName;
	var localNSMap = null;
	//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;
	var i = el.length;
	while(i--){
		var a = el[i];
		var qName = a.qName;
		var value = a.value;
		var nsp = qName.indexOf(':');
		if(nsp>0){
			var prefix = a.prefix = qName.slice(0,nsp);
			var localName = qName.slice(nsp+1);
			var nsPrefix = prefix === 'xmlns' && localName
		}else{
			localName = qName;
			prefix = null
			nsPrefix = qName === 'xmlns' && ''
		}
		//can not set prefix,because prefix !== ''
		a.localName = localName ;
		//prefix == null for no ns prefix attribute 
		if(nsPrefix !== false){//hack!!
			if(localNSMap == null){
				localNSMap = {}
				//console.log(currentNSMap,0)
				_copy(currentNSMap,currentNSMap={})
				//console.log(currentNSMap,1)
			}
			currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;
			a.uri = 'http://www.w3.org/2000/xmlns/'
			domBuilder.startPrefixMapping(nsPrefix, value) 
		}
	}
	var i = el.length;
	while(i--){
		a = el[i];
		var prefix = a.prefix;
		if(prefix){//no prefix attribute has no namespace
			if(prefix === 'xml'){
				a.uri = 'http://www.w3.org/XML/1998/namespace';
			}if(prefix !== 'xmlns'){
				a.uri = currentNSMap[prefix || '']
				
				//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}
			}
		}
	}
	var nsp = tagName.indexOf(':');
	if(nsp>0){
		prefix = el.prefix = tagName.slice(0,nsp);
		localName = el.localName = tagName.slice(nsp+1);
	}else{
		prefix = null;//important!!
		localName = el.localName = tagName;
	}
	//no prefix element has default namespace
	var ns = el.uri = currentNSMap[prefix || ''];
	domBuilder.startElement(ns,localName,tagName,el);
	//endPrefixMapping and startPrefixMapping have not any help for dom builder
	//localNSMap = null
	if(el.closed){
		domBuilder.endElement(ns,localName,tagName);
		if(localNSMap){
			for(prefix in localNSMap){
				domBuilder.endPrefixMapping(prefix) 
			}
		}
	}else{
		el.currentNSMap = currentNSMap;
		el.localNSMap = localNSMap;
		//parseStack.push(el);
		return true;
	}
}
function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){
	if(/^(?:script|textarea)$/i.test(tagName)){
		var elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);
		var text = source.substring(elStartEnd+1,elEndStart);
		if(/[&<]/.test(text)){
			if(/^script$/i.test(tagName)){
				//if(!/\]\]>/.test(text)){
					//lexHandler.startCDATA();
					domBuilder.characters(text,0,text.length);
					//lexHandler.endCDATA();
					return elEndStart;
				//}
			}//}else{//text area
				text = text.replace(/&#?\w+;/g,entityReplacer);
				domBuilder.characters(text,0,text.length);
				return elEndStart;
			//}
			
		}
	}
	return elStartEnd+1;
}
function fixSelfClosed(source,elStartEnd,tagName,closeMap){
	//if(tagName in closeMap){
	var pos = closeMap[tagName];
	if(pos == null){
		//console.log(tagName)
		pos =  source.lastIndexOf('</'+tagName+'>')
		if(pos<elStartEnd){//忘记闭合
			pos = source.lastIndexOf('</'+tagName)
		}
		closeMap[tagName] =pos
	}
	return pos<elStartEnd;
	//} 
}
function _copy(source,target){
	for(var n in source){target[n] = source[n]}
}
function parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'
	var next= source.charAt(start+2)
	switch(next){
	case '-':
		if(source.charAt(start + 3) === '-'){
			var end = source.indexOf('-->',start+4);
			//append comment source.substring(4,end)//<!--
			if(end>start){
				domBuilder.comment(source,start+4,end-start-4);
				return end+3;
			}else{
				errorHandler.error("Unclosed comment");
				return -1;
			}
		}else{
			//error
			return -1;
		}
	default:
		if(source.substr(start+3,6) == 'CDATA['){
			var end = source.indexOf(']]>',start+9);
			domBuilder.startCDATA();
			domBuilder.characters(source,start+9,end-start-9);
			domBuilder.endCDATA() 
			return end+3;
		}
		//<!DOCTYPE
		//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) 
		var matchs = split(source,start);
		var len = matchs.length;
		if(len>1 && /!doctype/i.test(matchs[0][0])){
			var name = matchs[1][0];
			var pubid = len>3 && /^public$/i.test(matchs[2][0]) && matchs[3][0]
			var sysid = len>4 && matchs[4][0];
			var lastMatch = matchs[len-1]
			domBuilder.startDTD(name,pubid && pubid.replace(/^(['"])(.*?)\1$/,'$2'),
					sysid && sysid.replace(/^(['"])(.*?)\1$/,'$2'));
			domBuilder.endDTD();
			
			return lastMatch.index+lastMatch[0].length
		}
	}
	return -1;
}



function parseInstruction(source,start,domBuilder){
	var end = source.indexOf('?>',start);
	if(end){
		var match = source.substring(start,end).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
		if(match){
			var len = match[0].length;
			domBuilder.processingInstruction(match[1], match[2]) ;
			return end+2;
		}else{//error
			return -1;
		}
	}
	return -1;
}

/**
 * @param source
 */
function ElementAttributes(source){
	
}
ElementAttributes.prototype = {
	setTagName:function(tagName){
		if(!tagNamePattern.test(tagName)){
			throw new Error('invalid tagName:'+tagName)
		}
		this.tagName = tagName
	},
	add:function(qName,value,offset){
		if(!tagNamePattern.test(qName)){
			throw new Error('invalid attribute:'+qName)
		}
		this[this.length++] = {qName:qName,value:value,offset:offset}
	},
	length:0,
	getLocalName:function(i){return this[i].localName},
	getLocator:function(i){return this[i].locator},
	getQName:function(i){return this[i].qName},
	getURI:function(i){return this[i].uri},
	getValue:function(i){return this[i].value}
//	,getIndex:function(uri, localName)){
//		if(localName){
//			
//		}else{
//			var qName = uri
//		}
//	},
//	getValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},
//	getType:function(uri,localName){}
//	getType:function(i){},
}




function _set_proto_(thiz,parent){
	thiz.__proto__ = parent;
	return thiz;
}
if(!(_set_proto_({},_set_proto_.prototype) instanceof _set_proto_)){
	_set_proto_ = function(thiz,parent){
		function p(){};
		p.prototype = parent;
		p = new p();
		for(parent in thiz){
			p[parent] = thiz[parent];
		}
		return p;
	}
}

function split(source,start){
	var match;
	var buf = [];
	var reg = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
	reg.lastIndex = start;
	reg.exec(source);//skip <
	while(match = reg.exec(source)){
		buf.push(match);
		if(match[1])return buf;
	}
}

exports.XMLReader = XMLReader;


},{}],90:[function(require,module,exports){
(function (process,Buffer){
/**
 * Wrapper for built-in http.js to emulate the browser XMLHttpRequest object.
 *
 * This can be used with JS designed for browsers to improve reuse of code and
 * allow the use of existing libraries.
 *
 * Usage: include("XMLHttpRequest.js") and use XMLHttpRequest per W3C specs.
 *
 * @author Dan DeFelippi <dan@driverdan.com>
 * @contributor David Ellis <d.f.ellis@ieee.org>
 * @license MIT
 */

var Url = require("url");
var spawn = require("child_process").spawn;
var fs = require("fs");

exports.XMLHttpRequest = function() {
  "use strict";

  /**
   * Private variables
   */
  var self = this;
  var http = require("http");
  var https = require("https");

  // Holds http.js objects
  var request;
  var response;

  // Request settings
  var settings = {};

  // Disable header blacklist.
  // Not part of XHR specs.
  var disableHeaderCheck = false;

  // Set some default headers
  var defaultHeaders = {
    "User-Agent": "node-XMLHttpRequest",
    "Accept": "*/*",
  };

  var headers = {};
  var headersCase = {};

  // These headers are not user setable.
  // The following are allowed but banned in the spec:
  // * user-agent
  var forbiddenRequestHeaders = [
    "accept-charset",
    "accept-encoding",
    "access-control-request-headers",
    "access-control-request-method",
    "connection",
    "content-length",
    "content-transfer-encoding",
    "cookie",
    "cookie2",
    "date",
    "expect",
    "host",
    "keep-alive",
    "origin",
    "referer",
    "te",
    "trailer",
    "transfer-encoding",
    "upgrade",
    "via"
  ];

  // These request methods are not allowed
  var forbiddenRequestMethods = [
    "TRACE",
    "TRACK",
    "CONNECT"
  ];

  // Send flag
  var sendFlag = false;
  // Error flag, used when errors occur or abort is called
  var errorFlag = false;

  // Event listeners
  var listeners = {};

  /**
   * Constants
   */

  this.UNSENT = 0;
  this.OPENED = 1;
  this.HEADERS_RECEIVED = 2;
  this.LOADING = 3;
  this.DONE = 4;

  /**
   * Public vars
   */

  // Current state
  this.readyState = this.UNSENT;

  // default ready state change handler in case one is not set or is set late
  this.onreadystatechange = null;

  // Result & response
  this.responseText = "";
  this.responseXML = "";
  this.status = null;
  this.statusText = null;
  
  // Whether cross-site Access-Control requests should be made using
  // credentials such as cookies or authorization headers
  this.withCredentials = false;

  /**
   * Private methods
   */

  /**
   * Check if the specified header is allowed.
   *
   * @param string header Header to validate
   * @return boolean False if not allowed, otherwise true
   */
  var isAllowedHttpHeader = function(header) {
    return disableHeaderCheck || (header && forbiddenRequestHeaders.indexOf(header.toLowerCase()) === -1);
  };

  /**
   * Check if the specified method is allowed.
   *
   * @param string method Request method to validate
   * @return boolean False if not allowed, otherwise true
   */
  var isAllowedHttpMethod = function(method) {
    return (method && forbiddenRequestMethods.indexOf(method) === -1);
  };

  /**
   * Public methods
   */

  /**
   * Open the connection. Currently supports local server requests.
   *
   * @param string method Connection method (eg GET, POST)
   * @param string url URL for the connection.
   * @param boolean async Asynchronous connection. Default is true.
   * @param string user Username for basic authentication (optional)
   * @param string password Password for basic authentication (optional)
   */
  this.open = function(method, url, async, user, password) {
    this.abort();
    errorFlag = false;

    // Check for valid request method
    if (!isAllowedHttpMethod(method)) {
      throw new Error("SecurityError: Request method not allowed");
    }

    settings = {
      "method": method,
      "url": url.toString(),
      "async": (typeof async !== "boolean" ? true : async),
      "user": user || null,
      "password": password || null
    };

    setState(this.OPENED);
  };

  /**
   * Disables or enables isAllowedHttpHeader() check the request. Enabled by default.
   * This does not conform to the W3C spec.
   *
   * @param boolean state Enable or disable header checking.
   */
  this.setDisableHeaderCheck = function(state) {
    disableHeaderCheck = state;
  };

  /**
   * Sets a header for the request or appends the value if one is already set.
   *
   * @param string header Header name
   * @param string value Header value
   */
  this.setRequestHeader = function(header, value) {
    if (this.readyState !== this.OPENED) {
      throw new Error("INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN");
    }
    if (!isAllowedHttpHeader(header)) {
      console.warn("Refused to set unsafe header \"" + header + "\"");
      return;
    }
    if (sendFlag) {
      throw new Error("INVALID_STATE_ERR: send flag is true");
    }
    header = headersCase[header.toLowerCase()] || header;
    headersCase[header.toLowerCase()] = header;
    headers[header] = headers[header] ? headers[header] + ', ' + value : value;
  };

  /**
   * Gets a header from the server response.
   *
   * @param string header Name of header to get.
   * @return string Text of the header or null if it doesn't exist.
   */
  this.getResponseHeader = function(header) {
    if (typeof header === "string"
      && this.readyState > this.OPENED
      && response
      && response.headers
      && response.headers[header.toLowerCase()]
      && !errorFlag
    ) {
      return response.headers[header.toLowerCase()];
    }

    return null;
  };

  /**
   * Gets all the response headers.
   *
   * @return string A string with all response headers separated by CR+LF
   */
  this.getAllResponseHeaders = function() {
    if (this.readyState < this.HEADERS_RECEIVED || errorFlag) {
      return "";
    }
    var result = "";

    for (var i in response.headers) {
      // Cookie headers are excluded
      if (i !== "set-cookie" && i !== "set-cookie2") {
        result += i + ": " + response.headers[i] + "\r\n";
      }
    }
    return result.substr(0, result.length - 2);
  };

  /**
   * Gets a request header
   *
   * @param string name Name of header to get
   * @return string Returns the request header or empty string if not set
   */
  this.getRequestHeader = function(name) {
    if (typeof name === "string" && headersCase[name.toLowerCase()]) {
      return headers[headersCase[name.toLowerCase()]];
    }

    return "";
  };

  /**
   * Sends the request to the server.
   *
   * @param string data Optional data to send as request body.
   */
  this.send = function(data) {
    if (this.readyState !== this.OPENED) {
      throw new Error("INVALID_STATE_ERR: connection must be opened before send() is called");
    }

    if (sendFlag) {
      throw new Error("INVALID_STATE_ERR: send has already been called");
    }

    var ssl = false, local = false;
    var url = Url.parse(settings.url);
    var host;
    // Determine the server
    switch (url.protocol) {
      case "https:":
        ssl = true;
        // SSL & non-SSL both need host, no break here.
      case "http:":
        host = url.hostname;
        break;

      case "file:":
        local = true;
        break;

      case undefined:
      case null:
      case "":
        host = "localhost";
        break;

      default:
        throw new Error("Protocol not supported.");
    }

    // Load files off the local filesystem (file://)
    if (local) {
      if (settings.method !== "GET") {
        throw new Error("XMLHttpRequest: Only GET method is supported");
      }

      if (settings.async) {
        fs.readFile(url.pathname, "utf8", function(error, data) {
          if (error) {
            self.handleError(error);
          } else {
            self.status = 200;
            self.responseText = data;
            setState(self.DONE);
          }
        });
      } else {
        try {
          this.responseText = fs.readFileSync(url.pathname, "utf8");
          this.status = 200;
          setState(self.DONE);
        } catch(e) {
          this.handleError(e);
        }
      }

      return;
    }

    // Default to port 80. If accessing localhost on another port be sure
    // to use http://localhost:port/path
    var port = url.port || (ssl ? 443 : 80);
    // Add query string if one is used
    var uri = url.pathname + (url.search ? url.search : "");

    // Set the defaults if they haven't been set
    for (var name in defaultHeaders) {
      if (!headersCase[name.toLowerCase()]) {
        headers[name] = defaultHeaders[name];
      }
    }

    // Set the Host header or the server may reject the request
    headers.Host = host;
    if (!((ssl && port === 443) || port === 80)) {
      headers.Host += ":" + url.port;
    }

    // Set Basic Auth if necessary
    if (settings.user) {
      if (typeof settings.password === "undefined") {
        settings.password = "";
      }
      var authBuf = new Buffer(settings.user + ":" + settings.password);
      headers.Authorization = "Basic " + authBuf.toString("base64");
    }

    // Set content length header
    if (settings.method === "GET" || settings.method === "HEAD") {
      data = null;
    } else if (data) {
      headers["Content-Length"] = Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data);

      if (!headers["Content-Type"]) {
        headers["Content-Type"] = "text/plain;charset=UTF-8";
      }
    } else if (settings.method === "POST") {
      // For a post with no data set Content-Length: 0.
      // This is required by buggy servers that don't meet the specs.
      headers["Content-Length"] = 0;
    }

    var options = {
      host: host,
      port: port,
      path: uri,
      method: settings.method,
      headers: headers,
      agent: false,
      withCredentials: self.withCredentials
    };

    // Reset error flag
    errorFlag = false;

    // Handle async requests
    if (settings.async) {
      // Use the proper protocol
      var doRequest = ssl ? https.request : http.request;

      // Request is being sent, set send flag
      sendFlag = true;

      // As per spec, this is called here for historical reasons.
      self.dispatchEvent("readystatechange");

      // Handler for the response
      var responseHandler = function responseHandler(resp) {
        // Set response var to the response we got back
        // This is so it remains accessable outside this scope
        response = resp;
        // Check for redirect
        // @TODO Prevent looped redirects
        if (response.statusCode === 301 || response.statusCode === 302 || response.statusCode === 303 || response.statusCode === 307) {
          // Change URL to the redirect location
          settings.url = response.headers.location;
          var url = Url.parse(settings.url);
          // Set host var in case it's used later
          host = url.hostname;
          // Options for the new request
          var newOptions = {
            hostname: url.hostname,
            port: url.port,
            path: url.path,
            method: response.statusCode === 303 ? "GET" : settings.method,
            headers: headers,
            withCredentials: self.withCredentials
          };

          // Issue the new request
          request = doRequest(newOptions, responseHandler).on("error", errorHandler);
          request.end();
          // @TODO Check if an XHR event needs to be fired here
          return;
        }

        response.setEncoding("utf8");

        setState(self.HEADERS_RECEIVED);
        self.status = response.statusCode;

        response.on("data", function(chunk) {
          // Make sure there's some data
          if (chunk) {
            self.responseText += chunk;
          }
          // Don't emit state changes if the connection has been aborted.
          if (sendFlag) {
            setState(self.LOADING);
          }
        });

        response.on("end", function() {
          if (sendFlag) {
            // Discard the end event if the connection has been aborted
            setState(self.DONE);
            sendFlag = false;
          }
        });

        response.on("error", function(error) {
          self.handleError(error);
        });
      };

      // Error handler for the request
      var errorHandler = function errorHandler(error) {
        self.handleError(error);
      };

      // Create the request
      request = doRequest(options, responseHandler).on("error", errorHandler);

      // Node 0.4 and later won't accept empty data. Make sure it's needed.
      if (data) {
        request.write(data);
      }

      request.end();

      self.dispatchEvent("loadstart");
    } else { // Synchronous
      // Create a temporary file for communication with the other Node process
      var contentFile = ".node-xmlhttprequest-content-" + process.pid;
      var syncFile = ".node-xmlhttprequest-sync-" + process.pid;
      fs.writeFileSync(syncFile, "", "utf8");
      // The async request the other Node process executes
      var execString = "var http = require('http'), https = require('https'), fs = require('fs');"
        + "var doRequest = http" + (ssl ? "s" : "") + ".request;"
        + "var options = " + JSON.stringify(options) + ";"
        + "var responseText = '';"
        + "var req = doRequest(options, function(response) {"
        + "response.setEncoding('utf8');"
        + "response.on('data', function(chunk) {"
        + "  responseText += chunk;"
        + "});"
        + "response.on('end', function() {"
        + "fs.writeFileSync('" + contentFile + "', JSON.stringify({err: null, data: {statusCode: response.statusCode, headers: response.headers, text: responseText}}), 'utf8');"
        + "fs.unlinkSync('" + syncFile + "');"
        + "});"
        + "response.on('error', function(error) {"
        + "fs.writeFileSync('" + contentFile + "', JSON.stringify({err: error}), 'utf8');"
        + "fs.unlinkSync('" + syncFile + "');"
        + "});"
        + "}).on('error', function(error) {"
        + "fs.writeFileSync('" + contentFile + "', JSON.stringify({err: error}), 'utf8');"
        + "fs.unlinkSync('" + syncFile + "');"
        + "});"
        + (data ? "req.write('" + JSON.stringify(data).slice(1,-1).replace(/'/g, "\\'") + "');":"")
        + "req.end();";
      // Start the other Node Process, executing this string
      var syncProc = spawn(process.argv[0], ["-e", execString]);
      while(fs.existsSync(syncFile)) {
        // Wait while the sync file is empty
      }
      var resp = JSON.parse(fs.readFileSync(contentFile, 'utf8'));
      // Kill the child process once the file has data
      syncProc.stdin.end();
      // Remove the temporary file
      fs.unlinkSync(contentFile);

      if (resp.err) {
        self.handleError(resp.err);
      } else {
        response = resp.data;
        self.status = resp.data.statusCode;
        self.responseText = resp.data.text;
        setState(self.DONE);
      }
    }
  };

  /**
   * Called when an error is encountered to deal with it.
   */
  this.handleError = function(error) {
    this.status = 0;
    this.statusText = error;
    this.responseText = error.stack;
    errorFlag = true;
    setState(this.DONE);
    this.dispatchEvent('error');
  };

  /**
   * Aborts a request.
   */
  this.abort = function() {
    if (request) {
      request.abort();
      request = null;
    }

    headers = defaultHeaders;
    this.status = 0;
    this.responseText = "";
    this.responseXML = "";

    errorFlag = true;

    if (this.readyState !== this.UNSENT
        && (this.readyState !== this.OPENED || sendFlag)
        && this.readyState !== this.DONE) {
      sendFlag = false;
      setState(this.DONE);
    }
    this.readyState = this.UNSENT;
    this.dispatchEvent('abort');
  };

  /**
   * Adds an event listener. Preferred method of binding to events.
   */
  this.addEventListener = function(event, callback) {
    if (!(event in listeners)) {
      listeners[event] = [];
    }
    // Currently allows duplicate callbacks. Should it?
    listeners[event].push(callback);
  };

  /**
   * Remove an event callback that has already been bound.
   * Only works on the matching funciton, cannot be a copy.
   */
  this.removeEventListener = function(event, callback) {
    if (event in listeners) {
      // Filter will return a new array with the callback removed
      listeners[event] = listeners[event].filter(function(ev) {
        return ev !== callback;
      });
    }
  };

  /**
   * Dispatch any events, including both "on" methods and events attached using addEventListener.
   */
  this.dispatchEvent = function(event) {
    if (typeof self["on" + event] === "function") {
      self["on" + event]();
    }
    if (event in listeners) {
      for (var i = 0, len = listeners[event].length; i < len; i++) {
        listeners[event][i].call(self);
      }
    }
  };

  /**
   * Changes readyState and calls onreadystatechange.
   *
   * @param int state New state
   */
  var setState = function(state) {
    if (state == self.LOADING || self.readyState !== state) {
      self.readyState = state;

      if (settings.async || self.readyState < self.OPENED || self.readyState === self.DONE) {
        self.dispatchEvent("readystatechange");
      }

      if (self.readyState === self.DONE && !errorFlag) {
        self.dispatchEvent("load");
        // @TODO figure out InspectorInstrumentation::didLoadXHR(cookie)
        self.dispatchEvent("loadend");
      }
    }
  };
};

}).call(this,require('_process'),require("buffer").Buffer)
},{"_process":110,"buffer":99,"child_process":95,"fs":95,"http":127,"https":103,"url":133}],91:[function(require,module,exports){
// rdfquery.js
// A simple RDF query library for JavaScript
//
// Contact: Holger Knublauch, TopQuadrant, Inc. (holger@topquadrant.com)
//
// The basic idea is that the function RDFQuery produces an initial
// Query object, which starts with a single "empty" solution.
// Each query object has a function nextSolution() producing an iteration
// of variable bindings ("volcano style").
// Each query object can be refined with subsequent calls to other
// functions, producing new queries.
// Invoking nextSolution on a query will pull solutions from its
// predecessors in a chain of query objects.
// The solution objects are plain JavaScript objects providing a
// mapping from variable names to RDF Term objects.
// Unless a query has been walked to exhaustion, .close() must be called.
//
// Finally, terminal functions such as .getNode() and .getArray() can be used
// to produce individual values.  All terminal functions close the query.
//
// RDF Term/Node objects are expected to follow the contracts from the
// RDF Representation Task Force's interface specification:
// https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md
//
// In order to bootstrap all this, graph objects need to implement a
// function .find(s, p, o) where each parameter is either an RDF term or null
// producing an iterator object with a .next() function that produces RDF triples
// (with attributes subject, predicate, object) or null when done.
//
// (Note I am not particularly a JavaScript guru so the modularization of this
// script may be improved to hide private members from public API etc).

/*
Example:

	var result = $data.query().
		match("owl:Class", "rdfs:label", "?label").
		match("?otherClass", "rdfs:label", "?label").
		filter(function(sol) { return !T("owl:Class").equals(sol.otherClass) }).
		getNode("?otherClass");

Equivalent SPARQL:
		SELECT ?otherClass
		WHERE {
			owl:Class rdfs:label ?label .
			?otherClass rdfs:label ?label .
			FILTER (owl:Class != ?otherClass) .
		} LIMIT 1
*/


// In some environments such as Nashorn this may already have a value
// In TopBraid this is redirecting to native Jena calls
var TermFactory = {

    impl: require("rdflib"),   // This needs to be connected to an API such as $rdf

    // Globally registered prefixes for TTL short cuts
    namespaces: {},

    /**
     * Registers a new namespace prefix for global TTL short cuts (qnames).
     * @param prefix  the prefix to add
     * @param namespace  the namespace to add for the prefix
     */
    registerNamespace: function (prefix, namespace) {
        if (this.namespaces.prefix) {
            throw "Prefix " + prefix + " already registered"
        }
        this.namespaces[prefix] = namespace;
    },

    /**
     * Produces an RDF* term from a TTL string representation.
     * Also uses the registered prefixes.
     * @param str  a string, e.g. "owl:Thing" or "true" or '"Hello"@en'.
     * @return an RDF term
     */
    term: function (str) {
        // TODO: this implementation currently only supports booleans and qnames - better overload to rdflib.js
        if ("true" === str || "false" === str) {
            return this.literal(str, T("xsd:boolean"))
        }
        var col = str.indexOf(":")
        if (col < 0) {
            throw "Expected qname with a ':', but found: " + str;
        }
        var ns = this.namespaces[str.substring(0, col)];
        if (!ns) {
            throw "Unregistered prefix " + str.substring(0, col) + " of node " + str;
        }
        return this.namedNode(ns + str.substring(col + 1));
    },

    /**
     * Produces a new blank node.
     * @param id  an optional ID for the node
     */
    blankNode: function (id) {
        return this.impl.blankNode(id);
    },

    /**
     * Produces a new literal.  For example .literal("42", T("xsd:integer")).
     * @param lex  the lexical form, e.g. "42"
     * @param langOrDatatype  either a language string or a URI node with the datatype
     */
    literal: function (lex, langOrDatatype) {
        return this.impl.literal(lex, langOrDatatype)
    },

    // This function is basically left for Task Force compatibility, but the preferred function is uri()
    namedNode: function (uri) {
        return this.impl.namedNode(uri)
    },

    /**
     * Produces a new URI node.
     * @param uri  the URI of the node
     */
    uri: function (uri) {
        return namedNode(uri);
    }
};


// Install NodeFactory as an alias - unsure which name is best long term:
// The official name in RDF is "term", while "node" is more commonly understood.
// Oficially, a "node" must be in a graph though, while "terms" are independent.
var NodeFactory = TermFactory;


NodeFactory.registerNamespace("dc", "http://purl.org/dc/elements/1.1/");
NodeFactory.registerNamespace("dcterms", "http://purl.org/dc/terms/");
NodeFactory.registerNamespace("rdf", "http://www.w3.org/1999/02/22-rdf-syntax-ns#");
NodeFactory.registerNamespace("rdfs", "http://www.w3.org/2000/01/rdf-schema#");
NodeFactory.registerNamespace("schema", "http://schema.org/");
NodeFactory.registerNamespace("sh", "http://www.w3.org/ns/shacl#");
NodeFactory.registerNamespace("skos", "http://www.w3.org/2004/02/skos/core#");
NodeFactory.registerNamespace("owl", "http://www.w3.org/2002/07/owl#");
NodeFactory.registerNamespace("xsd", "http://www.w3.org/2001/XMLSchema#");
// RAML Shapes extensions
NodeFactory.registerNamespace("shapes", "http://raml.org/vocabularies/shapes#");

// Candidates:
// NodeFactory.registerNamespace("prov", "http://www.w3.org/ns/prov#");

/**
 * A shortcut for NodeFactory.term(str) - turns a TTL string representation of an RDF
 * term into a proper RDF term.
 * This will also use the globally registered namespace prefixes.
 * @param str  the string representation, e.g. "owl:Thing"
 * @returns
 */
T = function (str) {
    return NodeFactory.term(str)
}


/**
 * Creates a query object for a given graph and optional initial solution.
 * The resulting object can be further refined using the functions on
 * AbstractQuery such as <code>match()</code> and <code>filter()</code>.
 * Functions such as <code>nextSolution()</code> can be used to get the actual results.
 * @param graph  the graph to query
 * @param initialSolution  the initial solutions or null for none
 * @returns a query object
 */
RDFQuery = function (graph, initialSolution) {
    return new StartQuery(graph, initialSolution ? initialSolution : []);
}


// class AbstractQuery

AbstractQuery = function () {
}

// ----------------------------------------------------------------------------
// Query constructor functions, can be chained together
// ----------------------------------------------------------------------------

/**
 * Creates a new query that adds a binding for a given variable into
 * each solution produced by the input query.
 * @param varName  the name of the variable to bind, starting with "?"
 * @param bindFunction  a function that takes a solution object
 *                      and returns a node or null based on it.
 */
AbstractQuery.prototype.bind = function (varName, bindFunction) {
    return new BindQuery(this, varName, bindFunction);
}

/**
 * Creates a new query that filters the solutions produced by this.
 * @param filterFunction  a function that takes a solution object
 *                        and returns true iff that solution is valid
 */
AbstractQuery.prototype.filter = function (filterFunction) {
    return new FilterQuery(this, filterFunction);
}

/**
 * Creates a new query that only allows the first n solutions through.
 * @param limit  the maximum number of results to allow
 */
AbstractQuery.prototype.limit = function (limit) {
    return new LimitQuery(this, limit);
}

/**
 * Creates a new query doing a triple match.
 * In each subject, predicate, object position, the values can either be
 * an RDF term object or null (wildcard) or a string.
 * If it is a string it may either be a variable (starting with "?")
 * or the TTL representation of an RDF term using the T() function.
 * @param s  the match subject
 * @param p  the match predicate
 * @param o  the match object
 */
AbstractQuery.prototype.match = function (s, p, o) {
    return new MatchQuery(this, s, p, o);
}

/**
 * Creates a new query that sorts all input solutions by the bindings
 * for a given variable.
 * @param varName  the name of the variable to sort by, starting with "?"
 */
AbstractQuery.prototype.orderBy = function (varName) {
    return new OrderByQuery(this, varName);
}

/**
 * Creates a new query doing a match where the predicate may be a RDF Path object.
 * Note: This is currently not using lazy evaluation and will always walk all matches.
 * Path syntax:
 * - PredicatePaths: NamedNode
 * - SequencePaths: [path1, path2]
 * - AlternativePaths: { or : [ path1, path2 ] }
 * - InversePaths: { inverse : path }   LIMITATION: Only supports NamedNodes for path here
 * - ZeroOrMorePaths: { zeroOrMore : path }
 * - OneOrMorePaths: { oneOrMore : path }
 * - ZeroOrOnePaths: { zeroOrOne : path }
 * @param s  the match subject or a variable name (string) - must have a value
 *           at execution time!
 * @param path  the match path object (e.g. a NamedNode for a simple predicate hop)
 * @param o  the match object or a variable name (string)
 */
AbstractQuery.prototype.path = function (s, path, o) {
    if (path && path.value && path.isURI()) {
        return new MatchQuery(this, s, path, o);
    }
    else {
        return new PathQuery(this, s, path, o);
    }
}

// TODO: add other SPARQL-like query types
//       - .distinct()
//       - .union(otherQuery)


// ----------------------------------------------------------------------------
// Terminal functions - convenience functions to get values.
// All these functions close the solution iterators.
// ----------------------------------------------------------------------------

/**
 * Adds all nodes produced by a given solution variable into a set.
 * The set must have an add(node) function.
 * @param varName  the name of the variable, starting with "?"
 * @param set  the set to add to
 */
AbstractQuery.prototype.addAllNodes = function (varName, set) {
    var attrName = var2Attr(varName);
    for (var sol = this.nextSolution(); sol; sol = this.nextSolution()) {
        var node = sol[attrName];
        if (node) {
            set.add(node);
        }
    }
}

/**
 * Executes a given function for each solution.
 * @param callback  a function that takes a solution as argument
 */
AbstractQuery.prototype.forEach = function (callback) {
    for (var n = this.nextSolution(); n; n = this.nextSolution()) {
        callback(n);
    }
}

/**
 * Executes a given function for each node in a solution set.
 * @param varName  the name of a variable, starting with "?"
 * @param callback  a function that takes a node as argument
 */
AbstractQuery.prototype.forEachNode = function (varName, callback) {
    var attrName = var2Attr(varName);
    for (var sol = this.nextSolution(); sol; sol = this.nextSolution()) {
        var node = sol[attrName];
        if (node) {
            callback(node);
        }
    }
}

/**
 * Turns all result solutions into an array.
 * @return an array consisting of solution objects
 */
AbstractQuery.prototype.getArray = function () {
    var results = [];
    for (var n = this.nextSolution(); n != null; n = this.nextSolution()) {
        results.push(n);
    }
    return results;
}

/**
 * Gets the number of (remaining) solutions.
 * @return the count
 */
AbstractQuery.prototype.getCount = function () {
    return this.getArray().length; // Quick and dirty implementation
}

/**
 * Gets the next solution and, if that exists, returns the binding for a
 * given variable from that solution.
 * @param varName  the name of the binding to get, starting with "?"
 * @return the value of the variable or null or undefined if it doesn't exist
 */
AbstractQuery.prototype.getNode = function (varName) {
    var s = this.nextSolution();
    if (s) {
        this.close();
        return s[var2Attr(varName)];
    }
    else {
        return null;
    }
}

/**
 * Turns all results into an array of bindings for a given variable.
 * @return an array consisting of RDF node objects
 */
AbstractQuery.prototype.getNodeArray = function (varName) {
    var results = [];
    var attr = var2Attr(varName);
    for (var n = this.nextSolution(); n != null; n = this.nextSolution()) {
        results.push(n[attr]);
    }
    return results;
}

/**
 * Turns all result bindings for a given variable into a set.
 * The set has functions .contains and .toArray.
 * @param varName  the name of the variable, starting with "?"
 * @return a set consisting of RDF node objects
 */
AbstractQuery.prototype.getNodeSet = function (varName) {
    var results = new NodeSet();
    var attr = var2Attr(varName);
    for (var n = this.nextSolution(); n != null; n = this.nextSolution()) {
        results.add(n[attr]);
    }
    return results;
}

/**
 * Queries the underlying graph for the object of a subject/predicate combination,
 * where either subject or predicate can be a variable which is substituted with
 * a value from the next input solution.
 * Note that even if there are multiple solutions it will just return the "first"
 * one and since the order of triples in RDF is undefined this may lead to random results.
 * Unbound values produce errors.
 * @param subject  an RDF term or a variable (starting with "?") or a TTL representation
 * @param predicate  an RDF term or a variable (starting with "?") or a TTL representation
 * @return the object of the "first" triple matching the subject/predicate combination
 */
AbstractQuery.prototype.getObject = function (subject, predicate) {
    var sol = this.nextSolution();
    if (sol) {
        this.close();
        var s;
        if (typeof subject === 'string') {
            if (subject.indexOf('?') == 0) {
                s = sol[var2Attr(subject)];
            }
            else {
                s = T(subject);
            }
        }
        else {
            s = subject;
        }
        if (!s) {
            throw "getObject() called with null subject";
        }
        var p;
        if (typeof predicate === 'string') {
            if (predicate.indexOf('?') == 0) {
                p = sol[var2Attr(predicate)];
            }
            else {
                p = T(predicate);
            }
        }
        else {
            p = predicate;
        }
        if (!p) {
            throw "getObject() called with null predicate";
        }

        var it = this.source.find(s, p, null);
        var triple = it.next();
        if (triple) {
            it.close();
            return triple.object;
        }
    }
    return null;
}

/**
 * Tests if there is any solution and closes the query.
 * @return true if there is another solution
 */
AbstractQuery.prototype.hasSolution = function () {
    if (this.nextSolution()) {
        this.close();
        return true;
    }
    else {
        return false;
    }
}


// ----------------------------------------------------------------------------
// Expression functions - may be used in filter and bind queries
// ----------------------------------------------------------------------------

/**
 * Creates a function that takes a solution and compares a given node with
 * the binding of a given variable from that solution.
 * @param varName  the name of the variable (starting with "?")
 * @param node  the node to compare with
 * @returns true if the solution's variable equals the node
 */
exprEquals = function (varName, node) {
    return function (sol) {
        return node.equals(sol[var2Attr(varName)]);
    }
}

/**
 * Creates a function that takes a solution and compares a given node with
 * the binding of a given variable from that solution.
 * @param varName  the name of the variable (starting with "?")
 * @param node  the node to compare with
 * @returns true if the solution's variable does not equal the node
 */
exprNotEquals = function (varName, node) {
    return function (sol) {
        return !node.equals(sol[var2Attr(varName)]);
    }
}


// ----------------------------------------------------------------------------
// END OF PUBLIC API ----------------------------------------------------------
// ----------------------------------------------------------------------------


// class BindQuery
// Takes all input solutions but adds a value for a given variable so that
// the value is computed by a given function based on the current solution.
// It is illegal to use a variable that already has a value from the input.

BindQuery = function (input, varName, bindFunction) {
    this.attr = var2Attr(varName);
    this.source = input.source;
    this.input = input;
    this.bindFunction = bindFunction;
}

BindQuery.prototype = Object.create(AbstractQuery.prototype);

BindQuery.prototype.close = function () {
    this.input.close();
}

// Pulls the next result from the input Query and passes it into
// the given bind function to add a new node
BindQuery.prototype.nextSolution = function () {
    var result = this.input.nextSolution();
    if (result == null) {
        return null;
    }
    else {
        var newNode = this.bindFunction(result);
        if (newNode) {
            result[this.attr] = newNode;
        }
        return result;
    }
}


// class FilterQuery
// Filters the incoming solutions, only letting through those where
// filterFunction(solution) returns true

FilterQuery = function (input, filterFunction) {
    this.source = input.source;
    this.input = input;
    this.filterFunction = filterFunction;
}

FilterQuery.prototype = Object.create(AbstractQuery.prototype);

FilterQuery.prototype.close = function () {
    this.input.close();
}

// Pulls the next result from the input Query and passes it into
// the given filter function
FilterQuery.prototype.nextSolution = function () {
    for (; ;) {
        var result = this.input.nextSolution();
        if (result == null) {
            return null;
        }
        else if (this.filterFunction(result) === true) {
            return result;
        }
    }
}


// class LimitQuery
// Only allows the first n values of the input query through

LimitQuery = function (input, limit) {
    this.source = input.source;
    this.input = input;
    this.limit = limit;
}

LimitQuery.prototype = Object.create(AbstractQuery.prototype);

LimitQuery.prototype.close = function () {
    this.input.close();
}

// Pulls the next result from the input Query unless the number
// of previous calls has exceeded the given limit
LimitQuery.prototype.nextSolution = function () {
    if (this.limit > 0) {
        this.limit--;
        return this.input.nextSolution();
    }
    else {
        this.input.close();
        return null;
    }
}


// class MatchQuery
// Joins the solutions from the input Query with triple matches against
// the current input graph.

MatchQuery = function (input, s, p, o) {
    this.source = input.source;
    this.input = input;
    if (typeof s === 'string') {
        if (s.indexOf('?') == 0) {
            this.sv = var2Attr(s);
        }
        else {
            this.s = T(s);
        }
    }
    else {
        this.s = s;
    }
    if (typeof p === 'string') {
        if (p.indexOf('?') == 0) {
            this.pv = var2Attr(p);
        }
        else {
            this.p = T(p);
        }
    }
    else {
        this.p = p;
    }
    if (typeof o === 'string') {
        if (o.indexOf('?') == 0) {
            this.ov = var2Attr(o);
        }
        else {
            this.o = T(o);
        }
    }
    else {
        this.o = o;
    }
}

MatchQuery.prototype = Object.create(AbstractQuery.prototype);

MatchQuery.prototype.close = function () {
    this.input.close();
    if (this.ownIterator) {
        this.ownIterator.close();
    }
}

// This pulls the first solution from the input Query and uses it to
// create an "ownIterator" which applies the input solution to those
// specified by s, p, o.
// Once this "ownIterator" has been exhausted, it moves to the next
// solution from the input Query, and so on.
// At each step, it produces the union of the input solutions plus the
// own solutions.
MatchQuery.prototype.nextSolution = function () {

    var oit = this.ownIterator;
    if (oit) {
        var n = oit.next();
        if (n != null) {
            var result = createSolution(this.inputSolution);
            if (this.sv) {
                result[this.sv] = n.subject;
            }
            if (this.pv) {
                result[this.pv] = n.predicate;
            }
            if (this.ov) {
                result[this.ov] = n.object;
            }
            return result;
        }
        else {
            delete this.ownIterator; // Mark as exhausted
        }
    }

    // Pull from input
    this.inputSolution = this.input.nextSolution();
    if (this.inputSolution) {
        var sm = this.sv ? this.inputSolution[this.sv] : this.s;
        var pm = this.pv ? this.inputSolution[this.pv] : this.p;
        var om = this.ov ? this.inputSolution[this.ov] : this.o;
        this.ownIterator = this.source.find(sm, pm, om);
        return this.nextSolution();
    }
    else {
        return null;
    }
}


// class OrderByQuery
// Sorts all solutions from the input stream by a given variable

OrderByQuery = function (input, varName) {
    this.input = input;
    this.source = input.source;
    this.attrName = var2Attr(varName);
}

OrderByQuery.prototype = Object.create(AbstractQuery.prototype);

OrderByQuery.prototype.close = function () {
    this.input.close();
}

OrderByQuery.prototype.nextSolution = function () {
    if (!this.solutions) {
        this.solutions = this.input.getArray();
        var attrName = this.attrName;
        this.solutions.sort(function (s1, s2) {
            return compareTerms(s1[attrName], s2[attrName]);
        });
        this.index = 0;
    }
    if (this.index < this.solutions.length) {
        return this.solutions[this.index++];
    }
    else {
        return null;
    }
}


// class PathQuery
// Expects subject and path to be bound and produces all bindings
// for the object variable or matches that by evaluating the given path

PathQuery = function (input, subject, path, object) {
    this.input = input;
    this.source = input.source;
    if (typeof subject === 'string' && subject.indexOf("?") == 0) {
        this.subjectAttr = var2Attr(subject);
    }
    else {
        this.subject = subject;
    }
    if (path == null) {
        throw "Path cannot be unbound";
    }
    if (typeof path === 'string') {
        this.path_ = T(path);
    }
    else {
        this.path_ = path;
    }
    if (typeof object === 'string' && object.indexOf("?") == 0) {
        this.objectAttr = var2Attr(object);
    }
    else {
        this.object = object;
    }
}

PathQuery.prototype = Object.create(AbstractQuery.prototype);

PathQuery.prototype.close = function () {
    this.input.close();
}

PathQuery.prototype.nextSolution = function () {

    var r = this.pathResults;
    if (r) {
        var n = r[this.pathIndex++];
        var result = createSolution(this.inputSolution);
        if (this.objectAttr) {
            result[this.objectAttr] = n;
        }
        if (this.pathIndex == r.length) {
            delete this.pathResults; // Mark as exhausted
        }
        return result;
    }

    // Pull from input
    this.inputSolution = this.input.nextSolution();
    if (this.inputSolution) {
        var sm = this.subjectAttr ? this.inputSolution[this.subjectAttr] : this.subject;
        if (sm == null) {
            throw "Path cannot have unbound subject";
        }
        var om = this.objectAttr ? this.inputSolution[this.objectAttr] : this.object;
        var pathResultsSet = new NodeSet();
        addPathValues(this.source, sm, this.path_, pathResultsSet);
        this.pathResults = pathResultsSet.toArray();
        if (this.pathResults.length == 0) {
            delete this.pathResults;
        }
        else if (om) {
            delete this.pathResults;
            if (pathResultsSet.contains(om)) {
                return this.inputSolution;
            }
        }
        else {
            this.pathIndex = 0;
        }
        return this.nextSolution();
    }
    else {
        return null;
    }
}


// class StartQuery
// This simply produces a single result: the initial solution

StartQuery = function (source, initialSolution) {
    this.source = source;
    this.solution = initialSolution;
}

StartQuery.prototype = Object.create(AbstractQuery.prototype);

StartQuery.prototype.close = function () {
}

StartQuery.prototype.nextSolution = function () {
    if (this.solution) {
        var b = this.solution;
        delete this.solution;
        return b;
    }
    else {
        return null;
    }
}


// Helper functions

createSolution = function (base) {
    var result = {};
    for (var attr in base) {
        if (base.hasOwnProperty(attr)) {
            result[attr] = base[attr];
        }
    }
    return result;
}


compareTerms = function (t1, t2) {
    if (!t1) {
        return !t2 ? 0 : 1;
    }
    else if (!t2) {
        return -1;
    }
    var bt = t1.termType.localeCompare(t2.termType);
    if (bt != 0) {
        return bt;
    }
    else {
        // TODO: Does not handle numeric or date comparison
        var bv = t1.value.localeCompare(t2.value);
        if (bv != 0) {
            return bv;
        }
        else {
            if (t1.isLiteral()) {
                var bd = t1.datatype.uri.localeCompare(t2.datatype.uri);
                if (bd != 0) {
                    return bd;
                }
                else if (T("rdf:langString").equals(t1.datatype)) {
                    return t1.language.localeCompare(t2.language);
                }
                else {
                    return 0;
                }
            }
            else {
                return 0;
            }
        }
    }
}

getLocalName = function (uri) {
    // TODO: This is not the 100% correct local name algorithm
    var index = uri.lastIndexOf("#");
    if (index < 0) {
        index = uri.lastIndexOf("/");
    }
    if (index < 0) {
        throw "Cannot get local name of " + uri;
    }
    return uri.substring(index + 1);
}


// class NodeSet
// (a super-primitive implementation for now!)

var NodeSet = function () {
    this.values = [];
}

NodeSet.prototype.add = function (node) {
    if (!this.contains(node)) {
        this.values.push(node);
    }
}

NodeSet.prototype.addAll = function (nodes) {
    for (var i = 0; i < nodes.length; i++) {
        this.add(nodes[i]);
    }
}

NodeSet.prototype.contains = function (node) {
    for (var i = 0; i < this.values.length; i++) {
        if (this.values[i].equals(node)) {
            return true;
        }
    }
    return false;
}

NodeSet.prototype.forEach = function (callback) {
    for (var i = 0; i < this.values.length; i++) {
        callback(this.values[i]);
    }
}

NodeSet.prototype.size = function () {
    return this.values.length;
}

NodeSet.prototype.toArray = function () {
    return this.values;
}

NodeSet.prototype.toString = function () {
    var str = "NodeSet(" + this.size() + "): [";
    var arr = this.toArray();
    for (var i = 0; i < arr.length; i++) {
        if (i > 0) {
            str += ", ";
        }
        str += arr[i];
    }
    return str + "]";
}


function var2Attr(varName) {
    if (!varName.indexOf("?") == 0) {
        throw "Variable name must start with ?";
    }
    if (varName.length == 1) {
        throw "Variable name too short";
    }
    return varName.substring(1);
}



// Simple Path syntax implementation:
// Adds all matches for a given subject and path combination into a given NodeSet.
// This should really be doing lazy evaluation and only up to the point
// where the match object is found.
function addPathValues(graph, subject, path, set) {
    if (path.uri) {
        set.addAll(RDFQuery(graph).match(subject, path, "?object").getNodeArray("?object"));
    }
    else if (Array.isArray(path)) {
        var s = new NodeSet();
        s.add(subject);
        for (var i = 0; i < path.length; i++) {
            var a = s.toArray();
            s = new NodeSet();
            for (var j = 0; j < a.length; j++) {
                addPathValues(graph, a[j], path[i], s);
            }
        }
        set.addAll(s.toArray());
    }
    else if (path.or) {
        for (var i = 0; i < path.or.length; i++) {
            addPathValues(graph, subject, path.or[i], set);
        }
    }
    else if (path.inverse) {
        if (path.inverse.isURI()) {
            set.addAll(RDFQuery(graph).match("?subject", path.inverse, subject).getNodeArray("?subject"));
        }
        else {
            throw "Unsupported: Inverse paths only work for named nodes";
        }
    }
    else if (path.zeroOrOne) {
        addPathValues(graph, subject, path.zeroOrOne, set);
        set.add(subject);
    }
    else if (path.zeroOrMore) {
        walkPath(graph, subject, path.zeroOrMore, set, new NodeSet());
        set.add(subject);
    }
    else if (path.oneOrMore) {
        walkPath(graph, subject, path.oneOrMore, set, new NodeSet());
    }
    else {
        throw "Unsupported path object: " + path;
    }
}

function walkPath(graph, subject, path, set, visited) {
    visited.add(subject);
    var s = new NodeSet();
    addPathValues(graph, subject, path, s);
    var a = s.toArray();
    set.addAll(a);
    for (var i = 0; i < a.length; i++) {
        if (!visited.contains(a[i])) {
            walkPath(graph, a[i], path, set, visited);
        }
    }
}

var RDFQueryUtil = function ($source) {
    this.source = $source;
}

RDFQueryUtil.prototype.getInstancesOf = function ($class) {
    var set = new NodeSet();
    var classes = this.getSubClassesOf($class);
    classes.add($class);
    var car = classes.toArray();
    for (var i = 0; i < car.length; i++) {
        set.addAll(RDFQuery(this.source).match("?instance", "rdf:type", car[i]).getNodeArray("?instance"));
    }
    return set;
}

RDFQueryUtil.prototype.getObject = function ($subject, $predicate) {
    if (!$subject) {
        throw "Missing subject";
    }
    if (!$predicate) {
        throw "Missing predicate";
    }
    return RDFQuery(this.source).match($subject, $predicate, "?object").getNode("?object");
}

RDFQueryUtil.prototype.getSubClassesOf = function ($class) {
    var set = new NodeSet();
    this.walkSubjects(set, $class, T("rdfs:subClassOf"));
    return set;
}

RDFQueryUtil.prototype.isInstanceOf = function ($instance, $class) {
    var classes = this.getSubClassesOf($class);
    var types = $data.query().match($instance, "rdf:type", "?type");
    for (var n = types.nextSolution(); n; n = types.nextSolution()) {
        if (n.type.equals($class) || classes.contains(n.type)) {
            types.close();
            return true;
        }
    }
    return false;
}

RDFQueryUtil.prototype.rdfListToArray = function ($rdfList) {
    if ($rdfList.elements != null) {
        return $rdfList.elements;
    } else {
        var array = [];
        while (!T("rdf:nil").equals($rdfList)) {
            array.push(this.getObject($rdfList, T("rdf:first")));
            $rdfList = this.getObject($rdfList, T("rdf:rest"));
        }
        return array;
    }
}

RDFQueryUtil.prototype.walkObjects = function ($results, $subject, $predicate) {
    var it = this.source.find($subject, $predicate, null);
    for (var n = it.next(); n; n = it.next()) {
        if (!$results.contains(n.object)) {
            $results.add(n.object);
            this.walkObjects($results, n.object, $predicate);
        }
    }
}

RDFQueryUtil.prototype.walkSubjects = function ($results, $object, $predicate) {
    var it = this.source.find(null, $predicate, $object);
    for (var n = it.next(); n; n = it.next()) {
        if (!$results.contains(n.subject)) {
            $results.add(n.subject);
            this.walkSubjects($results, n.subject, $predicate);
        }
    }
}

var toRDFQueryPath = function (shPath) {
    if (shPath.isURI()) {
        return shPath;
    }
    else if (shPath.isBlankNode()) {
        var util = new RDFQueryUtil($shapes);
        if ($shapes.query().getObject(shPath, "rdf:first")) {
            var paths = util.rdfListToArray(shPath);
            var result = [];
            for (var i = 0; i < paths.length; i++) {
                result.push(toRDFQueryPath(paths[i]));
            }
            return result;
        }
        var alternativePath = $shapes.query().getObject(shPath, "sh:alternativePath");
        if (alternativePath) {
            var paths = util.rdfListToArray(alternativePath);
            var result = [];
            for (var i = 0; i < paths.length; i++) {
                result.push(toRDFQueryPath(paths[i]));
            }
            return { or: result };
        }
        var zeroOrMorePath = $shapes.query().getObject(shPath, "sh:zeroOrMorePath");
        if (zeroOrMorePath) {
            return { zeroOrMore: toRDFQueryPath(zeroOrMorePath) };
        }
        var oneOrMorePath = $shapes.query().getObject(shPath, "sh:oneOrMorePath");
        if (oneOrMorePath) {
            return { oneOrMore: toRDFQueryPath(oneOrMorePath) };
        }
        var zeroOrOnePath = $shapes.query().getObject(shPath, "sh:zeroOrOnePath");
        if (zeroOrOnePath) {
            return { zeroOrOne: toRDFQueryPath(zeroOrOnePath) };
        }
        var inversePath = $shapes.query().getObject(shPath, "sh:inversePath");
        if (inversePath) {
            return { inverse: toRDFQueryPath(inversePath) };
        }
    }
    throw "Unsupported SHACL path " + shPath;
    // TODO: implement conforming to AbstractQuery.path syntax
    return shPath;
}

module.exports.TermFactory = TermFactory;
module.exports.NodeSet = NodeSet;
module.exports.RDFQueryUtil = RDFQueryUtil;
module.exports.toRDFQueryPath = toRDFQueryPath;

},{"rdflib":62}],92:[function(require,module,exports){
(function (global){
/* Copyright (C) TopQuadrant, Inc - licensed under AGPL
 * Written by Holger Knublauch <holger@topquadrant.com>, 2017
 */

// A simple SHACL validator in JavaScript based on SHACL-JS.

// Design:
//
// First, derive a ShapesGraph object from the definitions in $shapes.
// This manages a map of parameters to ConstraintComponents.
// Each ConstraintComponent manages its list of parameters and a link to the validators.
//
// The ShapesGraph also manages a list of Shapes, each which has a list of Constraints.
// A Constraint is a specific combination of parameters for a constraint component,
// and has functions to access the target nodes.
//
// Each ShapesGraph can be reused between validation calls, and thus often only needs
// to be created once per application.
//
// The validation process is started by creating a ValidationEngine that relies on
// a given ShapesGraph and operates on the current $data.
// It basically walks through all Shapes that have target nodes and runs the validators
// for each Constraint of the shape, producing results along the way.

var rdfquery = require("./rdfquery");


rdfquery.TermFactory.registerNamespace("dash", "http://datashapes.org/dash#");


var SHACL = {

    depth: 0,

    compareNodes: function (node1, node2) {
        // TODO: Does not handle the case where nodes cannot be compared
        return compareTerms(node1, node2);
    },

    nodeConformsToShape: function (focusNode, shapeNode) {
        var localEngine = new ValidationEngine(currentShapesGraph, true);
        var shape = currentShapesGraph.getShape(shapeNode);
        try {
            SHACL.depth++;
            console.log("Validating against shape");
            return !localEngine.validateNodeAgainstShape(focusNode, shape);
        }
        finally {
            SHACL.depth--;
        }
    }
}


// class Constraint

function Constraint(shape, component, paramValue) {
    this.shape = shape;
    this.component = component;
    this.paramValue = paramValue;
    var parameterValues = {};
    var params = component.getParameters();
    for (var i = 0; i < params.length; i++) {
        var param = params[i];
        var value = paramValue ? paramValue : RDFQuery($shapes).match(shape.shapeNode, param, "?value").getNode("?value");
        if (value) {
            var localName = getLocalName(param.uri);
            parameterValues[localName] = value;
        }
    }
    this.parameterValues = parameterValues;
}

Constraint.prototype.getParameterValue = function (paramName) {
    return this.parameterValues[paramName];
}


// class ConstraintComponent

function ConstraintComponent(node) {
    this.node = node;
    var parameters = [];
    var parameterNodes = [];
    var requiredParameters = [];
    var optionals = {};
    $shapes.query().
        match(node, "sh:parameter", "?parameter").
        match("?parameter", "sh:path", "?path").forEach(function (sol) {
            parameters.push(sol.path);
            parameterNodes.push(sol.parameter);
            if ($shapes.query().match(sol.parameter, "sh:optional", "true").hasSolution()) {
                optionals[sol.path.uri] = true;
            }
            else {
                requiredParameters.push(sol.path);
            }
        });
    this.optionals = optionals;
    this.parameters = parameters;
    this.parameterNodes = parameterNodes;
    this.requiredParameters = requiredParameters;
    this.nodeValidationFunction = this.findValidationFunction(T("sh:nodeValidator"));
    if (!this.nodeValidationFunction) {
        this.nodeValidationFunction = this.findValidationFunction(T("sh:validator"));
        this.nodeValidationFunctionGeneric = true;
    }
    this.propertyValidationFunction = this.findValidationFunction(T("sh:propertyValidator"));
    if (!this.propertyValidationFunction) {
        this.propertyValidationFunction = this.findValidationFunction(T("sh:validator"));
        this.propertyValidationFunctionGeneric = true;
    }
}

ConstraintComponent.prototype.findValidationFunction = function (predicate) {
    var functionName = $shapes.query().
        match(this.node, predicate, "?validator").
        match("?validator", "rdf:type", "sh:JSValidator").
        match("?validator", "sh:jsFunctionName", "?functionName").
        getNode("?functionName");
    if (functionName) {
        return new ValidationFunction(functionName.lex, this.parameters);
    }
    else {
        return null;
    }
}

ConstraintComponent.prototype.getParameters = function () {
    return this.parameters;
}

ConstraintComponent.prototype.isComplete = function (shapeNode) {
    for (var i = 0; i < this.parameters.length; i++) {
        var parameter = this.parameters[i];
        if (!this.isOptional(parameter.uri)) {
            if (!RDFQuery($shapes).match(shapeNode, parameter, null).hasSolution()) {
                return false;
            }
        }
    }
    return true;
}

ConstraintComponent.prototype.isOptional = function (parameterURI) {
    return this.optionals[parameterURI];
}


// class Shape

function Shape(shapesGraph, shapeNode) {

    this.severity = $shapes.query().match(shapeNode, "sh:severity", "?severity").getNode("?severity");
    if (!this.severity) {
        this.severity = T("sh:Violation");
    }

    this.deactivated = $shapes.query().match(shapeNode, "sh:deactivated", "true").hasSolution();
    this.path = $shapes.query().match(shapeNode, "sh:path", "?path").getNode("?path");
    this.shapeNode = shapeNode;
    this.shapesGraph = shapesGraph;
    this.constraints = [];

    var handled = new rdfquery.NodeSet();
    var self = this;
    RDFQuery($shapes).match(shapeNode, "?predicate", "?object").forEach(function (sol) {
        var component = shapesGraph.getComponentWithParameter(sol.predicate);
        if (component && !handled.contains(component.node)) {
            var params = component.getParameters();
            if (params.length == 1) {
                self.constraints.push(new Constraint(self, component, sol.object));
            }
            else if (component.isComplete(shapeNode)) {
                self.constraints.push(new Constraint(self, component));
                handled.add(component.node);
            }
        }
    });
}

Shape.prototype.getConstraints = function () {
    return this.constraints;
}

Shape.prototype.getTargetNodes = function () {
    var results = new rdfquery.NodeSet();
    var dataUtil = new rdfquery.RDFQueryUtil($data);
    var shapesUtil = new rdfquery.RDFQueryUtil($shapes);

    if (shapesUtil.isInstanceOf(this.shapeNode, T("rdfs:Class"))) {
        results.addAll(dataUtil.getInstancesOf(this.shapeNode).toArray());
    }

    $shapes.query().
        match(this.shapeNode, "sh:targetClass", "?targetClass").forEachNode("?targetClass", function (targetClass) {
            results.addAll(dataUtil.getInstancesOf(targetClass).toArray());
        });

    results.addAll($shapes.query().
        match(this.shapeNode, "sh:targetNode", "?targetNode").getNodeArray("?targetNode"));

    $shapes.query().
        match(this.shapeNode, "sh:targetSubjectsOf", "?subjectsOf").
        forEachNode("?subjectsOf", function (predicate) {
            results.addAll(RDFQuery($data).match("?subject", predicate, null).getNodeArray("?subject"));
        });

    $shapes.query().
        match(this.shapeNode, "sh:targetObjectsOf", "?objectsOf").
        forEachNode("?objectsOf", function (predicate) {
            results.addAll(RDFQuery($data).match(null, predicate, "?object").getNodeArray("?object"));
        });

    return results.toArray();
}


Shape.prototype.getValueNodes = function (focusNode) {
    if (this.path) {
        return $data.query().path(focusNode, rdfquery.toRDFQueryPath(this.path), "?object").getNodeArray("?object");
    }
    else {
        return [focusNode];
    }
}

Shape.prototype.isPropertyShape = function () {
    return this.path != null;
}


// class ShapesGraph

ShapesGraph = function () {

    // Collect all defined constraint components
    var components = [];
    new rdfquery.RDFQueryUtil($shapes).getInstancesOf(T("sh:ConstraintComponent")).forEach(function (node) {
        if (!T("dash:ParameterConstraintComponent").equals(node)) {
            components.push(new ConstraintComponent(node));
        }
    });
    this.components = components;

    // Build map from parameters to constraint components
    this.parametersMap = {};
    for (var i = 0; i < this.components.length; i++) {
        var component = this.components[i];
        var parameters = component.getParameters();
        for (var j = 0; j < parameters.length; j++) {
            this.parametersMap[parameters[j].value] = component;
        }
    }

    // Collection of shapes is populated on demand - here we remember the instances
    this.shapes = {}; // Keys are the URIs/bnode ids of the shape nodes
}


ShapesGraph.prototype.getComponentWithParameter = function (parameter) {
    return this.parametersMap[parameter.value];
}

ShapesGraph.prototype.getShape = function (shapeNode) {
    var shape = this.shapes[shapeNode.value];
    if (!shape) {
        shape = new Shape(this, shapeNode);
        this.shapes[shapeNode.value] = shape;
    }
    return shape;
}

ShapesGraph.prototype.getShapeNodesWithConstraints = function () {
    if (!this.shapeNodesWithConstraints) {
        var set = new rdfquery.NodeSet();
        for (var i = 0; i < this.components.length; i++) {
            var params = this.components[i].requiredParameters;
            for (var j = 0; j < params.length; j++) {
                RDFQuery($shapes).match("?shape", params[j], null).addAllNodes("?shape", set);
            }
        }
        this.shapeNodesWithConstraints = set.toArray();
    }
    return this.shapeNodesWithConstraints;
}

ShapesGraph.prototype.getShapesWithTarget = function () {

    if (!this.targetShapes) {
        this.targetShapes = [];
        var cs = this.getShapeNodesWithConstraints();
        var util = new rdfquery.RDFQueryUtil($shapes);
        for (var i = 0; i < cs.length; i++) {
            var shapeNode = cs[i];
            if (util.isInstanceOf(shapeNode, T("rdfs:Class")) ||
                RDFQuery($shapes).match(shapeNode, "sh:targetClass", null).hasSolution() ||
                RDFQuery($shapes).match(shapeNode, "sh:targetNode", null).hasSolution() ||
                RDFQuery($shapes).match(shapeNode, "sh:targetSubjectsOf", null).hasSolution() ||
                RDFQuery($shapes).match(shapeNode, "sh:targetObjectsOf", null).hasSolution() ||
                RDFQuery($shapes).match(shapeNode, "sh:target", null).hasSolution()) {
                this.targetShapes.push(this.getShape(shapeNode));
            }
        }
    }

    return this.targetShapes;
}


// class ValidationFunction

var globalObject = global;

var ValidationFunction = function (functionName, parameters) {

    this.funcName = functionName;
    this.func = ValidationFunction.functionRegistry[functionName];
    if (!this.func) {
        throw "Cannot find validator function " + functionName;
    }
    // Get list of argument of the function, see
    // https://davidwalsh.name/javascript-arguments
    var args = this.func.toString().match(/function\s.*?\(([^)]*)\)/)[1];
    var funcArgsRaw = args.split(',').map(function (arg) {
        return arg.replace(/\/\*.*\*\//, '').trim();
    }).filter(function (arg) {
        return arg;
    });
    this.funcArgs = [];
    this.parameters = [];
    for (var i = 0; i < funcArgsRaw.length; i++) {
        var arg = funcArgsRaw[i];
        if (arg.indexOf("$") == 0) {
            arg = arg.substring(1);
        }
        this.funcArgs.push(arg);
        for (var j = 0; j < parameters.length; j++) {
            var parameter = parameters[j];
            var localName = getLocalName(parameter.value);
            if (arg === localName) {
                this.parameters[i] = parameter;
                break;
            }
        }
    }
}

ValidationFunction.functionRegistry = {};

ValidationFunction.prototype.doExecute = function (args) {
    return this.func.apply(globalObject, args);
}

ValidationFunction.prototype.execute = function (focusNode, valueNode, constraint) {
    console.log("VALIDATING " + this.funcName);
    var args = [];
    for (var i = 0; i < this.funcArgs.length; i++) {
        var arg = this.funcArgs[i];
        var param = this.parameters[i];
        if (param) {
            var value = constraint.getParameterValue(arg);
            args.push(value);
        }
        else if (arg === "focusNode") {
            args.push(focusNode);
        }
        else if (arg === "value") {
            args.push(valueNode);
        }
        else if (arg === "currentShape") {
            args.push(constraint.shape.shapeNode);
        }
        else if (arg === "path") {
            args.push(constraint.shape.path);
        }
        else if (arg == "shapesGraph") {
            args.push("DummyShapesGraph");
        }
        else if (arg === "this") {
            args.push(focusNode);
        }
        else {
            throw "Unexpected validator function argument " + arg + " for function " + this.funcName;
        }
    }
    return this.doExecute(args);
}


// class ValidationEngine

var currentShapesGraph; // Singleton needed for access by the SHACL object

var ValidationEngine = function (shapesGraph, conformanceOnly) {
    this.conformanceOnly = conformanceOnly;
    this.conforms = true;
    this.results = [];
    this.shapesGraph = shapesGraph;
}

ValidationEngine.prototype.addResultProperty = function (result, predicate, object) {
    this.results.push([result, predicate, object]);
}

ValidationEngine.prototype.createResult = function (constraint, focusNode, valueNode) {
    var result = this.createResultObject();
    this.conforms = false;
    this.addResultProperty(result, T("rdf:type"), T("sh:ValidationResult"));
    this.addResultProperty(result, T("sh:resultSeverity"), constraint.shape.severity);
    this.addResultProperty(result, T("sh:sourceConstraintComponent"), constraint.component.node);
    this.addResultProperty(result, T("sh:sourceShape"), constraint.shape.shapeNode);
    this.addResultProperty(result, T("sh:focusNode"), focusNode);
    if (valueNode) {
        this.addResultProperty(result, T("sh:value"), valueNode);
    }
    return result;
}

ValidationEngine.prototype.createResultObject = function () {
    return rdfquery.TermFactory.blankNode();
}

ValidationEngine.prototype.createResultFromObject = function (obj, constraint, focusNode, valueNode) {
    if (obj === false) {
        if (this.conformanceOnly) {
            return true;
        }
        var result = this.createResult(constraint, focusNode, valueNode);
        if (constraint.shape.isPropertyShape()) {
            this.addResultProperty(result, T("sh:resultPath"), constraint.shape.path); // TODO: Make deep copy
        }
        this.createResultMessages(result, constraint);
    }
    else if (typeof obj === 'string') {
        if (this.conformanceOnly) {
            return true;
        }
        var result = this.createResult(constraint, focusNode, valueNode);
        if (constraint.shape.isPropertyShape()) {
            this.addResultProperty(result, T("sh:resultPath"), constraint.shape.path); // TODO: Make deep copy
        }
        this.addResultProperty(result, T("sh:resultMessage"), rdfquery.TermFactory.literal(obj, T("xsd:string")));
        this.createResultMessages(result, constraint);
    }
    else if (typeof obj === 'object') {
        if (this.conformanceOnly) {
            return true;
        }
        var result = this.createResult(constraint, focusNode);
        if (obj.path) {
            this.addResultProperty(result, T("sh:resultPath"), obj.path); // TODO: Make deep copy
        }
        else if (constraint.shape.isPropertyShape()) {
            this.addResultProperty(result, T("sh:resultPath"), constraint.shape.path); // TODO: Make deep copy
        }
        if (obj.value) {
            this.addResultProperty(result, T("sh:value"), obj.value);
        }
        else if (valueNode) {
            this.addResultProperty(result, T("sh:value"), valueNode);
        }
        if (obj.message) {
            this.addResultProperty(result, T("sh:resultMessage"), rdfquery.TermFactory.literal(obj.message, T("xsd:string")));
        }
        else {
            this.createResultMessages(result, constraint);
        }
    }
    return false;
}

ValidationEngine.prototype.createResultMessages = function (result, constraint) {
    var ms = $shapes.query().
        match(constraint.shape.shapeNode, "sh:message", "?message").
        getNodeArray("?message");
    if (ms.length == 0) {
        var generic = constraint.shape.isPropertyShape() ?
            constraint.component.propertyValidationFunctionGeneric :
            constraint.component.nodeValidationFunctionGeneric;
        var predicate = generic ? T("sh:validator") : (constraint.shape.isPropertyShape() ? T("sh:propertyValidator") : T("sh:nodeValidator"));
        ms = $shapes.query().
            match(constraint.component.node, predicate, "?validator").
            match("?validator", "sh:message", "?message").
            getNodeArray("?message");
    }
    if (ms.length == 0) {
        ms = $shapes.query().
            match(constraint.component.node, "sh:message", "?message").
            getNodeArray("?message");
    }
    for (var i = 0; i < ms.length; i++) {
        var m = ms[i];
        var str = this.withSubstitutions(m, constraint);
        this.addResultProperty(result, T("sh:resultMessage"), str);
    }
}

ValidationEngine.prototype.validateAll = function () {
    var shapes = this.shapesGraph.getShapesWithTarget();
    for (var i = 0; i < shapes.length; i++) {
        var shape = shapes[i];
        var focusNodes = shape.getTargetNodes();
        for (var j = 0; j < focusNodes.length; j++) {
            if (this.validateNodeAgainstShape(focusNodes[j], shape)) {
                return true;
            }
        }
    }
    return false;
}

// Returns true if any violation has been found
ValidationEngine.prototype.validateNodeAgainstShape = function (focusNode, shape) {
    console.log("VALIDATING AGAINST SHAPE");
    if (shape.deactivated) {
        return false;
    }
    var constraints = shape.getConstraints();
    var valueNodes = shape.getValueNodes(focusNode);
    for (var i = 0; i < constraints.length; i++) {
        if (this.validateNodeAgainstConstraint(focusNode, valueNodes, constraints[i])) {
            return true;
        }
    }
    return false;
}

ValidationEngine.prototype.validateNodeAgainstConstraint = function (focusNode, valueNodes, constraint) {
    console.log("VALIDATING AGAINST CONSTRAINT");
    currentShapesGraph = this.shapesGraph;
    if (T("sh:PropertyConstraintComponent").equals(constraint.component.node)) {
        for (var i = 0; i < valueNodes.length; i++) {
            if (this.validateNodeAgainstShape(valueNodes[i], this.shapesGraph.getShape(constraint.paramValue))) {
                return true;
            }
        }
    }
    else {
        var validationFunction = constraint.shape.isPropertyShape() ?
            constraint.component.propertyValidationFunction :
            constraint.component.nodeValidationFunction;
        if (validationFunction) {
            var generic = constraint.shape.isPropertyShape() ?
                constraint.component.propertyValidationFunctionGeneric :
                constraint.component.nodeValidationFunctionGeneric;
            if (generic) {
                // Generic sh:validator is called for each value node separately
                for (var i = 0; i < valueNodes.length; i++) {
                    var valueNode = valueNodes[i];
                    var obj = validationFunction.execute(focusNode, valueNode, constraint);
                    if (Array.isArray(obj)) {
                        for (var a = 0; a < obj.length; a++) {
                            if (this.createResultFromObject(obj[a], constraint, focusNode, valueNode)) {
                                return true;
                            }
                        }
                    }
                    else {
                        if (this.createResultFromObject(obj, constraint, focusNode, valueNode)) {
                            return true;
                        }
                    }
                }
            }
            else {
                var obj = validationFunction.execute(focusNode, null, constraint);
                if (Array.isArray(obj)) {
                    for (var a = 0; a < obj.length; a++) {
                        if (this.createResultFromObject(obj[a], constraint, focusNode, valueNode)) {
                            return true;
                        }
                    }
                }
                else {
                    if (this.createResultFromObject(obj, constraint, focusNode)) {
                        return true;
                    }
                }
            }
        }
        else {
            throw "Cannot find validator for constraint component " + constraint.component.node.value;
        }
    }
    return false;
}

ValidationEngine.prototype.withSubstitutions = function (msg, constraint) {
    var str = msg.lex;
    var values = constraint.parameterValues;
    for (var key in values) {
        var label = nodeLabel(values[key], shapesStore);
        str = str.replace("{$" + key + "}", label);
        str = str.replace("{?" + key + "}", label);
    }
    return rdfquery.TermFactory.literal(str, msg.language | msg.datatype);
}


module.exports.ValidationEngine = ValidationEngine;
module.exports.ValidationFunction = ValidationFunction;
module.exports.SHACL = SHACL;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./rdfquery":91}],93:[function(require,module,exports){
/**
 * Created by antoniogarrote on 08/05/2017.
 */
$rdf = require("rdflib");
var jsonld = require("jsonld");
var rdfquery = require("./rdfquery");
var validator = require("./shacl-validator");

var exLiteral = $rdf.literal("a", "de");
Object.defineProperty(Object.getPrototypeOf(exLiteral), "lex", { get: function () { return this.value } });
Object.getPrototypeOf(exLiteral).isBlankNode = function () { return false };
Object.getPrototypeOf(exLiteral).isLiteral = function () { return true };
Object.getPrototypeOf(exLiteral).isURI = function () { return false };

var exBlankNode = $rdf.blankNode();
Object.getPrototypeOf(exBlankNode).isBlankNode = function () { return true };
Object.getPrototypeOf(exBlankNode).isLiteral = function () { return false };
Object.getPrototypeOf(exBlankNode).isURI = function () { return false };

var exNamedNode = $rdf.namedNode("urn:x-dummy");
Object.getPrototypeOf(exNamedNode).isBlankNode = function () { return false };
Object.getPrototypeOf(exNamedNode).isLiteral = function () { return false };
Object.getPrototypeOf(exNamedNode).isURI = function () { return true };

RDFLibGraph = function (store) {
    this.store = store;
}

RDFLibGraph.prototype.find = function (s, p, o) {
    return new RDFLibGraphIterator(this.store, s, p, o);
}

RDFLibGraph.prototype.query = function () {
    return RDFQuery(this);
}

RDFLibGraphIterator = function (store, s, p, o) {
    this.index = 0;
    this.ss = store.statementsMatching(s, p, o);
}

RDFLibGraphIterator.prototype.close = function () {
    // Do nothing
}

RDFLibGraphIterator.prototype.next = function () {
    if (this.index >= this.ss.length) {
        return null;
    }
    else {
        return this.ss[this.index++];
    }
}

require("./shacl-validator");
require("./dash");

var fs = require("fs");


/********************************/
/* Vocabularies                 */
/********************************/
shapesGraphURI = "urn:x-shacl:shapesGraph";
dataGraphURI = "urn:x-shacl:dataGraph";
/*
shaclFile = fs.readFileSync("./shacl.ttl").toString();
dashFile = fs.readFileSync("./dash.ttl").toString();
*/

var vocabs = require("./vocabularies");
shaclFile = vocabs.shacl;
dashFile = vocabs.dash;
/********************************/
/********************************/

results = null;
shapesStore = $rdf.graph();
dataStore = $rdf.graph();
shapesGraph = null;
validationEngine = null;
validationError = null;
sequence = null;

$shapes = new RDFLibGraph(shapesStore);
shapesGraph = new ShapesGraph();


function postProcessGraph(store, graphURI, newStore) {

    var ss = newStore.statementsMatching(undefined, undefined, undefined);
    for (var i = 0; i < ss.length; i++) {
        var object = ss[i].object;
        if (T("xsd:boolean").equals(object.datatype)) {
            if ("0" == object.value || "false" === object.value) {
                store.add(ss[i].subject, ss[i].predicate, T("false"), graphURI);
            }
            else {
                store.add(ss[i].subject, ss[i].predicate, T("true"), graphURI);
            }
        }
        else if (object.termType === 'collection') {
            var items = object.elements;
            store.add(ss[i].subject, ss[i].predicate, createRDFListNode(store, items, 0));
        }
        else {
            store.add(ss[i].subject, ss[i].predicate, ss[i].object, graphURI);
        }
    }

    for (var prefix in newStore.namespaces) {
        var ns = newStore.namespaces[prefix];
        store.namespaces[prefix] = ns;
    }
}

var defaultHandleError = function (ex) {
    console.log("ERROR " + ex);
    console.log(ex);
}

function loadGraph(str, store, graphURI, mimeType, andThen, handleError) {
    var newStore = $rdf.graph();
    handleError = handleError || defaultHandleError;
    if (mimeType === "application/ld+json") {
        var error = false;
        $rdf.parse(str, newStore, graphURI, mimeType, function (err, kb) {
            if (err) {
                error = true;
                handleError(err)
            }
            else if (!error) {
                postProcessGraph(store, graphURI, newStore);
                andThen();
            }
        });
    }
    else {
        try {
            $rdf.parse(str, newStore, graphURI, mimeType);
            postProcessGraph(store, graphURI, newStore);
            andThen();
        }
        catch (ex) {
            handleError(ex);
        }
    }
}

function parseDataGraph(text, mediaType, andThen) {
    var newStore = $rdf.graph();
    loadGraph(text, newStore, dataGraphURI, mediaType, function () {
        dataStore = newStore;
        $data = new RDFLibGraph(dataStore);
        andThen();
    }, function (ex) {
        showError(ex);
    });
}

function updateValidationEngine() {
    results = [];
    validationEngine = new validator.ValidationEngine(shapesGraph);
    try {
        validationError = null;
        if (sequence) {
            sequence = [];
        }
        validationEngine.validateAll();
    }
    catch (ex) {
        validationError = ex;
    }
}

function showStatus(s) { console.log(s); }
function showError(s) { console.log(s); }

nodeLabel = function (node, store) {
    if (node.isURI()) {
        for (prefix in store.namespaces) {
            var ns = store.namespaces[prefix];
            if (node.value.indexOf(ns) == 0) {
                return prefix + ":" + node.value.substring(ns.length);
            }
        }
        return "<" + node.value + ">";
    }
    else if (node.isBlankNode()) {
        return "Blank node " + node.toString();
    }
    else {
        return "" + node;
    }
}

function showValidationResults(cb) {
    if (validationError) {
        console.log("(Failure)");
        console.log("VALIDATION FAILURE: " + validationError);
        throw (validationError);
    }
    else {

        var resultGraph = $rdf.graph();
        var reportNode = rdfquery.TermFactory.blankNode("report");
        resultGraph.add(reportNode, T("rdf:type"), T("sh:ValidationReport"));
        resultGraph.add(reportNode, T("sh:conforms"), T("" + (validationEngine.results.length == 0)));
        var nodes = {};

        for (var i = 0; i < validationEngine.results.length; i++) {
            var result = validationEngine.results[i];
            if (nodes[result[0].toString()] == null) {
                nodes[result[0].toString()] = true;
                resultGraph.add(reportNode, T("sh:result"), result[0]);
            }
            resultGraph.add(result[0], result[1], result[2]);
        }

        // Unsupported bug in JSON parser bug workaround
        var oldToString = resultGraph.toString;
        resultGraph.toString = function () {
            var text = oldToString.call(resultGraph);
            text = text.replace(/^\{/, "").replace(/\}$/, "");
            return text;
        };
        //////////////////

        jsonld.fromRDF(resultGraph.toNT(), {}, function (err, doc) {
            if (err != null) {
                cb(err);
            } else {
                jsonld.flatten(doc, cb);
            }
        });
    }
}

function parseShapesGraph(text, mediaType, andThen) {
    var handleError = function (ex) {
        console.log("ERROR " + ex);
        console.log(ex);
    }
    var newShapesStore = $rdf.graph();
    loadGraph(text, newShapesStore, shapesGraphURI, mediaType, function () {
        loadGraph(shaclFile, newShapesStore, "http://shacl.org", "text/turtle", function () {
            loadGraph(dashFile, newShapesStore, "http://datashapes.org/dash", "text/turtle", function () {
                shapesStore = newShapesStore;
                $shapes = new RDFLibGraph(shapesStore);
                andThen();
            });
        }, handleError);
    }, handleError);
}


function updateDataGraph(text, mediaType, cb) {
    var startTime = new Date().getTime();
    parseDataGraph(text, mediaType, function () {
        // var midTime = new Date().getTime();
        updateValidationEngine();
        // var endTime = new Date().getTime();
        // showStatus("Parsing took " + (midTime - startTime) + " ms. Validating the data took " + (endTime - midTime) + " ms.");
        try {
            showValidationResults(cb);
        } catch (e) {
            cb(e, null);
        }
    });
}


function updateShapesGraph(shapes, mediaType, cb) {
    var startTime = new Date().getTime();
    parseShapesGraph(shapes, mediaType, function () {
        // var midTime = new Date().getTime();
        shapesGraph = new ShapesGraph();
        // var midTime2 = new Date().getTime();
        updateValidationEngine();
        // var endTime = new Date().getTime();
        // showStatus("Parsing took " + (midTime - startTime) + " ms. Preparing the shapes took " + (midTime2 - midTime) + " ms. Validation the data took " + (endTime - midTime2) + " ms.");
        try {
            showValidationResults(cb);
        } catch (e) {
            cb(e, null);
        }
    });
}
function createRDFListNode(store, items, index) {
    if (index >= items.length) {
        return T("rdf:nil");
    }
    else {
        var bnode = rdfquery.TermFactory.blankNode();
        store.add(bnode, T("rdf:first"), items[index]);
        store.add(bnode, T("rdf:rest"), createRDFListNode(store, items, index + 1));
        return bnode;
    }
}
/*
ValidationFunction.prototype.doExecute = function (args) {
    if (sequence) {
        console.log("\n\n\n\nSEQUENCE\n\n\n\n");
        var s = { f: this, args: args, depth: SHACL.depth };
        sequence.push(s);
        var result = this.func.apply(global, args);
        if (result === false || typeof result === 'string' || typeof result === 'object') {
            s.count = 1;
        }
        else if (Array.isArray(result)) {
            s.count = result.length;
        }
        return result;
    }
    else {
        return this.func.apply(global, args);
    }
}
*/

module.exports.validate = function (data, dataMediaType, shapes, shapesMediaType, cb) {
    //console.log("DATA");
    //console.log(data);
    updateDataGraph(data, dataMediaType, function (e) {
        if (e != null) {
            cb(e, null);
        } else {
            //console.log("SHAPES");
            //console.log(shapes);
            updateShapesGraph(shapes, shapesMediaType, function (e, result) {
                if (e) {
                    //console.log("ERROR!");
                    //console.log(e);
                    cb(e, null);
                } else {
                    try {
                        var resultString = JSON.stringify(result);
                        //console.log(resultString);
                        cb(null, resultString);
                    } catch (e) {
                        cb(e, null);
                    }
                }
            });
        }
    });
};

},{"./dash":40,"./rdfquery":91,"./shacl-validator":92,"./vocabularies":94,"fs":95,"jsonld":44,"rdflib":62}],94:[function(require,module,exports){
module.exports = {"shacl":"# W3C Shapes Constraint Language (SHACL) Vocabulary\n# Draft last edited 2017-04-28\n\n@prefix owl:  <http://www.w3.org/2002/07/owl#> .\n@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .\n\n@prefix sh:   <http://www.w3.org/ns/shacl#> .\n\nsh:\n\ta owl:Ontology ;\n\trdfs:label \"W3C Shapes Constraint Language (SHACL) Vocabulary\"@en ;\n\trdfs:comment \"This vocabulary defines terms used in SHACL, the W3C Shapes Constraint Language.\"@en ;\n\tsh:declare [\n\t\tsh:prefix \"sh\" ;\n\t\tsh:namespace \"http://www.w3.org/ns/shacl#\" ;\n\t] ;\n\tsh:suggestedShapesGraph <http://www.w3.org/ns/shacl-shacl#> .\n\n\n# Shapes vocabulary -----------------------------------------------------------\n\nsh:Shape\n\ta rdfs:Class ;\n\trdfs:label \"Shape\"@en ;\n\trdfs:comment \"A shape is a collection of constraints that may be targeted for certain nodes.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:NodeShape\n\ta rdfs:Class ;\n\trdfs:label \"Node shape\"@en ;\n\trdfs:comment \"A node shape is a shape that specifies constraint that need to be met with respect to focus nodes.\"@en ;\n\trdfs:subClassOf sh:Shape ;\n\trdfs:isDefinedBy sh: .\n\nsh:PropertyShape\n\ta rdfs:Class ;\n\trdfs:label \"Property shape\"@en ;\n\trdfs:comment \"A property shape is a shape that specifies constraints on the values of a focus node for a given property or path.\"@en ;\n\trdfs:subClassOf sh:Shape ;\n\trdfs:isDefinedBy sh: .\n\nsh:deactivated\n\ta rdf:Property ;\n\trdfs:label \"deactivated\"@en ;\n\trdfs:comment \"If set to true for a shape then the shape is deactivated and all nodes conform to it.\"@en ;\n\trdfs:domain sh:Shape ;\n\trdfs:range xsd:boolean ;\n\trdfs:isDefinedBy sh: .\n\nsh:targetClass \n\ta rdf:Property ;\n\trdfs:label \"target class\"@en ;\n\trdfs:comment \"Links a shape to a class, indicating that all instances of the class must conform to the shape.\"@en ;\n\trdfs:domain sh:Shape ;\n\trdfs:range rdfs:Class ;\n\trdfs:isDefinedBy sh: .\n\nsh:targetNode \n\ta rdf:Property ;\n\trdfs:label \"target node\"@en ;\n\trdfs:comment \"Links a shape to individual nodes, indicating that these nodes must conform to the shape.\"@en ;\n\trdfs:domain sh:Shape ;\n\trdfs:isDefinedBy sh: .\n\nsh:targetObjectsOf\n\ta rdf:Property ;\n\trdfs:label \"target objects of\"@en ;\n\trdfs:comment \"Links a shape to a property, indicating that all all objects of triples that have the given property as their predicate must conform to the shape.\"@en ;\n\trdfs:domain sh:Shape ;\n\trdfs:range rdf:Property ;\n\trdfs:isDefinedBy sh: .\n\nsh:targetSubjectsOf\n\ta rdf:Property ;\n\trdfs:label \"target subjects of\"@en ;\n\trdfs:comment \"Links a shape to a property, indicating that all subjects of triples that have the given property as their predicate must conform to the shape.\"@en ;\n\trdfs:domain sh:Shape ;\n\trdfs:range rdf:Property ;\n\trdfs:isDefinedBy sh: .\n\nsh:message\n\ta rdf:Property ;\n\t# domain: sh:Shape or sh:SPARQLConstraint or sh:SPARQLSelectValidator or sh:SPARQLAskValidator\n\t# range: xsd:string or rdf:langString\n\trdfs:label \"message\"@en ;\n\trdfs:comment \"A human-readable message (possibly with placeholders for variables) explaining the cause of the result.\"@en ;\n\trdfs:isDefinedBy sh: .\n\nsh:severity\n\ta rdf:Property ;\n\trdfs:label \"severity\"@en ;\n\trdfs:comment \"Defines the severity that validation results produced by a shape must have. Defaults to sh:Violation.\"@en ;\n\trdfs:domain sh:Shape ;\n\trdfs:range sh:Severity ;\n\trdfs:isDefinedBy sh: .\n\n\n# Node kind vocabulary --------------------------------------------------------\n\nsh:NodeKind\n\ta rdfs:Class ;\n\trdfs:label \"Node kind\"@en ;\n\trdfs:comment \"The class of all node kinds, including sh:BlankNode, sh:IRI, sh:Literal or the combinations of these: sh:BlankNodeOrIRI, sh:BlankNodeOrLiteral, sh:IRIOrLiteral.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:BlankNode\n\ta sh:NodeKind ;\n\trdfs:label \"Blank node\"@en ;\n\trdfs:comment \"The node kind of all blank nodes.\"@en ;\n\trdfs:isDefinedBy sh: .\n\nsh:BlankNodeOrIRI\n\ta sh:NodeKind ;\n\trdfs:label \"Blank node or IRI\"@en ;\n\trdfs:comment \"The node kind of all blank nodes or IRIs.\"@en ;\n\trdfs:isDefinedBy sh: .\n\nsh:BlankNodeOrLiteral\n\ta sh:NodeKind ;\n\trdfs:label \"Blank node or literal\"@en ;\n\trdfs:comment \"The node kind of all blank nodes or literals.\"@en ;\n\trdfs:isDefinedBy sh: .\n\nsh:IRI\n\ta sh:NodeKind ;\n\trdfs:label \"IRI\"@en ;\n\trdfs:comment \"The node kind of all IRIs.\"@en ;\n\trdfs:isDefinedBy sh: .\n\nsh:IRIOrLiteral\n\ta sh:NodeKind ;\n\trdfs:label \"IRI or literal\"@en ;\n\trdfs:comment \"The node kind of all IRIs or literals.\"@en ;\n\trdfs:isDefinedBy sh: .\n\nsh:Literal\n\ta sh:NodeKind ;\n\trdfs:label \"Literal\"@en ;\n\trdfs:comment \"The node kind of all literals.\"@en ;\n\trdfs:isDefinedBy sh: .\n\n\n# Results vocabulary ----------------------------------------------------------\n\nsh:ValidationReport\n\ta rdfs:Class ;\n\trdfs:label \"Validation report\"@en ;\n\trdfs:comment \"The class of SHACL validation reports.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:conforms\n\ta rdf:Property ;\n\trdfs:label \"conforms\"@en ;\n\trdfs:comment \"True if the validation did not produce any validation results, and false otherwise.\"@en ;\n\trdfs:domain sh:ValidationReport ;\n\trdfs:range xsd:boolean ;\n\trdfs:isDefinedBy sh: .\n\nsh:result\n\ta rdf:Property ;\n\trdfs:label \"result\"@en ;\n\trdfs:comment \"The validation results contained in a validation report.\"@en ;\n\trdfs:domain sh:ValidationReport ;\n\trdfs:range sh:ValidationResult ;\n\trdfs:isDefinedBy sh: .\n\nsh:shapesGraphWellFormed\n\ta rdf:Property ;\n\trdfs:label \"shapes graph well-formed\"@en ;\n\trdfs:comment \"If true then the validation engine was certain that the shapes graph has passed all SHACL syntax requirements during the validation process.\"@en ;\n\trdfs:domain sh:ValidationReport ;\n\trdfs:range xsd:boolean ;\n\trdfs:isDefinedBy sh: .\n\nsh:AbstractResult\n\ta rdfs:Class ;\n\trdfs:label \"Abstract result\"@en ;\n\trdfs:comment \"The base class of validation results, typically not instantiated directly.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:ValidationResult\n\ta rdfs:Class ;\n\trdfs:label \"Validation result\"@en ;\n\trdfs:comment \"The class of validation results.\"@en ;\n\trdfs:subClassOf sh:AbstractResult ;\n\trdfs:isDefinedBy sh: .\n\nsh:Severity\n\ta rdfs:Class ;\n\trdfs:label \"Severity\"@en ;\n\trdfs:comment \"The class of validation result severity levels, including violation and warning levels.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:Info\n\ta sh:Severity ;\n\trdfs:label \"Info\"@en ;\n\trdfs:comment \"The severity for an informational validation result.\"@en ;\n\trdfs:isDefinedBy sh: .\n\nsh:Violation\n\ta sh:Severity ;\n\trdfs:label \"Violation\"@en ;\n\trdfs:comment \"The severity for a violation validation result.\"@en ;\n\trdfs:isDefinedBy sh: .\n\nsh:Warning\n\ta sh:Severity ;\n\trdfs:label \"Warning\"@en ;\n\trdfs:comment \"The severity for a warning validation result.\"@en ;\n\trdfs:isDefinedBy sh: .\n\nsh:detail\n\ta rdf:Property ;\n\trdfs:label \"detail\"@en ;\n\trdfs:comment \"Links a result with other results that provide more details, for example to describe violations against nested shapes.\"@en ;\n\trdfs:domain sh:AbstractResult ;\n\trdfs:range sh:AbstractResult ;\n\trdfs:isDefinedBy sh: .\n\nsh:focusNode\n\ta rdf:Property ;\n\trdfs:label \"focus node\"@en ;\n\trdfs:comment \"The focus node that was validated when the result was produced.\"@en ;\n\trdfs:domain sh:AbstractResult ;\n\trdfs:isDefinedBy sh: .\n\nsh:resultMessage\n\ta rdf:Property ;\n\trdfs:label \"result message\"@en ;\n\trdfs:comment \"Human-readable messages explaining the cause of the result.\"@en ;\n\trdfs:domain sh:AbstractResult ;\n\t# range: xsd:string or rdf:langString\n\trdfs:isDefinedBy sh: .\n\nsh:resultPath\n\ta rdf:Property ;\n\trdfs:label \"result path\"@en ;\n\trdfs:comment \"The path of a validation result, based on the path of the validated property shape.\"@en ;\n\trdfs:domain sh:AbstractResult ;\n\trdfs:range rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:resultSeverity\n\ta rdf:Property ;\n\trdfs:label \"result severity\"@en ;\n\trdfs:comment \"The severity of the result, e.g. warning.\"@en ;\n\trdfs:domain sh:AbstractResult ;\n\trdfs:range sh:Severity ;\n\trdfs:isDefinedBy sh: .\n\nsh:sourceConstraint\n\ta rdf:Property ;\n\trdfs:label \"source constraint\"@en ;\n\trdfs:comment \"The constraint that was validated when the result was produced.\"@en ;\n\trdfs:domain sh:AbstractResult ;\n\trdfs:isDefinedBy sh: .\n\nsh:sourceShape\n\ta rdf:Property ;\n\trdfs:label \"source shape\"@en ;\n\trdfs:comment \"The shape that is was validated when the result was produced.\"@en ;\n\trdfs:domain sh:AbstractResult ;\n\trdfs:range sh:Shape ;\n\trdfs:isDefinedBy sh: .\n\nsh:sourceConstraintComponent\n\ta rdf:Property ;\n\trdfs:label \"source constraint component\"@en ;\n\trdfs:comment \"The constraint component that is the source of the result.\"@en ;\n\trdfs:domain sh:AbstractResult ;\n\trdfs:range sh:ConstraintComponent ;\n\trdfs:isDefinedBy sh: .\n\nsh:value\n\ta rdf:Property ;\n\trdfs:label \"value\"@en ;\n\trdfs:comment \"An RDF node that has caused the result.\"@en ;\n\trdfs:domain sh:AbstractResult ;\n\trdfs:isDefinedBy sh: .\n\n\t\n# Graph properties ------------------------------------------------------------\n\nsh:shapesGraph\n\ta rdf:Property ;\n\trdfs:label \"shapes graph\"@en ;\n\trdfs:comment \"Shapes graphs that should be used when validating this data graph.\"@en ;\n\trdfs:domain owl:Ontology ;\n\trdfs:range owl:Ontology ;\n\trdfs:isDefinedBy sh: .\n\nsh:suggestedShapesGraph\n\ta rdf:Property ;\n\trdfs:label \"suggested shapes graph\"@en ;\n\trdfs:comment \"Suggested shapes graphs for this ontology. The values of this property may be used in the absence of specific sh:shapesGraph statements.\"@en ;\n\trdfs:domain owl:Ontology ;\n\trdfs:range owl:Ontology ;\n\trdfs:isDefinedBy sh: .\n\nsh:entailment\n\ta rdf:Property ;\n\trdfs:label \"entailment\"@en ;\n\trdfs:comment \"An entailment regime that indicates what kind of inferencing is required by a shapes graph.\"@en ;\n\trdfs:domain owl:Ontology ;\n\trdfs:range rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\n\n# Path vocabulary -------------------------------------------------------------\n\nsh:path\n\ta rdf:Property ;\n\trdfs:label \"path\"@en ;\n\trdfs:comment \"Specifies the property path of a property shape.\"@en ;\n\trdfs:domain sh:PropertyShape ;\n\trdfs:range rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:inversePath\n\ta rdf:Property ;\n\trdfs:label \"inverse path\"@en ;\n\trdfs:comment \"The (single) value of this property represents an inverse path (object to subject).\"@en ;\n\trdfs:range rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:alternativePath\n\ta rdf:Property ;\n\trdfs:label \"alternative path\"@en ;\n\trdfs:comment \"The (single) value of this property must be a list of path elements, representing the elements of alternative paths.\"@en ;\n\trdfs:range rdf:List ;\n\trdfs:isDefinedBy sh: .\n\nsh:zeroOrMorePath\n\ta rdf:Property ;\n\trdfs:label \"zero or more path\"@en ;\n\trdfs:comment \"The (single) value of this property represents a path that is matched zero or more times.\"@en ;\n\trdfs:range rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:oneOrMorePath\n\ta rdf:Property ;\n\trdfs:label \"one or more path\"@en ;\n\trdfs:comment \"The (single) value of this property represents a path that is matched one or more times.\"@en ;\n\trdfs:range rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:zeroOrOnePath\n\ta rdf:Property ;\n\trdfs:label \"zero or one path\"@en ;\n\trdfs:comment \"The (single) value of this property represents a path that is matched zero or one times.\"@en ;\n\trdfs:range rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\n\n# Parameters metamodel --------------------------------------------------------\n\nsh:Parameterizable\n\ta rdfs:Class ;\n\trdfs:label \"Parameterizable\"@en ;\n\trdfs:comment \"Superclass of components that can take parameters, especially functions and constraint components.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:parameter\n\ta rdf:Property ;\n\trdfs:label \"parameter\"@en ;\n\trdfs:comment \"The parameters of a function or constraint component.\"@en ;\n\trdfs:domain sh:Parameterizable ;\n\trdfs:range sh:Parameter ;\n\trdfs:isDefinedBy sh: .\n\nsh:labelTemplate\n\ta rdf:Property ;\n\trdfs:label \"label template\"@en ;\n\trdfs:comment \"Outlines how human-readable labels of instances of the associated Parameterizable shall be produced. The values can contain {?paramName} as placeholders for the actual values of the given parameter.\"@en ;\n\trdfs:domain sh:Parameterizable ;\n\t# range: xsd:string or rdf:langString\n\trdfs:isDefinedBy sh: .\n\nsh:Parameter\n\ta rdfs:Class ;\n\trdfs:label \"Parameter\"@en ;\n\trdfs:comment \"The class of parameter declarations, consisting of a path predicate and (possibly) information about allowed value type, cardinality and other characteristics.\"@en ;\n\trdfs:subClassOf sh:PropertyShape ;\n\trdfs:isDefinedBy sh: .\n\nsh:optional\n\ta rdf:Property ;\n\trdfs:label \"optional\"@en ;\n\trdfs:comment \"Indicates whether a parameter is optional.\"@en ;\n\trdfs:domain sh:Parameter ;\n\trdfs:range xsd:boolean ;\n\trdfs:isDefinedBy sh: .\n\n\n# Constraint components metamodel ---------------------------------------------\n\nsh:ConstraintComponent\n\ta rdfs:Class ;\n\trdfs:label \"Constraint component\"@en ;\n\trdfs:comment \"The class of constraint components.\"@en ;\n\trdfs:subClassOf sh:Parameterizable ;\n\trdfs:isDefinedBy sh: .\n\nsh:validator\n\ta rdf:Property ;\n\trdfs:label \"validator\"@en ;\n\trdfs:comment \"The validator(s) used to evaluate constraints of either node or property shapes.\"@en ;\n\trdfs:domain sh:ConstraintComponent ;\n\trdfs:range sh:Validator ;\n\trdfs:isDefinedBy sh: .\n\nsh:nodeValidator\n\ta rdf:Property ;\n\trdfs:label \"shape validator\"@en ;\n\trdfs:comment \"The validator(s) used to evaluate a constraint in the context of a node shape.\"@en ;\n\trdfs:domain sh:ConstraintComponent ;\n\trdfs:range sh:Validator ;\n\trdfs:isDefinedBy sh: .\n\nsh:propertyValidator\n\ta rdf:Property ;\n\trdfs:label \"property validator\"@en ;\n\trdfs:comment \"The validator(s) used to evaluate a constraint in the context of a property shape.\"@en ;\n\trdfs:domain sh:ConstraintComponent ;\n\trdfs:range sh:Validator ;\n\trdfs:isDefinedBy sh: .\n\nsh:Validator\n\ta rdfs:Class ;\n\trdfs:label \"Validator\"@en ;\n\trdfs:comment \"The class of validators, which provide instructions on how to process a constraint definition. This class serves as base class for the SPARQL-based validators and other possible implementations.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:SPARQLAskValidator\n\ta rdfs:Class ;\n\trdfs:label \"SPARQL ASK validator\"@en ;\n\trdfs:comment \"The class of validators based on SPARQL ASK queries. The queries are evaluated for each value node and are supposed to return true if the given node conforms.\"@en ;\n\trdfs:subClassOf sh:Validator ;\n\trdfs:subClassOf sh:SPARQLAskExecutable ;\n\trdfs:isDefinedBy sh: .\n\nsh:SPARQLSelectValidator\n\ta rdfs:Class ;\n\trdfs:label \"SPARQL SELECT validator\"@en ;\n\trdfs:comment \"The class of validators based on SPARQL SELECT queries. The queries are evaluated for each focus node and are supposed to produce bindings for all focus nodes that do not conform.\"@en ;\n\trdfs:subClassOf sh:Validator ;\n\trdfs:subClassOf sh:SPARQLSelectExecutable ;\n\trdfs:isDefinedBy sh: .\n\n\n# Library of Core Constraint Components and their properties ------------------\n\nsh:AndConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"And constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to test whether a value node conforms to all members of a provided list of shapes.\"@en ;\n\tsh:parameter sh:AndConstraintComponent-and ;\n\trdfs:isDefinedBy sh: .\n\nsh:AndConstraintComponent-and\n\ta sh:Parameter ;\n\tsh:path sh:and ;\n\trdfs:isDefinedBy sh: .\n\nsh:and\n\ta rdf:Property ;\n\trdfs:label \"and\"@en ;\n\trdfs:comment \"RDF list of shapes to validate the value nodes against.\"@en ;\n\trdfs:range rdf:List ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:ClassConstraintComponent \n\ta sh:ConstraintComponent ;\n\trdfs:label \"Class constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to verify that each value node is an instance of a given type.\"@en ;\n\tsh:parameter sh:ClassConstraintComponent-class ;\n\trdfs:isDefinedBy sh: .\n\nsh:ClassConstraintComponent-class\n\ta sh:Parameter ;\n\tsh:path sh:class ;\n\tsh:nodeKind sh:IRI ;\n\trdfs:isDefinedBy sh: .\n\nsh:class\n\ta rdf:Property ;\n\trdfs:label \"class\"@en ;\n\trdfs:comment \"The type that all value nodes must have.\"@en ;\n\trdfs:range rdfs:Class ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:ClosedConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Closed constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to indicate that focus nodes must only have values for those properties that have been explicitly enumerated via sh:property/sh:path.\"@en ;\n\tsh:parameter sh:ClosedConstraintComponent-closed ;\n\tsh:parameter sh:ClosedConstraintComponent-ignoredProperties ;\n\trdfs:isDefinedBy sh: .\n\nsh:ClosedConstraintComponent-closed\n\ta sh:Parameter ; \n\tsh:path sh:closed ;\n\tsh:datatype xsd:boolean ;\n\trdfs:isDefinedBy sh: .\n\nsh:ClosedConstraintComponent-ignoredProperties\n\ta sh:Parameter ;\n\tsh:path sh:ignoredProperties ;\n\tsh:optional true ;\n\trdfs:isDefinedBy sh: .\n\nsh:closed\n\ta rdf:Property ;\n\trdfs:label \"closed\"@en ;\n\trdfs:comment \"If set to true then the shape is closed.\"@en ;\n\trdfs:range xsd:boolean ;\n\trdfs:isDefinedBy sh: .\n\nsh:ignoredProperties\n\ta rdf:Property ;\n\trdfs:label \"ignored properties\"@en ;\n\trdfs:comment \"An optional RDF list of properties that are also permitted in addition to those explicitly enumerated via sh:property/sh:path.\"@en ;\n\trdfs:range rdf:List ;    # members: rdf:Property\n\trdfs:isDefinedBy sh: .\n\n\nsh:DatatypeConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Datatype constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to restrict the datatype of all value nodes.\"@en ;\n\tsh:parameter sh:DatatypeConstraintComponent-datatype ;\n\trdfs:isDefinedBy sh: .\n\nsh:DatatypeConstraintComponent-datatype\n\ta sh:Parameter ;\n\tsh:path sh:datatype ;\n\tsh:nodeKind sh:IRI ;\n\tsh:maxCount 1 ;\n\trdfs:isDefinedBy sh: .\n\nsh:datatype\n\ta rdf:Property ;\n\trdfs:label \"datatype\"@en ;\n\trdfs:comment \"Specifies an RDF datatype that all value nodes must have.\"@en ;\n\trdfs:range rdfs:Datatype ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:DisjointConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Disjoint constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to verify that the set of value nodes is disjoint with the the set of nodes that have the focus node as subject and the value of a given property as predicate.\"@en ;\n\tsh:parameter sh:DisjointConstraintComponent-disjoint ;\n\trdfs:isDefinedBy sh: .\n\nsh:DisjointConstraintComponent-disjoint\n\ta sh:Parameter ;\n\tsh:path sh:disjoint ;\n\tsh:nodeKind sh:IRI ;\n\trdfs:isDefinedBy sh: .\n\nsh:disjoint\n\ta rdf:Property ;\n\trdfs:label \"disjoint\"@en ;\n\trdfs:comment \"Specifies a property where the set of values must be disjoint with the value nodes.\"@en ;\n\trdfs:range rdf:Property ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:EqualsConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Equals constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to verify that the set of value nodes is equal to the set of nodes that have the focus node as subject and the value of a given property as predicate.\"@en ;\n\tsh:parameter sh:EqualsConstraintComponent-equals ;\n\trdfs:isDefinedBy sh: .\n\nsh:EqualsConstraintComponent-equals\n\ta sh:Parameter ;\n\tsh:path sh:equals ;\n\tsh:nodeKind sh:IRI ;\n\trdfs:isDefinedBy sh: .\n\nsh:equals\n\ta rdf:Property ;\n\trdfs:label \"equals\"@en ;\n\trdfs:comment \"Specifies a property that must have the same values as the value nodes.\"@en ;\n\trdfs:range rdf:Property ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:HasValueConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Has-value constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to verify that one of the value nodes is a given RDF node.\"@en ;\n\tsh:parameter sh:HasValueConstraintComponent-hasValue ;\n\trdfs:isDefinedBy sh: .\n\nsh:HasValueConstraintComponent-hasValue\n\ta sh:Parameter ;\n\tsh:path sh:hasValue ;\n\trdfs:isDefinedBy sh: .\n\nsh:hasValue\n\ta rdf:Property ;\n\trdfs:label \"has value\"@en ;\n\trdfs:comment \"Specifies a value that must be among the value nodes.\"@en ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:InConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"In constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to exclusively enumerate the permitted value nodes.\"@en ;\n\tsh:parameter sh:InConstraintComponent-in ;\n\trdfs:isDefinedBy sh: .\n\nsh:InConstraintComponent-in\n\ta sh:Parameter ;\n\tsh:path sh:in ;\n\tsh:maxCount 1 ;\n\trdfs:isDefinedBy sh: .\n\nsh:in\n\ta rdf:Property ;\n\trdfs:label \"in\"@en ;\n\trdfs:comment \"Specifies a list of allowed values so that each value node must be among the members of the given list.\"@en ;\n\trdfs:range rdf:List ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:LanguageInConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Language-in constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to enumerate language tags that all value nodes must have.\"@en ;\n\tsh:parameter sh:LanguageInConstraintComponent-languageIn ;\n\trdfs:isDefinedBy sh: .\n\nsh:LanguageInConstraintComponent-languageIn\n\ta sh:Parameter ;\n\tsh:path sh:languageIn ;\n\tsh:maxCount 1 ;\n\trdfs:isDefinedBy sh: .\n\nsh:languageIn\n\ta rdf:Property ;\n\trdfs:label \"language in\"@en ;\n\trdfs:comment \"Specifies a list of language tags that all value nodes must have.\"@en ;\n\trdfs:range rdf:List ;   # members: xsd:string\n\trdfs:isDefinedBy sh: .\n\n\nsh:LessThanConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Less-than constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to verify that each value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate.\"@en ;\n\tsh:parameter sh:LessThanConstraintComponent-lessThan ;\n\trdfs:isDefinedBy sh: .\n\nsh:LessThanConstraintComponent-lessThan\n\ta sh:Parameter ;\n\tsh:path sh:lessThan ;\n\tsh:nodeKind sh:IRI ;\n\trdfs:isDefinedBy sh: .\n\nsh:lessThan\n\ta rdf:Property ;\n\trdfs:label \"less than\"@en ;\n\trdfs:comment \"Specifies a property that must have smaller values than the value nodes.\"@en ;\n\trdfs:range rdf:Property ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:LessThanOrEqualsConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"less-than-or-equals constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to verify that every value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate.\"@en ;\n\tsh:parameter sh:LessThanOrEqualsConstraintComponent-lessThanOrEquals ;\n\trdfs:isDefinedBy sh: .\n\nsh:LessThanOrEqualsConstraintComponent-lessThanOrEquals\n\ta sh:Parameter ;\n\tsh:path sh:lessThanOrEquals ;\n\tsh:nodeKind sh:IRI ;\n\trdfs:isDefinedBy sh: .\n\nsh:lessThanOrEquals\n\ta rdf:Property ;\n\trdfs:label \"less than or equals\"@en ;\n\trdfs:comment \"Specifies a property that must have smaller or equal values than the value nodes.\"@en ;\n\trdfs:range rdf:Property ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:MaxCountConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Max-count constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to restrict the maximum number of value nodes.\"@en ;\n\tsh:parameter sh:MaxCountConstraintComponent-maxCount ;\n\trdfs:isDefinedBy sh: .\n\nsh:MaxCountConstraintComponent-maxCount\n\ta sh:Parameter ;\n\tsh:path sh:maxCount ;\n\tsh:datatype xsd:integer ;\n\tsh:maxCount 1 ;\n\trdfs:isDefinedBy sh: .\n\nsh:maxCount\n\ta rdf:Property ;\n\trdfs:label \"max count\"@en ;\n\trdfs:comment \"Specifies the maximum number of values in the set of value nodes.\"@en ;\n\trdfs:range xsd:integer ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:MaxExclusiveConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Max-exclusive constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to restrict the range of value nodes with a maximum exclusive value.\"@en ;\n\tsh:parameter sh:MaxExclusiveConstraintComponent-maxExclusive ;\n\trdfs:isDefinedBy sh: .\n\nsh:MaxExclusiveConstraintComponent-maxExclusive\n\ta sh:Parameter ;\n\tsh:path sh:maxExclusive ;\n\tsh:maxCount 1 ;\n\tsh:nodeKind sh:Literal ;\n\trdfs:isDefinedBy sh: .\n\nsh:maxExclusive\n\ta rdf:Property ;\n\trdfs:label \"max exclusive\"@en ;\n\trdfs:comment \"Specifies the maximum exclusive value of each value node.\"@en ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:MaxInclusiveConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Max-inclusive constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to restrict the range of value nodes with a maximum inclusive value.\"@en ;\n\tsh:parameter sh:MaxInclusiveConstraintComponent-maxInclusive ;\n\trdfs:isDefinedBy sh: .\n\nsh:MaxInclusiveConstraintComponent-maxInclusive\n\ta sh:Parameter ;\n\tsh:path sh:maxInclusive ;\n\tsh:maxCount 1 ;\n\tsh:nodeKind sh:Literal ;\n\trdfs:isDefinedBy sh: .\n\nsh:maxInclusive\n\ta rdf:Property ;\n\trdfs:label \"max inclusive\"@en ;\n\trdfs:comment \"Specifies the maximum inclusive value of each value node.\"@en ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:MaxLengthConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Max-length constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to restrict the maximum string length of value nodes.\"@en ;\n\tsh:parameter sh:MaxLengthConstraintComponent-maxLength ;\n\trdfs:isDefinedBy sh: .\n\nsh:MaxLengthConstraintComponent-maxLength\n\ta sh:Parameter ;\n\tsh:path sh:maxLength ;\n\tsh:datatype xsd:integer ;\n\tsh:maxCount 1 ;\n\trdfs:isDefinedBy sh: .\n\nsh:maxLength\n\ta rdf:Property ;\n\trdfs:label \"max length\"@en ;\n\trdfs:comment \"Specifies the maximum string length of each value node.\"@en ;\n\trdfs:range xsd:integer ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:MinCountConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Min-count constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to restrict the minimum number of value nodes.\"@en ;\n\tsh:parameter sh:MinCountConstraintComponent-minCount ;\n\trdfs:isDefinedBy sh: .\n\nsh:MinCountConstraintComponent-minCount\n\ta sh:Parameter ;\n\tsh:path sh:minCount ;\n\tsh:datatype xsd:integer ;\n\tsh:maxCount 1 ;\n\trdfs:isDefinedBy sh: .\n\nsh:minCount\n\ta rdf:Property ;\n\trdfs:label \"min count\"@en ;\n\trdfs:comment \"Specifies the minimum number of values in the set of value nodes.\"@en ;\n\trdfs:range xsd:integer ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:MinExclusiveConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Min-exclusive constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to restrict the range of value nodes with a minimum exclusive value.\"@en ;\n\tsh:parameter sh:MinExclusiveConstraintComponent-minExclusive ;\n\trdfs:isDefinedBy sh: .\n\nsh:MinExclusiveConstraintComponent-minExclusive\n\ta sh:Parameter ;\n\tsh:path sh:minExclusive ;\n\tsh:maxCount 1 ;\n\tsh:nodeKind sh:Literal ;\n\trdfs:isDefinedBy sh: .\n\nsh:minExclusive\n\ta rdf:Property ;\n\trdfs:label \"min exclusive\"@en ;\n\trdfs:comment \"Specifies the minimum exclusive value of each value node.\"@en ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:MinInclusiveConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Min-inclusive constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to restrict the range of value nodes with a minimum inclusive value.\"@en ;\n\tsh:parameter sh:MinInclusiveConstraintComponent-minInclusive ;\n\trdfs:isDefinedBy sh: .\n\nsh:MinInclusiveConstraintComponent-minInclusive\n\ta sh:Parameter ;\n\tsh:path sh:minInclusive ;\n\tsh:maxCount 1 ;\n\tsh:nodeKind sh:Literal ;\n\trdfs:isDefinedBy sh: .\n\nsh:minInclusive\n\ta rdf:Property ;\n\trdfs:label \"min inclusive\"@en ;\n\trdfs:comment \"Specifies the minimum inclusive value of each value node.\"@en ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:MinLengthConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Min-length constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to restrict the minimum string length of value nodes.\"@en ;\n\tsh:parameter sh:MinLengthConstraintComponent-minLength ;\n\trdfs:isDefinedBy sh: .\n\nsh:MinLengthConstraintComponent-minLength\n\ta sh:Parameter ;\n\tsh:path sh:minLength ;\n\tsh:datatype xsd:integer ;\n\tsh:maxCount 1 ;\n\trdfs:isDefinedBy sh: .\n\nsh:minLength\n\ta rdf:Property ;\n\trdfs:label \"min length\"@en ;\n\trdfs:comment \"Specifies the minimum string length of each value node.\"@en ;\n\trdfs:range xsd:integer ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:NodeConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Node constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to verify that all value nodes conform to the given node shape.\"@en ;\n\tsh:parameter sh:NodeConstraintComponent-node ;\n\trdfs:isDefinedBy sh: .\n\nsh:NodeConstraintComponent-node\n\ta sh:Parameter ;\n\tsh:path sh:node ;\n\trdfs:isDefinedBy sh: .\n\nsh:node\n\ta rdf:Property ;\n\trdfs:label \"node\"@en ;\n\trdfs:comment \"Specifies the node shape that all value nodes must conform to.\"@en ;\n\trdfs:range sh:NodeShape ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:NodeKindConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Node-kind constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to restrict the RDF node kind of each value node.\"@en ;\n\tsh:parameter sh:NodeKindConstraintComponent-nodeKind ;\n\trdfs:isDefinedBy sh: .\n\nsh:NodeKindConstraintComponent-nodeKind\n\ta sh:Parameter ;\n\tsh:path sh:nodeKind ;\n\tsh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ;\n\tsh:maxCount 1 ;\n\trdfs:isDefinedBy sh: .\n\nsh:nodeKind\n\ta rdf:Property ;\n\trdfs:label \"node kind\"@en ;\n\trdfs:comment \"Specifies the node kind (e.g. IRI or literal) each value node.\"@en ;\n\trdfs:range sh:NodeKind ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:NotConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Not constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to verify that value nodes do not conform to a given shape.\"@en ;\n\tsh:parameter sh:NotConstraintComponent-not ;\n\trdfs:isDefinedBy sh: .\n\nsh:NotConstraintComponent-not\n\ta sh:Parameter ;\n\tsh:path sh:not ;\n\trdfs:isDefinedBy sh: .\n\nsh:not\n\ta rdf:Property ;\n\trdfs:label \"not\"@en ;\n\trdfs:comment \"Specifies a shape that the value nodes must not conform to.\"@en ;\n\trdfs:range sh:Shape ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:OrConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Or constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to restrict the value nodes so that they conform to at least one out of several provided shapes.\"@en ;\n\tsh:parameter sh:OrConstraintComponent-or ;\n\trdfs:isDefinedBy sh: .\n\nsh:OrConstraintComponent-or\n\ta sh:Parameter ;\n\tsh:path sh:or ;\n\trdfs:isDefinedBy sh: .\n\nsh:or\n\ta rdf:Property ;\n\trdfs:label \"or\"@en ;\n\trdfs:comment \"Specifies a list of shapes so that the value nodes must conform to at least one of the shapes.\"@en ;\n\trdfs:range rdf:List ;    # members: sh:Shape ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:PatternConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Pattern constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to verify that every value node matches a given regular expression.\"@en ;\n\tsh:parameter sh:PatternConstraintComponent-pattern ;\n\tsh:parameter sh:PatternConstraintComponent-flags ;\n\trdfs:isDefinedBy sh: .\n\nsh:PatternConstraintComponent-pattern\n\ta sh:Parameter ;\n\tsh:path sh:pattern ;\n\tsh:datatype xsd:string ;\n\trdfs:isDefinedBy sh: .\n\nsh:PatternConstraintComponent-flags\n\ta sh:Parameter ;\n\tsh:path sh:flags ;\n\tsh:datatype xsd:string ;\n\tsh:optional true ;\n\trdfs:isDefinedBy sh: .\n\nsh:flags\n\ta rdf:Property ;\n\trdfs:label \"flags\"@en ;\n\trdfs:comment \"An optional flag to be used with regular expression pattern matching.\"@en ;\n\trdfs:range xsd:string ;\n\trdfs:isDefinedBy sh: .\n\nsh:pattern\n\ta rdf:Property ;\n\trdfs:label \"pattern\"@en ;\n\trdfs:comment \"Specifies a regular expression pattern that the string representations of the value nodes must match.\"@en ;\n\trdfs:range xsd:string ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:PropertyConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Property constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to verify that all value nodes conform to the given property shape.\"@en ;\n\tsh:parameter sh:PropertyConstraintComponent-property ;\n\trdfs:isDefinedBy sh: .\n\nsh:PropertyConstraintComponent-property\n\ta sh:Parameter ;\n\tsh:path sh:property ;\n\trdfs:isDefinedBy sh: .\n\nsh:property\n\ta rdf:Property ;\n\trdfs:label \"property\"@en ;\n\trdfs:comment \"Links a shape to its property shapes.\"@en ;\n\trdfs:domain sh:Shape ;\n\trdfs:range sh:PropertyShape ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:QualifiedMaxCountConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Qualified-max-count constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to verify that a specified maximum number of value nodes conforms to a given shape.\"@en ;\n\tsh:parameter sh:QualifiedMaxCountConstraintComponent-qualifiedMaxCount ;\n\tsh:parameter sh:QualifiedMaxCountConstraintComponent-qualifiedValueShape ;\n\tsh:parameter sh:QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint ;\n\trdfs:isDefinedBy sh: .\n\nsh:QualifiedMaxCountConstraintComponent-qualifiedMaxCount\n\ta sh:Parameter ;\n\tsh:path sh:qualifiedMaxCount ;\n\tsh:datatype xsd:integer ;\n\trdfs:isDefinedBy sh: .\n\nsh:QualifiedMaxCountConstraintComponent-qualifiedValueShape\n\ta sh:Parameter ;\n\tsh:path sh:qualifiedValueShape ;\n\trdfs:isDefinedBy sh: .\n\nsh:QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint\n\ta sh:Parameter ;\n\tsh:path sh:qualifiedValueShapesDisjoint ;\n\tsh:datatype xsd:boolean ;\n\tsh:optional true ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:QualifiedMinCountConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Qualified-min-count constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to verify that a specified minimum number of value nodes conforms to a given shape.\"@en ;\n\tsh:parameter sh:QualifiedMinCountConstraintComponent-qualifiedMinCount ;\n\tsh:parameter sh:QualifiedMinCountConstraintComponent-qualifiedValueShape ;\n\tsh:parameter sh:QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint ;\n\trdfs:isDefinedBy sh: .\n\nsh:QualifiedMinCountConstraintComponent-qualifiedMinCount\n\ta sh:Parameter ;\n\tsh:path sh:qualifiedMinCount ;\n\tsh:datatype xsd:integer ;\n\trdfs:isDefinedBy sh: .\n\nsh:QualifiedMinCountConstraintComponent-qualifiedValueShape\n\ta sh:Parameter ;\n\tsh:path sh:qualifiedValueShape ;\n\trdfs:isDefinedBy sh: .\n\nsh:QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint\n\ta sh:Parameter ;\n\tsh:path sh:qualifiedValueShapesDisjoint ;\n\tsh:datatype xsd:boolean ;\n\tsh:optional true ;\n\trdfs:isDefinedBy sh: .\n\nsh:qualifiedMaxCount\n\ta rdf:Property ;\n\trdfs:label \"qualified max count\"@en ;\n\trdfs:comment \"The maximum number of value nodes that can conform to the shape.\"@en ;\n\trdfs:range xsd:integer ;\n\trdfs:isDefinedBy sh: .\n\nsh:qualifiedMinCount\n\ta rdf:Property ;\n\trdfs:label \"qualified min count\"@en ;\n\trdfs:comment \"The minimum number of value nodes that must conform to the shape.\"@en ;\n\trdfs:range xsd:integer ;\n\trdfs:isDefinedBy sh: .\n\nsh:qualifiedValueShape\n\ta rdf:Property ;\n\trdfs:label \"qualified value shape\"@en ;\n\trdfs:comment \"The shape that a specified number of values must conform to.\"@en ;\n\trdfs:range sh:Shape ;\n\trdfs:isDefinedBy sh: .\n\t\nsh:qualifiedValueShapesDisjoint\n\ta rdf:Property ;\n\trdfs:label \"qualified value shapes disjoint\"@en ;\n\trdfs:comment \"Can be used to mark the qualified value shape to be disjoint with its sibling shapes.\"@en ;\n\trdfs:range xsd:boolean ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:UniqueLangConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Unique-languages constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to specify that no pair of value nodes may use the same language tag.\"@en ;\n\tsh:parameter sh:UniqueLangConstraintComponent-uniqueLang ;\n\trdfs:isDefinedBy sh: .\n\nsh:UniqueLangConstraintComponent-uniqueLang\n\ta sh:Parameter ;\n\tsh:path sh:uniqueLang ;\n\tsh:datatype xsd:boolean ;\n\tsh:maxCount 1 ;\n\trdfs:isDefinedBy sh: .\n\nsh:uniqueLang\n\ta rdf:Property ;\n\trdfs:label \"unique languages\"@en ;\n\trdfs:comment \"Specifies whether all node values must have a unique (or no) language tag.\"@en ;\n\trdfs:range xsd:boolean ;\n\trdfs:isDefinedBy sh: .\n\n\nsh:XoneConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Exactly one constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to restrict the value nodes so that they conform to exactly one out of several provided shapes.\"@en ;\n\tsh:parameter sh:XoneConstraintComponent-xone ;\n\trdfs:isDefinedBy sh: .\n\nsh:XoneConstraintComponent-xone\n\ta sh:Parameter ;\n\tsh:path sh:xone ;\n\trdfs:isDefinedBy sh: .\n\nsh:xone\n\ta rdf:Property ;\n\trdfs:label \"exactly one\"@en ;\n\trdfs:comment \"Specifies a list of shapes so that the value nodes must conform to exactly one of the shapes.\"@en ;\n\trdfs:range rdf:List ;    # members: sh:Shape ;\n\trdfs:isDefinedBy sh: .\n\n\n# General SPARQL execution support --------------------------------------------\n\nsh:SPARQLExecutable\n\ta rdfs:Class ;\n\trdfs:label \"SPARQL executable\"@en ;\n\trdfs:comment \"The class of resources that encapsulate a SPARQL query.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:SPARQLAskExecutable\n\ta rdfs:Class ;\n\trdfs:label \"SPARQL ASK executable\"@en ;\n\trdfs:comment \"The class of SPARQL executables that are based on an ASK query.\"@en ;\n\trdfs:subClassOf sh:SPARQLExecutable ;\n\trdfs:isDefinedBy sh: .\n\nsh:ask\n\ta rdf:Property ;\n\trdfs:label \"ask\"@en ;\n\trdfs:comment \"The SPARQL ASK query to execute.\"@en ;\n\trdfs:domain sh:SPARQLAskExecutable ;\n\trdfs:range xsd:string ;\n\trdfs:isDefinedBy sh: .\n\nsh:SPARQLConstructExecutable\n\ta rdfs:Class ;\n\trdfs:label \"SPARQL CONSTRUCT executable\"@en ;\n\trdfs:comment \"The class of SPARQL executables that are based on a CONSTRUCT query.\"@en ;\n\trdfs:subClassOf sh:SPARQLExecutable ;\n\trdfs:isDefinedBy sh: .\n\nsh:construct\n\ta rdf:Property ;\n\trdfs:label \"construct\"@en ;\n\trdfs:comment \"The SPARQL CONSTRUCT query to execute.\"@en ;\n\trdfs:domain sh:SPARQLConstructExecutable ;\n\trdfs:range xsd:string ;\n\trdfs:isDefinedBy sh: .\n\nsh:SPARQLSelectExecutable\n\ta rdfs:Class ;\n\trdfs:label \"SPARQL SELECT executable\"@en ;\n\trdfs:comment \"The class of SPARQL executables based on a SELECT query.\"@en ;\n\trdfs:subClassOf sh:SPARQLExecutable ;\n\trdfs:isDefinedBy sh: .\n\nsh:select\n\ta rdf:Property ;\n\trdfs:label \"select\"@en ;\n\trdfs:comment \"The SPARQL SELECT query to execute.\"@en ;\n\trdfs:range xsd:string ;\n\trdfs:domain sh:SPARQLSelectExecutable ;\n\trdfs:isDefinedBy sh: .\n\nsh:SPARQLUpdateExecutable\n\ta rdfs:Class ;\n\trdfs:label \"SPARQL UPDATE executable\"@en ;\n\trdfs:comment \"The class of SPARQL executables based on a SPARQL UPDATE.\"@en ;\n\trdfs:subClassOf sh:SPARQLExecutable ;\n\trdfs:isDefinedBy sh: .\n\nsh:update\n\ta rdf:Property ;\n\trdfs:label \"update\"@en ;\n\trdfs:comment \"The SPARQL UPDATE to execute.\"@en ;\n\trdfs:domain sh:SPARQLUpdateExecutable ;\n\trdfs:range xsd:string ;\n\trdfs:isDefinedBy sh: .\n\nsh:prefixes\n\ta rdf:Property ;\n\trdfs:label \"prefixes\"@en ;\n\trdfs:comment \"The prefixes that shall be applied before parsing the associated SPARQL query.\"@en ;\n\trdfs:domain sh:SPARQLExecutable ;\n\trdfs:range owl:Ontology ;\n\trdfs:isDefinedBy sh: .\n\nsh:PrefixDeclaration\n\ta rdfs:Class ;\n\trdfs:label \"Prefix declaration\"@en ;\n\trdfs:comment \"The class of prefix declarations, consisting of pairs of a prefix with a namespace.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:declare\n\ta rdf:Property ;\n\trdfs:label \"declare\"@en ;\n\trdfs:comment \"Links a resource with its namespace prefix declarations.\"@en ;\n\trdfs:domain owl:Ontology ;\n\trdfs:range sh:PrefixDeclaration ;\n\trdfs:isDefinedBy sh: .\n\nsh:prefix\n\ta rdf:Property ;\n\trdfs:label \"prefix\"@en ;\n\trdfs:comment \"The prefix of a prefix declaration.\"@en ;\n\trdfs:domain sh:PrefixDeclaration ;\n\trdfs:range xsd:string ;\n\trdfs:isDefinedBy sh: .\n\nsh:namespace\n\ta rdf:Property ;\n\trdfs:label \"namespace\"@en ;\n\trdfs:comment \"The namespace associated with a prefix in a prefix declaration.\"@en ;\n\trdfs:domain sh:PrefixDeclaration ;\n\trdfs:range xsd:anyURI ;\n\trdfs:isDefinedBy sh: .\n\t\n\n# SPARQL-based Constraints support --------------------------------------------\n\nsh:SPARQLConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"SPARQL constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to define constraints based on SPARQL queries.\"@en ;\n\tsh:parameter sh:SPARQLConstraintComponent-sparql ;\n\trdfs:isDefinedBy sh: .\n\nsh:SPARQLConstraintComponent-sparql\n\ta sh:Parameter ;\n\tsh:path sh:sparql ;\n\trdfs:isDefinedBy sh: .\n\nsh:sparql\n\ta rdf:Property ;\n\trdfs:label \"constraint (in SPARQL)\"@en ;\n\trdfs:comment \"Links a shape with SPARQL constraints.\"@en ;\n\trdfs:domain sh:Shape ;\n\trdfs:range sh:SPARQLConstraint ;\n\trdfs:isDefinedBy sh: .\n\nsh:SPARQLConstraint\n\ta rdfs:Class ;\n\trdfs:label \"SPARQL constraint\"@en ;\n\trdfs:comment \"The class of constraints based on SPARQL SELECT queries.\"@en ;\n\trdfs:subClassOf sh:SPARQLSelectExecutable ;\n\trdfs:isDefinedBy sh: .\n\n\n# Non-validating constraint properties ----------------------------------------\n\nsh:defaultValue\n\ta rdf:Property ;\n\trdfs:label \"default value\"@en ;\n\trdfs:comment \"A default value for a property, for example for user interface tools to pre-populate input fields.\"@en ;\n\trdfs:domain sh:PropertyShape ;\n\trdfs:isDefinedBy sh: .\n\nsh:description\n\ta rdf:Property ;\n\trdfs:label \"description\"@en ;\n\trdfs:comment \"Human-readable descriptions for the property in the context of the surrounding shape.\"@en ;\n\trdfs:domain sh:PropertyShape ;\n\t# range: xsd:string or rdf:langString\n\trdfs:isDefinedBy sh: .\n\nsh:group\n\ta rdf:Property ;\n\trdfs:label \"group\"@en ;\n\trdfs:comment \"Can be used to link to a property group to indicate that a property shape belongs to a group of related property shapes.\"@en ;\n\trdfs:domain sh:PropertyShape ;\n\trdfs:range sh:PropertyGroup ;\n\trdfs:isDefinedBy sh: .\n\nsh:name\n\ta rdf:Property ;\n\trdfs:label \"name\"@en ;\n\trdfs:comment \"Human-readable labels for the property in the context of the surrounding shape.\"@en ;\n\trdfs:domain sh:PropertyShape ;\n\t# range: xsd:string or rdf:langString\n\trdfs:isDefinedBy sh: .\n\nsh:order\n\ta rdf:Property ;\n\trdfs:label \"order\"@en ;\n\trdfs:comment \"Specifies the relative order of this compared to its siblings. For example use 0 for the first, 1 for the second.\"@en ;\n\t# range: xsd:decimal or xsd:integer ;\n\trdfs:isDefinedBy sh: .\n\nsh:PropertyGroup\n\ta rdfs:Class ;\n\trdfs:label \"Property group\"@en ;\n\trdfs:comment \"Instances of this class represent groups of property shapes that belong together.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\n\n# -----------------------------------------------------------------------------\n# SHACL ADVANCED FEATURES -----------------------------------------------------\n# -----------------------------------------------------------------------------\n\t\n\n# Advanced Target vocabulary --------------------------------------------------\n\nsh:target\n\ta rdf:Property ;\n\trdfs:label \"target\"@en ;\n\trdfs:comment \"Links a shape to a target specified by an extension language, for example instances of sh:SPARQLTarget.\"@en ;\n\trdfs:domain sh:Shape ;\n\trdfs:range sh:Target ;\n\trdfs:isDefinedBy sh: .\n\nsh:Target\n\ta rdfs:Class ;\n\trdfs:label \"Target\"@en ;\n\trdfs:comment \"The base class of targets such as those based on SPARQL queries.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:TargetType\n\ta rdfs:Class ;\n\trdfs:label \"Target type\"@en ;\n\trdfs:comment \"The (meta) class for parameterizable targets.\tInstances of this are instantiated as values of the sh:target property.\"@en ;\n\trdfs:subClassOf rdfs:Class ;\n\trdfs:subClassOf sh:Parameterizable ;\n\trdfs:isDefinedBy sh: .\n\nsh:SPARQLTarget\n\ta rdfs:Class ;\n\trdfs:label \"SPARQL target\"@en ;\n\trdfs:comment \"The class of targets that are based on SPARQL queries.\"@en ;\n\trdfs:subClassOf sh:Target ;\n\trdfs:subClassOf sh:SPARQLAskExecutable ;\n\trdfs:subClassOf sh:SPARQLSelectExecutable ;\n\trdfs:isDefinedBy sh: .\n\nsh:SPARQLTargetType\n\ta rdfs:Class ;\n\trdfs:label \"SPARQL target type\"@en ;\n\trdfs:comment \"The (meta) class for parameterizable targets that are based on SPARQL queries.\"@en ;\n\trdfs:subClassOf sh:TargetType ;\n\trdfs:subClassOf sh:SPARQLAskExecutable ;\n\trdfs:subClassOf sh:SPARQLSelectExecutable ;\n\trdfs:isDefinedBy sh: .\n\n\n# Functions Vocabulary --------------------------------------------------------\n\nsh:Function\n\ta rdfs:Class ;\n\trdfs:label \"Function\"@en ;\n\trdfs:comment \"The class of SHACL functions.\"@en ;\n\trdfs:subClassOf sh:Parameterizable ;\n\trdfs:isDefinedBy sh: .\n\nsh:returnType\n\ta rdf:Property ;\n\trdfs:label \"return type\"@en ;\n\trdfs:comment \"The expected type of values returned by the associated function.\"@en ;\n\trdfs:domain sh:Function ;\n\trdfs:range rdfs:Class ;\n\trdfs:isDefinedBy sh: .\n\nsh:SPARQLFunction\n\ta rdfs:Class ;\n\trdfs:label \"SPARQL function\"@en ;\n\trdfs:comment \"A function backed by a SPARQL query - either ASK or SELECT.\"@en ;\n\trdfs:subClassOf sh:Function ;\n\trdfs:subClassOf sh:SPARQLAskExecutable ;\n\trdfs:subClassOf sh:SPARQLSelectExecutable ;\n\trdfs:isDefinedBy sh: .\n\n\n# Result Annotations ----------------------------------------------------------\n\nsh:resultAnnotation\n\ta rdf:Property ;\n\trdfs:label \"result annotation\"@en ;\n\trdfs:comment \"Links a SPARQL validator with zero or more sh:ResultAnnotation instances, defining how to derive additional result properties based on the variables of the SELECT query.\"@en ;\n\trdfs:domain sh:SPARQLSelectValidator ;\n\trdfs:range sh:ResultAnnotation ;\n\trdfs:isDefinedBy sh: .\n\nsh:ResultAnnotation\n\ta rdfs:Class ;\n\trdfs:label \"Result annotation\"@en ;\n\trdfs:comment \"A class of result annotations, which define the rules to derive the values of a given annotation property as extra values for a validation result.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:annotationProperty\n\ta rdf:Property ;\n\trdfs:label \"annotation property\"@en ;\n\trdfs:comment \"The annotation property that shall be set.\"@en ;\n\trdfs:domain sh:ResultAnnotation ;\n\trdfs:range rdf:Property ;\n\trdfs:isDefinedBy sh: .\n\nsh:annotationValue\n\ta rdf:Property ;\n\trdfs:label \"annotation value\"@en ;\n\trdfs:comment \"The (default) values of the annotation property.\"@en ;\n\trdfs:domain sh:ResultAnnotation ;\n\trdfs:isDefinedBy sh: .\n\nsh:annotationVarName\n\ta rdf:Property ;\n\trdfs:label \"annotation variable name\"@en ;\n\trdfs:comment \"The name of the SPARQL variable from the SELECT clause that shall be used for the values.\"@en ;\n\trdfs:domain sh:ResultAnnotation ;\n\trdfs:range xsd:string ;\n\trdfs:isDefinedBy sh: .\n\n\t\n# Node Expressions ------------------------------------------------------------\n\nsh:this\n\ta rdfs:Resource ;\n\trdfs:label \"this\"@en ;\n\trdfs:comment \"A node expression that represents the current focus node.\"@en ;\n\trdfs:isDefinedBy sh: .\n\nsh:filterShape\n\ta rdf:Property ;\n\trdfs:label \"filter shape\"@en ;\n\trdfs:comment \"The shape that all input nodes of the expression need to conform to.\"@en ;\n\trdfs:range sh:Shape ;\n\trdfs:isDefinedBy sh: .\n\nsh:nodes\n\ta rdf:Property ;\n\trdfs:label \"nodes\"@en ;\n\trdfs:comment \"The node expression producing the input nodes of a filter shape expression.\"@en ;\n\trdfs:isDefinedBy sh: .\n\nsh:intersection\n\ta rdf:Property ;\n\trdfs:label \"intersection\"@en ;\n\trdfs:comment \"A list of node expressions that shall be intersected.\"@en ;\n\trdfs:isDefinedBy sh: .\n\nsh:union\n\ta rdf:Property ;\n\trdfs:label \"union\"@en ;\n\trdfs:comment \"A list of node expressions that shall be used together.\"@en ;\n\trdfs:isDefinedBy sh: .\n\n\n# Expression Constraints ------------------------------------------------------\n\nsh:ExpressionConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"Expression constraint component\"@en ;\n\trdfs:comment \"A constraint component that can be used to verify that a given node expression produces true for all value nodes.\"@en ;\n\tsh:parameter sh:ExpressionConstraintComponent-expression ;\n\trdfs:isDefinedBy sh: .\n\nsh:ExpressionConstraintComponent-expression\n\ta sh:Parameter ;\n\tsh:path sh:expression ;\n\trdfs:isDefinedBy sh: .\n\nsh:expression\n\ta rdf:Property ;\n\trdfs:label \"expression\"@en ;\n\trdfs:comment \"The node expression that must return true for the value nodes.\"@en ;\n\trdfs:isDefinedBy sh: .\n\n\n# Rules -----------------------------------------------------------------------\n\nsh:Rule\n\ta rdfs:Class ;\n\trdfs:label \"Rule\"@en ;\n\trdfs:comment \"The class of SHACL rules. Never instantiated directly.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:rule\n\ta rdf:Property ;\n\trdfs:label \"rule\"@en ;\n\trdfs:comment \"The rules linked to a shape.\"@en ;\n\trdfs:domain sh:Shape ;\n\trdfs:range sh:Rule ;\n\trdfs:isDefinedBy sh:  .\n\nsh:condition\n\ta rdf:Property ;\n\trdfs:label \"condition\"@en ;\n\trdfs:comment \"The shapes that the focus nodes need to conform to before a rule is executed on them.\"@en ;\n\trdfs:domain sh:Rule ;\n\trdfs:range sh:Shape ;\n\trdfs:isDefinedBy sh: .\n\nsh:TripleRule\n\ta rdfs:Class ;\n\trdfs:label \"A rule based on triple (subject, predicate, object) pattern.\"@en ;\n\trdfs:subClassOf sh:Rule ;\n\trdfs:isDefinedBy sh: .\n\nsh:subject\n\ta rdf:Property ;\n\trdfs:label \"subject\"@en ;\n\trdfs:comment \"An expression producing the resources that shall be inferred as subjects.\"@en ;\n\trdfs:domain sh:TripleRule ;\n\trdfs:isDefinedBy sh: .\n\nsh:predicate\n\ta rdf:Property ;\n\trdfs:label \"predicate\"@en ;\n\trdfs:comment \"An expression producing the properties that shall be inferred as predicates.\"@en ;\n\trdfs:domain sh:TripleRule ;\n\trdfs:isDefinedBy sh: .\n\nsh:object\n\ta rdf:Property ;\n\trdfs:label \"object\"@en ;\n\trdfs:comment \"An expression producing the nodes that shall be inferred as objects.\"@en ;\n\trdfs:domain sh:TripleRule ;\n\trdfs:isDefinedBy sh: .\n\nsh:SPARQLRule\n\ta rdfs:Class ;\n\trdfs:label \"SPARQL CONSTRUCT rule\"@en ;\n\trdfs:comment \"The class of SHACL rules based on SPARQL CONSTRUCT queries.\"@en ;\n\trdfs:subClassOf sh:Rule ;\n\trdfs:subClassOf sh:SPARQLConstructExecutable ;\n\trdfs:isDefinedBy sh: .\n\n\n# SHACL-JS --------------------------------------------------------------------\n\nsh:JSExecutable\n\ta rdfs:Class ;\n\trdfs:label \"JavaScript executable\"@en ;\n\trdfs:comment \"Abstract base class of resources that declare an executable JavaScript.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:JSTarget\n\ta rdfs:Class ;\n\trdfs:label \"JavaScript target\"@en ;\n\trdfs:comment \"The class of targets that are based on JavaScript functions.\"@en ;\n\trdfs:subClassOf sh:Target ;\n\trdfs:subClassOf sh:JSExecutable ;\n\trdfs:isDefinedBy sh: .\n\nsh:JSTargetType\n\ta rdfs:Class ;\n\trdfs:label \"JavaScript target type\"@en ;\n\trdfs:comment \"The (meta) class for parameterizable targets that are based on JavaScript functions.\"@en ;\n\trdfs:subClassOf sh:TargetType ;\n\trdfs:subClassOf sh:JSExecutable ;\n\trdfs:isDefinedBy sh: .\n\nsh:JSConstraint\n\ta rdfs:Class ;\n\trdfs:label \"JavaScript-based constraint\"@en ;\n\trdfs:comment \"The class of constraints backed by a JavaScript function.\"@en ;\n\trdfs:subClassOf sh:JSExecutable ;\n\trdfs:isDefinedBy sh: .\n\t\nsh:JSConstraintComponent\n\ta sh:ConstraintComponent ;\n\trdfs:label \"JavaScript constraint component\"@en ;\n\trdfs:comment \"A constraint component with the parameter sh:js linking to a sh:JSConstraint containing a sh:script.\"@en ;\n  \tsh:parameter sh:JSConstraint-js ;\n\trdfs:isDefinedBy sh: .\n \nsh:JSConstraint-js\n\ta sh:Parameter ;\n\tsh:path sh:js ;\n\trdfs:isDefinedBy sh: .\n\t\nsh:js\n\ta rdf:Property ;\n\trdfs:label \"JavaScript constraint\"@en ;\n\trdfs:comment \"Constraints expressed in JavaScript.\" ;\n  \trdfs:range sh:JSConstraint ;\n\trdfs:isDefinedBy sh: .\n\nsh:jsFunctionName\n\ta rdf:Property ;\n\trdfs:label \"JavaScript function name\"@en ;\n\trdfs:comment \"The name of the JavaScript function to execute.\"@en ;\n\trdfs:domain sh:JSExecutable ;\n\trdfs:range xsd:string ;\n\trdfs:isDefinedBy sh: .\n\nsh:jsLibrary\n\ta rdf:Property ;\n\trdfs:label \"JavaScript library\"@en ;\n  \trdfs:comment \"Declares which JavaScript libraries are needed to execute this.\"@en ;\n\trdfs:range sh:JSLibrary ;\n\trdfs:isDefinedBy sh: .\n\nsh:jsLibraryURL\n\ta rdf:Property ;\n\trdfs:label \"JavaScript library URL\"@en ;\n\trdfs:comment \"Declares the URLs of a JavaScript library. This should be the absolute URL of a JavaScript file. Implementations may redirect those to local files.\"@en ;\n\trdfs:domain sh:JSLibrary ;\n\trdfs:range xsd:anyURI ;\n\trdfs:isDefinedBy sh: .\n\t\nsh:JSFunction\n\ta rdfs:Class ;\n  \trdfs:label \"JavaScript function\"@en ;\n\trdfs:comment \"The class of SHACL functions that execute a JavaScript function when called.\"@en ;\n\trdfs:subClassOf sh:Function ;\n\trdfs:subClassOf sh:JSExecutable ;\n\trdfs:isDefinedBy sh: .\n\nsh:JSLibrary\n\ta rdfs:Class ;\n\trdfs:label \"JavaScript library\"@en ;\n\trdfs:comment \"Represents a JavaScript library, typically identified by one or more URLs of files to include.\"@en ;\n\trdfs:subClassOf rdfs:Resource ;\n\trdfs:isDefinedBy sh: .\n\nsh:JSRule\n\ta rdfs:Class ;\n\trdfs:label \"JavaScript rule\"@en ;\n\trdfs:comment \"The class of SHACL rules expressed using JavaScript.\"@en ;\n\trdfs:subClassOf sh:JSExecutable ;\n\trdfs:subClassOf sh:Rule ;\n\trdfs:isDefinedBy sh: .\n\nsh:JSValidator\n\ta rdfs:Class ;\n  \trdfs:label \"JavaScript validator\"@en ;\n\trdfs:comment \"A SHACL validator based on JavaScript. This can be used to declare SHACL constraint components that perform JavaScript-based validation when used.\"@en ;\n  \trdfs:subClassOf sh:JSExecutable ;\n  \trdfs:subClassOf sh:Validator ;\n  \trdfs:isDefinedBy sh: .\n","dash":"# baseURI: http://datashapes.org/dash\n# imports: http://topbraid.org/tosh\n# imports: http://www.w3.org/ns/shacl#\n# prefix: dash\n\n@prefix dash: <http://datashapes.org/dash#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix swa: <http://topbraid.org/swa#> .\n@prefix tosh: <http://topbraid.org/tosh#> .\n@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n<http://datashapes.org/dash>\n  rdf:type owl:Ontology ;\n  rdfs:comment \"\"\"DASH defines SPARQL-based validators for many SHACL Core constraint components. These are (among others) utilized by TopBraid and its API. Note that constraint components that require validation of nested shapes (such as sh:node) are not implementable without a function such as tosh:hasShape.\n\nDASH is also a SHACL library for frequently needed features and design patterns. All features in this library are 100% standards compliant and will work on any engine that fully supports SHACL.\"\"\" ;\n  rdfs:label \"DASH Data Shapes Library\" ;\n  owl:imports <http://topbraid.org/tosh> ;\n  owl:imports sh: ;\n  sh:declare [\n      sh:namespace \"http://datashapes.org/dash#\"^^xsd:anyURI ;\n      sh:prefix \"dash\" ;\n    ] ;\n  sh:declare [\n      sh:namespace \"http://purl.org/dc/terms/\"^^xsd:anyURI ;\n      sh:prefix \"dcterms\" ;\n    ] ;\n  sh:declare [\n      sh:namespace \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"^^xsd:anyURI ;\n      sh:prefix \"rdf\" ;\n    ] ;\n  sh:declare [\n      sh:namespace \"http://www.w3.org/2000/01/rdf-schema#\"^^xsd:anyURI ;\n      sh:prefix \"rdfs\" ;\n    ] ;\n  sh:declare [\n      sh:namespace \"http://www.w3.org/2001/XMLSchema#\"^^xsd:anyURI ;\n      sh:prefix \"xsd\" ;\n    ] ;\n  sh:declare [\n      sh:namespace \"http://www.w3.org/2002/07/owl#\"^^xsd:anyURI ;\n      sh:prefix \"owl\" ;\n    ] ;\n  sh:declare [\n      sh:namespace \"http://www.w3.org/2004/02/skos/core#\"^^xsd:anyURI ;\n      sh:prefix \"skos\" ;\n    ] ;\n.\ndash:AllObjects\n  rdf:type dash:AllObjectsTarget ;\n  rdfs:comment \"A reusable instance of dash:AllObjectsTarget.\" ;\n  rdfs:label \"All objects\" ;\n.\ndash:AllObjectsTarget\n  rdf:type sh:SPARQLTargetType ;\n  rdfs:comment \"A target containing all objects in the data graph as focus nodes.\" ;\n  rdfs:label \"All objects target\" ;\n  rdfs:subClassOf sh:Target ;\n  sh:labelTemplate \"All objects\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n  sh:select \"\"\"SELECT DISTINCT ?this\nWHERE {\n    ?anyS ?anyP ?this .\n}\"\"\" ;\n.\ndash:AllSubjects\n  rdf:type dash:AllSubjectsTarget ;\n  rdfs:comment \"A reusable instance of dash:AllSubjectsTarget.\" ;\n  rdfs:label \"All subjects\" ;\n.\ndash:AllSubjectsTarget\n  rdf:type sh:SPARQLTargetType ;\n  rdfs:comment \"A target containing all subjects in the data graph as focus nodes.\" ;\n  rdfs:label \"All subjects target\" ;\n  rdfs:subClassOf sh:Target ;\n  sh:labelTemplate \"All subjects\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n  sh:select \"\"\"SELECT DISTINCT ?this\nWHERE {\n    ?this ?anyP ?anyO .\n}\"\"\" ;\n.\ndash:ClosedByTypesConstraintComponent\n  rdf:type sh:ConstraintComponent ;\n  rdfs:comment \"A constraint component that can be used to declare that focus nodes are \\\"closed\\\" based on their rdf:types, meaning that focus nodes may only have values for the properties that are explicitly enumerated via sh:property/sh:path in property constraints at their rdf:types and the superclasses of those. This assumes that the type classes are also shapes.\" ;\n  rdfs:label \"Closed by types constraint component\" ;\n  sh:nodeValidator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateClosedByTypesNode\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n      sh:message \"Property is not among those permitted for any of the types\" ;\n    ] ;\n  sh:nodeValidator [\n      rdf:type sh:SPARQLSelectValidator ;\n      sh:message \"Property {?path} is not among those permitted for any of the types\" ;\n      sh:prefixes <http://datashapes.org/dash> ;\n      sh:select \"\"\"SELECT $this (?predicate AS ?path) ?value\nWHERE {\n\tFILTER ($closedByTypes) .\n    $this ?predicate ?value .\n\tFILTER (?predicate != rdf:type) .\n\tFILTER NOT EXISTS {\n\t\t$this rdf:type ?type .\n\t\t?type rdfs:subClassOf* ?class .\n\t\tGRAPH $shapesGraph {\n\t\t\t?class sh:property/sh:path ?predicate .\n\t\t}\n\t}\n}\"\"\" ;\n    ] ;\n  sh:parameter dash:ClosedByTypesConstraintComponent-closedByTypes ;\n  sh:targetClass sh:Shape ;\n.\ndash:ClosedByTypesConstraintComponent-closedByTypes\n  rdf:type sh:Parameter ;\n  sh:path dash:closedByTypes ;\n  sh:datatype xsd:boolean ;\n  sh:description \"True to indicate that the focus nodes are closed by their types. A constraint violation is reported for each property value of the focus node where the property is not among those that are explicitly declared via sh:property/sh:path in any of the rdf:types of the focus node (and their superclasses). The property rdf:type is always permitted.\" ;\n.\ndash:DASHJSLibrary\n  rdf:type sh:JSLibrary ;\n  rdfs:label \"DASH JavaScript library\" ;\n  sh:jsLibrary dash:RDFQueryJSLibrary ;\n  sh:jsLibraryURL \"http://datashapes.org/js/dash.js\"^^xsd:anyURI ;\n.\ndash:DateOrDateTime\n  rdf:type rdf:List ;\n  rdf:first xsd:date ;\n  rdf:rest (\n      xsd:dateTime\n    ) ;\n  rdfs:comment \"An rdf:List that can be used in property constraints as value for sh:or to indicate that all values of a property must be either xsd:date or xsd:dateTime.\" ;\n  rdfs:label \"Date or date time\" ;\n.\ndash:DefaultValueTypeRule\n  rdf:type sh:SPARQLConstructExecutable ;\n  rdfs:comment \"\"\"\n\t\tA resource encapsulating a query that can be used to construct rdf:type triples for certain untyped nodes\n\t\tthat are an object in a triple where the predicate has a sh:defaultValueType.\n\t\tThis can be used as a pre-processor for shape graphs before they are validated.\n\t\t\"\"\"^^rdf:HTML ;\n  rdfs:label \"default value type inference rule\" ;\n  sh:construct \"\"\"\n\t\tCONSTRUCT {\n\t\t\t?node a ?defaultValueType .\n\t\t}\n\t\tWHERE {\n\t\t\t?predicate sh:defaultValueType ?defaultValueType .\n\t\t\t?anySubject ?predicate ?node .\n\t\t\tFILTER (NOT EXISTS { ?node a ?anyType }) .\n\t\t}\n\t\t\"\"\" ;\n.\ndash:FailureResult\n  rdf:type rdfs:Class ;\n  rdf:type sh:Shape ;\n  rdfs:comment \"A result representing a validation failure such as an unsupported recursion.\" ;\n  rdfs:label \"Failure result\" ;\n  rdfs:subClassOf sh:AbstractResult ;\n.\ndash:FailureTestCaseResult\n  rdf:type rdfs:Class ;\n  rdf:type sh:Shape ;\n  rdfs:comment \"Represents a failure of a test case.\" ;\n  rdfs:label \"Failure test case result\" ;\n  rdfs:subClassOf dash:TestCaseResult ;\n.\ndash:FunctionTestCase\n  rdf:type rdfs:Class ;\n  rdf:type sh:Shape ;\n  rdfs:comment \"A test case that verifies that a given SPARQL expression produces a given, expected result.\" ;\n  rdfs:label \"Function test case\" ;\n  rdfs:subClassOf dash:TestCase ;\n  sh:property [\n      sh:path dash:expectedResult ;\n      sh:description \"The expected result of a function call.\" ;\n      sh:maxCount 1 ;\n      sh:name \"expected result\" ;\n    ] ;\n  sh:property [\n      sh:path dash:expression ;\n      sh:description \"A valid SPARQL expression calling the function to test.\" ;\n      sh:maxCount 1 ;\n      sh:minCount 1 ;\n      sh:name \"expression\" ;\n    ] ;\n.\ndash:GraphUpdate\n  rdf:type rdfs:Class ;\n  rdf:type sh:Shape ;\n  rdfs:label \"Graph update\" ;\n  rdfs:subClassOf dash:Suggestion ;\n.\ndash:GraphValidationTestCase\n  rdf:type rdfs:Class ;\n  rdf:type sh:Shape ;\n  rdfs:comment \"A test case that performs SHACL constraint validation on the whole graph and compares the results with the expected validation results stored with the test case. By default this excludes meta-validation (i.e. the validation of the shape definitions themselves). If that's desired, set dash:validateShapes to true.\" ;\n  rdfs:label \"Graph validation test case\" ;\n  rdfs:subClassOf dash:ValidationTestCase ;\n.\ndash:InferencingTestCase\n  rdf:type rdfs:Class ;\n  rdf:type sh:Shape ;\n  rdfs:comment \"A test case to verify whether an inferencing engine is producing identical results to those stored as expected results.\" ;\n  rdfs:label \"Inferencing test case\" ;\n  rdfs:subClassOf dash:TestCase ;\n  sh:property [\n      sh:path dash:expectedResult ;\n      sh:description \"The expected inferred triples, represented by instances of rdfs:Statement.\" ;\n      sh:name \"expected result\" ;\n    ] ;\n.\ndash:JSTestCase\n  rdf:type rdfs:Class ;\n  rdfs:comment \"A test case that calls a given JavaScript function like a sh:JSFunction and compares its result with the dash:expectedResult.\" ;\n  rdfs:label \"JavaScript test case\" ;\n  rdfs:subClassOf dash:TestCase ;\n  rdfs:subClassOf sh:JSFunction ;\n  sh:property [\n      sh:path dash:expectedResult ;\n      sh:description \"The expected result of the JavaScript function call, as an RDF node.\" ;\n      sh:maxCount 1 ;\n      sh:name \"expected result\" ;\n    ] ;\n.\ndash:ListNodeShape\n  rdf:type sh:NodeShape ;\n  rdfs:comment \"Defines constraints on what it means for a node to be a node within a well-formed RDF list. Note that this does not check whether the rdf:rest items are also well-formed lists as this would lead to unsupported recursion.\" ;\n  rdfs:label \"List node shape\" ;\n  sh:or (\n      [\n        sh:hasValue () ;\n        sh:property [\n            sh:path rdf:first ;\n            sh:maxCount 0 ;\n          ] ;\n        sh:property [\n            sh:path rdf:rest ;\n            sh:maxCount 0 ;\n          ] ;\n      ]\n      [\n        sh:not [\n            sh:hasValue () ;\n          ] ;\n        sh:property [\n            sh:path rdf:first ;\n            sh:maxCount 1 ;\n            sh:minCount 1 ;\n          ] ;\n        sh:property [\n            sh:path rdf:rest ;\n            sh:maxCount 1 ;\n            sh:minCount 1 ;\n          ] ;\n      ]\n    ) ;\n.\ndash:ListShape\n  rdf:type sh:NodeShape ;\n  rdfs:comment \"\"\"Defines constraints on what it means for a node to be a well-formed RDF list.\n\nThe focus node must either be rdf:nil or not recursive. Furthermore, this shape uses dash:ListNodeShape as a \\\"helper\\\" to walk through all members of the whole list (including itself).\"\"\" ;\n  rdfs:label \"List shape\" ;\n  sh:or (\n      [\n        sh:hasValue () ;\n      ]\n      [\n        sh:not [\n            sh:hasValue () ;\n          ] ;\n        sh:property [\n            sh:path [\n                sh:oneOrMorePath rdf:rest ;\n              ] ;\n            dash:nonRecursive \"true\"^^xsd:boolean ;\n          ] ;\n      ]\n    ) ;\n  sh:property [\n      sh:path [\n          sh:zeroOrMorePath rdf:rest ;\n        ] ;\n      rdfs:comment \"Each list member (including this node) must be have the shape dash:ListNodeShape.\" ;\n      sh:node dash:ListNodeShape ;\n    ] ;\n.\ndash:NonRecursiveConstraintComponent\n  rdf:type sh:ConstraintComponent ;\n  rdfs:comment \"\"\"Used to state that a property or path must not point back to itself.\n\nFor example, \\\"a person cannot have itself as parent\\\" can be expressed by setting dash:nonRecursive=true for a given sh:path.\n\nTo express that a person cannot have itself among any of its (recursive) parents, use a sh:path with the + operator such as ex:parent+.\"\"\" ;\n  rdfs:label \"Non-recursive constraint component\" ;\n  sh:message \"Points back at itself (recursively)\" ;\n  sh:parameter dash:NonRecursiveConstraintComponent-nonRecursive ;\n  sh:propertyValidator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateNonRecursiveProperty\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n  sh:propertyValidator [\n      rdf:type sh:SPARQLSelectValidator ;\n      sh:prefixes <http://datashapes.org/dash> ;\n      sh:select \"\"\"SELECT DISTINCT $this ($this AS ?value)\nWHERE {\n\t{\n\t\tFILTER (?nonRecursive)\n\t}\n    $this $PATH $this .\n}\"\"\" ;\n    ] ;\n  sh:targetClass sh:PropertyShape ;\n.\ndash:NonRecursiveConstraintComponent-nonRecursive\n  rdf:type sh:Parameter ;\n  sh:path dash:nonRecursive ;\n  sh:datatype xsd:boolean ;\n  sh:maxCount 1 ;\n  sh:name \"non-recursive\" ;\n.\ndash:None\n  rdf:type sh:NodeShape ;\n  rdfs:comment \"A Shape that is no node can conform to.\" ;\n  rdfs:label \"None\" ;\n  sh:in () ;\n.\ndash:ParameterConstraintComponent\n  rdf:type sh:ConstraintComponent ;\n  rdfs:comment \"A constraint component that can be used to verify that all value nodes conform to the given Parameter.\"@en ;\n  rdfs:label \"Parameter constraint component\"@en ;\n  sh:parameter dash:ParameterConstraintComponent-parameter ;\n.\ndash:ParameterConstraintComponent-parameter\n  rdf:type sh:Parameter ;\n  sh:path sh:parameter ;\n.\ndash:PrimaryKeyConstraintComponent\n  rdf:type sh:ConstraintComponent ;\n  dash:localConstraint \"true\"^^xsd:boolean ;\n  rdfs:comment \"Enforces a constraint that the given property (sh:path) serves as primary key for all resources in the target of the shape. If a property has been declared to be the primary key then each resource must have exactly one value for that property. Furthermore, the URIs of those resources must start with a given string (dash:uriStart), followed by the URL-encoded primary key value. For example if dash:uriStart is \\\"http://example.org/country-\\\" and the primary key for an instance is \\\"de\\\" then the URI must be \\\"http://example.org/country-de\\\". Finally, as a result of the URI policy, there can not be any other resource with the same value under the same primary key policy.\" ;\n  rdfs:label \"Primary key constraint component\" ;\n  sh:labelTemplate \"The property {?predicate} is the primary key and URIs start with {?uriStart}\" ;\n  sh:message \"Violation of primary key constraint\" ;\n  sh:parameter dash:PrimaryKeyConstraintComponent-uriStart ;\n  sh:propertyValidator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validatePrimaryKeyProperty\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n  sh:propertyValidator [\n      rdf:type sh:SPARQLSelectValidator ;\n      sh:prefixes <http://datashapes.org/dash> ;\n      sh:select \"\"\"SELECT DISTINCT $this\nWHERE {\n        FILTER (\n\t\t\t# Must have a value for the primary key\n\t\t\tNOT EXISTS { ?this $PATH ?any }\n\t\t\t||\n\t\t\t# Must have no more than one value for the primary key\n\t\t\tEXISTS {\n\t\t\t\t?this $PATH ?value1 .\n\t\t\t\t?this $PATH ?value2 .\n\t\t\t\tFILTER (?value1 != ?value2) .\n\t\t\t}\n\t\t\t||\n\t\t\t# The value of the primary key must align with the derived URI\n\t\t\tEXISTS {\n\t\t\t\t{\n        \t\t\t?this $PATH ?value .\n\t\t\t\t\tFILTER NOT EXISTS { ?this $PATH ?value2 . FILTER (?value != ?value2) }\n\t\t\t\t}\n        \t\tBIND (CONCAT($uriStart, ENCODE_FOR_URI(str(?value))) AS ?uri) .\n        \t\tFILTER (str(?this) != ?uri) .\n    \t\t} \n\t\t)\n}\"\"\" ;\n    ] ;\n  sh:targetClass sh:PropertyShape ;\n.\ndash:PrimaryKeyConstraintComponent-uriStart\n  rdf:type sh:Parameter ;\n  sh:path dash:uriStart ;\n  sh:datatype xsd:string ;\n  sh:description \"The start of the URIs of well-formed resources.\" ;\n  sh:name \"URI start\" ;\n.\ndash:QueryTestCase\n  rdf:type rdfs:Class ;\n  rdf:type sh:Shape ;\n  rdfs:comment \"A test case running a given SPARQL SELECT query and comparing its results with those stored as JSON Result Set in the expected result property.\" ;\n  rdfs:label \"Query test case\" ;\n  rdfs:subClassOf dash:TestCase ;\n  rdfs:subClassOf sh:SPARQLSelectExecutable ;\n  sh:property [\n      sh:path dash:expectedResult ;\n      sh:datatype xsd:string ;\n      sh:description \"The expected result set, as a JSON string.\" ;\n      sh:maxCount 1 ;\n      sh:minCount 1 ;\n      sh:name \"expected result\" ;\n    ] ;\n  sh:property [\n      sh:path sh:select ;\n      sh:datatype xsd:string ;\n      sh:description \"The SPARQL SELECT query to execute.\" ;\n      sh:maxCount 1 ;\n      sh:minCount 1 ;\n      sh:name \"SPARQL query\" ;\n    ] ;\n.\ndash:RDFQueryJSLibrary\n  rdf:type sh:JSLibrary ;\n  rdfs:label \"rdfQuery JavaScript Library\" ;\n  sh:jsLibraryURL \"http://datashapes.org/js/rdfquery.js\"^^xsd:anyURI ;\n.\ndash:RootClassConstraintComponent\n  rdf:type sh:ConstraintComponent ;\n  rdfs:comment \"A constraint component defining the parameter dash:rootClass, which restricts the values to be either the root class itself or one of its subclasses. This is typically used in conjunction with properties that have rdfs:Class as their type.\" ;\n  rdfs:label \"Root class constraint component\" ;\n  sh:labelTemplate \"Root class {$rootClass}\" ;\n  sh:message \"Value must be subclass of {$rootClass}\" ;\n  sh:parameter dash:RootClassConstraintComponent-rootClass ;\n  sh:targetClass sh:PropertyShape ;\n  sh:validator dash:hasRootClass ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateRootClass\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\ndash:RootClassConstraintComponent-rootClass\n  rdf:type sh:Parameter ;\n  sh:path dash:rootClass ;\n  sh:class rdfs:Class ;\n  sh:description \"The root class.\" ;\n  sh:name \"root class\" ;\n  sh:nodeKind sh:IRI ;\n.\ndash:SPARQLUpdateSuggestionGenerator\n  rdf:type rdfs:Class ;\n  rdfs:comment \"\"\"A SuggestionGenerator based on a SPARQL UPDATE query (sh:update), producing an instance of dash:GraphUpdate. The INSERTs become dash:addedTriple and the DELETEs become dash:deletedTriple. The WHERE clause operates on the data graph with the pre-bound variables $subject, $predicate and $object, as well as the other pre-bound variables for the parameters of the constraint.\n\nIn many cases, there may be multiple possible suggestions to fix a problem. For example, with sh:maxLength there are many ways to slice a string. In those cases, the system will first iterate through the result variables from a SELECT query (sh:select) and apply these results as pre-bound variables into the UPDATE query.\"\"\" ;\n  rdfs:label \"SPARQL UPDATE suggestion generator\" ;\n  rdfs:subClassOf dash:SuggestionGenerator ;\n  rdfs:subClassOf sh:SPARQLSelectExecutable ;\n  rdfs:subClassOf sh:SPARQLUpdateExecutable ;\n.\ndash:StemConstraintComponent\n  rdf:type sh:ConstraintComponent ;\n  dash:staticConstraint \"true\"^^xsd:boolean ;\n  rdfs:comment \"A constraint component that can be used to verify that every value node is an IRI and the IRI starts with a given string value.\"@en ;\n  rdfs:label \"Stem constraint component\"@en ;\n  sh:message \"Value does not have stem {$stem}\" ;\n  sh:parameter dash:StemConstraintComponent-stem ;\n  sh:targetClass sh:Shape ;\n  sh:validator dash:hasStem ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateStem\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\ndash:StemConstraintComponent-stem\n  rdf:type sh:Parameter ;\n  sh:path dash:stem ;\n  sh:datatype xsd:string ;\n.\ndash:StringOrLangString\n  rdf:type rdf:List ;\n  rdf:first xsd:string ;\n  rdf:rest (\n      rdf:langString\n    ) ;\n  rdfs:comment \"An rdf:List that can be used in property constraints as value for sh:or to indicate that all values of a property must be either xsd:string or rdf:langString.\" ;\n  rdfs:label \"String or langString\" ;\n.\ndash:SubSetOfConstraintComponent\n  rdf:type sh:ConstraintComponent ;\n  dash:localConstraint \"true\"^^xsd:boolean ;\n  rdfs:label \"Sub set of constraint component\" ;\n  sh:message \"Must be one of the values of {$subSetOf}\" ;\n  sh:parameter dash:SubSetOfConstraintComponent-subSetOf ;\n  sh:propertyValidator [\n      rdf:type sh:SPARQLAskValidator ;\n      sh:ask \"\"\"ASK {\n    $this $subSetOf $value .\n}\"\"\" ;\n      sh:prefixes <http://datashapes.org/dash> ;\n    ] ;\n  sh:targetClass sh:PropertyShape ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateSubSetOf\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\ndash:SubSetOfConstraintComponent-subSetOf\n  rdf:type sh:Parameter ;\n  sh:path dash:subSetOf ;\n  sh:class rdf:Property ;\n  sh:description \"A property (of the focus node) that must (at least) have all values from the set of value nodes.\" ;\n.\ndash:SuccessResult\n  rdf:type rdfs:Class ;\n  rdfs:comment \"A result representing a successfully validated constraint.\" ;\n  rdfs:label \"Success result\" ;\n  rdfs:subClassOf sh:AbstractResult ;\n.\ndash:SuccessTestCaseResult\n  rdf:type rdfs:Class ;\n  rdfs:comment \"Represents a successful run of a test case.\" ;\n  rdfs:label \"Success test case result\" ;\n  rdfs:subClassOf dash:TestCaseResult ;\n.\ndash:Suggestion\n  rdf:type rdfs:Class ;\n  rdfs:comment \"Base class of suggestions that modify a graph to \\\"fix\\\" the source of a validation result.\" ;\n  rdfs:label \"Suggestion\" ;\n  rdfs:subClassOf rdfs:Resource ;\n.\ndash:SuggestionGenerator\n  rdf:type rdfs:Class ;\n  rdfs:comment \"Base class of objects that can generate suggestions (added or deleted triples) for a validation result of a given constraint component.\" ;\n  rdfs:label \"Suggestion generator\" ;\n  rdfs:subClassOf rdfs:Resource ;\n.\ndash:TestCase\n  rdf:type rdfs:Class ;\n  dash:abstract \"true\"^^xsd:boolean ;\n  rdfs:comment \"A test case to verify that a (SHACL-based) feature works as expected.\" ;\n  rdfs:label \"Test case\" ;\n  rdfs:subClassOf rdfs:Resource ;\n.\ndash:TestCaseResult\n  rdf:type rdfs:Class ;\n  rdf:type sh:Shape ;\n  rdfs:comment \"Base class for results produced by running test cases.\" ;\n  rdfs:label \"Test case result\" ;\n  rdfs:subClassOf sh:AbstractResult ;\n  sh:property [\n      sh:path dash:testCase ;\n      sh:class dash:TestCase ;\n      sh:description \"The dash:TestCase that was executed.\" ;\n      sh:maxCount 1 ;\n      sh:minCount 1 ;\n      sh:name \"test case\" ;\n    ] ;\n  sh:property [\n      sh:path dash:testGraph ;\n      sh:class rdfs:Resource ;\n      sh:description \"The graph containing the test case.\" ;\n      sh:maxCount 1 ;\n      sh:minCount 1 ;\n      sh:name \"test graph\" ;\n      sh:nodeKind sh:IRI ;\n    ] ;\n.\ndash:TestEnvironment\n  rdf:type rdfs:Class ;\n  rdf:type sh:Shape ;\n  dash:abstract \"true\"^^xsd:boolean ;\n  rdfs:comment \"Abstract base class for test environments, holding information on how to set up a test case.\" ;\n  rdfs:label \"Test environment\" ;\n  rdfs:subClassOf rdfs:Resource ;\n.\ndash:ValidationTestCase\n  rdf:type rdfs:Class ;\n  rdf:type sh:Shape ;\n  dash:abstract \"true\"^^xsd:boolean ;\n  rdfs:comment \"Abstract superclass for test cases concerning SHACL constraint validation. Future versions may add new kinds of validatin test cases, e.g. to validate a single resource only.\" ;\n  rdfs:label \"Validation test case\" ;\n  rdfs:subClassOf dash:TestCase ;\n  sh:property [\n      sh:path dash:expectedResult ;\n      sh:class sh:ValidationReport ;\n      sh:description \"The expected validation report.\" ;\n      sh:name \"expected result\" ;\n    ] ;\n.\ndash:abstract\n  rdf:type rdf:Property ;\n  rdfs:comment \"Indicates that a class is \\\"abstract\\\" and cannot be used in asserted rdf:type triples. Only non-abstract subclasses of abstract classes should be instantiated directly.\" ;\n  rdfs:domain rdfs:Class ;\n  rdfs:label \"abstract\" ;\n  rdfs:range xsd:boolean ;\n.\ndash:addedTriple\n  rdf:type rdf:Property ;\n  rdfs:comment \"May link a dash:GraphUpdate with one or more triples (represented as instances of rdf:Statement) that should be added to fix the source of the result.\" ;\n  rdfs:domain dash:GraphUpdate ;\n  rdfs:label \"added triple\" ;\n  rdfs:range rdf:Statement ;\n.\ndash:closedByTypes\n  rdf:type rdf:Property ;\n  rdfs:label \"closed by types\" ;\n.\ndash:composite\n  rdf:type rdf:Property ;\n  rdfs:comment \"Can be used to indicate that a property/path represented by a property constraint represents a composite relationship. In a composite relationship, the life cycle of a \\\"child\\\" object (value of the property/path) depends on the \\\"parent\\\" object (focus node). If the parent gets deleted, then the child objects should be deleted, too. Tools may use dash:composite (if set to true) to implement cascading delete operations.\" ;\n  rdfs:domain sh:PropertyShape ;\n  rdfs:label \"composite\" ;\n  rdfs:range xsd:boolean ;\n.\ndash:defaultValueType\n  rdf:type rdf:Property ;\n  rdfs:comment \"\"\"\n\t\tLinks a property with a default value type.\n\t\tThe default value type is assumed to be the <code>rdf:type</code> of values of the property\n\t\tthat declare no type on their own.\n\t\tAn example use of <code>sh:defaultValueType</code> is <code>sh:property</code>,\n\t\tthe values of which are assumed to be instances of <code>sh:PropertyShape</code>\n\t\teven if they are untyped (blank) nodes.\n\t\t\"\"\"^^rdf:HTML ;\n  rdfs:domain rdf:Property ;\n  rdfs:label \"default value type\" ;\n  rdfs:range rdfs:Class ;\n  owl:versionInfo \"Note this property may get removed in future versions. It is a left-over from a previous design in SHACL.\" ;\n.\ndash:deletedTriple\n  rdf:type rdf:Property ;\n  rdfs:comment \"May link a dash:GraphUpdate result with one or more triples (represented as instances of rdf:Statement) that should be deleted to fix the source of the result.\" ;\n  rdfs:domain dash:GraphUpdate ;\n  rdfs:label \"deleted triple\" ;\n  rdfs:range rdf:Statement ;\n.\ndash:hasClass\n  rdf:type sh:SPARQLAskValidator ;\n  rdfs:label \"has class\" ;\n  sh:ask \"\"\"\n\t\tASK {\n\t\t\t$value rdf:type/rdfs:subClassOf* $class .\n\t\t}\n\t\t\"\"\" ;\n  sh:message \"Value does not have class {$class}\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n.\ndash:hasMaxExclusive\n  rdf:type sh:SPARQLAskValidator ;\n  rdfs:comment \"Checks whether a given node (?value) has value less than (<) the provided ?maxExclusive. Returns false if this cannot be determined, e.g. because values do not have comparable types.\" ;\n  rdfs:label \"has max exclusive\" ;\n  sh:ask \"ASK { FILTER ($value < $maxExclusive) }\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n.\ndash:hasMaxInclusive\n  rdf:type sh:SPARQLAskValidator ;\n  rdfs:comment \"Checks whether a given node (?value) has value less than or equal to (<=) the provided ?maxInclusive. Returns false if this cannot be determined, e.g. because values do not have comparable types.\" ;\n  rdfs:label \"has max inclusive\" ;\n  sh:ask \"ASK { FILTER ($value <= $maxInclusive) }\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n.\ndash:hasMaxLength\n  rdf:type sh:SPARQLAskValidator ;\n  rdfs:comment \"Checks whether a given string (?value) has a length within a given maximum string length.\" ;\n  rdfs:label \"has max length\" ;\n  sh:ask \"\"\"\n\t\tASK {\n\t\t\tFILTER (STRLEN(str($value)) <= $maxLength) .\n\t\t}\n\t\t\"\"\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n.\ndash:hasMinExclusive\n  rdf:type sh:SPARQLAskValidator ;\n  rdfs:comment \"Checks whether a given node (?value) has value greater than (>) the provided ?minExclusive. Returns false if this cannot be determined, e.g. because values do not have comparable types.\" ;\n  rdfs:label \"has min exclusive\" ;\n  sh:ask \"ASK { FILTER ($value > $minExclusive) }\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n.\ndash:hasMinInclusive\n  rdf:type sh:SPARQLAskValidator ;\n  rdfs:comment \"Checks whether a given node (?value) has value greater than or equal to (>=) the provided ?minInclusive. Returns false if this cannot be determined, e.g. because values do not have comparable types.\" ;\n  rdfs:label \"has min inclusive\" ;\n  sh:ask \"ASK { FILTER ($value >= $minInclusive) }\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n.\ndash:hasMinLength\n  rdf:type sh:SPARQLAskValidator ;\n  rdfs:comment \"Checks whether a given string (?value) has a length within a given minimum string length.\" ;\n  rdfs:label \"has min length\" ;\n  sh:ask \"\"\"\n\t\tASK {\n\t\t\tFILTER (STRLEN(str($value)) >= $minLength) .\n\t\t}\n\t\t\"\"\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n.\ndash:hasNodeKind\n  rdf:type sh:SPARQLAskValidator ;\n  rdfs:comment \"Checks whether a given node (?value) has a given sh:NodeKind (?nodeKind). For example, sh:hasNodeKind(42, sh:Literal) = true.\" ;\n  rdfs:label \"has node kind\" ;\n  sh:ask \"\"\"\n\t\tASK {\n\t\t\tFILTER ((isIRI($value) && $nodeKind IN ( sh:IRI, sh:BlankNodeOrIRI, sh:IRIOrLiteral ) ) ||\n\t\t\t\t(isLiteral($value) && $nodeKind IN ( sh:Literal, sh:BlankNodeOrLiteral, sh:IRIOrLiteral ) ) ||\n\t\t\t\t(isBlank($value)   && $nodeKind IN ( sh:BlankNode, sh:BlankNodeOrIRI, sh:BlankNodeOrLiteral ) )) .\n\t\t}\n\t\t\"\"\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n.\ndash:hasPattern\n  rdf:type sh:SPARQLAskValidator ;\n  rdfs:comment \"Checks whether the string representation of a given node (?value) matches a given regular expression (?pattern). Returns false if the value is a blank node.\" ;\n  rdfs:label \"has pattern\" ;\n  sh:ask \"ASK { FILTER (!isBlank($value) && IF(bound($flags), regex(str($value), $pattern, $flags), regex(str($value), $pattern))) }\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n.\ndash:hasRootClass\n  rdf:type sh:SPARQLAskValidator ;\n  rdfs:label \"has root class\" ;\n  sh:ask \"\"\"ASK {\n    $value rdfs:subClassOf* $rootClass .\n}\"\"\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n.\ndash:hasStem\n  rdf:type sh:SPARQLAskValidator ;\n  rdfs:comment \"Checks whether a given node is an IRI starting with a given stem.\" ;\n  rdfs:label \"has stem\" ;\n  sh:ask \"ASK { FILTER (isIRI($value) && STRSTARTS(str($value), $stem)) }\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n.\ndash:isDeactivated\n  rdf:type sh:SPARQLFunction ;\n  rdfs:comment \"Checks whether a given shape or constraint has been marked as \\\"deactivated\\\" using sh:deactivated.\" ;\n  sh:ask \"\"\"ASK {\n    ?constraintOrShape sh:deactivated true .\n}\"\"\" ;\n  sh:parameter [\n      sh:path dash:constraintOrShape ;\n      sh:description \"The sh:Constraint or sh:Shape to test.\" ;\n      sh:name \"constraint or shape\" ;\n    ] ;\n  sh:prefixes <http://datashapes.org/dash> ;\n  sh:returnType xsd:boolean ;\n.\ndash:isIn\n  rdf:type sh:SPARQLAskValidator ;\n  sh:ask \"\"\"\n\t\tASK {\n\t\t\tGRAPH $shapesGraph {\n\t\t\t\t$in (rdf:rest*)/rdf:first $value .\n\t\t\t}\n\t\t}\n\t\t\"\"\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n.\ndash:isLanguageIn\n  rdf:type sh:SPARQLAskValidator ;\n  rdfs:label \"is language in\" ;\n  sh:ask \"\"\"\n\t\tASK {\n\t\t\tBIND (lang($value) AS ?valueLang) .\n\t\t\tFILTER EXISTS {\n\t\t\t\tGRAPH $shapesGraph {\n\t\t\t\t\t$languageIn (rdf:rest*)/rdf:first ?lang .\n\t\t\t\t    FILTER (langMatches(?valueLang, ?lang))\n\t\t\t\t} }\n\t\t}\n\t\t\"\"\" ;\n  sh:prefixes <http://datashapes.org/dash> ;\n.\ndash:isNodeKindBlankNode\n  rdf:type sh:SPARQLFunction ;\n  dash:cachable \"true\"^^xsd:boolean ;\n  rdfs:comment \"Checks if a given sh:NodeKind is one that includes BlankNodes.\" ;\n  rdfs:label \"is NodeKind BlankNode\" ;\n  sh:ask \"\"\"ASK {\n\tFILTER ($nodeKind IN ( sh:BlankNode, sh:BlankNodeOrIRI, sh:BlankNodeOrLiteral ))\n}\"\"\" ;\n  sh:parameter [\n      sh:path dash:nodeKind ;\n      sh:class sh:NodeKind ;\n      sh:description \"The sh:NodeKind to check.\" ;\n      sh:name \"node kind\" ;\n      sh:nodeKind sh:IRI ;\n    ] ;\n  sh:prefixes <http://datashapes.org/dash> ;\n  sh:returnType xsd:boolean ;\n.\ndash:isNodeKindIRI\n  rdf:type sh:SPARQLFunction ;\n  dash:cachable \"true\"^^xsd:boolean ;\n  rdfs:comment \"Checks if a given sh:NodeKind is one that includes IRIs.\" ;\n  rdfs:label \"is NodeKind IRI\" ;\n  sh:ask \"\"\"ASK {\n\tFILTER ($nodeKind IN ( sh:IRI, sh:BlankNodeOrIRI, sh:IRIOrLiteral ))\n}\"\"\" ;\n  sh:parameter [\n      sh:path dash:nodeKind ;\n      sh:class sh:NodeKind ;\n      sh:description \"The sh:NodeKind to check.\" ;\n      sh:name \"node kind\" ;\n      sh:nodeKind sh:IRI ;\n    ] ;\n  sh:prefixes <http://datashapes.org/dash> ;\n  sh:returnType xsd:boolean ;\n.\ndash:isNodeKindLiteral\n  rdf:type sh:SPARQLFunction ;\n  dash:cachable \"true\"^^xsd:boolean ;\n  rdfs:comment \"Checks if a given sh:NodeKind is one that includes Literals.\" ;\n  rdfs:label \"is NodeKind Literal\" ;\n  sh:ask \"\"\"ASK {\n\tFILTER ($nodeKind IN ( sh:Literal, sh:BlankNodeOrLiteral, sh:IRIOrLiteral ))\n}\"\"\" ;\n  sh:parameter [\n      sh:path dash:nodeKind ;\n      sh:class sh:NodeKind ;\n      sh:description \"The sh:NodeKind to check.\" ;\n      sh:name \"node kind\" ;\n      sh:nodeKind sh:IRI ;\n    ] ;\n  sh:prefixes <http://datashapes.org/dash> ;\n  sh:returnType xsd:boolean ;\n.\ndash:localConstraint\n  rdf:type rdf:Property ;\n  rdfs:comment \"\"\"Can be set to true for those constraint components where the validation does not require to visit any other triples than the shape definitions and the direct property values of the focus node mentioned in the property constraints. Examples of this include sh:minCount and sh:hasValue.\n\nConstraint components that are marked as such can be optimized by engines, e.g. they can be evaluated client-side at form submission time, without having to make a round-trip to a server, assuming the client has downloaded a complete snapshot of the resource.\n\nAny component marked with dash:staticConstraint is also a dash:localConstraint.\"\"\" ;\n  rdfs:domain sh:ConstraintComponent ;\n  rdfs:label \"local constraint\" ;\n  rdfs:range xsd:boolean ;\n.\ndash:propertySuggestionGenerator\n  rdf:type rdf:Property ;\n  rdfs:comment \"Links the constraint component with instances of dash:SuggestionGenerator that may be used to produce suggestions for a given validation result that was produced by a property constraint.\" ;\n  rdfs:domain sh:ConstraintComponent ;\n  rdfs:label \"property suggestion generator\" ;\n  rdfs:range dash:SuggestionGenerator ;\n.\ndash:rootClass\n  rdf:type rdf:Property ;\n  rdfs:label \"root class\" ;\n.\ndash:staticConstraint\n  rdf:type rdf:Property ;\n  rdfs:comment \"\"\"Can be set to true for those constraint components where the validation does not require to visit any other triples than the parameters. Examples of this include sh:datatype or sh:nodeKind, where no further triples need to be queried to determine the result.\n\nConstraint components that are marked as such can be optimized by engines, e.g. they can be evaluated client-side at form submission time, without having to make a round-trip to a server.\"\"\" ;\n  rdfs:domain sh:ConstraintComponent ;\n  rdfs:label \"static constraint\" ;\n  rdfs:range xsd:boolean ;\n.\ndash:stem\n  rdf:type rdf:Property ;\n  rdfs:comment \"Specifies a string value that the IRI of the value nodes must start with.\"@en ;\n  rdfs:label \"stem\"@en ;\n  rdfs:range xsd:string ;\n.\ndash:subSetOf\n  rdf:type rdf:Property ;\n  rdfs:label \"sub set of\" ;\n.\ndash:suggestion\n  rdf:type rdf:Property ;\n  rdfs:comment \"Can be used to link a validation result with one or more suggestions on how to fix the underlying issue.\" ;\n  rdfs:domain sh:ValidationResult ;\n  rdfs:label \"suggestion\" ;\n  rdfs:range dash:Suggestion ;\n.\ndash:suggestionGenerator\n  rdf:type rdf:Property ;\n  rdfs:comment \"Links a sh:SPARQLConstraint with instances of dash:SuggestionGenerator that may be used to produce suggestions for a given validation result that was produced by the constraint.\" ;\n  rdfs:domain sh:SPARQLConstraint ;\n  rdfs:label \"suggestion generator\" ;\n  rdfs:range dash:SuggestionGenerator ;\n.\ndash:testEnvironment\n  rdf:type rdf:Property ;\n  rdfs:comment \"Can be used by TestCases to point at a resource with information on how to set up the execution environment prior to execution.\" ;\n  rdfs:domain dash:TestCase ;\n  rdfs:label \"test environment\" ;\n  rdfs:range dash:TestEnvironment ;\n.\ndash:testModifiesEnvironment\n  rdf:type rdf:Property ;\n  rdfs:comment \"Indicates whether this test modifies the specified dash:testEnvironment. If set to true then a test runner can make sure to wipe out the previous environment, while leaving it false (or undefined) means that the test runner can reuse the environment from the previous test case. As setting up and tearing down tests is sometimes slow, this flag can significantly accelerate test execution.\" ;\n  rdfs:domain dash:TestCase ;\n  rdfs:label \"test modifies environment\" ;\n  rdfs:range xsd:boolean ;\n.\ndash:validateShapes\n  rdf:type rdf:Property ;\n  rdfs:comment \"True to also validate the shapes itself (i.e. parameter declarations).\" ;\n  rdfs:domain dash:GraphValidationTestCase ;\n  rdfs:label \"validate shapes\" ;\n  rdfs:range xsd:boolean ;\n.\ndash:valueCount\n  rdf:type sh:SPARQLFunction ;\n  rdfs:comment \"Computes the number of objects for a given subject/predicate combination.\" ;\n  rdfs:label \"value count\" ;\n  sh:parameter [\n      sh:path dash:predicate ;\n      sh:class rdfs:Resource ;\n      sh:description \"The predicate to get the number of objects of.\" ;\n      sh:name \"predicate\" ;\n      sh:order 1 ;\n    ] ;\n  sh:parameter [\n      sh:path dash:subject ;\n      sh:class rdfs:Resource ;\n      sh:description \"The subject to get the number of objects of.\" ;\n      sh:name \"subject\" ;\n      sh:order 0 ;\n    ] ;\n  sh:prefixes <http://datashapes.org/dash> ;\n  sh:returnType xsd:integer ;\n  sh:select \"\"\"\n\t\tSELECT (COUNT(?object) AS ?result)\n\t\tWHERE {\n    \t\t$subject $predicate ?object .\n\t\t}\n\"\"\" ;\n.\nowl:Class\n  rdf:type rdfs:Class ;\n  rdfs:subClassOf rdfs:Class ;\n.\nsh:AndConstraintComponent\n  sh:targetClass sh:Shape ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateAnd\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:ClassConstraintComponent\n  sh:targetClass sh:Shape ;\n  sh:validator dash:hasClass ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateClass\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:ClosedConstraintComponent\n  dash:localConstraint \"true\"^^xsd:boolean ;\n  sh:nodeValidator [\n      rdf:type sh:SPARQLSelectValidator ;\n      sh:message \"Predicate {?path} is not allowed (closed shape)\" ;\n      sh:prefixes <http://datashapes.org/dash> ;\n      sh:select \"\"\"\n\t\tSELECT $this (?predicate AS ?path) ?value\n\t\tWHERE {\n\t\t\t{\n\t\t\t\tFILTER ($closed) .\n\t\t\t}\n\t\t\t$this ?predicate ?value .\n\t\t\tFILTER (NOT EXISTS {\n\t\t\t\tGRAPH $shapesGraph {\n\t\t\t\t\t$currentShape sh:property/sh:path ?predicate .\n\t\t\t\t}\n\t\t\t} && (!bound($ignoredProperties) || NOT EXISTS {\n\t\t\t\tGRAPH $shapesGraph {\n\t\t\t\t\t$ignoredProperties rdf:rest*/rdf:first ?predicate .\n\t\t\t\t}\n\t\t\t}))\n\t\t}\n\"\"\" ;\n    ] ;\n  sh:targetClass sh:Shape ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateClosed\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n      sh:message \"Predicate is not allowed (closed shape)\" ;\n    ] ;\n.\nsh:DatatypeConstraintComponent\n  dash:staticConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Value does not have datatype {$datatype}\" ;\n  sh:targetClass sh:PropertyShape ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateDatatype\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:DerivedValuesConstraintComponent\n  sh:targetClass sh:PropertyShape ;\n.\nsh:DisjointConstraintComponent\n  dash:localConstraint \"true\"^^xsd:boolean ;\n  sh:targetClass sh:Shape ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateDisjoint\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n      sh:message \"Value node must not also be one of the values of {$disjoint}\" ;\n    ] ;\n  sh:validator [\n      rdf:type sh:SPARQLAskValidator ;\n      sh:ask \"\"\"\n\t\tASK {\n\t\t\tFILTER NOT EXISTS {\n\t\t\t\t$this $disjoint $value .\n\t\t\t}\n\t\t}\n\t\t\"\"\" ;\n      sh:message \"Property must not share any values with {$disjoint}\" ;\n      sh:prefixes <http://datashapes.org/dash> ;\n    ] ;\n.\nsh:EqualsConstraintComponent\n  dash:localConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Must have same values as {$equals}\" ;\n  sh:nodeValidator [\n      rdf:type sh:SPARQLSelectValidator ;\n      sh:prefixes <http://datashapes.org/dash> ;\n      sh:select \"\"\"\n\t\tSELECT DISTINCT $this ?value\n\t\tWHERE {\n\t\t\t{\n\t\t\t\tFILTER NOT EXISTS { $this $equals $this }\n\t\t\t\tBIND ($this AS ?value) .\n\t\t\t}\n\t\t\tUNION\n\t\t\t{\n\t\t\t\t$this $equals ?value .\n\t\t\t\tFILTER (?value != $this) .\n\t\t\t}\n\t\t}\n\t\t\"\"\" ;\n    ] ;\n  sh:propertyValidator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateEqualsProperty\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n  sh:propertyValidator [\n      rdf:type sh:SPARQLSelectValidator ;\n      sh:prefixes <http://datashapes.org/dash> ;\n      sh:select \"\"\"\n\t\tSELECT DISTINCT $this ?value\n\t\tWHERE {\n\t\t\t{\n\t\t\t\t$this $PATH ?value .\n\t\t\t\tMINUS {\n\t\t\t\t\t$this $equals ?value .\n\t\t\t\t}\n\t\t\t}\n\t\t\tUNION\n\t\t\t{\n\t\t\t\t$this $equals ?value .\n\t\t\t\tMINUS {\n\t\t\t\t\t$this $PATH ?value .\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\"\"\" ;\n    ] ;\n  sh:targetClass sh:Shape ;\n.\nsh:Function\n  sh:property [\n      sh:path dash:cachable ;\n      sh:datatype xsd:boolean ;\n      sh:description \"True to indicate that this function will always return the same values for the same combination of arguments, regardless of the query graphs. Engines can use this information to cache and reuse previous function calls.\" ;\n      sh:maxCount 1 ;\n      sh:name \"cachable\" ;\n    ] ;\n.\nsh:HasValueConstraintComponent\n  dash:localConstraint \"true\"^^xsd:boolean ;\n  sh:nodeValidator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateHasValueNode\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n      sh:message \"Value must be {$hasValue}\" ;\n    ] ;\n  sh:nodeValidator [\n      rdf:type sh:SPARQLAskValidator ;\n      sh:ask \"\"\"ASK {\n    FILTER ($value = $hasValue)\n}\"\"\" ;\n      sh:message \"Value must be {$hasValue}\" ;\n      sh:prefixes <http://datashapes.org/dash> ;\n    ] ;\n  sh:propertyValidator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateHasValueProperty\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n      sh:message \"Missing expected value {$hasValue}\" ;\n    ] ;\n  sh:propertyValidator [\n      rdf:type sh:SPARQLSelectValidator ;\n      sh:message \"Missing expected value {$hasValue}\" ;\n      sh:prefixes <http://datashapes.org/dash> ;\n      sh:select \"\"\"\n\t\tSELECT $this\n\t\tWHERE {\n\t\t\tFILTER NOT EXISTS { $this $PATH $hasValue }\n\t\t}\n\t\t\"\"\" ;\n    ] ;\n  sh:targetClass sh:Shape ;\n.\nsh:InConstraintComponent\n  dash:localConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Value is not in {$in}\" ;\n  sh:targetClass sh:Shape ;\n  sh:validator dash:isIn ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateIn\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:LanguageInConstraintComponent\n  dash:localConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Language does not match any of {$languageIn}\" ;\n  sh:targetClass sh:Shape ;\n  sh:validator dash:isLanguageIn ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateLanguageIn\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:LessThanConstraintComponent\n  dash:localConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Value is not < value of {$lessThan}\" ;\n  sh:propertyValidator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateLessThanProperty\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n  sh:propertyValidator [\n      rdf:type sh:SPARQLSelectValidator ;\n      sh:prefixes <http://datashapes.org/dash> ;\n      sh:select \"\"\"\n\t\tSELECT $this ?value\n\t\tWHERE {\n\t\t\t$this $PATH ?value .\n\t\t\t$this $lessThan ?otherValue .\n\t\t\tBIND (?value < ?otherValue AS ?result) .\n\t\t\tFILTER (!bound(?result) || !(?result)) .\n\t\t}\n\t\t\"\"\" ;\n    ] ;\n  sh:targetClass sh:PropertyShape ;\n.\nsh:LessThanOrEqualsConstraintComponent\n  dash:localConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Value is not <= value of {$lessThanOrEquals}\" ;\n  sh:propertyValidator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateLessThanOrEqualsProperty\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n  sh:propertyValidator [\n      rdf:type sh:SPARQLSelectValidator ;\n      sh:prefixes <http://datashapes.org/dash> ;\n      sh:select \"\"\"\n\t\tSELECT DISTINCT $this ?value\n\t\tWHERE {\n\t\t\t$this $PATH ?value .\n\t\t\t$this $lessThanOrEquals ?otherValue .\n\t\t\tBIND (?value <= ?otherValue AS ?result) .\n\t\t\tFILTER (!bound(?result) || !(?result)) .\n\t\t}\n\"\"\" ;\n    ] ;\n  sh:targetClass sh:PropertyShape ;\n.\nsh:MaxCountConstraintComponent\n  dash:localConstraint \"true\"^^xsd:boolean ;\n  sh:message \"More than {$maxCount} values\" ;\n  sh:propertyValidator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateMaxCountProperty\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n  sh:propertyValidator [\n      rdf:type sh:SPARQLSelectValidator ;\n      sh:prefixes <http://datashapes.org/dash> ;\n      sh:select \"\"\"\n\t\tSELECT $this\n\t\tWHERE {\n\t\t\t$this $PATH ?value .\n\t\t}\n\t\tGROUP BY $this\n\t\tHAVING (COUNT(DISTINCT ?value) > $maxCount)\n\t\t\"\"\" ;\n    ] ;\n  sh:targetClass sh:PropertyShape ;\n.\nsh:MaxExclusiveConstraintComponent\n  dash:staticConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Value is not < {$maxExclusive}\" ;\n  sh:targetClass sh:Shape ;\n  sh:validator dash:hasMaxExclusive ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateMaxExclusive\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:MaxInclusiveConstraintComponent\n  dash:staticConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Value is not <= {$maxInclusive}\" ;\n  sh:targetClass sh:Shape ;\n  sh:validator dash:hasMaxInclusive ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateMaxInclusive\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:MaxLengthConstraintComponent\n  dash:staticConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Value has more than {$maxLength} characters\" ;\n  sh:targetClass sh:Shape ;\n  sh:validator dash:hasMaxLength ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateMaxLength\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:MinCountConstraintComponent\n  dash:localConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Less than {$minCount} values\" ;\n  sh:propertyValidator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateMinCountProperty\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n  sh:propertyValidator [\n      rdf:type sh:SPARQLSelectValidator ;\n      sh:prefixes <http://datashapes.org/dash> ;\n      sh:select \"\"\"\n\t\tSELECT $this\n\t\tWHERE {\n\t\t\tOPTIONAL {\n\t\t\t\t$this $PATH ?value .\n\t\t\t}\n\t\t} \n\t\tGROUP BY $this\n\t\tHAVING (COUNT(DISTINCT ?value) < $minCount)\n\t\t\"\"\" ;\n    ] ;\n  sh:targetClass sh:PropertyShape ;\n.\nsh:MinExclusiveConstraintComponent\n  dash:staticConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Value is not > {$minExclusive}\" ;\n  sh:targetClass sh:Shape ;\n  sh:validator dash:hasMinExclusive ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateMinExclusive\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:MinInclusiveConstraintComponent\n  dash:staticConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Value is not >= {$minInclusive}\" ;\n  sh:targetClass sh:Shape ;\n  sh:validator dash:hasMinInclusive ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateMinInclusive\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:MinLengthConstraintComponent\n  dash:staticConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Value has less than {$minLength} characters\" ;\n  sh:targetClass sh:Shape ;\n  sh:validator dash:hasMinLength ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateMinLength\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:NodeConstraintComponent\n  sh:message \"Value does not have shape {$node}\" ;\n  sh:targetClass sh:Shape ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateNode\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:NodeKindConstraintComponent\n  dash:staticConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Value does not have node kind {$nodeKind}\" ;\n  sh:targetClass sh:Shape ;\n  sh:validator dash:hasNodeKind ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateNodeKind\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:NotConstraintComponent\n  sh:message \"Value does have shape {$not}\" ;\n  sh:targetClass sh:Shape ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateNot\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:OrConstraintComponent\n  sh:targetClass sh:Shape ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateOr\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:PatternConstraintComponent\n  dash:staticConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Value does not match pattern \\\"{$pattern}\\\"\" ;\n  sh:targetClass sh:Shape ;\n  sh:validator dash:hasPattern ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validatePattern\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:QualifiedMaxCountConstraintComponent\n  sh:message \"More than {$qualifiedMaxCount} values have shape {$qualifiedValueShape}\" ;\n  sh:propertyValidator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateQualifiedMaxCountProperty\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n  sh:targetClass sh:PropertyShape ;\n.\nsh:QualifiedMinCountConstraintComponent\n  sh:message \"Less than {$qualifiedMinCount} values have shape {$qualifiedValueShape}\" ;\n  sh:propertyValidator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateQualifiedMinCountProperty\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n  sh:targetClass sh:PropertyShape ;\n.\nsh:UniqueLangConstraintComponent\n  dash:localConstraint \"true\"^^xsd:boolean ;\n  sh:message \"Language \\\"{?lang}\\\" used more than once\" ;\n  sh:propertyValidator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateUniqueLangProperty\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n  sh:propertyValidator [\n      rdf:type sh:SPARQLSelectValidator ;\n      sh:prefixes <http://datashapes.org/dash> ;\n      sh:select \"\"\"\n\t\tSELECT DISTINCT $this ?lang\n\t\tWHERE {\n\t\t\t{\n\t\t\t\tFILTER ($uniqueLang) .\n\t\t\t}\n\t\t\t$this $PATH ?value .\n\t\t\tBIND (lang(?value) AS ?lang) .\n\t\t\tFILTER (bound(?lang) && ?lang != \\\"\\\") . \n\t\t\tFILTER EXISTS {\n\t\t\t\t$this $PATH ?otherValue .\n\t\t\t\tFILTER (?otherValue != ?value && ?lang = lang(?otherValue)) .\n\t\t\t}\n\t\t}\n\t\t\"\"\" ;\n    ] ;\n  sh:targetClass sh:PropertyShape ;\n.\nsh:XoneConstraintComponent\n  sh:targetClass sh:Shape ;\n  sh:validator [\n      rdf:type sh:JSValidator ;\n      sh:jsFunctionName \"validateXone\" ;\n      sh:jsLibrary dash:DASHJSLibrary ;\n    ] ;\n.\nsh:derivedValues\n  dash:defaultValueType sh:SPARQLValuesDeriver ;\n.\nsh:node\n  dash:defaultValueType sh:NodeShape ;\n.\nsh:not\n  dash:defaultValueType sh:Shape ;\n.\nsh:order\n  rdfs:range xsd:decimal ;\n.\nsh:parameter\n  dash:defaultValueType sh:Parameter ;\n.\nsh:property\n  dash:defaultValueType sh:PropertyShape ;\n.\nsh:qualifiedValueShape\n  dash:defaultValueType sh:Shape ;\n.\nsh:sparql\n  dash:defaultValueType sh:SPARQLConstraint ;\n.\n"};

},{}],95:[function(require,module,exports){

},{}],96:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return b64.length * 3 / 4 - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, j, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr(len * 3 / 4 - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0, j = 0; i < l; i += 4, j += 3) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}

},{}],97:[function(require,module,exports){
arguments[4][95][0].apply(exports,arguments)
},{"dup":95}],98:[function(require,module,exports){
(function (global){
'use strict';

var buffer = require('buffer');
var Buffer = buffer.Buffer;
var SlowBuffer = buffer.SlowBuffer;
var MAX_LEN = buffer.kMaxLength || 2147483647;
exports.alloc = function alloc(size, fill, encoding) {
  if (typeof Buffer.alloc === 'function') {
    return Buffer.alloc(size, fill, encoding);
  }
  if (typeof encoding === 'number') {
    throw new TypeError('encoding must not be number');
  }
  if (typeof size !== 'number') {
    throw new TypeError('size must be a number');
  }
  if (size > MAX_LEN) {
    throw new RangeError('size is too large');
  }
  var enc = encoding;
  var _fill = fill;
  if (_fill === undefined) {
    enc = undefined;
    _fill = 0;
  }
  var buf = new Buffer(size);
  if (typeof _fill === 'string') {
    var fillBuf = new Buffer(_fill, enc);
    var flen = fillBuf.length;
    var i = -1;
    while (++i < size) {
      buf[i] = fillBuf[i % flen];
    }
  } else {
    buf.fill(_fill);
  }
  return buf;
}
exports.allocUnsafe = function allocUnsafe(size) {
  if (typeof Buffer.allocUnsafe === 'function') {
    return Buffer.allocUnsafe(size);
  }
  if (typeof size !== 'number') {
    throw new TypeError('size must be a number');
  }
  if (size > MAX_LEN) {
    throw new RangeError('size is too large');
  }
  return new Buffer(size);
}
exports.from = function from(value, encodingOrOffset, length) {
  if (typeof Buffer.from === 'function' && (!global.Uint8Array || Uint8Array.from !== Buffer.from)) {
    return Buffer.from(value, encodingOrOffset, length);
  }
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number');
  }
  if (typeof value === 'string') {
    return new Buffer(value, encodingOrOffset);
  }
  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    var offset = encodingOrOffset;
    if (arguments.length === 1) {
      return new Buffer(value);
    }
    if (typeof offset === 'undefined') {
      offset = 0;
    }
    var len = length;
    if (typeof len === 'undefined') {
      len = value.byteLength - offset;
    }
    if (offset >= value.byteLength) {
      throw new RangeError('\'offset\' is out of bounds');
    }
    if (len > value.byteLength - offset) {
      throw new RangeError('\'length\' is out of bounds');
    }
    return new Buffer(value.slice(offset, offset + len));
  }
  if (Buffer.isBuffer(value)) {
    var out = new Buffer(value.length);
    value.copy(out, 0, 0, value.length);
    return out;
  }
  if (value) {
    if (Array.isArray(value) || (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) || 'length' in value) {
      return new Buffer(value);
    }
    if (value.type === 'Buffer' && Array.isArray(value.data)) {
      return new Buffer(value.data);
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');
}
exports.allocUnsafeSlow = function allocUnsafeSlow(size) {
  if (typeof Buffer.allocUnsafeSlow === 'function') {
    return Buffer.allocUnsafeSlow(size);
  }
  if (typeof size !== 'number') {
    throw new TypeError('size must be a number');
  }
  if (size >= MAX_LEN) {
    throw new RangeError('size is too large');
  }
  return new SlowBuffer(size);
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"buffer":99}],99:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('Invalid typed array length')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (value instanceof ArrayBuffer) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  return fromObject(value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj) {
    if (ArrayBuffer.isView(obj) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(0)
      }
      return fromArrayLike(obj)
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || string instanceof ArrayBuffer) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : new Buffer(val, encoding)
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

},{"base64-js":96,"ieee754":104}],100:[function(require,module,exports){
module.exports = {
  "100": "Continue",
  "101": "Switching Protocols",
  "102": "Processing",
  "200": "OK",
  "201": "Created",
  "202": "Accepted",
  "203": "Non-Authoritative Information",
  "204": "No Content",
  "205": "Reset Content",
  "206": "Partial Content",
  "207": "Multi-Status",
  "208": "Already Reported",
  "226": "IM Used",
  "300": "Multiple Choices",
  "301": "Moved Permanently",
  "302": "Found",
  "303": "See Other",
  "304": "Not Modified",
  "305": "Use Proxy",
  "307": "Temporary Redirect",
  "308": "Permanent Redirect",
  "400": "Bad Request",
  "401": "Unauthorized",
  "402": "Payment Required",
  "403": "Forbidden",
  "404": "Not Found",
  "405": "Method Not Allowed",
  "406": "Not Acceptable",
  "407": "Proxy Authentication Required",
  "408": "Request Timeout",
  "409": "Conflict",
  "410": "Gone",
  "411": "Length Required",
  "412": "Precondition Failed",
  "413": "Payload Too Large",
  "414": "URI Too Long",
  "415": "Unsupported Media Type",
  "416": "Range Not Satisfiable",
  "417": "Expectation Failed",
  "418": "I'm a teapot",
  "421": "Misdirected Request",
  "422": "Unprocessable Entity",
  "423": "Locked",
  "424": "Failed Dependency",
  "425": "Unordered Collection",
  "426": "Upgrade Required",
  "428": "Precondition Required",
  "429": "Too Many Requests",
  "431": "Request Header Fields Too Large",
  "451": "Unavailable For Legal Reasons",
  "500": "Internal Server Error",
  "501": "Not Implemented",
  "502": "Bad Gateway",
  "503": "Service Unavailable",
  "504": "Gateway Timeout",
  "505": "HTTP Version Not Supported",
  "506": "Variant Also Negotiates",
  "507": "Insufficient Storage",
  "508": "Loop Detected",
  "509": "Bandwidth Limit Exceeded",
  "510": "Not Extended",
  "511": "Network Authentication Required"
}

},{}],101:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":106}],102:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],103:[function(require,module,exports){
var http = require('http')
var url = require('url')

var https = module.exports

for (var key in http) {
  if (http.hasOwnProperty(key)) https[key] = http[key]
}

https.request = function (params, cb) {
  params = validateParams(params)
  return http.request.call(this, params, cb)
}

https.get = function (params, cb) {
  params = validateParams(params)
  return http.get.call(this, params, cb)
}

function validateParams (params) {
  if (typeof params === 'string') {
    params = url.parse(params)
  }
  if (!params.protocol) {
    params.protocol = 'https:'
  }
  if (params.protocol !== 'https:') {
    throw new Error('Protocol "' + params.protocol + '" not supported. Expected "https:"')
  }
  return params
}

},{"http":127,"url":133}],104:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],105:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],106:[function(require,module,exports){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}

},{}],107:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],108:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))
},{"_process":110}],109:[function(require,module,exports){
(function (process){
'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = nextTick;
} else {
  module.exports = process.nextTick;
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}

}).call(this,require('_process'))
},{"_process":110}],110:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],111:[function(require,module,exports){
(function (global){
/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		typeof define == 'function' &&
		typeof define.amd == 'object' &&
		define.amd
	) {
		define('punycode', function() {
			return punycode;
		});
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],112:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],113:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],114:[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":112,"./encode":113}],115:[function(require,module,exports){
module.exports = require("./lib/_stream_duplex.js")

},{"./lib/_stream_duplex.js":116}],116:[function(require,module,exports){
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}
},{"./_stream_readable":118,"./_stream_writable":120,"core-util-is":101,"inherits":105,"process-nextick-args":109}],117:[function(require,module,exports){
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":119,"core-util-is":101,"inherits":105}],118:[function(require,module,exports){
(function (process){
'use strict';

module.exports = Readable;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream;
(function () {
  try {
    Stream = require('st' + 'ream');
  } catch (_) {} finally {
    if (!Stream) Stream = require('events').EventEmitter;
  }
})();
/*</replacement>*/

var Buffer = require('buffer').Buffer;
/*<replacement>*/
var bufferShim = require('buffer-shims');
/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = require('./internal/streams/BufferList');
var StringDecoder;

util.inherits(Readable, Stream);

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') {
    return emitter.prependListener(event, fn);
  } else {
    // This is a hack to make sure that our error handler is attached before any
    // userland ones.  NEVER DO THIS. This is here only because this code needs
    // to continue to work with older versions of Node.js that do not include
    // the prependListener() method. The goal is to eventually remove this hack.
    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
  }
}

function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options && typeof options.read === 'function') this._read = options.read;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;

  if (!state.objectMode && typeof chunk === 'string') {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = bufferShim.from(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var _e = new Error('stream.unshift() after end event');
      stream.emit('error', _e);
    } else {
      var skipAdd;
      if (state.decoder && !addToFront && !encoding) {
        chunk = state.decoder.write(chunk);
        skipAdd = !state.objectMode && chunk.length === 0;
      }

      if (!addToFront) state.reading = false;

      // Don't add to the buffer if we've decoded to an empty string chunk and
      // we're not in object mode
      if (!skipAdd) {
        // if we want the data now, just emit it.
        if (state.flowing && state.length === 0 && !state.sync) {
          stream.emit('data', chunk);
          stream.read(0);
        } else {
          // update the buffer info.
          state.length += state.objectMode ? 1 : chunk.length;
          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

          if (state.needReadable) emitReadable(stream);
        }
      }

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    debug('onunpipe');
    if (readable === src) {
      cleanup();
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function (ev) {
    stream.on(ev, self.emit.bind(self, ev));
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = bufferShim.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require('_process'))
},{"./_stream_duplex":116,"./internal/streams/BufferList":121,"_process":110,"buffer":99,"buffer-shims":98,"core-util-is":101,"events":102,"inherits":105,"isarray":107,"process-nextick-args":109,"string_decoder/":131,"util":97}],119:[function(require,module,exports){
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function TransformState(stream) {
  this.afterTransform = function (er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
  this.writeencoding = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined) stream.push(data);

  cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(this);

  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.once('prefinish', function () {
    if (typeof this._flush === 'function') this._flush(function (er, data) {
      done(stream, er, data);
    });else done(stream);
  });
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data !== null && data !== undefined) stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length) throw new Error('Calling transform done when ws.length != 0');

  if (ts.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":116,"core-util-is":101,"inherits":105}],120:[function(require,module,exports){
(function (process){
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

module.exports = Writable;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream;
(function () {
  try {
    Stream = require('st' + 'ream');
  } catch (_) {} finally {
    if (!Stream) Stream = require('events').EventEmitter;
  }
})();
/*</replacement>*/

var Buffer = require('buffer').Buffer;
/*<replacement>*/
var bufferShim = require('buffer-shims');
/*</replacement>*/

util.inherits(Writable, Stream);

function nop() {}

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = Buffer.isBuffer(chunk);

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = bufferShim.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    chunk = decodeChunk(state, chunk, encoding);
    if (Buffer.isBuffer(chunk)) encoding = 'buffer';
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;
  if (sync) processNextTick(cb, er);else cb(er);

  stream._writableState.errorEmitted = true;
  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    while (entry) {
      buffer[count] = entry;
      entry = entry.next;
      count += 1;
    }

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequestCount = 0;
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function prefinish(stream, state) {
  if (!state.prefinished) {
    state.prefinished = true;
    stream.emit('prefinish');
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    if (state.pendingcb === 0) {
      prefinish(stream, state);
      state.finished = true;
      stream.emit('finish');
    } else {
      prefinish(stream, state);
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function (err) {
    var entry = _this.entry;
    _this.entry = null;
    while (entry) {
      var cb = entry.callback;
      state.pendingcb--;
      cb(err);
      entry = entry.next;
    }
    if (state.corkedRequestsFree) {
      state.corkedRequestsFree.next = _this;
    } else {
      state.corkedRequestsFree = _this;
    }
  };
}
}).call(this,require('_process'))
},{"./_stream_duplex":116,"_process":110,"buffer":99,"buffer-shims":98,"core-util-is":101,"events":102,"inherits":105,"process-nextick-args":109,"util-deprecate":135}],121:[function(require,module,exports){
'use strict';

var Buffer = require('buffer').Buffer;
/*<replacement>*/
var bufferShim = require('buffer-shims');
/*</replacement>*/

module.exports = BufferList;

function BufferList() {
  this.head = null;
  this.tail = null;
  this.length = 0;
}

BufferList.prototype.push = function (v) {
  var entry = { data: v, next: null };
  if (this.length > 0) this.tail.next = entry;else this.head = entry;
  this.tail = entry;
  ++this.length;
};

BufferList.prototype.unshift = function (v) {
  var entry = { data: v, next: this.head };
  if (this.length === 0) this.tail = entry;
  this.head = entry;
  ++this.length;
};

BufferList.prototype.shift = function () {
  if (this.length === 0) return;
  var ret = this.head.data;
  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
  --this.length;
  return ret;
};

BufferList.prototype.clear = function () {
  this.head = this.tail = null;
  this.length = 0;
};

BufferList.prototype.join = function (s) {
  if (this.length === 0) return '';
  var p = this.head;
  var ret = '' + p.data;
  while (p = p.next) {
    ret += s + p.data;
  }return ret;
};

BufferList.prototype.concat = function (n) {
  if (this.length === 0) return bufferShim.alloc(0);
  if (this.length === 1) return this.head.data;
  var ret = bufferShim.allocUnsafe(n >>> 0);
  var p = this.head;
  var i = 0;
  while (p) {
    p.data.copy(ret, i);
    i += p.data.length;
    p = p.next;
  }
  return ret;
};
},{"buffer":99,"buffer-shims":98}],122:[function(require,module,exports){
module.exports = require("./lib/_stream_passthrough.js")

},{"./lib/_stream_passthrough.js":117}],123:[function(require,module,exports){
(function (process){
var Stream = (function (){
  try {
    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify
  } catch(_){}
}());
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = Stream || exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

if (!process.browser && process.env.READABLE_STREAM === 'disable' && Stream) {
  module.exports = Stream;
}

}).call(this,require('_process'))
},{"./lib/_stream_duplex.js":116,"./lib/_stream_passthrough.js":117,"./lib/_stream_readable.js":118,"./lib/_stream_transform.js":119,"./lib/_stream_writable.js":120,"_process":110}],124:[function(require,module,exports){
module.exports = require("./lib/_stream_transform.js")

},{"./lib/_stream_transform.js":119}],125:[function(require,module,exports){
module.exports = require("./lib/_stream_writable.js")

},{"./lib/_stream_writable.js":120}],126:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":102,"inherits":105,"readable-stream/duplex.js":115,"readable-stream/passthrough.js":122,"readable-stream/readable.js":123,"readable-stream/transform.js":124,"readable-stream/writable.js":125}],127:[function(require,module,exports){
(function (global){
var ClientRequest = require('./lib/request')
var extend = require('xtend')
var statusCodes = require('builtin-status-codes')
var url = require('url')

var http = exports

http.request = function (opts, cb) {
	if (typeof opts === 'string')
		opts = url.parse(opts)
	else
		opts = extend(opts)

	// Normally, the page is loaded from http or https, so not specifying a protocol
	// will result in a (valid) protocol-relative url. However, this won't work if
	// the protocol is something else, like 'file:'
	var defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''

	var protocol = opts.protocol || defaultProtocol
	var host = opts.hostname || opts.host
	var port = opts.port
	var path = opts.path || '/'

	// Necessary for IPv6 addresses
	if (host && host.indexOf(':') !== -1)
		host = '[' + host + ']'

	// This may be a relative url. The browser should always be able to interpret it correctly.
	opts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path
	opts.method = (opts.method || 'GET').toUpperCase()
	opts.headers = opts.headers || {}

	// Also valid opts.auth, opts.mode

	var req = new ClientRequest(opts)
	if (cb)
		req.on('response', cb)
	return req
}

http.get = function get (opts, cb) {
	var req = http.request(opts, cb)
	req.end()
	return req
}

http.Agent = function () {}
http.Agent.defaultMaxSockets = 4

http.STATUS_CODES = statusCodes

http.METHODS = [
	'CHECKOUT',
	'CONNECT',
	'COPY',
	'DELETE',
	'GET',
	'HEAD',
	'LOCK',
	'M-SEARCH',
	'MERGE',
	'MKACTIVITY',
	'MKCOL',
	'MOVE',
	'NOTIFY',
	'OPTIONS',
	'PATCH',
	'POST',
	'PROPFIND',
	'PROPPATCH',
	'PURGE',
	'PUT',
	'REPORT',
	'SEARCH',
	'SUBSCRIBE',
	'TRACE',
	'UNLOCK',
	'UNSUBSCRIBE'
]
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./lib/request":129,"builtin-status-codes":100,"url":133,"xtend":139}],128:[function(require,module,exports){
(function (global){
exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)

exports.blobConstructor = false
try {
	new Blob([new ArrayBuffer(1)])
	exports.blobConstructor = true
} catch (e) {}

// The xhr request to example.com may violate some restrictive CSP configurations,
// so if we're running in a browser that supports `fetch`, avoid calling getXHR()
// and assume support for certain features below.
var xhr
function getXHR () {
	// Cache the xhr value
	if (xhr !== undefined) return xhr

	if (global.XMLHttpRequest) {
		xhr = new global.XMLHttpRequest()
		// If XDomainRequest is available (ie only, where xhr might not work
		// cross domain), use the page location. Otherwise use example.com
		// Note: this doesn't actually make an http request.
		try {
			xhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')
		} catch(e) {
			xhr = null
		}
	} else {
		// Service workers don't have XHR
		xhr = null
	}
	return xhr
}

function checkTypeSupport (type) {
	var xhr = getXHR()
	if (!xhr) return false
	try {
		xhr.responseType = type
		return xhr.responseType === type
	} catch (e) {}
	return false
}

// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.
// Safari 7.1 appears to have fixed this bug.
var haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'
var haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)

// If fetch is supported, then arraybuffer will be supported too. Skip calling
// checkTypeSupport(), since that calls getXHR().
exports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))

// These next two tests unavoidably show warnings in Chrome. Since fetch will always
// be used if it's available, just return false for these to avoid the warnings.
exports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')
exports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&
	checkTypeSupport('moz-chunked-arraybuffer')

// If fetch is supported, then overrideMimeType will be supported too. Skip calling
// getXHR().
exports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)

exports.vbArray = isFunction(global.VBArray)

function isFunction (value) {
	return typeof value === 'function'
}

xhr = null // Help gc

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],129:[function(require,module,exports){
(function (process,global,Buffer){
var capability = require('./capability')
var inherits = require('inherits')
var response = require('./response')
var stream = require('readable-stream')
var toArrayBuffer = require('to-arraybuffer')

var IncomingMessage = response.IncomingMessage
var rStates = response.readyStates

function decideMode (preferBinary, useFetch) {
	if (capability.fetch && useFetch) {
		return 'fetch'
	} else if (capability.mozchunkedarraybuffer) {
		return 'moz-chunked-arraybuffer'
	} else if (capability.msstream) {
		return 'ms-stream'
	} else if (capability.arraybuffer && preferBinary) {
		return 'arraybuffer'
	} else if (capability.vbArray && preferBinary) {
		return 'text:vbarray'
	} else {
		return 'text'
	}
}

var ClientRequest = module.exports = function (opts) {
	var self = this
	stream.Writable.call(self)

	self._opts = opts
	self._body = []
	self._headers = {}
	if (opts.auth)
		self.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))
	Object.keys(opts.headers).forEach(function (name) {
		self.setHeader(name, opts.headers[name])
	})

	var preferBinary
	var useFetch = true
	if (opts.mode === 'disable-fetch' || 'timeout' in opts) {
		// If the use of XHR should be preferred and includes preserving the 'content-type' header.
		// Force XHR to be used since the Fetch API does not yet support timeouts.
		useFetch = false
		preferBinary = true
	} else if (opts.mode === 'prefer-streaming') {
		// If streaming is a high priority but binary compatibility and
		// the accuracy of the 'content-type' header aren't
		preferBinary = false
	} else if (opts.mode === 'allow-wrong-content-type') {
		// If streaming is more important than preserving the 'content-type' header
		preferBinary = !capability.overrideMimeType
	} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {
		// Use binary if text streaming may corrupt data or the content-type header, or for speed
		preferBinary = true
	} else {
		throw new Error('Invalid value for opts.mode')
	}
	self._mode = decideMode(preferBinary, useFetch)

	self.on('finish', function () {
		self._onFinish()
	})
}

inherits(ClientRequest, stream.Writable)

ClientRequest.prototype.setHeader = function (name, value) {
	var self = this
	var lowerName = name.toLowerCase()
	// This check is not necessary, but it prevents warnings from browsers about setting unsafe
	// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but
	// http-browserify did it, so I will too.
	if (unsafeHeaders.indexOf(lowerName) !== -1)
		return

	self._headers[lowerName] = {
		name: name,
		value: value
	}
}

ClientRequest.prototype.getHeader = function (name) {
	var self = this
	return self._headers[name.toLowerCase()].value
}

ClientRequest.prototype.removeHeader = function (name) {
	var self = this
	delete self._headers[name.toLowerCase()]
}

ClientRequest.prototype._onFinish = function () {
	var self = this

	if (self._destroyed)
		return
	var opts = self._opts

	var headersObj = self._headers
	var body = null
	if (opts.method !== 'GET' && opts.method !== 'HEAD') {
		if (capability.blobConstructor) {
			body = new global.Blob(self._body.map(function (buffer) {
				return toArrayBuffer(buffer)
			}), {
				type: (headersObj['content-type'] || {}).value || ''
			})
		} else {
			// get utf8 string
			body = Buffer.concat(self._body).toString()
		}
	}

	// create flattened list of headers
	var headersList = []
	Object.keys(headersObj).forEach(function (keyName) {
		var name = headersObj[keyName].name
		var value = headersObj[keyName].value
		if (Array.isArray(value)) {
			value.forEach(function (v) {
				headersList.push([name, v])
			})
		} else {
			headersList.push([name, value])
		}
	})

	if (self._mode === 'fetch') {
		global.fetch(self._opts.url, {
			method: self._opts.method,
			headers: headersList,
			body: body || undefined,
			mode: 'cors',
			credentials: opts.withCredentials ? 'include' : 'same-origin'
		}).then(function (response) {
			self._fetchResponse = response
			self._connect()
		}, function (reason) {
			self.emit('error', reason)
		})
	} else {
		var xhr = self._xhr = new global.XMLHttpRequest()
		try {
			xhr.open(self._opts.method, self._opts.url, true)
		} catch (err) {
			process.nextTick(function () {
				self.emit('error', err)
			})
			return
		}

		// Can't set responseType on really old browsers
		if ('responseType' in xhr)
			xhr.responseType = self._mode.split(':')[0]

		if ('withCredentials' in xhr)
			xhr.withCredentials = !!opts.withCredentials

		if (self._mode === 'text' && 'overrideMimeType' in xhr)
			xhr.overrideMimeType('text/plain; charset=x-user-defined')

		if ('timeout' in opts) {
			xhr.timeout = opts.timeout
			xhr.ontimeout = function () {
				self.emit('timeout')
			}
		}

		headersList.forEach(function (header) {
			xhr.setRequestHeader(header[0], header[1])
		})

		self._response = null
		xhr.onreadystatechange = function () {
			switch (xhr.readyState) {
				case rStates.LOADING:
				case rStates.DONE:
					self._onXHRProgress()
					break
			}
		}
		// Necessary for streaming in Firefox, since xhr.response is ONLY defined
		// in onprogress, not in onreadystatechange with xhr.readyState = 3
		if (self._mode === 'moz-chunked-arraybuffer') {
			xhr.onprogress = function () {
				self._onXHRProgress()
			}
		}

		xhr.onerror = function () {
			if (self._destroyed)
				return
			self.emit('error', new Error('XHR error'))
		}

		try {
			xhr.send(body)
		} catch (err) {
			process.nextTick(function () {
				self.emit('error', err)
			})
			return
		}
	}
}

/**
 * Checks if xhr.status is readable and non-zero, indicating no error.
 * Even though the spec says it should be available in readyState 3,
 * accessing it throws an exception in IE8
 */
function statusValid (xhr) {
	try {
		var status = xhr.status
		return (status !== null && status !== 0)
	} catch (e) {
		return false
	}
}

ClientRequest.prototype._onXHRProgress = function () {
	var self = this

	if (!statusValid(self._xhr) || self._destroyed)
		return

	if (!self._response)
		self._connect()

	self._response._onXHRProgress()
}

ClientRequest.prototype._connect = function () {
	var self = this

	if (self._destroyed)
		return

	self._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode)
	self._response.on('error', function(err) {
		self.emit('error', err)
	})

	self.emit('response', self._response)
}

ClientRequest.prototype._write = function (chunk, encoding, cb) {
	var self = this

	self._body.push(chunk)
	cb()
}

ClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {
	var self = this
	self._destroyed = true
	if (self._response)
		self._response._destroyed = true
	if (self._xhr)
		self._xhr.abort()
	// Currently, there isn't a way to truly abort a fetch.
	// If you like bikeshedding, see https://github.com/whatwg/fetch/issues/27
}

ClientRequest.prototype.end = function (data, encoding, cb) {
	var self = this
	if (typeof data === 'function') {
		cb = data
		data = undefined
	}

	stream.Writable.prototype.end.call(self, data, encoding, cb)
}

ClientRequest.prototype.flushHeaders = function () {}
ClientRequest.prototype.setTimeout = function () {}
ClientRequest.prototype.setNoDelay = function () {}
ClientRequest.prototype.setSocketKeepAlive = function () {}

// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method
var unsafeHeaders = [
	'accept-charset',
	'accept-encoding',
	'access-control-request-headers',
	'access-control-request-method',
	'connection',
	'content-length',
	'cookie',
	'cookie2',
	'date',
	'dnt',
	'expect',
	'host',
	'keep-alive',
	'origin',
	'referer',
	'te',
	'trailer',
	'transfer-encoding',
	'upgrade',
	'user-agent',
	'via'
]

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"./capability":128,"./response":130,"_process":110,"buffer":99,"inherits":105,"readable-stream":123,"to-arraybuffer":132}],130:[function(require,module,exports){
(function (process,global,Buffer){
var capability = require('./capability')
var inherits = require('inherits')
var stream = require('readable-stream')

var rStates = exports.readyStates = {
	UNSENT: 0,
	OPENED: 1,
	HEADERS_RECEIVED: 2,
	LOADING: 3,
	DONE: 4
}

var IncomingMessage = exports.IncomingMessage = function (xhr, response, mode) {
	var self = this
	stream.Readable.call(self)

	self._mode = mode
	self.headers = {}
	self.rawHeaders = []
	self.trailers = {}
	self.rawTrailers = []

	// Fake the 'close' event, but only once 'end' fires
	self.on('end', function () {
		// The nextTick is necessary to prevent the 'request' module from causing an infinite loop
		process.nextTick(function () {
			self.emit('close')
		})
	})

	if (mode === 'fetch') {
		self._fetchResponse = response

		self.url = response.url
		self.statusCode = response.status
		self.statusMessage = response.statusText
		
		response.headers.forEach(function(header, key){
			self.headers[key.toLowerCase()] = header
			self.rawHeaders.push(key, header)
		})


		// TODO: this doesn't respect backpressure. Once WritableStream is available, this can be fixed
		var reader = response.body.getReader()
		function read () {
			reader.read().then(function (result) {
				if (self._destroyed)
					return
				if (result.done) {
					self.push(null)
					return
				}
				self.push(new Buffer(result.value))
				read()
			}).catch(function(err) {
				self.emit('error', err)
			})
		}
		read()

	} else {
		self._xhr = xhr
		self._pos = 0

		self.url = xhr.responseURL
		self.statusCode = xhr.status
		self.statusMessage = xhr.statusText
		var headers = xhr.getAllResponseHeaders().split(/\r?\n/)
		headers.forEach(function (header) {
			var matches = header.match(/^([^:]+):\s*(.*)/)
			if (matches) {
				var key = matches[1].toLowerCase()
				if (key === 'set-cookie') {
					if (self.headers[key] === undefined) {
						self.headers[key] = []
					}
					self.headers[key].push(matches[2])
				} else if (self.headers[key] !== undefined) {
					self.headers[key] += ', ' + matches[2]
				} else {
					self.headers[key] = matches[2]
				}
				self.rawHeaders.push(matches[1], matches[2])
			}
		})

		self._charset = 'x-user-defined'
		if (!capability.overrideMimeType) {
			var mimeType = self.rawHeaders['mime-type']
			if (mimeType) {
				var charsetMatch = mimeType.match(/;\s*charset=([^;])(;|$)/)
				if (charsetMatch) {
					self._charset = charsetMatch[1].toLowerCase()
				}
			}
			if (!self._charset)
				self._charset = 'utf-8' // best guess
		}
	}
}

inherits(IncomingMessage, stream.Readable)

IncomingMessage.prototype._read = function () {}

IncomingMessage.prototype._onXHRProgress = function () {
	var self = this

	var xhr = self._xhr

	var response = null
	switch (self._mode) {
		case 'text:vbarray': // For IE9
			if (xhr.readyState !== rStates.DONE)
				break
			try {
				// This fails in IE8
				response = new global.VBArray(xhr.responseBody).toArray()
			} catch (e) {}
			if (response !== null) {
				self.push(new Buffer(response))
				break
			}
			// Falls through in IE8	
		case 'text':
			try { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4
				response = xhr.responseText
			} catch (e) {
				self._mode = 'text:vbarray'
				break
			}
			if (response.length > self._pos) {
				var newData = response.substr(self._pos)
				if (self._charset === 'x-user-defined') {
					var buffer = new Buffer(newData.length)
					for (var i = 0; i < newData.length; i++)
						buffer[i] = newData.charCodeAt(i) & 0xff

					self.push(buffer)
				} else {
					self.push(newData, self._charset)
				}
				self._pos = response.length
			}
			break
		case 'arraybuffer':
			if (xhr.readyState !== rStates.DONE || !xhr.response)
				break
			response = xhr.response
			self.push(new Buffer(new Uint8Array(response)))
			break
		case 'moz-chunked-arraybuffer': // take whole
			response = xhr.response
			if (xhr.readyState !== rStates.LOADING || !response)
				break
			self.push(new Buffer(new Uint8Array(response)))
			break
		case 'ms-stream':
			response = xhr.response
			if (xhr.readyState !== rStates.LOADING)
				break
			var reader = new global.MSStreamReader()
			reader.onprogress = function () {
				if (reader.result.byteLength > self._pos) {
					self.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))
					self._pos = reader.result.byteLength
				}
			}
			reader.onload = function () {
				self.push(null)
			}
			// reader.onerror = ??? // TODO: this
			reader.readAsArrayBuffer(response)
			break
	}

	// The ms-stream case handles end separately in reader.onload()
	if (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {
		self.push(null)
	}
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"./capability":128,"_process":110,"buffer":99,"inherits":105,"readable-stream":123}],131:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = require('buffer').Buffer;

var isBufferEncoding = Buffer.isEncoding
  || function(encoding) {
       switch (encoding && encoding.toLowerCase()) {
         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
         default: return false;
       }
     }


function assertEncoding(encoding) {
  if (encoding && !isBufferEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
//
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  // Enough space to store all bytes of a single character. UTF-8 needs 4
  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
  this.charBuffer = new Buffer(6);
  // Number of bytes received for the current incomplete multi-byte character.
  this.charReceived = 0;
  // Number of bytes expected for the current incomplete multi-byte character.
  this.charLength = 0;
};


// write decodes the given buffer and returns it as JS string that is
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.
//
// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var available = (buffer.length >= this.charLength - this.charReceived) ?
        this.charLength - this.charReceived :
        buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, 0, available);
    this.charReceived += available;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // remove bytes belonging to the current character from the buffer
    buffer = buffer.slice(available, buffer.length);

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (buffer.length === 0) {
      return charStr;
    }
    break;
  }

  // determine and set charLength / charReceived
  this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
    end -= this.charReceived;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    buffer.copy(this.charBuffer, 0, 0, size);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }
  this.charReceived = i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 2;
  this.charLength = this.charReceived ? 2 : 0;
}

function base64DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 3;
  this.charLength = this.charReceived ? 3 : 0;
}

},{"buffer":99}],132:[function(require,module,exports){
var Buffer = require('buffer').Buffer

module.exports = function (buf) {
	// If the buffer is backed by a Uint8Array, a faster version will work
	if (buf instanceof Uint8Array) {
		// If the buffer isn't a subarray, return the underlying ArrayBuffer
		if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {
			return buf.buffer
		} else if (typeof buf.buffer.slice === 'function') {
			// Otherwise we need to get a proper copy
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)
		}
	}

	if (Buffer.isBuffer(buf)) {
		// This is the slow version that will work with any Buffer
		// implementation (even in old browsers)
		var arrayCopy = new Uint8Array(buf.length)
		var len = buf.length
		for (var i = 0; i < len; i++) {
			arrayCopy[i] = buf[i]
		}
		return arrayCopy.buffer
	} else {
		throw new Error('Argument must be a Buffer')
	}
}

},{"buffer":99}],133:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var punycode = require('punycode');
var util = require('./util');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = require('querystring');

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};

},{"./util":134,"punycode":111,"querystring":114}],134:[function(require,module,exports){
'use strict';

module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};

},{}],135:[function(require,module,exports){
(function (global){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],136:[function(require,module,exports){
arguments[4][105][0].apply(exports,arguments)
},{"dup":105}],137:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],138:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":137,"_process":110,"inherits":136}],139:[function(require,module,exports){
module.exports = extend

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}

},{}]},{},[32])(32)
});
;(function(){
var h, aa = this;
function ba(b) {
  var a = typeof b;
  if ("object" == a) {
    if (b) {
      if (b instanceof Array) {
        return "array";
      }
      if (b instanceof Object) {
        return a;
      }
      var c = Object.prototype.toString.call(b);
      if ("[object Window]" == c) {
        return "object";
      }
      if ("[object Array]" == c || "number" == typeof b.length && "undefined" != typeof b.splice && "undefined" != typeof b.propertyIsEnumerable && !b.propertyIsEnumerable("splice")) {
        return "array";
      }
      if ("[object Function]" == c || "undefined" != typeof b.call && "undefined" != typeof b.propertyIsEnumerable && !b.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if ("function" == a && "undefined" == typeof b.call) {
      return "object";
    }
  }
  return a;
}
function ca(b) {
  var a = ba(b);
  return "array" == a || "object" == a && "number" == typeof b.length;
}
function da(b) {
  return "string" == typeof b;
}
function ea(b) {
  return "function" == ba(b);
}
function fa(b) {
  return b[ga] || (b[ga] = ++ha);
}
var ga = "closure_uid_" + (1E9 * Math.random() >>> 0), ha = 0;
function ia(b, a, c) {
  return b.call.apply(b.bind, arguments);
}
function ja(b, a, c) {
  if (!b) {
    throw Error();
  }
  if (2 < arguments.length) {
    var d = Array.prototype.slice.call(arguments, 2);
    return function() {
      var c = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(c, d);
      return b.apply(a, c);
    };
  }
  return function() {
    return b.apply(a, arguments);
  };
}
function ka(b, a, c) {
  ka = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? ia : ja;
  return ka.apply(null, arguments);
}
var ma = Date.now || function() {
  return +new Date;
};
function na(b, a) {
  var c = b.split("."), d = aa;
  c[0] in d || !d.execScript || d.execScript("var " + c[0]);
  for (var e;c.length && (e = c.shift());) {
    c.length || void 0 === a ? d = d[e] ? d[e] : d[e] = {} : d[e] = a;
  }
}
function oa(b, a) {
  function c() {
  }
  c.prototype = a.prototype;
  b.ji = a.prototype;
  b.prototype = new c;
  b.prototype.constructor = b;
  b.Ue = function(b, c, f) {
    for (var d = Array(arguments.length - 2), e = 2;e < arguments.length;e++) {
      d[e - 2] = arguments[e];
    }
    return a.prototype[c].apply(b, d);
  };
}
;function pa(b, a) {
  return 0 == b.lastIndexOf(a, 0);
}
function ra(b, a) {
  var c = b.length - a.length;
  return 0 <= c && b.indexOf(a, c) == c;
}
function sa(b, a) {
  for (var c = b.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1);e.length && 1 < c.length;) {
    d += c.shift() + e.shift();
  }
  return d + c.join("%s");
}
function ta(b) {
  return /^[\s\xa0]*$/.test(b);
}
function ua(b) {
  return 1 == b.length && " " <= b && "~" >= b || "" <= b && "�" >= b;
}
var va = String.prototype.trim ? function(b) {
  return b.trim();
} : function(b) {
  return b.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
}, wa = String.prototype.repeat ? function(b, a) {
  return b.repeat(a);
} : function(b, a) {
  return Array(a + 1).join(b);
};
function xa(b, a) {
  return b < a ? -1 : b > a ? 1 : 0;
}
;function za(b, a) {
  for (var c in b) {
    a.call(void 0, b[c], c, b);
  }
}
function Aa(b) {
  var a = [], c = 0, d;
  for (d in b) {
    a[c++] = b[d];
  }
  return a;
}
function Ba(b) {
  var a = [], c = 0, d;
  for (d in b) {
    a[c++] = d;
  }
  return a;
}
;function Ca(b, a) {
  this.Ab = [];
  this.Rd = a;
  for (var c = !0, d = b.length - 1;0 <= d;d--) {
    var e = b[d] | 0;
    c && e == a || (this.Ab[d] = e, c = !1);
  }
}
var Da = {};
function Ea(b) {
  if (-128 <= b && 128 > b) {
    var a = Da[b];
    if (a) {
      return a;
    }
  }
  a = new Ca([b | 0], 0 > b ? -1 : 0);
  -128 <= b && 128 > b && (Da[b] = a);
  return a;
}
function Ga(b) {
  if (isNaN(b) || !isFinite(b)) {
    return Ha;
  }
  if (0 > b) {
    return Ga(-b).Sb();
  }
  for (var a = [], c = 1, d = 0;b >= c;d++) {
    a[d] = b / c | 0, c *= Ia;
  }
  return new Ca(a, 0);
}
var Ia = 4294967296, Ha = Ea(0), Ja = Ea(1), Ka = Ea(16777216);
h = Ca.prototype;
h.Vh = function() {
  return 0 < this.Ab.length ? this.Ab[0] : this.Rd;
};
h.Ce = function() {
  if (this.uc()) {
    return -this.Sb().Ce();
  }
  for (var b = 0, a = 1, c = 0;c < this.Ab.length;c++) {
    var d = La(this, c), b = b + (0 <= d ? d : Ia + d) * a, a = a * Ia
  }
  return b;
};
h.toString = function(b) {
  b = b || 10;
  if (2 > b || 36 < b) {
    throw Error("radix out of range: " + b);
  }
  if (this.ld()) {
    return "0";
  }
  if (this.uc()) {
    return "-" + this.Sb().toString(b);
  }
  for (var a = Ga(Math.pow(b, 6)), c = this, d = "";;) {
    var e = Ma(c, a), f = (c.Bf(e.multiply(a)).Vh() >>> 0).toString(b), c = e;
    if (c.ld()) {
      return f + d;
    }
    for (;6 > f.length;) {
      f = "0" + f;
    }
    d = "" + f + d;
  }
};
function La(b, a) {
  return 0 > a ? 0 : a < b.Ab.length ? b.Ab[a] : b.Rd;
}
h.ld = function() {
  if (0 != this.Rd) {
    return !1;
  }
  for (var b = 0;b < this.Ab.length;b++) {
    if (0 != this.Ab[b]) {
      return !1;
    }
  }
  return !0;
};
h.uc = function() {
  return -1 == this.Rd;
};
h.xh = function(b) {
  return 0 < this.compare(b);
};
h.yh = function(b) {
  return 0 <= this.compare(b);
};
h.yg = function() {
  return 0 > this.compare(Ka);
};
h.zg = function(b) {
  return 0 >= this.compare(b);
};
h.compare = function(b) {
  b = this.Bf(b);
  return b.uc() ? -1 : b.ld() ? 0 : 1;
};
h.Sb = function() {
  return this.Ph().add(Ja);
};
h.add = function(b) {
  for (var a = Math.max(this.Ab.length, b.Ab.length), c = [], d = 0, e = 0;e <= a;e++) {
    var f = d + (La(this, e) & 65535) + (La(b, e) & 65535), g = (f >>> 16) + (La(this, e) >>> 16) + (La(b, e) >>> 16), d = g >>> 16, f = f & 65535, g = g & 65535;
    c[e] = g << 16 | f;
  }
  return new Ca(c, c[c.length - 1] & -2147483648 ? -1 : 0);
};
h.Bf = function(b) {
  return this.add(b.Sb());
};
h.multiply = function(b) {
  if (this.ld() || b.ld()) {
    return Ha;
  }
  if (this.uc()) {
    return b.uc() ? this.Sb().multiply(b.Sb()) : this.Sb().multiply(b).Sb();
  }
  if (b.uc()) {
    return this.multiply(b.Sb()).Sb();
  }
  if (this.yg() && b.yg()) {
    return Ga(this.Ce() * b.Ce());
  }
  for (var a = this.Ab.length + b.Ab.length, c = [], d = 0;d < 2 * a;d++) {
    c[d] = 0;
  }
  for (d = 0;d < this.Ab.length;d++) {
    for (var e = 0;e < b.Ab.length;e++) {
      var f = La(this, d) >>> 16, g = La(this, d) & 65535, n = La(b, e) >>> 16, r = La(b, e) & 65535;
      c[2 * d + 2 * e] += g * r;
      Na(c, 2 * d + 2 * e);
      c[2 * d + 2 * e + 1] += f * r;
      Na(c, 2 * d + 2 * e + 1);
      c[2 * d + 2 * e + 1] += g * n;
      Na(c, 2 * d + 2 * e + 1);
      c[2 * d + 2 * e + 2] += f * n;
      Na(c, 2 * d + 2 * e + 2);
    }
  }
  for (d = 0;d < a;d++) {
    c[d] = c[2 * d + 1] << 16 | c[2 * d];
  }
  for (d = a;d < 2 * a;d++) {
    c[d] = 0;
  }
  return new Ca(c, 0);
};
function Na(b, a) {
  for (;(b[a] & 65535) != b[a];) {
    b[a + 1] += b[a] >>> 16, b[a] &= 65535;
  }
}
function Ma(b, a) {
  if (a.ld()) {
    throw Error("division by zero");
  }
  if (b.ld()) {
    return Ha;
  }
  if (b.uc()) {
    return a.uc() ? Ma(b.Sb(), a.Sb()) : Ma(b.Sb(), a).Sb();
  }
  if (a.uc()) {
    return Ma(b, a.Sb()).Sb();
  }
  if (30 < b.Ab.length) {
    if (b.uc() || a.uc()) {
      throw Error("slowDivide_ only works with positive integers.");
    }
    for (var c = Ja, d = a;d.zg(b);) {
      c = c.shiftLeft(1), d = d.shiftLeft(1);
    }
    for (var e = c.ee(1), f = d.ee(1), g, d = d.ee(2), c = c.ee(2);!d.ld();) {
      g = f.add(d), g.zg(b) && (e = e.add(c), f = g), d = d.ee(1), c = c.ee(1);
    }
    return e;
  }
  c = Ha;
  for (d = b;d.yh(a);) {
    e = Math.max(1, Math.floor(d.Ce() / a.Ce()));
    f = Math.ceil(Math.log(e) / Math.LN2);
    f = 48 >= f ? 1 : Math.pow(2, f - 48);
    g = Ga(e);
    for (var n = g.multiply(a);n.uc() || n.xh(d);) {
      e -= f, g = Ga(e), n = g.multiply(a);
    }
    g.ld() && (g = Ja);
    c = c.add(g);
    d = d.Bf(n);
  }
  return c;
}
h.Ph = function() {
  for (var b = this.Ab.length, a = [], c = 0;c < b;c++) {
    a[c] = ~this.Ab[c];
  }
  return new Ca(a, ~this.Rd);
};
h.shiftLeft = function(b) {
  var a = b >> 5;
  b %= 32;
  for (var c = this.Ab.length + a + (0 < b ? 1 : 0), d = [], e = 0;e < c;e++) {
    d[e] = 0 < b ? La(this, e - a) << b | La(this, e - a - 1) >>> 32 - b : La(this, e - a);
  }
  return new Ca(d, this.Rd);
};
h.ee = function(b) {
  var a = b >> 5;
  b %= 32;
  for (var c = this.Ab.length - a, d = [], e = 0;e < c;e++) {
    d[e] = 0 < b ? La(this, e + a) >>> b | La(this, e + a + 1) << 32 - b : La(this, e + a);
  }
  return new Ca(d, this.Rd);
};
function Oa(b, a) {
  null != b && this.append.apply(this, arguments);
}
h = Oa.prototype;
h.ud = "";
h.set = function(b) {
  this.ud = "" + b;
};
h.append = function(b, a, c) {
  this.ud += String(b);
  if (null != a) {
    for (var d = 1;d < arguments.length;d++) {
      this.ud += arguments[d];
    }
  }
  return this;
};
h.clear = function() {
  this.ud = "";
};
h.toString = function() {
  return this.ud;
};
function Pa(b) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, Pa);
  } else {
    var a = Error().stack;
    a && (this.stack = a);
  }
  b && (this.message = String(b));
}
oa(Pa, Error);
Pa.prototype.name = "CustomError";
function Qa(b, a) {
  a.unshift(b);
  Pa.call(this, sa.apply(null, a));
  a.shift();
}
oa(Qa, Pa);
Qa.prototype.name = "AssertionError";
function Ra(b, a) {
  throw new Qa("Failure" + (b ? ": " + b : ""), Array.prototype.slice.call(arguments, 1));
}
;var Sa = Array.prototype.forEach ? function(b, a, c) {
  Array.prototype.forEach.call(b, a, c);
} : function(b, a, c) {
  for (var d = b.length, e = da(b) ? b.split("") : b, f = 0;f < d;f++) {
    f in e && a.call(c, e[f], f, b);
  }
};
function Ta(b) {
  return Array.prototype.concat.apply(Array.prototype, arguments);
}
function Wa(b) {
  var a = b.length;
  if (0 < a) {
    for (var c = Array(a), d = 0;d < a;d++) {
      c[d] = b[d];
    }
    return c;
  }
  return [];
}
function Xa(b, a) {
  b.sort(a || Ya);
}
function Za(b, a) {
  for (var c = Array(b.length), d = 0;d < b.length;d++) {
    c[d] = {index:d, value:b[d]};
  }
  var e = a || Ya;
  Xa(c, function(a, b) {
    return e(a.value, b.value) || a.index - b.index;
  });
  for (d = 0;d < b.length;d++) {
    b[d] = c[d].value;
  }
}
function Ya(b, a) {
  return b > a ? 1 : b < a ? -1 : 0;
}
;var $a;
if ("undefined" === typeof k) {
  var k = {}
}
var ab = null;
if ("undefined" === typeof bb) {
  var bb = function() {
    throw Error("No *print-fn* fn set for evaluation environment");
  }
}
if ("undefined" === typeof cb) {
  var cb = function() {
    throw Error("No *print-err-fn* fn set for evaluation environment");
  }
}
var db = !0, eb = !0, gb = null, hb = null;
if ("undefined" === typeof jb) {
  var jb = null
}
function kb() {
  return new l(null, 5, [lb, !0, mb, eb, nb, !1, ob, !1, pb, gb], null);
}
function m(b) {
  return null != b && !1 !== b;
}
function qb(b) {
  return b instanceof Array;
}
function rb(b) {
  return null == b ? !0 : !1 === b ? !0 : !1;
}
function sb(b) {
  return null != b;
}
function p(b, a) {
  return b[ba(null == a ? null : a)] ? !0 : b._ ? !0 : !1;
}
function tb(b) {
  return null == b ? null : b.constructor;
}
function ub(b, a) {
  var c = tb(a), c = m(m(c) ? c.nc : c) ? c.Xb : ba(a);
  return Error(["No protocol method ", b, " defined for type ", c, ": ", a].join(""));
}
function vb(b) {
  var a = b.Xb;
  return m(a) ? a : "" + q(b);
}
var xb = "undefined" !== typeof Symbol && "function" === ba(Symbol) ? Symbol.iterator : "@@iterator";
function yb(b) {
  for (var a = b.length, c = Array(a), d = 0;;) {
    if (d < a) {
      c[d] = b[d], d += 1;
    } else {
      break;
    }
  }
  return c;
}
function zb(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 1:
      return Ab(arguments[0]);
    case 2:
      return Ab(arguments[1]);
    default:
      throw Error([q("Invalid arity: "), q(a.length)].join(""));;
  }
}
function Bb(b) {
  return Ab(b);
}
function Ab(b) {
  function a(a, b) {
    a.push(b);
    return a;
  }
  var c = [];
  return Cb.c ? Cb.c(a, c, b) : Cb.call(null, a, c, b);
}
function Db() {
}
var Eb = function Eb(a) {
  if (null != a && null != a.$) {
    return a.$(a);
  }
  var c = Eb[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Eb._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("ICounted.-count", a);
}, Fb = function Fb(a) {
  if (null != a && null != a.Na) {
    return a.Na(a);
  }
  var c = Fb[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Fb._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IEmptyableCollection.-empty", a);
};
function Gb() {
}
var Hb = function Hb(a, c) {
  if (null != a && null != a.Z) {
    return a.Z(a, c);
  }
  var d = Hb[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = Hb._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("ICollection.-conj", a);
};
function Ib() {
}
var Kb = function Kb(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return Kb.a(arguments[0], arguments[1]);
    case 3:
      return Kb.c(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
Kb.a = function(b, a) {
  if (null != b && null != b.ra) {
    return b.ra(b, a);
  }
  var c = Kb[ba(null == b ? null : b)];
  if (null != c) {
    return c.a ? c.a(b, a) : c.call(null, b, a);
  }
  c = Kb._;
  if (null != c) {
    return c.a ? c.a(b, a) : c.call(null, b, a);
  }
  throw ub("IIndexed.-nth", b);
};
Kb.c = function(b, a, c) {
  if (null != b && null != b.Hb) {
    return b.Hb(b, a, c);
  }
  var d = Kb[ba(null == b ? null : b)];
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  d = Kb._;
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  throw ub("IIndexed.-nth", b);
};
Kb.N = 3;
function Lb() {
}
var Nb = function Nb(a) {
  if (null != a && null != a.Ya) {
    return a.Ya(a);
  }
  var c = Nb[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Nb._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("ISeq.-first", a);
}, Ob = function Ob(a) {
  if (null != a && null != a.xb) {
    return a.xb(a);
  }
  var c = Ob[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Ob._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("ISeq.-rest", a);
};
function Qb() {
}
function Rb() {
}
var Tb = function Tb(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return Tb.a(arguments[0], arguments[1]);
    case 3:
      return Tb.c(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
Tb.a = function(b, a) {
  if (null != b && null != b.W) {
    return b.W(b, a);
  }
  var c = Tb[ba(null == b ? null : b)];
  if (null != c) {
    return c.a ? c.a(b, a) : c.call(null, b, a);
  }
  c = Tb._;
  if (null != c) {
    return c.a ? c.a(b, a) : c.call(null, b, a);
  }
  throw ub("ILookup.-lookup", b);
};
Tb.c = function(b, a, c) {
  if (null != b && null != b.T) {
    return b.T(b, a, c);
  }
  var d = Tb[ba(null == b ? null : b)];
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  d = Tb._;
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  throw ub("ILookup.-lookup", b);
};
Tb.N = 3;
var Ub = function Ub(a, c) {
  if (null != a && null != a.Yd) {
    return a.Yd(a, c);
  }
  var d = Ub[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = Ub._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("IAssociative.-contains-key?", a);
}, Vb = function Vb(a, c, d) {
  if (null != a && null != a.fa) {
    return a.fa(a, c, d);
  }
  var e = Vb[ba(null == a ? null : a)];
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  e = Vb._;
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  throw ub("IAssociative.-assoc", a);
};
function Wb() {
}
var Xb = function Xb(a, c) {
  if (null != a && null != a.ia) {
    return a.ia(a, c);
  }
  var d = Xb[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = Xb._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("IMap.-dissoc", a);
};
function Yb() {
}
var Zb = function Zb(a) {
  if (null != a && null != a.le) {
    return a.le(a);
  }
  var c = Zb[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Zb._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IMapEntry.-key", a);
}, $b = function $b(a) {
  if (null != a && null != a.me) {
    return a.me(a);
  }
  var c = $b[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = $b._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IMapEntry.-val", a);
};
function ac() {
}
var bc = function bc(a, c) {
  if (null != a && null != a.jg) {
    return a.jg(0, c);
  }
  var d = bc[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = bc._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("ISet.-disjoin", a);
}, cc = function cc(a) {
  if (null != a && null != a.Lc) {
    return a.Lc(a);
  }
  var c = cc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = cc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IStack.-peek", a);
}, dc = function dc(a) {
  if (null != a && null != a.Mc) {
    return a.Mc(a);
  }
  var c = dc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = dc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IStack.-pop", a);
};
function ec() {
}
var fc = function fc(a, c, d) {
  if (null != a && null != a.dd) {
    return a.dd(a, c, d);
  }
  var e = fc[ba(null == a ? null : a)];
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  e = fc._;
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  throw ub("IVector.-assoc-n", a);
};
function gc() {
}
var hc = function hc(a) {
  if (null != a && null != a.cd) {
    return a.cd(a);
  }
  var c = hc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = hc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IDeref.-deref", a);
};
function ic() {
}
var jc = function jc(a) {
  if (null != a && null != a.S) {
    return a.S(a);
  }
  var c = jc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = jc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IMeta.-meta", a);
};
function kc() {
}
var mc = function mc(a, c) {
  if (null != a && null != a.U) {
    return a.U(a, c);
  }
  var d = mc[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = mc._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("IWithMeta.-with-meta", a);
};
function nc() {
}
var oc = function oc(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return oc.a(arguments[0], arguments[1]);
    case 3:
      return oc.c(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
oc.a = function(b, a) {
  if (null != b && null != b.$a) {
    return b.$a(b, a);
  }
  var c = oc[ba(null == b ? null : b)];
  if (null != c) {
    return c.a ? c.a(b, a) : c.call(null, b, a);
  }
  c = oc._;
  if (null != c) {
    return c.a ? c.a(b, a) : c.call(null, b, a);
  }
  throw ub("IReduce.-reduce", b);
};
oc.c = function(b, a, c) {
  if (null != b && null != b.ab) {
    return b.ab(b, a, c);
  }
  var d = oc[ba(null == b ? null : b)];
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  d = oc._;
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  throw ub("IReduce.-reduce", b);
};
oc.N = 3;
var pc = function pc(a, c, d) {
  if (null != a && null != a.wd) {
    return a.wd(a, c, d);
  }
  var e = pc[ba(null == a ? null : a)];
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  e = pc._;
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  throw ub("IKVReduce.-kv-reduce", a);
}, qc = function qc(a, c) {
  if (null != a && null != a.O) {
    return a.O(a, c);
  }
  var d = qc[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = qc._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("IEquiv.-equiv", a);
}, rc = function rc(a) {
  if (null != a && null != a.Y) {
    return a.Y(a);
  }
  var c = rc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = rc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IHash.-hash", a);
};
function sc() {
}
var tc = function tc(a) {
  if (null != a && null != a.aa) {
    return a.aa(a);
  }
  var c = tc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = tc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("ISeqable.-seq", a);
};
function vc() {
}
function wc() {
}
function xc() {
}
function yc() {
}
var zc = function zc(a) {
  if (null != a && null != a.$d) {
    return a.$d(a);
  }
  var c = zc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = zc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IReversible.-rseq", a);
}, Ac = function Ac(a, c) {
  if (null != a && null != a.xd) {
    return a.xd(a, c);
  }
  var d = Ac[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = Ac._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("IWriter.-write", a);
}, Bc = function Bc(a) {
  if (null != a && null != a.Nc) {
    return a.Nc(a);
  }
  var c = Bc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Bc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IWriter.-flush", a);
}, Dc = function Dc(a, c, d) {
  if (null != a && null != a.X) {
    return a.X(a, c, d);
  }
  var e = Dc[ba(null == a ? null : a)];
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  e = Dc._;
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  throw ub("IPrintWithWriter.-pr-writer", a);
};
function Ec() {
}
var Fc = function Fc(a) {
  if (null != a && null != a.sf) {
    return a.sf(a);
  }
  var c = Fc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Fc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IPending.-realized?", a);
}, Gc = function Gc(a, c, d) {
  if (null != a && null != a.mg) {
    return a.mg(0, c, d);
  }
  var e = Gc[ba(null == a ? null : a)];
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  e = Gc._;
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  throw ub("IWatchable.-notify-watches", a);
}, Hc = function Hc(a) {
  if (null != a && null != a.Zd) {
    return a.Zd(a);
  }
  var c = Hc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Hc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IEditableCollection.-as-transient", a);
}, Ic = function Ic(a, c) {
  if (null != a && null != a.Id) {
    return a.Id(a, c);
  }
  var d = Ic[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = Ic._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("ITransientCollection.-conj!", a);
}, Jc = function Jc(a) {
  if (null != a && null != a.ae) {
    return a.ae(a);
  }
  var c = Jc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Jc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("ITransientCollection.-persistent!", a);
}, Kc = function Kc(a, c, d) {
  if (null != a && null != a.pe) {
    return a.pe(a, c, d);
  }
  var e = Kc[ba(null == a ? null : a)];
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  e = Kc._;
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  throw ub("ITransientAssociative.-assoc!", a);
}, Lc = function Lc(a, c) {
  if (null != a && null != a.tf) {
    return a.tf(a, c);
  }
  var d = Lc[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = Lc._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("ITransientMap.-dissoc!", a);
}, Mc = function Mc(a, c, d) {
  if (null != a && null != a.kg) {
    return a.kg(0, c, d);
  }
  var e = Mc[ba(null == a ? null : a)];
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  e = Mc._;
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  throw ub("ITransientVector.-assoc-n!", a);
};
function Pc() {
}
var Qc = function Qc(a, c) {
  if (null != a && null != a.vd) {
    return a.vd(a, c);
  }
  var d = Qc[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = Qc._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("IComparable.-compare", a);
}, Rc = function Rc(a) {
  if (null != a && null != a.gg) {
    return a.gg();
  }
  var c = Rc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Rc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IChunk.-drop-first", a);
}, Tc = function Tc(a) {
  if (null != a && null != a.qf) {
    return a.qf(a);
  }
  var c = Tc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Tc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IChunkedSeq.-chunked-first", a);
}, Uc = function Uc(a) {
  if (null != a && null != a.rf) {
    return a.rf(a);
  }
  var c = Uc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Uc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IChunkedSeq.-chunked-rest", a);
}, Vc = function Vc(a) {
  if (null != a && null != a.pf) {
    return a.pf(a);
  }
  var c = Vc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Vc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IChunkedNext.-chunked-next", a);
}, Wc = function Wc(a) {
  if (null != a && null != a.ne) {
    return a.ne(a);
  }
  var c = Wc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Wc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("INamed.-name", a);
}, Xc = function Xc(a) {
  if (null != a && null != a.oe) {
    return a.oe(a);
  }
  var c = Xc[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Xc._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("INamed.-namespace", a);
}, Yc = function Yc(a, c) {
  if (null != a && null != a.oh) {
    return a.oh(a, c);
  }
  var d = Yc[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = Yc._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("IReset.-reset!", a);
}, Zc = function Zc(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return Zc.a(arguments[0], arguments[1]);
    case 3:
      return Zc.c(arguments[0], arguments[1], arguments[2]);
    case 4:
      return Zc.K(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return Zc.ba(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
Zc.a = function(b, a) {
  if (null != b && null != b.qh) {
    return b.qh(b, a);
  }
  var c = Zc[ba(null == b ? null : b)];
  if (null != c) {
    return c.a ? c.a(b, a) : c.call(null, b, a);
  }
  c = Zc._;
  if (null != c) {
    return c.a ? c.a(b, a) : c.call(null, b, a);
  }
  throw ub("ISwap.-swap!", b);
};
Zc.c = function(b, a, c) {
  if (null != b && null != b.rh) {
    return b.rh(b, a, c);
  }
  var d = Zc[ba(null == b ? null : b)];
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  d = Zc._;
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  throw ub("ISwap.-swap!", b);
};
Zc.K = function(b, a, c, d) {
  if (null != b && null != b.sh) {
    return b.sh(b, a, c, d);
  }
  var e = Zc[ba(null == b ? null : b)];
  if (null != e) {
    return e.K ? e.K(b, a, c, d) : e.call(null, b, a, c, d);
  }
  e = Zc._;
  if (null != e) {
    return e.K ? e.K(b, a, c, d) : e.call(null, b, a, c, d);
  }
  throw ub("ISwap.-swap!", b);
};
Zc.ba = function(b, a, c, d, e) {
  if (null != b && null != b.th) {
    return b.th(b, a, c, d, e);
  }
  var f = Zc[ba(null == b ? null : b)];
  if (null != f) {
    return f.ba ? f.ba(b, a, c, d, e) : f.call(null, b, a, c, d, e);
  }
  f = Zc._;
  if (null != f) {
    return f.ba ? f.ba(b, a, c, d, e) : f.call(null, b, a, c, d, e);
  }
  throw ub("ISwap.-swap!", b);
};
Zc.N = 5;
var $c = function $c(a, c) {
  if (null != a && null != a.lg) {
    return a.lg(0, c);
  }
  var d = $c[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = $c._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("IVolatile.-vreset!", a);
}, ad = function ad(a) {
  if (null != a && null != a.ea) {
    return a.ea(a);
  }
  var c = ad[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = ad._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IIterable.-iterator", a);
};
function bd(b) {
  this.Uh = b;
  this.l = 1073741824;
  this.M = 0;
}
bd.prototype.xd = function(b, a) {
  return this.Uh.append(a);
};
bd.prototype.Nc = function() {
  return null;
};
function cd(b) {
  var a = new Oa, c = new bd(a);
  b.X(null, c, kb());
  c.Nc(null);
  return "" + q(a);
}
var dd = "undefined" !== typeof Math.imul && 0 !== Math.imul(4294967295, 5) ? function(b, a) {
  return Math.imul(b, a);
} : function(b, a) {
  var c = b & 65535, d = a & 65535;
  return c * d + ((b >>> 16 & 65535) * d + c * (a >>> 16 & 65535) << 16 >>> 0) | 0;
};
function ed(b) {
  b = dd(b | 0, -862048943);
  return dd(b << 15 | b >>> -15, 461845907);
}
function fd(b, a) {
  var c = (b | 0) ^ (a | 0);
  return dd(c << 13 | c >>> -13, 5) + -430675100 | 0;
}
function gd(b, a) {
  var c = (b | 0) ^ a, c = dd(c ^ c >>> 16, -2048144789), c = dd(c ^ c >>> 13, -1028477387);
  return c ^ c >>> 16;
}
var hd = {}, id = 0;
function jd(b) {
  255 < id && (hd = {}, id = 0);
  if (null == b) {
    return 0;
  }
  var a = hd[b];
  if ("number" !== typeof a) {
    a: {
      if (null != b) {
        if (a = b.length, 0 < a) {
          for (var c = 0, d = 0;;) {
            if (c < a) {
              var e = c + 1, d = dd(31, d) + b.charCodeAt(c), c = e
            } else {
              a = d;
              break a;
            }
          }
        } else {
          a = 0;
        }
      } else {
        a = 0;
      }
    }
    hd[b] = a;
    id += 1;
  }
  return b = a;
}
function kd(b) {
  if (null != b && (b.l & 4194304 || k === b.$h)) {
    return b.Y(null);
  }
  if ("number" === typeof b) {
    if (m(isFinite(b))) {
      return Math.floor(b) % 2147483647;
    }
    switch(b) {
      case Infinity:
        return 2146435072;
      case -Infinity:
        return -1048576;
      default:
        return 2146959360;
    }
  } else {
    return !0 === b ? b = 1231 : !1 === b ? b = 1237 : "string" === typeof b ? (b = jd(b), 0 !== b && (b = ed(b), b = fd(0, b), b = gd(b, 4))) : b = b instanceof Date ? b.valueOf() : null == b ? 0 : rc(b), b;
  }
}
function ld(b) {
  var a;
  a = b.name;
  var c;
  a: {
    c = 1;
    for (var d = 0;;) {
      if (c < a.length) {
        var e = c + 2, d = fd(d, ed(a.charCodeAt(c - 1) | a.charCodeAt(c) << 16));
        c = e;
      } else {
        c = d;
        break a;
      }
    }
  }
  c = 1 === (a.length & 1) ? c ^ ed(a.charCodeAt(a.length - 1)) : c;
  a = gd(c, dd(2, a.length));
  b = jd(b.Kb);
  return a ^ b + 2654435769 + (a << 6) + (a >> 2);
}
function md(b, a) {
  if (b.Xc === a.Xc) {
    return 0;
  }
  var c = rb(b.Kb);
  if (m(c ? a.Kb : c)) {
    return -1;
  }
  if (m(b.Kb)) {
    if (rb(a.Kb)) {
      return 1;
    }
    c = Ya(b.Kb, a.Kb);
    return 0 === c ? Ya(b.name, a.name) : c;
  }
  return Ya(b.name, a.name);
}
function nd(b, a, c, d, e) {
  this.Kb = b;
  this.name = a;
  this.Xc = c;
  this.Ud = d;
  this.Gb = e;
  this.l = 2154168321;
  this.M = 4096;
}
h = nd.prototype;
h.toString = function() {
  return this.Xc;
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.O = function(b, a) {
  return a instanceof nd ? this.Xc === a.Xc : !1;
};
h.call = function() {
  function b(a, b, c) {
    return t.c ? t.c(b, this, c) : t.call(null, b, this, c);
  }
  function a(a, b) {
    return t.a ? t.a(b, this) : t.call(null, b, this);
  }
  var c = null, c = function(c, e, f) {
    switch(arguments.length) {
      case 2:
        return a.call(this, 0, e);
      case 3:
        return b.call(this, 0, e, f);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  c.a = a;
  c.c = b;
  return c;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return t.a ? t.a(b, this) : t.call(null, b, this);
};
h.a = function(b, a) {
  return t.c ? t.c(b, this, a) : t.call(null, b, this, a);
};
h.S = function() {
  return this.Gb;
};
h.U = function(b, a) {
  return new nd(this.Kb, this.name, this.Xc, this.Ud, a);
};
h.Y = function() {
  var b = this.Ud;
  return null != b ? b : this.Ud = b = ld(this);
};
h.ne = function() {
  return this.name;
};
h.oe = function() {
  return this.Kb;
};
h.X = function(b, a) {
  return Ac(a, this.Xc);
};
var od = function od(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 1:
      return od.b(arguments[0]);
    case 2:
      return od.a(arguments[0], arguments[1]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
od.b = function(b) {
  if (b instanceof nd) {
    return b;
  }
  var a = b.indexOf("/");
  return 1 > a ? od.a(null, b) : od.a(b.substring(0, a), b.substring(a + 1, b.length));
};
od.a = function(b, a) {
  var c = null != b ? [q(b), q("/"), q(a)].join("") : a;
  return new nd(b, a, c, null, null);
};
od.N = 2;
function pd(b, a, c) {
  this.w = b;
  this.fe = a;
  this.Gb = c;
  this.l = 6717441;
  this.M = 0;
}
h = pd.prototype;
h.toString = function() {
  return [q("#'"), q(this.fe)].join("");
};
h.cd = function() {
  return this.w.o ? this.w.o() : this.w.call(null);
};
h.S = function() {
  return this.Gb;
};
h.U = function(b, a) {
  return new pd(this.w, this.fe, a);
};
h.O = function(b, a) {
  if (a instanceof pd) {
    var c = this.fe, d = a.fe;
    return v.a ? v.a(c, d) : v.call(null, c, d);
  }
  return !1;
};
h.Y = function() {
  return ld(this.fe);
};
h.call = function() {
  function b(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa, Y, ib) {
    a = this;
    a = a.w.o ? a.w.o() : a.w.call(null);
    return qd.Kc ? qd.Kc(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa, Y, ib) : qd.call(null, a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa, Y, ib);
  }
  function a(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa, Y) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa, Y);
  }
  function c(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa);
  }
  function d(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya);
  }
  function e(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la);
  }
  function f(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T);
  }
  function g(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O);
  }
  function n(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M);
  }
  function r(a, b, c, d, e, f, g, n, u, r, y, D, G, H) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n, u, r, y, D, G, H);
  }
  function u(a, b, c, d, e, f, g, n, u, r, y, D, G) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n, u, r, y, D, G);
  }
  function y(a, b, c, d, e, f, g, n, u, r, y, D) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n, u, r, y, D);
  }
  function D(a, b, c, d, e, f, g, n, u, r, y) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n, u, r, y);
  }
  function G(a, b, c, d, e, f, g, n, u, r) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n, u, r);
  }
  function H(a, b, c, d, e, f, g, n, u) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n, u);
  }
  function M(a, b, c, d, e, f, g, n) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g, n);
  }
  function O(a, b, c, d, e, f, g) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f, g);
  }
  function T(a, b, c, d, e, f) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e, f);
  }
  function qa(a, b, c, d, e) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d, e);
  }
  function la(a, b, c, d) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c, d);
  }
  function ya(a, b, c) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b, c);
  }
  function ib(a, b) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null, b);
  }
  function Sc(a) {
    a = this;
    return (a.w.o ? a.w.o() : a.w.call(null)).call(null);
  }
  var Y = null, Y = function(fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag, bg, rl, Tq) {
    switch(arguments.length) {
      case 1:
        return Sc.call(this, fb);
      case 2:
        return ib.call(this, fb, Fa);
      case 3:
        return ya.call(this, fb, Fa, Ua);
      case 4:
        return la.call(this, fb, Fa, Ua, Mb);
      case 5:
        return qa.call(this, fb, Fa, Ua, Mb, Va);
      case 6:
        return T.call(this, fb, Fa, Ua, Mb, Va, wb);
      case 7:
        return O.call(this, fb, Fa, Ua, Mb, Va, wb, Y);
      case 8:
        return M.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb);
      case 9:
        return H.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb);
      case 10:
        return G.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb);
      case 11:
        return D.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb, lc);
      case 12:
        return y.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb, lc, Cc);
      case 13:
        return u.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb, lc, Cc, uc);
      case 14:
        return r.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb, lc, Cc, uc, Oc);
      case 15:
        return n.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb, lc, Cc, uc, Oc, wd);
      case 16:
        return g.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee);
      case 17:
        return f.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od);
      case 18:
        return e.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf);
      case 19:
        return d.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag);
      case 20:
        return c.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag, bg);
      case 21:
        return a.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag, bg, rl);
      case 22:
        return b.call(this, fb, Fa, Ua, Mb, Va, wb, Y, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag, bg, rl, Tq);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  Y.b = Sc;
  Y.a = ib;
  Y.c = ya;
  Y.K = la;
  Y.ba = qa;
  Y.Xa = T;
  Y.Oa = O;
  Y.Za = M;
  Y.qb = H;
  Y.fb = G;
  Y.gb = D;
  Y.hb = y;
  Y.ib = u;
  Y.jb = r;
  Y.kb = n;
  Y.lb = g;
  Y.mb = f;
  Y.nb = e;
  Y.ob = d;
  Y.pb = c;
  Y.ke = a;
  Y.Kc = b;
  return Y;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.o = function() {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null);
};
h.b = function(b) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b);
};
h.a = function(b, a) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a);
};
h.c = function(b, a, c) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c);
};
h.K = function(b, a, c, d) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d);
};
h.ba = function(b, a, c, d, e) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e);
};
h.Xa = function(b, a, c, d, e, f) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f);
};
h.Oa = function(b, a, c, d, e, f, g) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g);
};
h.Za = function(b, a, c, d, e, f, g, n) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g, n);
};
h.qb = function(b, a, c, d, e, f, g, n, r) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g, n, r);
};
h.fb = function(b, a, c, d, e, f, g, n, r, u) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g, n, r, u);
};
h.gb = function(b, a, c, d, e, f, g, n, r, u, y) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g, n, r, u, y);
};
h.hb = function(b, a, c, d, e, f, g, n, r, u, y, D) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g, n, r, u, y, D);
};
h.ib = function(b, a, c, d, e, f, g, n, r, u, y, D, G) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g, n, r, u, y, D, G);
};
h.jb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H);
};
h.kb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M);
};
h.lb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O);
};
h.mb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T);
};
h.nb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa);
};
h.ob = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la);
};
h.pb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya) {
  return (this.w.o ? this.w.o() : this.w.call(null)).call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya);
};
h.ke = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib) {
  var Sc = this.w.o ? this.w.o() : this.w.call(null);
  return qd.Kc ? qd.Kc(Sc, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib) : qd.call(null, Sc, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib);
};
function w(b) {
  if (null == b) {
    return null;
  }
  if (null != b && (b.l & 8388608 || k === b.ph)) {
    return b.aa(null);
  }
  if (qb(b) || "string" === typeof b) {
    return 0 === b.length ? null : new rd(b, 0, null);
  }
  if (p(sc, b)) {
    return tc(b);
  }
  throw Error([q(b), q(" is not ISeqable")].join(""));
}
function x(b) {
  if (null == b) {
    return null;
  }
  if (null != b && (b.l & 64 || k === b.I)) {
    return b.Ya(null);
  }
  b = w(b);
  return null == b ? null : Nb(b);
}
function sd(b) {
  return null != b ? null != b && (b.l & 64 || k === b.I) ? b.xb(null) : (b = w(b)) ? Ob(b) : td : td;
}
function z(b) {
  return null == b ? null : null != b && (b.l & 128 || k === b.Xe) ? b.Ib(null) : w(sd(b));
}
var v = function v(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 1:
      return v.b(arguments[0]);
    case 2:
      return v.a(arguments[0], arguments[1]);
    default:
      return v.j(arguments[0], arguments[1], new rd(c.slice(2), 0, null));
  }
};
v.b = function() {
  return !0;
};
v.a = function(b, a) {
  return null == b ? null == a : b === a || qc(b, a);
};
v.j = function(b, a, c) {
  for (;;) {
    if (v.a(b, a)) {
      if (z(c)) {
        b = a, a = x(c), c = z(c);
      } else {
        return v.a(a, x(c));
      }
    } else {
      return !1;
    }
  }
};
v.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  c = z(c);
  return v.j(a, b, c);
};
v.N = 2;
function ud(b) {
  this.sa = b;
}
ud.prototype.next = function() {
  if (null != this.sa) {
    var b = x(this.sa);
    this.sa = z(this.sa);
    return {value:b, done:!1};
  }
  return {value:null, done:!0};
};
function vd(b) {
  return new ud(w(b));
}
function xd(b, a) {
  var c = ed(b), c = fd(0, c);
  return gd(c, a);
}
function yd(b) {
  var a = 0, c = 1;
  for (b = w(b);;) {
    if (null != b) {
      a += 1, c = dd(31, c) + kd(x(b)) | 0, b = z(b);
    } else {
      return xd(c, a);
    }
  }
}
var zd = xd(1, 0);
function Ad(b) {
  var a = 0, c = 0;
  for (b = w(b);;) {
    if (null != b) {
      a += 1, c = c + kd(x(b)) | 0, b = z(b);
    } else {
      return xd(c, a);
    }
  }
}
var Bd = xd(0, 0);
Db["null"] = !0;
Eb["null"] = function() {
  return 0;
};
Date.prototype.O = function(b, a) {
  return a instanceof Date && this.valueOf() === a.valueOf();
};
Date.prototype.je = k;
Date.prototype.vd = function(b, a) {
  if (a instanceof Date) {
    return Ya(this.valueOf(), a.valueOf());
  }
  throw Error([q("Cannot compare "), q(this), q(" to "), q(a)].join(""));
};
qc.number = function(b, a) {
  return b === a;
};
ic["function"] = !0;
jc["function"] = function() {
  return null;
};
rc._ = function(b) {
  return fa(b);
};
function Cd(b) {
  return b + 1;
}
function Dd(b) {
  this.w = b;
  this.l = 32768;
  this.M = 0;
}
Dd.prototype.cd = function() {
  return this.w;
};
function Ed(b) {
  return b instanceof Dd;
}
function A(b) {
  return hc(b);
}
function Fd(b, a) {
  var c = Eb(b);
  if (0 === c) {
    return a.o ? a.o() : a.call(null);
  }
  for (var d = Kb.a(b, 0), e = 1;;) {
    if (e < c) {
      var f = Kb.a(b, e), d = a.a ? a.a(d, f) : a.call(null, d, f);
      if (Ed(d)) {
        return hc(d);
      }
      e += 1;
    } else {
      return d;
    }
  }
}
function Gd(b, a, c) {
  var d = Eb(b), e = c;
  for (c = 0;;) {
    if (c < d) {
      var f = Kb.a(b, c), e = a.a ? a.a(e, f) : a.call(null, e, f);
      if (Ed(e)) {
        return hc(e);
      }
      c += 1;
    } else {
      return e;
    }
  }
}
function Hd(b, a) {
  var c = b.length;
  if (0 === b.length) {
    return a.o ? a.o() : a.call(null);
  }
  for (var d = b[0], e = 1;;) {
    if (e < c) {
      var f = b[e], d = a.a ? a.a(d, f) : a.call(null, d, f);
      if (Ed(d)) {
        return hc(d);
      }
      e += 1;
    } else {
      return d;
    }
  }
}
function Id(b, a, c) {
  var d = b.length, e = c;
  for (c = 0;;) {
    if (c < d) {
      var f = b[c], e = a.a ? a.a(e, f) : a.call(null, e, f);
      if (Ed(e)) {
        return hc(e);
      }
      c += 1;
    } else {
      return e;
    }
  }
}
function Jd(b, a, c, d) {
  for (var e = b.length;;) {
    if (d < e) {
      var f = b[d];
      c = a.a ? a.a(c, f) : a.call(null, c, f);
      if (Ed(c)) {
        return hc(c);
      }
      d += 1;
    } else {
      return c;
    }
  }
}
function Kd(b) {
  return null != b ? b.l & 2 || k === b.dh ? !0 : b.l ? !1 : p(Db, b) : p(Db, b);
}
function Ld(b) {
  return null != b ? b.l & 16 || k === b.ig ? !0 : b.l ? !1 : p(Ib, b) : p(Ib, b);
}
function Md(b, a, c) {
  var d = B.b ? B.b(b) : B.call(null, b);
  if (c >= d) {
    return -1;
  }
  !(0 < c) && 0 > c && (c += d, c = 0 > c ? 0 : c);
  for (;;) {
    if (c < d) {
      if (v.a(Nd ? Nd(b, c) : Pd.call(null, b, c), a)) {
        return c;
      }
      c += 1;
    } else {
      return -1;
    }
  }
}
function Qd(b, a, c) {
  var d = B.b ? B.b(b) : B.call(null, b);
  if (0 === d) {
    return -1;
  }
  0 < c ? (--d, c = d < c ? d : c) : c = 0 > c ? d + c : c;
  for (;;) {
    if (0 <= c) {
      if (v.a(Nd ? Nd(b, c) : Pd.call(null, b, c), a)) {
        return c;
      }
      --c;
    } else {
      return -1;
    }
  }
}
function Rd(b, a) {
  this.A = b;
  this.V = a;
}
Rd.prototype.ub = function() {
  return this.V < this.A.length;
};
Rd.prototype.next = function() {
  var b = this.A[this.V];
  this.V += 1;
  return b;
};
function rd(b, a, c) {
  this.A = b;
  this.V = a;
  this.R = c;
  this.l = 166592766;
  this.M = 8192;
}
h = rd.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B.b ? B.b(this) : B.call(null, this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.ra = function(b, a) {
  var c = a + this.V;
  return c < this.A.length ? this.A[c] : null;
};
h.Hb = function(b, a, c) {
  b = a + this.V;
  return b < this.A.length ? this.A[b] : c;
};
h.ea = function() {
  return new Rd(this.A, this.V);
};
h.S = function() {
  return this.R;
};
h.Ib = function() {
  return this.V + 1 < this.A.length ? new rd(this.A, this.V + 1, null) : null;
};
h.$ = function() {
  var b = this.A.length - this.V;
  return 0 > b ? 0 : b;
};
h.$d = function() {
  var b = Eb(this);
  return 0 < b ? new Sd(this, b - 1, null) : null;
};
h.Y = function() {
  return yd(this);
};
h.O = function(b, a) {
  return Td.a ? Td.a(this, a) : Td.call(null, this, a);
};
h.Na = function() {
  return td;
};
h.$a = function(b, a) {
  return Jd(this.A, a, this.A[this.V], this.V + 1);
};
h.ab = function(b, a, c) {
  return Jd(this.A, a, c, this.V);
};
h.Ya = function() {
  return this.A[this.V];
};
h.xb = function() {
  return this.V + 1 < this.A.length ? new rd(this.A, this.V + 1, null) : td;
};
h.aa = function() {
  return this.V < this.A.length ? this : null;
};
h.U = function(b, a) {
  return new rd(this.A, this.V, a);
};
h.Z = function(b, a) {
  return Ud.a ? Ud.a(a, this) : Ud.call(null, a, this);
};
rd.prototype[xb] = function() {
  return vd(this);
};
function Vd(b, a) {
  return a < b.length ? new rd(b, a, null) : null;
}
function C(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 1:
      return Vd(arguments[0], 0);
    case 2:
      return Vd(arguments[0], arguments[1]);
    default:
      throw Error([q("Invalid arity: "), q(a.length)].join(""));;
  }
}
function Sd(b, a, c) {
  this.We = b;
  this.V = a;
  this.R = c;
  this.l = 32374990;
  this.M = 8192;
}
h = Sd.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B.b ? B.b(this) : B.call(null, this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.R;
};
h.Ib = function() {
  return 0 < this.V ? new Sd(this.We, this.V - 1, null) : null;
};
h.$ = function() {
  return this.V + 1;
};
h.Y = function() {
  return yd(this);
};
h.O = function(b, a) {
  return Td.a ? Td.a(this, a) : Td.call(null, this, a);
};
h.Na = function() {
  var b = this.R;
  return Wd.a ? Wd.a(td, b) : Wd.call(null, td, b);
};
h.$a = function(b, a) {
  return Xd ? Xd(a, this) : Yd.call(null, a, this);
};
h.ab = function(b, a, c) {
  return Zd ? Zd(a, c, this) : Yd.call(null, a, c, this);
};
h.Ya = function() {
  return Kb.a(this.We, this.V);
};
h.xb = function() {
  return 0 < this.V ? new Sd(this.We, this.V - 1, null) : td;
};
h.aa = function() {
  return this;
};
h.U = function(b, a) {
  return new Sd(this.We, this.V, a);
};
h.Z = function(b, a) {
  return Ud.a ? Ud.a(a, this) : Ud.call(null, a, this);
};
Sd.prototype[xb] = function() {
  return vd(this);
};
function $d(b) {
  return x(z(b));
}
function ae(b) {
  return x(z(b));
}
function be(b) {
  for (;;) {
    var a = z(b);
    if (null != a) {
      b = a;
    } else {
      return x(b);
    }
  }
}
qc._ = function(b, a) {
  return b === a;
};
var ce = function ce(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 0:
      return ce.o();
    case 1:
      return ce.b(arguments[0]);
    case 2:
      return ce.a(arguments[0], arguments[1]);
    default:
      return ce.j(arguments[0], arguments[1], new rd(c.slice(2), 0, null));
  }
};
ce.o = function() {
  return E;
};
ce.b = function(b) {
  return b;
};
ce.a = function(b, a) {
  return null != b ? Hb(b, a) : Hb(td, a);
};
ce.j = function(b, a, c) {
  for (;;) {
    if (m(c)) {
      b = ce.a(b, a), a = x(c), c = z(c);
    } else {
      return ce.a(b, a);
    }
  }
};
ce.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  c = z(c);
  return ce.j(a, b, c);
};
ce.N = 2;
function B(b) {
  if (null != b) {
    if (null != b && (b.l & 2 || k === b.dh)) {
      b = b.$(null);
    } else {
      if (qb(b)) {
        b = b.length;
      } else {
        if ("string" === typeof b) {
          b = b.length;
        } else {
          if (null != b && (b.l & 8388608 || k === b.ph)) {
            a: {
              b = w(b);
              for (var a = 0;;) {
                if (Kd(b)) {
                  b = a + Eb(b);
                  break a;
                }
                b = z(b);
                a += 1;
              }
            }
          } else {
            b = Eb(b);
          }
        }
      }
    }
  } else {
    b = 0;
  }
  return b;
}
function de(b, a, c) {
  for (;;) {
    if (null == b) {
      return c;
    }
    if (0 === a) {
      return w(b) ? x(b) : c;
    }
    if (Ld(b)) {
      return Kb.c(b, a, c);
    }
    if (w(b)) {
      b = z(b), --a;
    } else {
      return c;
    }
  }
}
function Pd(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 2:
      return Nd(arguments[0], arguments[1]);
    case 3:
      return F(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(a.length)].join(""));;
  }
}
function Nd(b, a) {
  if ("number" !== typeof a) {
    throw Error("Index argument to nth must be a number");
  }
  if (null == b) {
    return b;
  }
  if (null != b && (b.l & 16 || k === b.ig)) {
    return b.ra(null, a);
  }
  if (qb(b)) {
    if (0 <= a && a < b.length) {
      return b[a];
    }
    throw Error("Index out of bounds");
  }
  if ("string" === typeof b) {
    if (0 <= a && a < b.length) {
      return b.charAt(a);
    }
    throw Error("Index out of bounds");
  }
  if (null != b && (b.l & 64 || k === b.I)) {
    var c;
    a: {
      c = b;
      for (var d = a;;) {
        if (null == c) {
          throw Error("Index out of bounds");
        }
        if (0 === d) {
          if (w(c)) {
            c = x(c);
            break a;
          }
          throw Error("Index out of bounds");
        }
        if (Ld(c)) {
          c = Kb.a(c, d);
          break a;
        }
        if (w(c)) {
          c = z(c), --d;
        } else {
          throw Error("Index out of bounds");
        }
      }
    }
    return c;
  }
  if (p(Ib, b)) {
    return Kb.a(b, a);
  }
  throw Error([q("nth not supported on this type "), q(vb(tb(b)))].join(""));
}
function F(b, a, c) {
  if ("number" !== typeof a) {
    throw Error("Index argument to nth must be a number.");
  }
  if (null == b) {
    return c;
  }
  if (null != b && (b.l & 16 || k === b.ig)) {
    return b.Hb(null, a, c);
  }
  if (qb(b)) {
    return 0 <= a && a < b.length ? b[a] : c;
  }
  if ("string" === typeof b) {
    return 0 <= a && a < b.length ? b.charAt(a) : c;
  }
  if (null != b && (b.l & 64 || k === b.I)) {
    return de(b, a, c);
  }
  if (p(Ib, b)) {
    return Kb.a(b, a);
  }
  throw Error([q("nth not supported on this type "), q(vb(tb(b)))].join(""));
}
var t = function t(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return t.a(arguments[0], arguments[1]);
    case 3:
      return t.c(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
t.a = function(b, a) {
  return null == b ? null : null != b && (b.l & 256 || k === b.ih) ? b.W(null, a) : qb(b) ? a < b.length ? b[a | 0] : null : "string" === typeof b ? null != a && a < b.length ? b[a | 0] : null : p(Rb, b) ? Tb.a(b, a) : null;
};
t.c = function(b, a, c) {
  return null != b ? null != b && (b.l & 256 || k === b.ih) ? b.T(null, a, c) : qb(b) ? a < b.length ? b[a | 0] : c : "string" === typeof b ? a < b.length ? b[a | 0] : c : p(Rb, b) ? Tb.c(b, a, c) : c : c;
};
t.N = 3;
var I = function I(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 3:
      return I.c(arguments[0], arguments[1], arguments[2]);
    default:
      return I.j(arguments[0], arguments[1], arguments[2], new rd(c.slice(3), 0, null));
  }
};
I.c = function(b, a, c) {
  return null != b ? Vb(b, a, c) : fe([a], [c]);
};
I.j = function(b, a, c, d) {
  for (;;) {
    if (b = I.c(b, a, c), m(d)) {
      a = x(d), c = $d(d), d = z(z(d));
    } else {
      return b;
    }
  }
};
I.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  var d = z(c), c = x(d), d = z(d);
  return I.j(a, b, c, d);
};
I.N = 3;
var J = function J(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 1:
      return J.b(arguments[0]);
    case 2:
      return J.a(arguments[0], arguments[1]);
    default:
      return J.j(arguments[0], arguments[1], new rd(c.slice(2), 0, null));
  }
};
J.b = function(b) {
  return b;
};
J.a = function(b, a) {
  return null == b ? null : Xb(b, a);
};
J.j = function(b, a, c) {
  for (;;) {
    if (null == b) {
      return null;
    }
    b = J.a(b, a);
    if (m(c)) {
      a = x(c), c = z(c);
    } else {
      return b;
    }
  }
};
J.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  c = z(c);
  return J.j(a, b, c);
};
J.N = 2;
function ge(b, a) {
  this.H = b;
  this.R = a;
  this.l = 393217;
  this.M = 0;
}
h = ge.prototype;
h.S = function() {
  return this.R;
};
h.U = function(b, a) {
  return new ge(this.H, a);
};
h.call = function() {
  function b(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa, Y, ib) {
    a = this;
    return qd.Kc ? qd.Kc(a.H, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa, Y, ib) : qd.call(null, a.H, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa, Y, ib);
  }
  function a(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa, Y) {
    a = this;
    return a.H.pb ? a.H.pb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa, Y) : a.H.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa, Y);
  }
  function c(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa) {
    a = this;
    return a.H.ob ? a.H.ob(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa) : a.H.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, qa);
  }
  function d(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya) {
    a = this;
    return a.H.nb ? a.H.nb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya) : a.H.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya);
  }
  function e(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la) {
    a = this;
    return a.H.mb ? a.H.mb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la) : a.H.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la);
  }
  function f(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T) {
    a = this;
    return a.H.lb ? a.H.lb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T) : a.H.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T);
  }
  function g(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O) {
    a = this;
    return a.H.kb ? a.H.kb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O) : a.H.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O);
  }
  function n(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M) {
    a = this;
    return a.H.jb ? a.H.jb(b, c, d, e, f, g, n, u, r, y, D, G, H, M) : a.H.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M);
  }
  function r(a, b, c, d, e, f, g, n, u, r, y, D, G, H) {
    a = this;
    return a.H.ib ? a.H.ib(b, c, d, e, f, g, n, u, r, y, D, G, H) : a.H.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H);
  }
  function u(a, b, c, d, e, f, g, n, u, r, y, D, G) {
    a = this;
    return a.H.hb ? a.H.hb(b, c, d, e, f, g, n, u, r, y, D, G) : a.H.call(null, b, c, d, e, f, g, n, u, r, y, D, G);
  }
  function y(a, b, c, d, e, f, g, n, u, r, y, D) {
    a = this;
    return a.H.gb ? a.H.gb(b, c, d, e, f, g, n, u, r, y, D) : a.H.call(null, b, c, d, e, f, g, n, u, r, y, D);
  }
  function D(a, b, c, d, e, f, g, n, u, r, y) {
    a = this;
    return a.H.fb ? a.H.fb(b, c, d, e, f, g, n, u, r, y) : a.H.call(null, b, c, d, e, f, g, n, u, r, y);
  }
  function G(a, b, c, d, e, f, g, n, u, r) {
    a = this;
    return a.H.qb ? a.H.qb(b, c, d, e, f, g, n, u, r) : a.H.call(null, b, c, d, e, f, g, n, u, r);
  }
  function H(a, b, c, d, e, f, g, n, u) {
    a = this;
    return a.H.Za ? a.H.Za(b, c, d, e, f, g, n, u) : a.H.call(null, b, c, d, e, f, g, n, u);
  }
  function M(a, b, c, d, e, f, g, n) {
    a = this;
    return a.H.Oa ? a.H.Oa(b, c, d, e, f, g, n) : a.H.call(null, b, c, d, e, f, g, n);
  }
  function O(a, b, c, d, e, f, g) {
    a = this;
    return a.H.Xa ? a.H.Xa(b, c, d, e, f, g) : a.H.call(null, b, c, d, e, f, g);
  }
  function T(a, b, c, d, e, f) {
    a = this;
    return a.H.ba ? a.H.ba(b, c, d, e, f) : a.H.call(null, b, c, d, e, f);
  }
  function qa(a, b, c, d, e) {
    a = this;
    return a.H.K ? a.H.K(b, c, d, e) : a.H.call(null, b, c, d, e);
  }
  function la(a, b, c, d) {
    a = this;
    return a.H.c ? a.H.c(b, c, d) : a.H.call(null, b, c, d);
  }
  function ya(a, b, c) {
    a = this;
    return a.H.a ? a.H.a(b, c) : a.H.call(null, b, c);
  }
  function ib(a, b) {
    a = this;
    return a.H.b ? a.H.b(b) : a.H.call(null, b);
  }
  function Sc(a) {
    a = this;
    return a.H.o ? a.H.o() : a.H.call(null);
  }
  var Y = null, Y = function(fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag, bg, rl, Tq) {
    switch(arguments.length) {
      case 1:
        return Sc.call(this, fb);
      case 2:
        return ib.call(this, fb, Fa);
      case 3:
        return ya.call(this, fb, Fa, Ua);
      case 4:
        return la.call(this, fb, Fa, Ua, Y);
      case 5:
        return qa.call(this, fb, Fa, Ua, Y, Va);
      case 6:
        return T.call(this, fb, Fa, Ua, Y, Va, wb);
      case 7:
        return O.call(this, fb, Fa, Ua, Y, Va, wb, Nc);
      case 8:
        return M.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb);
      case 9:
        return H.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb);
      case 10:
        return G.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb);
      case 11:
        return D.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb, lc);
      case 12:
        return y.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb, lc, Cc);
      case 13:
        return u.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc);
      case 14:
        return r.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc);
      case 15:
        return n.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd);
      case 16:
        return g.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee);
      case 17:
        return f.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od);
      case 18:
        return e.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf);
      case 19:
        return d.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag);
      case 20:
        return c.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag, bg);
      case 21:
        return a.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag, bg, rl);
      case 22:
        return b.call(this, fb, Fa, Ua, Y, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag, bg, rl, Tq);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  Y.b = Sc;
  Y.a = ib;
  Y.c = ya;
  Y.K = la;
  Y.ba = qa;
  Y.Xa = T;
  Y.Oa = O;
  Y.Za = M;
  Y.qb = H;
  Y.fb = G;
  Y.gb = D;
  Y.hb = y;
  Y.ib = u;
  Y.jb = r;
  Y.kb = n;
  Y.lb = g;
  Y.mb = f;
  Y.nb = e;
  Y.ob = d;
  Y.pb = c;
  Y.ke = a;
  Y.Kc = b;
  return Y;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.o = function() {
  return this.H.o ? this.H.o() : this.H.call(null);
};
h.b = function(b) {
  return this.H.b ? this.H.b(b) : this.H.call(null, b);
};
h.a = function(b, a) {
  return this.H.a ? this.H.a(b, a) : this.H.call(null, b, a);
};
h.c = function(b, a, c) {
  return this.H.c ? this.H.c(b, a, c) : this.H.call(null, b, a, c);
};
h.K = function(b, a, c, d) {
  return this.H.K ? this.H.K(b, a, c, d) : this.H.call(null, b, a, c, d);
};
h.ba = function(b, a, c, d, e) {
  return this.H.ba ? this.H.ba(b, a, c, d, e) : this.H.call(null, b, a, c, d, e);
};
h.Xa = function(b, a, c, d, e, f) {
  return this.H.Xa ? this.H.Xa(b, a, c, d, e, f) : this.H.call(null, b, a, c, d, e, f);
};
h.Oa = function(b, a, c, d, e, f, g) {
  return this.H.Oa ? this.H.Oa(b, a, c, d, e, f, g) : this.H.call(null, b, a, c, d, e, f, g);
};
h.Za = function(b, a, c, d, e, f, g, n) {
  return this.H.Za ? this.H.Za(b, a, c, d, e, f, g, n) : this.H.call(null, b, a, c, d, e, f, g, n);
};
h.qb = function(b, a, c, d, e, f, g, n, r) {
  return this.H.qb ? this.H.qb(b, a, c, d, e, f, g, n, r) : this.H.call(null, b, a, c, d, e, f, g, n, r);
};
h.fb = function(b, a, c, d, e, f, g, n, r, u) {
  return this.H.fb ? this.H.fb(b, a, c, d, e, f, g, n, r, u) : this.H.call(null, b, a, c, d, e, f, g, n, r, u);
};
h.gb = function(b, a, c, d, e, f, g, n, r, u, y) {
  return this.H.gb ? this.H.gb(b, a, c, d, e, f, g, n, r, u, y) : this.H.call(null, b, a, c, d, e, f, g, n, r, u, y);
};
h.hb = function(b, a, c, d, e, f, g, n, r, u, y, D) {
  return this.H.hb ? this.H.hb(b, a, c, d, e, f, g, n, r, u, y, D) : this.H.call(null, b, a, c, d, e, f, g, n, r, u, y, D);
};
h.ib = function(b, a, c, d, e, f, g, n, r, u, y, D, G) {
  return this.H.ib ? this.H.ib(b, a, c, d, e, f, g, n, r, u, y, D, G) : this.H.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G);
};
h.jb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H) {
  return this.H.jb ? this.H.jb(b, a, c, d, e, f, g, n, r, u, y, D, G, H) : this.H.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H);
};
h.kb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M) {
  return this.H.kb ? this.H.kb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M) : this.H.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M);
};
h.lb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O) {
  return this.H.lb ? this.H.lb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O) : this.H.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O);
};
h.mb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T) {
  return this.H.mb ? this.H.mb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T) : this.H.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T);
};
h.nb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa) {
  return this.H.nb ? this.H.nb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa) : this.H.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa);
};
h.ob = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la) {
  return this.H.ob ? this.H.ob(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la) : this.H.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la);
};
h.pb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya) {
  return this.H.pb ? this.H.pb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya) : this.H.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya);
};
h.ke = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib) {
  return qd.Kc ? qd.Kc(this.H, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib) : qd.call(null, this.H, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib);
};
function Wd(b, a) {
  return ea(b) ? new ge(b, a) : null == b ? null : mc(b, a);
}
function he(b) {
  var a = null != b;
  return (a ? null != b ? b.l & 131072 || k === b.lh || (b.l ? 0 : p(ic, b)) : p(ic, b) : a) ? jc(b) : null;
}
function ie(b) {
  return null == b ? null : cc(b);
}
function je(b) {
  return null == b ? null : dc(b);
}
var ke = function ke(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 1:
      return ke.b(arguments[0]);
    case 2:
      return ke.a(arguments[0], arguments[1]);
    default:
      return ke.j(arguments[0], arguments[1], new rd(c.slice(2), 0, null));
  }
};
ke.b = function(b) {
  return b;
};
ke.a = function(b, a) {
  return null == b ? null : bc(b, a);
};
ke.j = function(b, a, c) {
  for (;;) {
    if (null == b) {
      return null;
    }
    b = ke.a(b, a);
    if (m(c)) {
      a = x(c), c = z(c);
    } else {
      return b;
    }
  }
};
ke.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  c = z(c);
  return ke.j(a, b, c);
};
ke.N = 2;
function le(b) {
  return null == b || rb(w(b));
}
function me(b) {
  return null == b ? !1 : null != b ? b.l & 8 || k === b.Yh ? !0 : b.l ? !1 : p(Gb, b) : p(Gb, b);
}
function ne(b) {
  return null == b ? !1 : null != b ? b.l & 4096 || k === b.fi ? !0 : b.l ? !1 : p(ac, b) : p(ac, b);
}
function oe(b) {
  return null != b ? b.l & 16777216 || k === b.ei ? !0 : b.l ? !1 : p(vc, b) : p(vc, b);
}
function pe(b) {
  return null == b ? !1 : null != b ? b.l & 1024 || k === b.jh ? !0 : b.l ? !1 : p(Wb, b) : p(Wb, b);
}
function qe(b) {
  return null != b ? b.l & 67108864 || k === b.ci ? !0 : b.l ? !1 : p(xc, b) : p(xc, b);
}
function re(b) {
  return null != b ? b.l & 16384 || k === b.gi ? !0 : b.l ? !1 : p(ec, b) : p(ec, b);
}
function se(b) {
  return null != b ? b.M & 512 || k === b.Xh ? !0 : !1 : !1;
}
function te(b) {
  var a = [];
  za(b, function(a, b) {
    return function(a, c) {
      return b.push(c);
    };
  }(b, a));
  return a;
}
function ue(b, a, c, d, e) {
  for (;0 !== e;) {
    c[d] = b[a], d += 1, --e, a += 1;
  }
}
var ve = {};
function we(b) {
  return null == b ? !1 : null != b ? b.l & 64 || k === b.I ? !0 : b.l ? !1 : p(Lb, b) : p(Lb, b);
}
function xe(b) {
  return null == b ? !1 : !1 === b ? !1 : !0;
}
function ye(b) {
  return "number" === typeof b && !isNaN(b) && Infinity !== b && parseFloat(b) === parseInt(b, 10);
}
function ze(b, a) {
  return t.c(b, a, ve) === ve ? !1 : !0;
}
function Ae(b, a) {
  if (b === a) {
    return 0;
  }
  if (null == b) {
    return -1;
  }
  if (null == a) {
    return 1;
  }
  if ("number" === typeof b) {
    if ("number" === typeof a) {
      return Ya(b, a);
    }
    throw Error([q("Cannot compare "), q(b), q(" to "), q(a)].join(""));
  }
  if (null != b ? b.M & 2048 || k === b.je || (b.M ? 0 : p(Pc, b)) : p(Pc, b)) {
    return Qc(b, a);
  }
  if ("string" !== typeof b && !qb(b) && !0 !== b && !1 !== b || tb(b) !== tb(a)) {
    throw Error([q("Cannot compare "), q(b), q(" to "), q(a)].join(""));
  }
  return Ya(b, a);
}
function Be(b, a) {
  var c = B(b), d = B(a);
  if (c < d) {
    c = -1;
  } else {
    if (c > d) {
      c = 1;
    } else {
      if (0 === c) {
        c = 0;
      } else {
        a: {
          for (d = 0;;) {
            var e = Ae(Nd(b, d), Nd(a, d));
            if (0 === e && d + 1 < c) {
              d += 1;
            } else {
              c = e;
              break a;
            }
          }
        }
      }
    }
  }
  return c;
}
function Ce(b) {
  return v.a(b, Ae) ? Ae : function(a, c) {
    var d = b.a ? b.a(a, c) : b.call(null, a, c);
    return "number" === typeof d ? d : m(d) ? -1 : m(b.a ? b.a(c, a) : b.call(null, c, a)) ? 1 : 0;
  };
}
function De(b, a) {
  if (w(a)) {
    var c = Ee.b ? Ee.b(a) : Ee.call(null, a), d = Ce(b);
    Za(c, d);
    return w(c);
  }
  return td;
}
function Yd(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 2:
      return Xd(arguments[0], arguments[1]);
    case 3:
      return Zd(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(a.length)].join(""));;
  }
}
function Xd(b, a) {
  var c = w(a);
  if (c) {
    var d = x(c), c = z(c);
    return Cb.c ? Cb.c(b, d, c) : Cb.call(null, b, d, c);
  }
  return b.o ? b.o() : b.call(null);
}
function Zd(b, a, c) {
  for (c = w(c);;) {
    if (c) {
      var d = x(c);
      a = b.a ? b.a(a, d) : b.call(null, a, d);
      if (Ed(a)) {
        return hc(a);
      }
      c = z(c);
    } else {
      return a;
    }
  }
}
var Cb = function Cb(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return Cb.a(arguments[0], arguments[1]);
    case 3:
      return Cb.c(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
Cb.a = function(b, a) {
  return null != a && (a.l & 524288 || k === a.nh) ? a.$a(null, b) : qb(a) ? Hd(a, b) : "string" === typeof a ? Hd(a, b) : p(nc, a) ? oc.a(a, b) : Xd(b, a);
};
Cb.c = function(b, a, c) {
  return null != c && (c.l & 524288 || k === c.nh) ? c.ab(null, b, a) : qb(c) ? Id(c, b, a) : "string" === typeof c ? Id(c, b, a) : p(nc, c) ? oc.c(c, b, a) : Zd(b, a, c);
};
Cb.N = 3;
function Fe(b, a, c) {
  return null != c ? pc(c, b, a) : a;
}
function Ge(b) {
  return b;
}
function He(b, a, c, d) {
  b = b.b ? b.b(a) : b.call(null, a);
  c = Cb.c(b, c, d);
  return b.b ? b.b(c) : b.call(null, c);
}
var Ie = function Ie(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 0:
      return Ie.o();
    case 1:
      return Ie.b(arguments[0]);
    case 2:
      return Ie.a(arguments[0], arguments[1]);
    default:
      return Ie.j(arguments[0], arguments[1], new rd(c.slice(2), 0, null));
  }
};
Ie.o = function() {
  return 0;
};
Ie.b = function(b) {
  return b;
};
Ie.a = function(b, a) {
  return b + a;
};
Ie.j = function(b, a, c) {
  return Cb.c(Ie, b + a, c);
};
Ie.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  c = z(c);
  return Ie.j(a, b, c);
};
Ie.N = 2;
var Je = function Je(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 1:
      return Je.b(arguments[0]);
    case 2:
      return Je.a(arguments[0], arguments[1]);
    default:
      return Je.j(arguments[0], arguments[1], new rd(c.slice(2), 0, null));
  }
};
Je.b = function() {
  return !0;
};
Je.a = function(b, a) {
  return b > a;
};
Je.j = function(b, a, c) {
  for (;;) {
    if (b > a) {
      if (z(c)) {
        b = a, a = x(c), c = z(c);
      } else {
        return a > x(c);
      }
    } else {
      return !1;
    }
  }
};
Je.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  c = z(c);
  return Je.j(a, b, c);
};
Je.N = 2;
function Ke(b) {
  if ("number" === typeof b) {
    return String.fromCharCode(b);
  }
  if ("string" === typeof b && 1 === b.length) {
    return b;
  }
  throw Error("Argument to char must be a character or number");
}
function Le(b) {
  return 0 <= b ? Math.floor(b) : Math.ceil(b);
}
function Me(b, a) {
  return Le((b - b % a) / a);
}
function Ne(b, a) {
  return b - a * Me(b, a);
}
function Oe(b) {
  b -= b >> 1 & 1431655765;
  b = (b & 858993459) + (b >> 2 & 858993459);
  return 16843009 * (b + (b >> 4) & 252645135) >> 24;
}
function Pe(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 1:
      return !0;
    case 2:
      return qc(arguments[0], arguments[1]);
    default:
      a: {
        for (c = arguments[0], d = arguments[1], a = new rd(a.slice(2), 0, null);;) {
          if (c === d) {
            if (z(a)) {
              c = d, d = x(a), a = z(a);
            } else {
              c = d === x(a);
              break a;
            }
          } else {
            c = !1;
            break a;
          }
        }
      }
      return c;
  }
}
function Qe(b, a) {
  return qc(b, a);
}
var q = function q(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 0:
      return q.o();
    case 1:
      return q.b(arguments[0]);
    default:
      return q.j(arguments[0], new rd(c.slice(1), 0, null));
  }
};
q.o = function() {
  return "";
};
q.b = function(b) {
  return null == b ? "" : "" + b;
};
q.j = function(b, a) {
  for (var c = new Oa("" + q(b)), d = a;;) {
    if (m(d)) {
      c = c.append("" + q(x(d))), d = z(d);
    } else {
      return c.toString();
    }
  }
};
q.P = function(b) {
  var a = x(b);
  b = z(b);
  return q.j(a, b);
};
q.N = 1;
function Re(b, a) {
  return b.substring(a);
}
function Se(b, a, c) {
  return b.substring(a, c);
}
function Td(b, a) {
  var c;
  if (oe(a)) {
    if (Kd(b) && Kd(a) && B(b) !== B(a)) {
      c = !1;
    } else {
      a: {
        c = w(b);
        for (var d = w(a);;) {
          if (null == c) {
            c = null == d;
            break a;
          }
          if (null != d && v.a(x(c), x(d))) {
            c = z(c), d = z(d);
          } else {
            c = !1;
            break a;
          }
        }
      }
    }
  } else {
    c = null;
  }
  return xe(c);
}
function Te(b) {
  var a = 0;
  for (b = w(b);;) {
    if (b) {
      var c = x(b), a = (a + (kd(Ue.b ? Ue.b(c) : Ue.call(null, c)) ^ kd(Ve.b ? Ve.b(c) : Ve.call(null, c)))) % 4503599627370496;
      b = z(b);
    } else {
      return a;
    }
  }
}
function We(b, a, c, d, e) {
  this.R = b;
  this.first = a;
  this.Jb = c;
  this.count = d;
  this.m = e;
  this.l = 65937646;
  this.M = 8192;
}
h = We.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, this.count);
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.R;
};
h.Ib = function() {
  return 1 === this.count ? null : this.Jb;
};
h.$ = function() {
  return this.count;
};
h.Lc = function() {
  return this.first;
};
h.Mc = function() {
  return Ob(this);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return mc(td, this.R);
};
h.$a = function(b, a) {
  return Xd(a, this);
};
h.ab = function(b, a, c) {
  return Zd(a, c, this);
};
h.Ya = function() {
  return this.first;
};
h.xb = function() {
  return 1 === this.count ? td : this.Jb;
};
h.aa = function() {
  return this;
};
h.U = function(b, a) {
  return new We(a, this.first, this.Jb, this.count, this.m);
};
h.Z = function(b, a) {
  return new We(this.R, a, this, this.count + 1, null);
};
function Xe(b) {
  return null != b ? b.l & 33554432 || k === b.ai ? !0 : b.l ? !1 : p(wc, b) : p(wc, b);
}
We.prototype[xb] = function() {
  return vd(this);
};
function Ye(b) {
  this.R = b;
  this.l = 65937614;
  this.M = 8192;
}
h = Ye.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.R;
};
h.Ib = function() {
  return null;
};
h.$ = function() {
  return 0;
};
h.Lc = function() {
  return null;
};
h.Mc = function() {
  throw Error("Can't pop empty list");
};
h.Y = function() {
  return zd;
};
h.O = function(b, a) {
  return Xe(a) || oe(a) ? null == w(a) : !1;
};
h.Na = function() {
  return this;
};
h.$a = function(b, a) {
  return Xd(a, this);
};
h.ab = function(b, a, c) {
  return Zd(a, c, this);
};
h.Ya = function() {
  return null;
};
h.xb = function() {
  return td;
};
h.aa = function() {
  return null;
};
h.U = function(b, a) {
  return new Ye(a);
};
h.Z = function(b, a) {
  return new We(this.R, a, null, 1, null);
};
var td = new Ye(null);
Ye.prototype[xb] = function() {
  return vd(this);
};
function Ze(b) {
  return (null != b ? b.l & 134217728 || k === b.di || (b.l ? 0 : p(yc, b)) : p(yc, b)) ? zc(b) : Cb.c(ce, td, b);
}
var $e = function $e(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return $e.j(0 < c.length ? new rd(c.slice(0), 0, null) : null);
};
$e.j = function(b) {
  var a;
  if (b instanceof rd && 0 === b.V) {
    a = b.A;
  } else {
    a: {
      for (a = [];;) {
        if (null != b) {
          a.push(b.Ya(null)), b = b.Ib(null);
        } else {
          break a;
        }
      }
    }
  }
  b = a.length;
  for (var c = td;;) {
    if (0 < b) {
      var d = b - 1, c = c.Z(null, a[b - 1]);
      b = d;
    } else {
      return c;
    }
  }
};
$e.N = 0;
$e.P = function(b) {
  return $e.j(w(b));
};
function af(b, a, c, d) {
  this.R = b;
  this.first = a;
  this.Jb = c;
  this.m = d;
  this.l = 65929452;
  this.M = 8192;
}
h = af.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.R;
};
h.Ib = function() {
  return null == this.Jb ? null : w(this.Jb);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(td, this.R);
};
h.$a = function(b, a) {
  return Xd(a, this);
};
h.ab = function(b, a, c) {
  return Zd(a, c, this);
};
h.Ya = function() {
  return this.first;
};
h.xb = function() {
  return null == this.Jb ? td : this.Jb;
};
h.aa = function() {
  return this;
};
h.U = function(b, a) {
  return new af(a, this.first, this.Jb, this.m);
};
h.Z = function(b, a) {
  return new af(null, a, this, null);
};
af.prototype[xb] = function() {
  return vd(this);
};
function Ud(b, a) {
  var c = null == a;
  return (c ? c : null != a && (a.l & 64 || k === a.I)) ? new af(null, b, a, null) : new af(null, b, w(a), null);
}
function bf(b, a) {
  if (b.ca === a.ca) {
    return 0;
  }
  var c = rb(b.Kb);
  if (m(c ? a.Kb : c)) {
    return -1;
  }
  if (m(b.Kb)) {
    if (rb(a.Kb)) {
      return 1;
    }
    c = Ya(b.Kb, a.Kb);
    return 0 === c ? Ya(b.name, a.name) : c;
  }
  return Ya(b.name, a.name);
}
function K(b, a, c, d) {
  this.Kb = b;
  this.name = a;
  this.ca = c;
  this.Ud = d;
  this.l = 2153775105;
  this.M = 4096;
}
h = K.prototype;
h.toString = function() {
  return [q(":"), q(this.ca)].join("");
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.O = function(b, a) {
  return a instanceof K ? this.ca === a.ca : !1;
};
h.call = function() {
  var b = null, b = function(a, b, d) {
    switch(arguments.length) {
      case 2:
        return t.a(b, this);
      case 3:
        return t.c(b, this, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.a = function(a, b) {
    return t.a(b, this);
  };
  b.c = function(a, b, d) {
    return t.c(b, this, d);
  };
  return b;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return t.a(b, this);
};
h.a = function(b, a) {
  return t.c(b, this, a);
};
h.Y = function() {
  var b = this.Ud;
  return null != b ? b : this.Ud = b = ld(this) + 2654435769 | 0;
};
h.ne = function() {
  return this.name;
};
h.oe = function() {
  return this.Kb;
};
h.X = function(b, a) {
  return Ac(a, [q(":"), q(this.ca)].join(""));
};
function L(b, a) {
  return b === a ? !0 : b instanceof K && a instanceof K ? b.ca === a.ca : !1;
}
function cf(b) {
  if (null != b && (b.M & 4096 || k === b.mh)) {
    return b.oe(null);
  }
  throw Error([q("Doesn't support namespace: "), q(b)].join(""));
}
var df = function df(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 1:
      return df.b(arguments[0]);
    case 2:
      return df.a(arguments[0], arguments[1]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
df.b = function(b) {
  if (b instanceof K) {
    return b;
  }
  if (b instanceof nd) {
    return new K(cf(b), ef.b ? ef.b(b) : ef.call(null, b), b.Xc, null);
  }
  if ("string" === typeof b) {
    var a = b.split("/");
    return 2 === a.length ? new K(a[0], a[1], b, null) : new K(null, a[0], b, null);
  }
  return null;
};
df.a = function(b, a) {
  var c = b instanceof K ? ef.b ? ef.b(b) : ef.call(null, b) : b instanceof nd ? ef.b ? ef.b(b) : ef.call(null, b) : b, d = a instanceof K ? ef.b ? ef.b(a) : ef.call(null, a) : a instanceof nd ? ef.b ? ef.b(a) : ef.call(null, a) : a;
  return new K(c, d, [q(m(c) ? [q(c), q("/")].join("") : null), q(d)].join(""), null);
};
df.N = 2;
function ff(b, a, c, d) {
  this.R = b;
  this.Md = a;
  this.sa = c;
  this.m = d;
  this.l = 32374988;
  this.M = 1;
}
h = ff.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
function gf(b) {
  null != b.Md && (b.sa = b.Md.o ? b.Md.o() : b.Md.call(null), b.Md = null);
  return b.sa;
}
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.R;
};
h.Ib = function() {
  tc(this);
  return null == this.sa ? null : z(this.sa);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(td, this.R);
};
h.sf = function() {
  return rb(this.Md);
};
h.$a = function(b, a) {
  return Xd(a, this);
};
h.ab = function(b, a, c) {
  return Zd(a, c, this);
};
h.Ya = function() {
  tc(this);
  return null == this.sa ? null : x(this.sa);
};
h.xb = function() {
  tc(this);
  return null != this.sa ? sd(this.sa) : td;
};
h.aa = function() {
  gf(this);
  if (null == this.sa) {
    return null;
  }
  for (var b = this.sa;;) {
    if (b instanceof ff) {
      b = gf(b);
    } else {
      return this.sa = b, w(this.sa);
    }
  }
};
h.U = function(b, a) {
  return new ff(a, this.Md, this.sa, this.m);
};
h.Z = function(b, a) {
  return Ud(a, this);
};
ff.prototype[xb] = function() {
  return vd(this);
};
function hf(b, a) {
  this.wa = b;
  this.end = a;
  this.l = 2;
  this.M = 0;
}
hf.prototype.add = function(b) {
  this.wa[this.end] = b;
  return this.end += 1;
};
hf.prototype.ta = function() {
  var b = new jf(this.wa, 0, this.end);
  this.wa = null;
  return b;
};
hf.prototype.$ = function() {
  return this.end;
};
function kf(b) {
  return new hf(Array(b), 0);
}
function jf(b, a, c) {
  this.A = b;
  this.zb = a;
  this.end = c;
  this.l = 524306;
  this.M = 0;
}
h = jf.prototype;
h.$ = function() {
  return this.end - this.zb;
};
h.ra = function(b, a) {
  return this.A[this.zb + a];
};
h.Hb = function(b, a, c) {
  return 0 <= a && a < this.end - this.zb ? this.A[this.zb + a] : c;
};
h.gg = function() {
  if (this.zb === this.end) {
    throw Error("-drop-first of empty chunk");
  }
  return new jf(this.A, this.zb + 1, this.end);
};
h.$a = function(b, a) {
  return Jd(this.A, a, this.A[this.zb], this.zb + 1);
};
h.ab = function(b, a, c) {
  return Jd(this.A, a, c, this.zb);
};
function lf(b, a, c, d) {
  this.ta = b;
  this.Uc = a;
  this.R = c;
  this.m = d;
  this.l = 31850732;
  this.M = 1536;
}
h = lf.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.R;
};
h.Ib = function() {
  if (1 < Eb(this.ta)) {
    return new lf(Rc(this.ta), this.Uc, this.R, null);
  }
  var b = tc(this.Uc);
  return null == b ? null : b;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(td, this.R);
};
h.Ya = function() {
  return Kb.a(this.ta, 0);
};
h.xb = function() {
  return 1 < Eb(this.ta) ? new lf(Rc(this.ta), this.Uc, this.R, null) : null == this.Uc ? td : this.Uc;
};
h.aa = function() {
  return this;
};
h.qf = function() {
  return this.ta;
};
h.rf = function() {
  return null == this.Uc ? td : this.Uc;
};
h.U = function(b, a) {
  return new lf(this.ta, this.Uc, a, this.m);
};
h.Z = function(b, a) {
  return Ud(a, this);
};
h.pf = function() {
  return null == this.Uc ? null : this.Uc;
};
lf.prototype[xb] = function() {
  return vd(this);
};
function mf(b, a) {
  return 0 === Eb(b) ? a : new lf(b, a, null, null);
}
function nf(b, a) {
  b.add(a);
}
function Ee(b) {
  for (var a = [];;) {
    if (w(b)) {
      a.push(x(b)), b = z(b);
    } else {
      return a;
    }
  }
}
function of(b, a) {
  if (Kd(a)) {
    return B(a);
  }
  for (var c = 0, d = w(a);;) {
    if (null != d && c < b) {
      c += 1, d = z(d);
    } else {
      return c;
    }
  }
}
var pf = function pf(a) {
  var c;
  if (null == a) {
    c = null;
  } else {
    if (null == z(a)) {
      c = w(x(a));
    } else {
      c = Ud;
      var d = x(a);
      a = z(a);
      a = pf.b ? pf.b(a) : pf.call(null, a);
      c = c(d, a);
    }
  }
  return c;
}, N = function N(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 0:
      return N.o();
    case 1:
      return N.b(arguments[0]);
    case 2:
      return N.a(arguments[0], arguments[1]);
    default:
      return N.j(arguments[0], arguments[1], new rd(c.slice(2), 0, null));
  }
};
N.o = function() {
  return new ff(null, function() {
    return null;
  }, null, null);
};
N.b = function(b) {
  return new ff(null, function() {
    return b;
  }, null, null);
};
N.a = function(b, a) {
  return new ff(null, function() {
    var c = w(b);
    return c ? se(c) ? mf(Tc(c), N.a(Uc(c), a)) : Ud(x(c), N.a(sd(c), a)) : a;
  }, null, null);
};
N.j = function(b, a, c) {
  return function e(a, b) {
    return new ff(null, function() {
      var c = w(a);
      return c ? se(c) ? mf(Tc(c), e(Uc(c), b)) : Ud(x(c), e(sd(c), b)) : m(b) ? e(x(b), z(b)) : null;
    }, null, null);
  }(N.a(b, a), c);
};
N.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  c = z(c);
  return N.j(a, b, c);
};
N.N = 2;
var qf = function qf(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 0:
      return qf.o();
    case 1:
      return qf.b(arguments[0]);
    case 2:
      return qf.a(arguments[0], arguments[1]);
    default:
      return qf.j(arguments[0], arguments[1], new rd(c.slice(2), 0, null));
  }
};
qf.o = function() {
  return Hc(E);
};
qf.b = function(b) {
  return b;
};
qf.a = function(b, a) {
  return Ic(b, a);
};
qf.j = function(b, a, c) {
  for (;;) {
    if (b = Ic(b, a), m(c)) {
      a = x(c), c = z(c);
    } else {
      return b;
    }
  }
};
qf.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  c = z(c);
  return qf.j(a, b, c);
};
qf.N = 2;
function rf(b, a, c) {
  return Kc(b, a, c);
}
function sf(b, a, c) {
  var d = w(c);
  if (0 === a) {
    return b.o ? b.o() : b.call(null);
  }
  c = Nb(d);
  var e = Ob(d);
  if (1 === a) {
    return b.b ? b.b(c) : b.b ? b.b(c) : b.call(null, c);
  }
  var d = Nb(e), f = Ob(e);
  if (2 === a) {
    return b.a ? b.a(c, d) : b.a ? b.a(c, d) : b.call(null, c, d);
  }
  var e = Nb(f), g = Ob(f);
  if (3 === a) {
    return b.c ? b.c(c, d, e) : b.c ? b.c(c, d, e) : b.call(null, c, d, e);
  }
  var f = Nb(g), n = Ob(g);
  if (4 === a) {
    return b.K ? b.K(c, d, e, f) : b.K ? b.K(c, d, e, f) : b.call(null, c, d, e, f);
  }
  var g = Nb(n), r = Ob(n);
  if (5 === a) {
    return b.ba ? b.ba(c, d, e, f, g) : b.ba ? b.ba(c, d, e, f, g) : b.call(null, c, d, e, f, g);
  }
  var n = Nb(r), u = Ob(r);
  if (6 === a) {
    return b.Xa ? b.Xa(c, d, e, f, g, n) : b.Xa ? b.Xa(c, d, e, f, g, n) : b.call(null, c, d, e, f, g, n);
  }
  var r = Nb(u), y = Ob(u);
  if (7 === a) {
    return b.Oa ? b.Oa(c, d, e, f, g, n, r) : b.Oa ? b.Oa(c, d, e, f, g, n, r) : b.call(null, c, d, e, f, g, n, r);
  }
  var u = Nb(y), D = Ob(y);
  if (8 === a) {
    return b.Za ? b.Za(c, d, e, f, g, n, r, u) : b.Za ? b.Za(c, d, e, f, g, n, r, u) : b.call(null, c, d, e, f, g, n, r, u);
  }
  var y = Nb(D), G = Ob(D);
  if (9 === a) {
    return b.qb ? b.qb(c, d, e, f, g, n, r, u, y) : b.qb ? b.qb(c, d, e, f, g, n, r, u, y) : b.call(null, c, d, e, f, g, n, r, u, y);
  }
  var D = Nb(G), H = Ob(G);
  if (10 === a) {
    return b.fb ? b.fb(c, d, e, f, g, n, r, u, y, D) : b.fb ? b.fb(c, d, e, f, g, n, r, u, y, D) : b.call(null, c, d, e, f, g, n, r, u, y, D);
  }
  var G = Nb(H), M = Ob(H);
  if (11 === a) {
    return b.gb ? b.gb(c, d, e, f, g, n, r, u, y, D, G) : b.gb ? b.gb(c, d, e, f, g, n, r, u, y, D, G) : b.call(null, c, d, e, f, g, n, r, u, y, D, G);
  }
  var H = Nb(M), O = Ob(M);
  if (12 === a) {
    return b.hb ? b.hb(c, d, e, f, g, n, r, u, y, D, G, H) : b.hb ? b.hb(c, d, e, f, g, n, r, u, y, D, G, H) : b.call(null, c, d, e, f, g, n, r, u, y, D, G, H);
  }
  var M = Nb(O), T = Ob(O);
  if (13 === a) {
    return b.ib ? b.ib(c, d, e, f, g, n, r, u, y, D, G, H, M) : b.ib ? b.ib(c, d, e, f, g, n, r, u, y, D, G, H, M) : b.call(null, c, d, e, f, g, n, r, u, y, D, G, H, M);
  }
  var O = Nb(T), qa = Ob(T);
  if (14 === a) {
    return b.jb ? b.jb(c, d, e, f, g, n, r, u, y, D, G, H, M, O) : b.jb ? b.jb(c, d, e, f, g, n, r, u, y, D, G, H, M, O) : b.call(null, c, d, e, f, g, n, r, u, y, D, G, H, M, O);
  }
  var T = Nb(qa), la = Ob(qa);
  if (15 === a) {
    return b.kb ? b.kb(c, d, e, f, g, n, r, u, y, D, G, H, M, O, T) : b.kb ? b.kb(c, d, e, f, g, n, r, u, y, D, G, H, M, O, T) : b.call(null, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T);
  }
  var qa = Nb(la), ya = Ob(la);
  if (16 === a) {
    return b.lb ? b.lb(c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa) : b.lb ? b.lb(c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa) : b.call(null, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa);
  }
  var la = Nb(ya), ib = Ob(ya);
  if (17 === a) {
    return b.mb ? b.mb(c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la) : b.mb ? b.mb(c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la) : b.call(null, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la);
  }
  var ya = Nb(ib), Sc = Ob(ib);
  if (18 === a) {
    return b.nb ? b.nb(c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya) : b.nb ? b.nb(c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya) : b.call(null, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya);
  }
  ib = Nb(Sc);
  Sc = Ob(Sc);
  if (19 === a) {
    return b.ob ? b.ob(c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib) : b.ob ? b.ob(c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib) : b.call(null, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib);
  }
  var Y = Nb(Sc);
  Ob(Sc);
  if (20 === a) {
    return b.pb ? b.pb(c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib, Y) : b.pb ? b.pb(c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib, Y) : b.call(null, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib, Y);
  }
  throw Error("Only up to 20 arguments supported on functions");
}
function qd(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 2:
      return P(arguments[0], arguments[1]);
    case 3:
      return tf(arguments[0], arguments[1], arguments[2]);
    case 4:
      return uf(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return vf(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      return wf(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], new rd(a.slice(5), 0, null));
  }
}
function P(b, a) {
  var c = b.N;
  if (b.P) {
    var d = of(c + 1, a);
    return d <= c ? sf(b, d, a) : b.P(a);
  }
  return b.apply(b, Ee(a));
}
function tf(b, a, c) {
  a = Ud(a, c);
  c = b.N;
  if (b.P) {
    var d = of(c + 1, a);
    return d <= c ? sf(b, d, a) : b.P(a);
  }
  return b.apply(b, Ee(a));
}
function uf(b, a, c, d) {
  a = Ud(a, Ud(c, d));
  c = b.N;
  return b.P ? (d = of(c + 1, a), d <= c ? sf(b, d, a) : b.P(a)) : b.apply(b, Ee(a));
}
function vf(b, a, c, d, e) {
  a = Ud(a, Ud(c, Ud(d, e)));
  c = b.N;
  return b.P ? (d = of(c + 1, a), d <= c ? sf(b, d, a) : b.P(a)) : b.apply(b, Ee(a));
}
function wf(b, a, c, d, e, f) {
  a = Ud(a, Ud(c, Ud(d, Ud(e, pf(f)))));
  c = b.N;
  return b.P ? (d = of(c + 1, a), d <= c ? sf(b, d, a) : b.P(a)) : b.apply(b, Ee(a));
}
function yf(b, a) {
  return !v.a(b, a);
}
function zf(b) {
  return w(b) ? b : null;
}
function Af() {
  "undefined" === typeof $a && ($a = function(b) {
    this.Bh = b;
    this.l = 393216;
    this.M = 0;
  }, $a.prototype.U = function(b, a) {
    return new $a(a);
  }, $a.prototype.S = function() {
    return this.Bh;
  }, $a.prototype.ub = function() {
    return !1;
  }, $a.prototype.next = function() {
    return Error("No such element");
  }, $a.prototype.remove = function() {
    return Error("Unsupported operation");
  }, $a.yc = function() {
    return new Q(null, 1, 5, R, [Bf], null);
  }, $a.nc = !0, $a.Xb = "cljs.core/t_cljs$core36355", $a.rc = function(b, a) {
    return Ac(a, "cljs.core/t_cljs$core36355");
  });
  return new $a(S);
}
function Cf(b, a) {
  for (;;) {
    if (null == w(a)) {
      return !0;
    }
    var c;
    c = x(a);
    c = b.b ? b.b(c) : b.call(null, c);
    if (m(c)) {
      c = b;
      var d = z(a);
      b = c;
      a = d;
    } else {
      return !1;
    }
  }
}
function Df(b, a) {
  for (;;) {
    if (w(a)) {
      var c;
      c = x(a);
      c = b.b ? b.b(c) : b.call(null, c);
      if (m(c)) {
        return c;
      }
      c = b;
      var d = z(a);
      b = c;
      a = d;
    } else {
      return null;
    }
  }
}
function Ef(b) {
  return function() {
    function a(a, c) {
      return rb(b.a ? b.a(a, c) : b.call(null, a, c));
    }
    function c(a) {
      return rb(b.b ? b.b(a) : b.call(null, a));
    }
    function d() {
      return rb(b.o ? b.o() : b.call(null));
    }
    var e = null, f = function() {
      function a(a, b, d) {
        var e = null;
        if (2 < arguments.length) {
          for (var e = 0, f = Array(arguments.length - 2);e < f.length;) {
            f[e] = arguments[e + 2], ++e;
          }
          e = new rd(f, 0);
        }
        return c.call(this, a, b, e);
      }
      function c(a, c, d) {
        return rb(uf(b, a, c, d));
      }
      a.N = 2;
      a.P = function(a) {
        var b = x(a);
        a = z(a);
        var d = x(a);
        a = sd(a);
        return c(b, d, a);
      };
      a.j = c;
      return a;
    }(), e = function(b, e, r) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return c.call(this, b);
        case 2:
          return a.call(this, b, e);
        default:
          var g = null;
          if (2 < arguments.length) {
            for (var g = 0, n = Array(arguments.length - 2);g < n.length;) {
              n[g] = arguments[g + 2], ++g;
            }
            g = new rd(n, 0);
          }
          return f.j(b, e, g);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    e.N = 2;
    e.P = f.P;
    e.o = d;
    e.b = c;
    e.a = a;
    e.j = f.j;
    return e;
  }();
}
function Ff(b) {
  return function() {
    function a(a) {
      if (0 < arguments.length) {
        for (var c = 0, e = Array(arguments.length - 0);c < e.length;) {
          e[c] = arguments[c + 0], ++c;
        }
      }
      return b;
    }
    a.N = 0;
    a.P = function(a) {
      w(a);
      return b;
    };
    a.j = function() {
      return b;
    };
    return a;
  }();
}
var Gf = function Gf(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 0:
      return Gf.o();
    case 1:
      return Gf.b(arguments[0]);
    case 2:
      return Gf.a(arguments[0], arguments[1]);
    case 3:
      return Gf.c(arguments[0], arguments[1], arguments[2]);
    default:
      return Gf.j(arguments[0], arguments[1], arguments[2], new rd(c.slice(3), 0, null));
  }
};
Gf.o = function() {
  return Ge;
};
Gf.b = function(b) {
  return b;
};
Gf.a = function(b, a) {
  return function() {
    function c(c, d, e) {
      c = a.c ? a.c(c, d, e) : a.call(null, c, d, e);
      return b.b ? b.b(c) : b.call(null, c);
    }
    function d(c, d) {
      var e = a.a ? a.a(c, d) : a.call(null, c, d);
      return b.b ? b.b(e) : b.call(null, e);
    }
    function e(c) {
      c = a.b ? a.b(c) : a.call(null, c);
      return b.b ? b.b(c) : b.call(null, c);
    }
    function f() {
      var c = a.o ? a.o() : a.call(null);
      return b.b ? b.b(c) : b.call(null, c);
    }
    var g = null, n = function() {
      function c(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new rd(g, 0);
        }
        return d.call(this, a, b, c, f);
      }
      function d(c, d, e, f) {
        c = vf(a, c, d, e, f);
        return b.b ? b.b(c) : b.call(null, c);
      }
      c.N = 3;
      c.P = function(a) {
        var b = x(a);
        a = z(a);
        var c = x(a);
        a = z(a);
        var e = x(a);
        a = sd(a);
        return d(b, c, e, a);
      };
      c.j = d;
      return c;
    }(), g = function(a, b, g, D) {
      switch(arguments.length) {
        case 0:
          return f.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return d.call(this, a, b);
        case 3:
          return c.call(this, a, b, g);
        default:
          var u = null;
          if (3 < arguments.length) {
            for (var u = 0, r = Array(arguments.length - 3);u < r.length;) {
              r[u] = arguments[u + 3], ++u;
            }
            u = new rd(r, 0);
          }
          return n.j(a, b, g, u);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    g.N = 3;
    g.P = n.P;
    g.o = f;
    g.b = e;
    g.a = d;
    g.c = c;
    g.j = n.j;
    return g;
  }();
};
Gf.c = function(b, a, c) {
  return function() {
    function d(d, e, f) {
      d = c.c ? c.c(d, e, f) : c.call(null, d, e, f);
      d = a.b ? a.b(d) : a.call(null, d);
      return b.b ? b.b(d) : b.call(null, d);
    }
    function e(d, e) {
      var f;
      f = c.a ? c.a(d, e) : c.call(null, d, e);
      f = a.b ? a.b(f) : a.call(null, f);
      return b.b ? b.b(f) : b.call(null, f);
    }
    function f(d) {
      d = c.b ? c.b(d) : c.call(null, d);
      d = a.b ? a.b(d) : a.call(null, d);
      return b.b ? b.b(d) : b.call(null, d);
    }
    function g() {
      var d;
      d = c.o ? c.o() : c.call(null);
      d = a.b ? a.b(d) : a.call(null, d);
      return b.b ? b.b(d) : b.call(null, d);
    }
    var n = null, r = function() {
      function d(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new rd(g, 0);
        }
        return e.call(this, a, b, c, f);
      }
      function e(d, e, f, g) {
        d = vf(c, d, e, f, g);
        d = a.b ? a.b(d) : a.call(null, d);
        return b.b ? b.b(d) : b.call(null, d);
      }
      d.N = 3;
      d.P = function(a) {
        var b = x(a);
        a = z(a);
        var c = x(a);
        a = z(a);
        var d = x(a);
        a = sd(a);
        return e(b, c, d, a);
      };
      d.j = e;
      return d;
    }(), n = function(a, b, c, n) {
      switch(arguments.length) {
        case 0:
          return g.call(this);
        case 1:
          return f.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return d.call(this, a, b, c);
        default:
          var u = null;
          if (3 < arguments.length) {
            for (var u = 0, y = Array(arguments.length - 3);u < y.length;) {
              y[u] = arguments[u + 3], ++u;
            }
            u = new rd(y, 0);
          }
          return r.j(a, b, c, u);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    n.N = 3;
    n.P = r.P;
    n.o = g;
    n.b = f;
    n.a = e;
    n.c = d;
    n.j = r.j;
    return n;
  }();
};
Gf.j = function(b, a, c, d) {
  return function(a) {
    return function() {
      function b(a) {
        var b = null;
        if (0 < arguments.length) {
          for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
            d[b] = arguments[b + 0], ++b;
          }
          b = new rd(d, 0);
        }
        return c.call(this, b);
      }
      function c(b) {
        b = P(x(a), b);
        for (var c = z(a);;) {
          if (c) {
            b = x(c).call(null, b), c = z(c);
          } else {
            return b;
          }
        }
      }
      b.N = 0;
      b.P = function(a) {
        a = w(a);
        return c(a);
      };
      b.j = c;
      return b;
    }();
  }(Ze(Ud(b, Ud(a, Ud(c, d)))));
};
Gf.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  var d = z(c), c = x(d), d = z(d);
  return Gf.j(a, b, c, d);
};
Gf.N = 3;
function Hf(b, a) {
  return function() {
    function c(c, d, e) {
      return b.K ? b.K(a, c, d, e) : b.call(null, a, c, d, e);
    }
    function d(c, d) {
      return b.c ? b.c(a, c, d) : b.call(null, a, c, d);
    }
    function e(c) {
      return b.a ? b.a(a, c) : b.call(null, a, c);
    }
    function f() {
      return b.b ? b.b(a) : b.call(null, a);
    }
    var g = null, n = function() {
      function c(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new rd(g, 0);
        }
        return d.call(this, a, b, c, f);
      }
      function d(c, d, e, f) {
        return wf(b, a, c, d, e, C([f], 0));
      }
      c.N = 3;
      c.P = function(a) {
        var b = x(a);
        a = z(a);
        var c = x(a);
        a = z(a);
        var e = x(a);
        a = sd(a);
        return d(b, c, e, a);
      };
      c.j = d;
      return c;
    }(), g = function(a, b, g, D) {
      switch(arguments.length) {
        case 0:
          return f.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return d.call(this, a, b);
        case 3:
          return c.call(this, a, b, g);
        default:
          var u = null;
          if (3 < arguments.length) {
            for (var u = 0, r = Array(arguments.length - 3);u < r.length;) {
              r[u] = arguments[u + 3], ++u;
            }
            u = new rd(r, 0);
          }
          return n.j(a, b, g, u);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    g.N = 3;
    g.P = n.P;
    g.o = f;
    g.b = e;
    g.a = d;
    g.c = c;
    g.j = n.j;
    return g;
  }();
}
function If(b, a) {
  var c = Jf;
  return function() {
    function d(d, e, f) {
      return c.ba ? c.ba(b, a, d, e, f) : c.call(null, b, a, d, e, f);
    }
    function e(d, e) {
      return c.K ? c.K(b, a, d, e) : c.call(null, b, a, d, e);
    }
    function f(d) {
      return c.c ? c.c(b, a, d) : c.call(null, b, a, d);
    }
    function g() {
      return c.a ? c.a(b, a) : c.call(null, b, a);
    }
    var n = null, r = function() {
      function d(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new rd(g, 0);
        }
        return e.call(this, a, b, c, f);
      }
      function e(d, e, f, g) {
        return wf(c, b, a, d, e, C([f, g], 0));
      }
      d.N = 3;
      d.P = function(a) {
        var b = x(a);
        a = z(a);
        var c = x(a);
        a = z(a);
        var d = x(a);
        a = sd(a);
        return e(b, c, d, a);
      };
      d.j = e;
      return d;
    }(), n = function(a, b, c, n) {
      switch(arguments.length) {
        case 0:
          return g.call(this);
        case 1:
          return f.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return d.call(this, a, b, c);
        default:
          var u = null;
          if (3 < arguments.length) {
            for (var u = 0, y = Array(arguments.length - 3);u < y.length;) {
              y[u] = arguments[u + 3], ++u;
            }
            u = new rd(y, 0);
          }
          return r.j(a, b, c, u);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    n.N = 3;
    n.P = r.P;
    n.o = g;
    n.b = f;
    n.a = e;
    n.c = d;
    n.j = r.j;
    return n;
  }();
}
function Kf(b, a, c, d, e) {
  return function() {
    function f(a) {
      var b = null;
      if (0 < arguments.length) {
        for (var b = 0, c = Array(arguments.length - 0);b < c.length;) {
          c[b] = arguments[b + 0], ++b;
        }
        b = new rd(c, 0);
      }
      return g.call(this, b);
    }
    function g(f) {
      return vf(b, a, c, d, N.a(e, f));
    }
    f.N = 0;
    f.P = function(a) {
      a = w(a);
      return g(a);
    };
    f.j = g;
    return f;
  }();
}
function Lf() {
  return function() {
    function b(a, b, c) {
      a = null == a ? 0 : a;
      return Cd.c ? Cd.c(a, b, c) : Cd.call(null, a);
    }
    function a(a, b) {
      var c = null == a ? 0 : a;
      return Cd.a ? Cd.a(c, b) : Cd.call(null, c);
    }
    function c(a) {
      a = null == a ? 0 : a;
      return Cd.b ? Cd.b(a) : Cd.call(null, a);
    }
    var d = null, e = function() {
      function a(a, c, d, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new rd(g, 0);
        }
        return b.call(this, a, c, d, f);
      }
      function b(a, b, c, d) {
        return vf(Cd, null == a ? 0 : a, b, c, d);
      }
      a.N = 3;
      a.P = function(a) {
        var c = x(a);
        a = z(a);
        var d = x(a);
        a = z(a);
        var e = x(a);
        a = sd(a);
        return b(c, d, e, a);
      };
      a.j = b;
      return a;
    }(), d = function(d, g, n, r) {
      switch(arguments.length) {
        case 1:
          return c.call(this, d);
        case 2:
          return a.call(this, d, g);
        case 3:
          return b.call(this, d, g, n);
        default:
          var f = null;
          if (3 < arguments.length) {
            for (var f = 0, y = Array(arguments.length - 3);f < y.length;) {
              y[f] = arguments[f + 3], ++f;
            }
            f = new rd(y, 0);
          }
          return e.j(d, g, n, f);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    d.N = 3;
    d.P = e.P;
    d.b = c;
    d.a = a;
    d.c = b;
    d.j = e.j;
    return d;
  }();
}
function Mf(b, a, c, d) {
  this.state = b;
  this.R = a;
  this.Wh = c;
  this.Eg = d;
  this.M = 16386;
  this.l = 6455296;
}
h = Mf.prototype;
h.equiv = function(b) {
  return this.O(null, b);
};
h.O = function(b, a) {
  return this === a;
};
h.cd = function() {
  return this.state;
};
h.S = function() {
  return this.R;
};
h.mg = function(b, a, c) {
  b = w(this.Eg);
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.ra(null, f), n = F(g, 0, null), g = F(g, 1, null);
      g.K ? g.K(n, this, a, c) : g.call(null, n, this, a, c);
      f += 1;
    } else {
      if (b = w(b)) {
        se(b) ? (d = Tc(b), b = Uc(b), n = d, e = B(d), d = n) : (d = x(b), n = F(d, 0, null), g = F(d, 1, null), g.K ? g.K(n, this, a, c) : g.call(null, n, this, a, c), b = z(b), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
h.Y = function() {
  return fa(this);
};
function Nf(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 1:
      return U(arguments[0]);
    default:
      return c = arguments[0], a = new rd(a.slice(1), 0, null), d = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, a = t.a(d, nb), d = t.a(d, Pf), new Mf(c, a, d, null);
  }
}
function U(b) {
  return new Mf(b, null, null, null);
}
function Qf(b, a) {
  if (b instanceof Mf) {
    var c = b.Wh;
    if (null != c && !m(c.b ? c.b(a) : c.call(null, a))) {
      throw Error("Validator rejected reference state");
    }
    c = b.state;
    b.state = a;
    null != b.Eg && Gc(b, c, a);
    return a;
  }
  return Yc(b, a);
}
var Rf = function Rf(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return Rf.a(arguments[0], arguments[1]);
    case 3:
      return Rf.c(arguments[0], arguments[1], arguments[2]);
    case 4:
      return Rf.K(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      return Rf.j(arguments[0], arguments[1], arguments[2], arguments[3], new rd(c.slice(4), 0, null));
  }
};
Rf.a = function(b, a) {
  var c;
  b instanceof Mf ? (c = b.state, c = a.b ? a.b(c) : a.call(null, c), c = Qf(b, c)) : c = Zc.a(b, a);
  return c;
};
Rf.c = function(b, a, c) {
  if (b instanceof Mf) {
    var d = b.state;
    a = a.a ? a.a(d, c) : a.call(null, d, c);
    b = Qf(b, a);
  } else {
    b = Zc.c(b, a, c);
  }
  return b;
};
Rf.K = function(b, a, c, d) {
  if (b instanceof Mf) {
    var e = b.state;
    a = a.c ? a.c(e, c, d) : a.call(null, e, c, d);
    b = Qf(b, a);
  } else {
    b = Zc.K(b, a, c, d);
  }
  return b;
};
Rf.j = function(b, a, c, d, e) {
  return b instanceof Mf ? Qf(b, vf(a, b.state, c, d, e)) : Zc.ba(b, a, c, d, e);
};
Rf.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  var d = z(c), c = x(d), e = z(d), d = x(e), e = z(e);
  return Rf.j(a, b, c, d, e);
};
Rf.N = 4;
function Sf(b) {
  this.state = b;
  this.l = 32768;
  this.M = 0;
}
Sf.prototype.lg = function(b, a) {
  return this.state = a;
};
Sf.prototype.cd = function() {
  return this.state;
};
var Tf = function Tf(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 1:
      return Tf.b(arguments[0]);
    case 2:
      return Tf.a(arguments[0], arguments[1]);
    case 3:
      return Tf.c(arguments[0], arguments[1], arguments[2]);
    case 4:
      return Tf.K(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      return Tf.j(arguments[0], arguments[1], arguments[2], arguments[3], new rd(c.slice(4), 0, null));
  }
};
Tf.b = function(b) {
  return function(a) {
    return function() {
      function c(c, d) {
        var e = b.b ? b.b(d) : b.call(null, d);
        return a.a ? a.a(c, e) : a.call(null, c, e);
      }
      function d(b) {
        return a.b ? a.b(b) : a.call(null, b);
      }
      function e() {
        return a.o ? a.o() : a.call(null);
      }
      var f = null, g = function() {
        function c(a, b, c) {
          var e = null;
          if (2 < arguments.length) {
            for (var e = 0, f = Array(arguments.length - 2);e < f.length;) {
              f[e] = arguments[e + 2], ++e;
            }
            e = new rd(f, 0);
          }
          return d.call(this, a, b, e);
        }
        function d(c, d, e) {
          d = tf(b, d, e);
          return a.a ? a.a(c, d) : a.call(null, c, d);
        }
        c.N = 2;
        c.P = function(a) {
          var b = x(a);
          a = z(a);
          var c = x(a);
          a = sd(a);
          return d(b, c, a);
        };
        c.j = d;
        return c;
      }(), f = function(a, b, f) {
        switch(arguments.length) {
          case 0:
            return e.call(this);
          case 1:
            return d.call(this, a);
          case 2:
            return c.call(this, a, b);
          default:
            var n = null;
            if (2 < arguments.length) {
              for (var n = 0, u = Array(arguments.length - 2);n < u.length;) {
                u[n] = arguments[n + 2], ++n;
              }
              n = new rd(u, 0);
            }
            return g.j(a, b, n);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      f.N = 2;
      f.P = g.P;
      f.o = e;
      f.b = d;
      f.a = c;
      f.j = g.j;
      return f;
    }();
  };
};
Tf.a = function(b, a) {
  return new ff(null, function() {
    var c = w(a);
    if (c) {
      if (se(c)) {
        for (var d = Tc(c), e = B(d), f = kf(e), g = 0;;) {
          if (g < e) {
            nf(f, function() {
              var a = Kb.a(d, g);
              return b.b ? b.b(a) : b.call(null, a);
            }()), g += 1;
          } else {
            break;
          }
        }
        return mf(f.ta(), Tf.a(b, Uc(c)));
      }
      return Ud(function() {
        var a = x(c);
        return b.b ? b.b(a) : b.call(null, a);
      }(), Tf.a(b, sd(c)));
    }
    return null;
  }, null, null);
};
Tf.c = function(b, a, c) {
  return new ff(null, function() {
    var d = w(a), e = w(c);
    if (d && e) {
      var f = Ud, g;
      g = x(d);
      var n = x(e);
      g = b.a ? b.a(g, n) : b.call(null, g, n);
      d = f(g, Tf.c(b, sd(d), sd(e)));
    } else {
      d = null;
    }
    return d;
  }, null, null);
};
Tf.K = function(b, a, c, d) {
  return new ff(null, function() {
    var e = w(a), f = w(c), g = w(d);
    if (e && f && g) {
      var n = Ud, r;
      r = x(e);
      var u = x(f), y = x(g);
      r = b.c ? b.c(r, u, y) : b.call(null, r, u, y);
      e = n(r, Tf.K(b, sd(e), sd(f), sd(g)));
    } else {
      e = null;
    }
    return e;
  }, null, null);
};
Tf.j = function(b, a, c, d, e) {
  var f = function n(a) {
    return new ff(null, function() {
      var b = Tf.a(w, a);
      return Cf(Ge, b) ? Ud(Tf.a(x, b), n(Tf.a(sd, b))) : null;
    }, null, null);
  };
  return Tf.a(function() {
    return function(a) {
      return P(b, a);
    };
  }(f), f(ce.j(e, d, C([c, a], 0))));
};
Tf.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  var d = z(c), c = x(d), e = z(d), d = x(e), e = z(e);
  return Tf.j(a, b, c, d, e);
};
Tf.N = 4;
function Uf(b, a) {
  if ("number" !== typeof b) {
    throw Error("Assert failed: (number? n)");
  }
  return new ff(null, function() {
    if (0 < b) {
      var c = w(a);
      return c ? Ud(x(c), Uf(b - 1, sd(c))) : null;
    }
    return null;
  }, null, null);
}
function Vf(b, a) {
  if ("number" !== typeof b) {
    throw Error("Assert failed: (number? n)");
  }
  return new ff(null, function(c) {
    return function() {
      return c(b, a);
    };
  }(function(a, b) {
    for (;;) {
      var c = w(b);
      if (0 < a && c) {
        var d = a - 1, c = sd(c);
        a = d;
        b = c;
      } else {
        return c;
      }
    }
  }), null, null);
}
function Wf(b, a) {
  return Tf.c(function(a) {
    return a;
  }, a, Vf(b, a));
}
function Xf(b) {
  return new ff(null, function() {
    return Ud(b, Xf(b));
  }, null, null);
}
function Yf(b, a) {
  return Uf(b, Xf(a));
}
var Zf = function Zf(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return Zf.a(arguments[0], arguments[1]);
    default:
      return Zf.j(arguments[0], arguments[1], new rd(c.slice(2), 0, null));
  }
};
Zf.a = function(b, a) {
  return new ff(null, function() {
    var c = w(b), d = w(a);
    return c && d ? Ud(x(c), Ud(x(d), Zf.a(sd(c), sd(d)))) : null;
  }, null, null);
};
Zf.j = function(b, a, c) {
  return new ff(null, function() {
    var d = Tf.a(w, ce.j(c, a, C([b], 0)));
    return Cf(Ge, d) ? N.a(Tf.a(x, d), P(Zf, Tf.a(sd, d))) : null;
  }, null, null);
};
Zf.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  c = z(c);
  return Zf.j(a, b, c);
};
Zf.N = 2;
function $f(b, a) {
  return Vf(1, Zf.a(Xf(b), a));
}
function ag(b, a) {
  return P(N, tf(Tf, b, a));
}
function cg(b, a) {
  return new ff(null, function() {
    var c = w(a);
    if (c) {
      if (se(c)) {
        for (var d = Tc(c), e = B(d), f = kf(e), g = 0;;) {
          if (g < e) {
            var n;
            n = Kb.a(d, g);
            n = b.b ? b.b(n) : b.call(null, n);
            m(n) && nf(f, Kb.a(d, g));
            g += 1;
          } else {
            break;
          }
        }
        return mf(f.ta(), cg(b, Uc(c)));
      }
      d = x(c);
      c = sd(c);
      return m(b.b ? b.b(d) : b.call(null, d)) ? Ud(d, cg(b, c)) : cg(b, c);
    }
    return null;
  }, null, null);
}
function dg(b, a) {
  return cg(Ef(b), a);
}
function eg(b) {
  return function c(b) {
    return new ff(null, function() {
      return Ud(b, m(oe.b ? oe.b(b) : oe.call(null, b)) ? ag(c, C([w.b ? w.b(b) : w.call(null, b)], 0)) : null);
    }, null, null);
  }(b);
}
function fg(b) {
  return cg(function(a) {
    return !oe(a);
  }, sd(eg(b)));
}
var gg = function gg(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 0:
      return gg.o();
    case 1:
      return gg.b(arguments[0]);
    case 2:
      return gg.a(arguments[0], arguments[1]);
    case 3:
      return gg.c(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
gg.o = function() {
  return E;
};
gg.b = function(b) {
  return b;
};
gg.a = function(b, a) {
  return null != b ? null != b && (b.M & 4 || k === b.eh) ? Wd(Jc(Cb.c(Ic, Hc(b), a)), he(b)) : Cb.c(Hb, b, a) : Cb.c(ce, td, a);
};
gg.c = function(b, a, c) {
  return null != b && (b.M & 4 || k === b.eh) ? Wd(Jc(He(a, qf, Hc(b), c)), he(b)) : He(a, ce, b, c);
};
gg.N = 3;
function hg(b, a) {
  return Jc(Cb.c(function(a, d) {
    return qf.a(a, b.b ? b.b(d) : b.call(null, d));
  }, Hc(E), a));
}
function ig(b, a, c) {
  return gg.a(E, Tf.c(b, a, c));
}
function jg(b, a) {
  return Jc(Cb.c(function(a, d) {
    return m(b.b ? b.b(d) : b.call(null, d)) ? qf.a(a, d) : a;
  }, Hc(E), a));
}
function kg(b, a) {
  return Cb.c(t, b, a);
}
var lg = function lg(a, c, d) {
  c = w(c);
  var e = x(c), f = z(c);
  return f ? I.c(a, e, function() {
    var c = t.a(a, e);
    return lg.c ? lg.c(c, f, d) : lg.call(null, c, f, d);
  }()) : I.c(a, e, d);
}, mg = function mg(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 3:
      return mg.c(arguments[0], arguments[1], arguments[2]);
    case 4:
      return mg.K(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return mg.ba(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return mg.Xa(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      return mg.j(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], new rd(c.slice(6), 0, null));
  }
};
mg.c = function(b, a, c) {
  a = w(a);
  var d = x(a);
  return (a = z(a)) ? I.c(b, d, mg.c(t.a(b, d), a, c)) : I.c(b, d, function() {
    var a = t.a(b, d);
    return c.b ? c.b(a) : c.call(null, a);
  }());
};
mg.K = function(b, a, c, d) {
  a = w(a);
  var e = x(a);
  return (a = z(a)) ? I.c(b, e, mg.K(t.a(b, e), a, c, d)) : I.c(b, e, function() {
    var a = t.a(b, e);
    return c.a ? c.a(a, d) : c.call(null, a, d);
  }());
};
mg.ba = function(b, a, c, d, e) {
  a = w(a);
  var f = x(a);
  return (a = z(a)) ? I.c(b, f, mg.ba(t.a(b, f), a, c, d, e)) : I.c(b, f, function() {
    var a = t.a(b, f);
    return c.c ? c.c(a, d, e) : c.call(null, a, d, e);
  }());
};
mg.Xa = function(b, a, c, d, e, f) {
  a = w(a);
  var g = x(a);
  return (a = z(a)) ? I.c(b, g, mg.Xa(t.a(b, g), a, c, d, e, f)) : I.c(b, g, function() {
    var a = t.a(b, g);
    return c.K ? c.K(a, d, e, f) : c.call(null, a, d, e, f);
  }());
};
mg.j = function(b, a, c, d, e, f, g) {
  var n = w(a);
  a = x(n);
  return (n = z(n)) ? I.c(b, a, wf(mg, t.a(b, a), n, c, d, C([e, f, g], 0))) : I.c(b, a, wf(c, t.a(b, a), d, e, f, C([g], 0)));
};
mg.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  var d = z(c), c = x(d), e = z(d), d = x(e), f = z(e), e = x(f), g = z(f), f = x(g), g = z(g);
  return mg.j(a, b, c, d, e, f, g);
};
mg.N = 6;
function ng(b, a) {
  return I.c(b, a, function() {
    var c = t.a(b, a);
    return je.b ? je.b(c) : je.call(null, c);
  }());
}
function og(b, a) {
  this.Ka = b;
  this.A = a;
}
function pg(b) {
  return new og(b, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
}
function qg(b, a, c) {
  b.A[a] = c;
}
function rg(b) {
  return new og(b.Ka, yb(b.A));
}
function sg(b) {
  b = b.G;
  return 32 > b ? 0 : b - 1 >>> 5 << 5;
}
function tg(b, a, c) {
  for (;;) {
    if (0 === a) {
      return c;
    }
    var d = pg(b);
    d.A[0] = c;
    c = d;
    a -= 5;
  }
}
var ug = function ug(a, c, d, e) {
  var f = rg(d), g = a.G - 1 >>> c & 31;
  5 === c ? f.A[g] = e : (d = d.A[g], null != d ? (c -= 5, a = ug.K ? ug.K(a, c, d, e) : ug.call(null, a, c, d, e)) : a = tg(null, c - 5, e), f.A[g] = a);
  return f;
};
function vg(b, a) {
  throw Error([q("No item "), q(b), q(" in vector of length "), q(a)].join(""));
}
function wg(b, a) {
  if (a >= sg(b)) {
    return b.za;
  }
  for (var c = b.root, d = b.shift;;) {
    if (0 < d) {
      var e = d - 5, c = c.A[a >>> d & 31], d = e
    } else {
      return c.A;
    }
  }
}
function xg(b, a) {
  return 0 <= a && a < b.G ? wg(b, a) : vg(a, b.G);
}
var yg = function yg(a, c, d, e, f) {
  var g = rg(d);
  if (0 === c) {
    g.A[e & 31] = f;
  } else {
    var n = e >>> c & 31;
    c -= 5;
    d = d.A[n];
    a = yg.ba ? yg.ba(a, c, d, e, f) : yg.call(null, a, c, d, e, f);
    qg(g, n, a);
  }
  return g;
}, zg = function zg(a, c, d) {
  var e = a.G - 2 >>> c & 31;
  if (5 < c) {
    c -= 5;
    var f = d.A[e];
    a = zg.c ? zg.c(a, c, f) : zg.call(null, a, c, f);
    if (null == a && 0 === e) {
      return null;
    }
    d = rg(d);
    d.A[e] = a;
    return d;
  }
  if (0 === e) {
    return null;
  }
  d = rg(d);
  d.A[e] = null;
  return d;
};
function Bg(b, a, c, d, e, f) {
  this.V = b;
  this.Ue = a;
  this.A = c;
  this.ua = d;
  this.start = e;
  this.end = f;
}
Bg.prototype.ub = function() {
  return this.V < this.end;
};
Bg.prototype.next = function() {
  32 === this.V - this.Ue && (this.A = wg(this.ua, this.V), this.Ue += 32);
  var b = this.A[this.V & 31];
  this.V += 1;
  return b;
};
function Q(b, a, c, d, e, f) {
  this.R = b;
  this.G = a;
  this.shift = c;
  this.root = d;
  this.za = e;
  this.m = f;
  this.l = 167668511;
  this.M = 8196;
}
h = Q.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return "number" === typeof a ? Kb.c(this, a, c) : c;
};
h.wd = function(b, a, c) {
  b = 0;
  for (var d = c;;) {
    if (b < this.G) {
      var e = wg(this, b);
      c = e.length;
      a: {
        for (var f = 0;;) {
          if (f < c) {
            var g = f + b, n = e[f], d = a.c ? a.c(d, g, n) : a.call(null, d, g, n);
            if (Ed(d)) {
              e = d;
              break a;
            }
            f += 1;
          } else {
            e = d;
            break a;
          }
        }
      }
      if (Ed(e)) {
        return A.b ? A.b(e) : A.call(null, e);
      }
      b += c;
      d = e;
    } else {
      return d;
    }
  }
};
h.ra = function(b, a) {
  return xg(this, a)[a & 31];
};
h.Hb = function(b, a, c) {
  return 0 <= a && a < this.G ? wg(this, a)[a & 31] : c;
};
h.dd = function(b, a, c) {
  if (0 <= a && a < this.G) {
    return sg(this) <= a ? (b = yb(this.za), b[a & 31] = c, new Q(this.R, this.G, this.shift, this.root, b, null)) : new Q(this.R, this.G, this.shift, yg(this, this.shift, this.root, a, c), this.za, null);
  }
  if (a === this.G) {
    return Hb(this, c);
  }
  throw Error([q("Index "), q(a), q(" out of bounds  [0,"), q(this.G), q("]")].join(""));
};
h.ea = function() {
  var b = this.G;
  return new Bg(0, 0, 0 < B(this) ? wg(this, 0) : null, this, 0, b);
};
h.S = function() {
  return this.R;
};
h.$ = function() {
  return this.G;
};
h.le = function() {
  return Kb.a(this, 0);
};
h.me = function() {
  return Kb.a(this, 1);
};
h.Lc = function() {
  return 0 < this.G ? Kb.a(this, this.G - 1) : null;
};
h.Mc = function() {
  if (0 === this.G) {
    throw Error("Can't pop empty vector");
  }
  if (1 === this.G) {
    return mc(E, this.R);
  }
  if (1 < this.G - sg(this)) {
    return new Q(this.R, this.G - 1, this.shift, this.root, this.za.slice(0, -1), null);
  }
  var b = wg(this, this.G - 2), a = zg(this, this.shift, this.root), a = null == a ? R : a, c = this.G - 1;
  return 5 < this.shift && null == a.A[1] ? new Q(this.R, c, this.shift - 5, a.A[0], b, null) : new Q(this.R, c, this.shift, a, b, null);
};
h.$d = function() {
  return 0 < this.G ? new Sd(this, this.G - 1, null) : null;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  if (a instanceof Q) {
    if (this.G === B(a)) {
      for (var c = ad(this), d = ad(a);;) {
        if (m(c.ub())) {
          var e = c.next(), f = d.next();
          if (!v.a(e, f)) {
            return !1;
          }
        } else {
          return !0;
        }
      }
    } else {
      return !1;
    }
  } else {
    return Td(this, a);
  }
};
h.Zd = function() {
  return new Cg(this.G, this.shift, Dg.b ? Dg.b(this.root) : Dg.call(null, this.root), Eg.b ? Eg.b(this.za) : Eg.call(null, this.za));
};
h.Na = function() {
  return Wd(E, this.R);
};
h.$a = function(b, a) {
  return Fd(this, a);
};
h.ab = function(b, a, c) {
  b = 0;
  for (var d = c;;) {
    if (b < this.G) {
      var e = wg(this, b);
      c = e.length;
      a: {
        for (var f = 0;;) {
          if (f < c) {
            var g = e[f], d = a.a ? a.a(d, g) : a.call(null, d, g);
            if (Ed(d)) {
              e = d;
              break a;
            }
            f += 1;
          } else {
            e = d;
            break a;
          }
        }
      }
      if (Ed(e)) {
        return A.b ? A.b(e) : A.call(null, e);
      }
      b += c;
      d = e;
    } else {
      return d;
    }
  }
};
h.fa = function(b, a, c) {
  if ("number" === typeof a) {
    return fc(this, a, c);
  }
  throw Error("Vector's key for assoc must be a number.");
};
h.aa = function() {
  if (0 === this.G) {
    return null;
  }
  if (32 >= this.G) {
    return new rd(this.za, 0, null);
  }
  var b;
  a: {
    b = this.root;
    for (var a = this.shift;;) {
      if (0 < a) {
        a -= 5, b = b.A[0];
      } else {
        b = b.A;
        break a;
      }
    }
  }
  return Fg ? Fg(this, b, 0, 0) : Gg.call(null, this, b, 0, 0);
};
h.U = function(b, a) {
  return new Q(a, this.G, this.shift, this.root, this.za, this.m);
};
h.Z = function(b, a) {
  if (32 > this.G - sg(this)) {
    for (var c = this.za.length, d = Array(c + 1), e = 0;;) {
      if (e < c) {
        d[e] = this.za[e], e += 1;
      } else {
        break;
      }
    }
    d[c] = a;
    return new Q(this.R, this.G + 1, this.shift, this.root, d, null);
  }
  c = (d = this.G >>> 5 > 1 << this.shift) ? this.shift + 5 : this.shift;
  d ? (d = pg(null), qg(d, 0, this.root), qg(d, 1, tg(null, this.shift, new og(null, this.za)))) : d = ug(this, this.shift, this.root, new og(null, this.za));
  return new Q(this.R, this.G + 1, c, d, [a], null);
};
h.call = function() {
  var b = null, b = function(a, b, d) {
    switch(arguments.length) {
      case 2:
        return this.ra(null, b);
      case 3:
        return this.Hb(null, b, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.a = function(a, b) {
    return this.ra(null, b);
  };
  b.c = function(a, b, d) {
    return this.Hb(null, b, d);
  };
  return b;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return this.ra(null, b);
};
h.a = function(b, a) {
  return this.Hb(null, b, a);
};
var R = new og(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]), E = new Q(null, 0, 5, R, [], zd);
function Hg(b) {
  var a = b.length;
  if (32 > a) {
    return new Q(null, a, 5, R, b, null);
  }
  for (var c = 32, d = (new Q(null, 32, 5, R, b.slice(0, 32), null)).Zd(null);;) {
    if (c < a) {
      var e = c + 1, d = qf.a(d, b[c]), c = e
    } else {
      return Jc(d);
    }
  }
}
Q.prototype[xb] = function() {
  return vd(this);
};
function Ig(b) {
  return qb(b) ? Hg(b) : Jc(Cb.c(Ic, Hc(E), b));
}
var Jg = function Jg(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return Jg.j(0 < c.length ? new rd(c.slice(0), 0, null) : null);
};
Jg.j = function(b) {
  return b instanceof rd && 0 === b.V ? Hg(b.A) : Ig(b);
};
Jg.N = 0;
Jg.P = function(b) {
  return Jg.j(w(b));
};
function Kg(b, a, c, d, e, f) {
  this.mc = b;
  this.node = a;
  this.V = c;
  this.zb = d;
  this.R = e;
  this.m = f;
  this.l = 32375020;
  this.M = 1536;
}
h = Kg.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.R;
};
h.Ib = function() {
  if (this.zb + 1 < this.node.length) {
    var b;
    b = this.mc;
    var a = this.node, c = this.V, d = this.zb + 1;
    b = Fg ? Fg(b, a, c, d) : Gg.call(null, b, a, c, d);
    return null == b ? null : b;
  }
  return Vc(this);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(E, this.R);
};
h.$a = function(b, a) {
  var c;
  c = this.mc;
  var d = this.V + this.zb, e = B(this.mc);
  c = Lg ? Lg(c, d, e) : Mg.call(null, c, d, e);
  return Fd(c, a);
};
h.ab = function(b, a, c) {
  b = this.mc;
  var d = this.V + this.zb, e = B(this.mc);
  b = Lg ? Lg(b, d, e) : Mg.call(null, b, d, e);
  return Gd(b, a, c);
};
h.Ya = function() {
  return this.node[this.zb];
};
h.xb = function() {
  if (this.zb + 1 < this.node.length) {
    var b;
    b = this.mc;
    var a = this.node, c = this.V, d = this.zb + 1;
    b = Fg ? Fg(b, a, c, d) : Gg.call(null, b, a, c, d);
    return null == b ? td : b;
  }
  return Uc(this);
};
h.aa = function() {
  return this;
};
h.qf = function() {
  var b = this.node;
  return new jf(b, this.zb, b.length);
};
h.rf = function() {
  var b = this.V + this.node.length;
  if (b < Eb(this.mc)) {
    var a = this.mc, c = wg(this.mc, b);
    return Fg ? Fg(a, c, b, 0) : Gg.call(null, a, c, b, 0);
  }
  return td;
};
h.U = function(b, a) {
  return Ng ? Ng(this.mc, this.node, this.V, this.zb, a) : Gg.call(null, this.mc, this.node, this.V, this.zb, a);
};
h.Z = function(b, a) {
  return Ud(a, this);
};
h.pf = function() {
  var b = this.V + this.node.length;
  if (b < Eb(this.mc)) {
    var a = this.mc, c = wg(this.mc, b);
    return Fg ? Fg(a, c, b, 0) : Gg.call(null, a, c, b, 0);
  }
  return null;
};
Kg.prototype[xb] = function() {
  return vd(this);
};
function Gg(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 3:
      return a = arguments[0], c = arguments[1], d = arguments[2], new Kg(a, xg(a, c), c, d, null, null);
    case 4:
      return Fg(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return Ng(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error([q("Invalid arity: "), q(a.length)].join(""));;
  }
}
function Fg(b, a, c, d) {
  return new Kg(b, a, c, d, null, null);
}
function Ng(b, a, c, d, e) {
  return new Kg(b, a, c, d, e, null);
}
function Og(b, a, c, d, e) {
  this.R = b;
  this.ua = a;
  this.start = c;
  this.end = d;
  this.m = e;
  this.l = 167666463;
  this.M = 8192;
}
h = Og.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return "number" === typeof a ? Kb.c(this, a, c) : c;
};
h.wd = function(b, a, c) {
  b = this.start;
  for (var d = 0;;) {
    if (b < this.end) {
      var e = d, f = Kb.a(this.ua, b);
      c = a.c ? a.c(c, e, f) : a.call(null, c, e, f);
      if (Ed(c)) {
        return A.b ? A.b(c) : A.call(null, c);
      }
      d += 1;
      b += 1;
    } else {
      return c;
    }
  }
};
h.ra = function(b, a) {
  return 0 > a || this.end <= this.start + a ? vg(a, this.end - this.start) : Kb.a(this.ua, this.start + a);
};
h.Hb = function(b, a, c) {
  return 0 > a || this.end <= this.start + a ? c : Kb.c(this.ua, this.start + a, c);
};
h.dd = function(b, a, c) {
  var d = this.start + a;
  b = this.R;
  c = I.c(this.ua, d, c);
  a = this.start;
  var e = this.end, d = d + 1, d = e > d ? e : d;
  return Pg.ba ? Pg.ba(b, c, a, d, null) : Pg.call(null, b, c, a, d, null);
};
h.S = function() {
  return this.R;
};
h.$ = function() {
  return this.end - this.start;
};
h.Lc = function() {
  return Kb.a(this.ua, this.end - 1);
};
h.Mc = function() {
  if (this.start === this.end) {
    throw Error("Can't pop empty vector");
  }
  var b = this.R, a = this.ua, c = this.start, d = this.end - 1;
  return Pg.ba ? Pg.ba(b, a, c, d, null) : Pg.call(null, b, a, c, d, null);
};
h.$d = function() {
  return this.start !== this.end ? new Sd(this, this.end - this.start - 1, null) : null;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(E, this.R);
};
h.$a = function(b, a) {
  return Fd(this, a);
};
h.ab = function(b, a, c) {
  return Gd(this, a, c);
};
h.fa = function(b, a, c) {
  if ("number" === typeof a) {
    return fc(this, a, c);
  }
  throw Error("Subvec's key for assoc must be a number.");
};
h.aa = function() {
  var b = this;
  return function(a) {
    return function d(e) {
      return e === b.end ? null : Ud(Kb.a(b.ua, e), new ff(null, function() {
        return function() {
          return d(e + 1);
        };
      }(a), null, null));
    };
  }(this)(b.start);
};
h.U = function(b, a) {
  return Pg.ba ? Pg.ba(a, this.ua, this.start, this.end, this.m) : Pg.call(null, a, this.ua, this.start, this.end, this.m);
};
h.Z = function(b, a) {
  var c = this.R, d = fc(this.ua, this.end, a), e = this.start, f = this.end + 1;
  return Pg.ba ? Pg.ba(c, d, e, f, null) : Pg.call(null, c, d, e, f, null);
};
h.call = function() {
  var b = null, b = function(a, b, d) {
    switch(arguments.length) {
      case 2:
        return this.ra(null, b);
      case 3:
        return this.Hb(null, b, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.a = function(a, b) {
    return this.ra(null, b);
  };
  b.c = function(a, b, d) {
    return this.Hb(null, b, d);
  };
  return b;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return this.ra(null, b);
};
h.a = function(b, a) {
  return this.Hb(null, b, a);
};
Og.prototype[xb] = function() {
  return vd(this);
};
function Pg(b, a, c, d, e) {
  for (;;) {
    if (a instanceof Og) {
      c = a.start + c, d = a.start + d, a = a.ua;
    } else {
      var f = B(a);
      if (0 > c || 0 > d || c > f || d > f) {
        throw Error("Index out of bounds");
      }
      return new Og(b, a, c, d, e);
    }
  }
}
function Mg(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 2:
      return a = arguments[0], Lg(a, arguments[1], B(a));
    case 3:
      return Lg(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(a.length)].join(""));;
  }
}
function Lg(b, a, c) {
  return Pg(null, b, a, c, null);
}
function Qg(b, a) {
  return b === a.Ka ? a : new og(b, yb(a.A));
}
function Dg(b) {
  return new og({}, yb(b.A));
}
function Eg(b) {
  var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  ue(b, 0, a, 0, b.length);
  return a;
}
var Rg = function Rg(a, c, d, e) {
  d = Qg(a.root.Ka, d);
  var f = a.G - 1 >>> c & 31;
  if (5 === c) {
    a = e;
  } else {
    var g = d.A[f];
    null != g ? (c -= 5, a = Rg.K ? Rg.K(a, c, g, e) : Rg.call(null, a, c, g, e)) : a = tg(a.root.Ka, c - 5, e);
  }
  qg(d, f, a);
  return d;
};
function Cg(b, a, c, d) {
  this.G = b;
  this.shift = a;
  this.root = c;
  this.za = d;
  this.M = 88;
  this.l = 275;
}
h = Cg.prototype;
h.Id = function(b, a) {
  if (this.root.Ka) {
    if (32 > this.G - sg(this)) {
      this.za[this.G & 31] = a;
    } else {
      var c = new og(this.root.Ka, this.za), d = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      d[0] = a;
      this.za = d;
      if (this.G >>> 5 > 1 << this.shift) {
        var d = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], e = this.shift + 5;
        d[0] = this.root;
        d[1] = tg(this.root.Ka, this.shift, c);
        this.root = new og(this.root.Ka, d);
        this.shift = e;
      } else {
        this.root = Rg(this, this.shift, this.root, c);
      }
    }
    this.G += 1;
    return this;
  }
  throw Error("conj! after persistent!");
};
h.ae = function() {
  if (this.root.Ka) {
    this.root.Ka = null;
    var b = this.G - sg(this), a = Array(b);
    ue(this.za, 0, a, 0, b);
    return new Q(null, this.G, this.shift, this.root, a, null);
  }
  throw Error("persistent! called twice");
};
h.pe = function(b, a, c) {
  if ("number" === typeof a) {
    return Mc(this, a, c);
  }
  throw Error("TransientVector's key for assoc! must be a number.");
};
h.kg = function(b, a, c) {
  var d = this;
  if (d.root.Ka) {
    if (0 <= a && a < d.G) {
      return sg(this) <= a ? d.za[a & 31] = c : (b = function() {
        return function f(b, n) {
          var g = Qg(d.root.Ka, n);
          if (0 === b) {
            g.A[a & 31] = c;
          } else {
            var u = a >>> b & 31;
            qg(g, u, f(b - 5, g.A[u]));
          }
          return g;
        };
      }(this).call(null, d.shift, d.root), d.root = b), this;
    }
    if (a === d.G) {
      return Ic(this, c);
    }
    throw Error([q("Index "), q(a), q(" out of bounds for TransientVector of length"), q(d.G)].join(""));
  }
  throw Error("assoc! after persistent!");
};
h.$ = function() {
  if (this.root.Ka) {
    return this.G;
  }
  throw Error("count after persistent!");
};
h.ra = function(b, a) {
  if (this.root.Ka) {
    return xg(this, a)[a & 31];
  }
  throw Error("nth after persistent!");
};
h.Hb = function(b, a, c) {
  return 0 <= a && a < this.G ? Kb.a(this, a) : c;
};
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return "number" === typeof a ? Kb.c(this, a, c) : c;
};
h.call = function() {
  var b = null, b = function(a, b, d) {
    switch(arguments.length) {
      case 2:
        return this.W(null, b);
      case 3:
        return this.T(null, b, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.a = function(a, b) {
    return this.W(null, b);
  };
  b.c = function(a, b, d) {
    return this.T(null, b, d);
  };
  return b;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return this.W(null, b);
};
h.a = function(b, a) {
  return this.T(null, b, a);
};
function Sg(b, a) {
  this.ce = b;
  this.Be = a;
}
Sg.prototype.ub = function() {
  var b = null != this.ce && w(this.ce);
  return b ? b : (b = null != this.Be) ? this.Be.ub() : b;
};
Sg.prototype.next = function() {
  if (null != this.ce) {
    var b = x(this.ce);
    this.ce = z(this.ce);
    return b;
  }
  if (null != this.Be && this.Be.ub()) {
    return this.Be.next();
  }
  throw Error("No such element");
};
Sg.prototype.remove = function() {
  return Error("Unsupported operation");
};
function Tg(b, a, c, d) {
  this.R = b;
  this.$b = a;
  this.Fc = c;
  this.m = d;
  this.l = 31850572;
  this.M = 0;
}
h = Tg.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.R;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(td, this.R);
};
h.Ya = function() {
  return x(this.$b);
};
h.xb = function() {
  var b = z(this.$b);
  return b ? new Tg(this.R, b, this.Fc, null) : null == this.Fc ? Fb(this) : new Tg(this.R, this.Fc, null, null);
};
h.aa = function() {
  return this;
};
h.U = function(b, a) {
  return new Tg(a, this.$b, this.Fc, this.m);
};
h.Z = function(b, a) {
  return Ud(a, this);
};
Tg.prototype[xb] = function() {
  return vd(this);
};
function Ug(b, a, c, d, e) {
  this.R = b;
  this.count = a;
  this.$b = c;
  this.Fc = d;
  this.m = e;
  this.l = 31858766;
  this.M = 8192;
}
h = Ug.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, this.count.b ? this.count.b(this) : this.count.call(null, this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.ea = function() {
  return new Sg(this.$b, ad(this.Fc));
};
h.S = function() {
  return this.R;
};
h.$ = function() {
  return this.count;
};
h.Lc = function() {
  return x(this.$b);
};
h.Mc = function() {
  if (m(this.$b)) {
    var b = z(this.$b);
    return b ? new Ug(this.R, this.count - 1, b, this.Fc, null) : new Ug(this.R, this.count - 1, w(this.Fc), E, null);
  }
  return this;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(Vg, this.R);
};
h.Ya = function() {
  return x(this.$b);
};
h.xb = function() {
  return sd(w(this));
};
h.aa = function() {
  var b = w(this.Fc), a = this.$b;
  return m(m(a) ? a : b) ? new Tg(null, this.$b, w(b), null) : null;
};
h.U = function(b, a) {
  return new Ug(a, this.count, this.$b, this.Fc, this.m);
};
h.Z = function(b, a) {
  var c;
  m(this.$b) ? (c = this.Fc, c = new Ug(this.R, this.count + 1, this.$b, ce.a(m(c) ? c : E, a), null)) : c = new Ug(this.R, this.count + 1, ce.a(this.$b, a), E, null);
  return c;
};
var Vg = new Ug(null, 0, null, E, zd);
Ug.prototype[xb] = function() {
  return vd(this);
};
function Wg() {
  this.l = 2097152;
  this.M = 0;
}
Wg.prototype.equiv = function(b) {
  return this.O(null, b);
};
Wg.prototype.O = function() {
  return !1;
};
var Xg = new Wg;
function Yg(b, a) {
  return xe(pe(a) ? B(b) === B(a) ? Cf(function(b) {
    return v.a(t.c(a, x(b), Xg), $d(b));
  }, b) : null : null);
}
function Zg(b, a, c, d, e) {
  this.V = b;
  this.Th = a;
  this.cg = c;
  this.Ld = d;
  this.ug = e;
}
Zg.prototype.ub = function() {
  var b = this.V < this.cg;
  return b ? b : this.ug.ub();
};
Zg.prototype.next = function() {
  if (this.V < this.cg) {
    var b = Nd(this.Ld, this.V);
    this.V += 1;
    return new Q(null, 2, 5, R, [b, Tb.a(this.Th, b)], null);
  }
  return this.ug.next();
};
Zg.prototype.remove = function() {
  return Error("Unsupported operation");
};
function $g(b) {
  this.sa = b;
}
$g.prototype.next = function() {
  if (null != this.sa) {
    var b = x(this.sa), a = F(b, 0, null), b = F(b, 1, null);
    this.sa = z(this.sa);
    return {value:[a, b], done:!1};
  }
  return {value:null, done:!0};
};
function ah(b) {
  this.sa = b;
}
ah.prototype.next = function() {
  if (null != this.sa) {
    var b = x(this.sa);
    this.sa = z(this.sa);
    return {value:[b, b], done:!1};
  }
  return {value:null, done:!0};
};
function bh(b, a) {
  var c;
  if (a instanceof K) {
    a: {
      c = b.length;
      for (var d = a.ca, e = 0;;) {
        if (c <= e) {
          c = -1;
          break a;
        }
        if (b[e] instanceof K && d === b[e].ca) {
          c = e;
          break a;
        }
        e += 2;
      }
    }
  } else {
    if (da(a) || "number" === typeof a) {
      a: {
        for (c = b.length, d = 0;;) {
          if (c <= d) {
            c = -1;
            break a;
          }
          if (a === b[d]) {
            c = d;
            break a;
          }
          d += 2;
        }
      }
    } else {
      if (a instanceof nd) {
        a: {
          for (c = b.length, d = a.Xc, e = 0;;) {
            if (c <= e) {
              c = -1;
              break a;
            }
            if (b[e] instanceof nd && d === b[e].Xc) {
              c = e;
              break a;
            }
            e += 2;
          }
        }
      } else {
        if (null == a) {
          a: {
            for (c = b.length, d = 0;;) {
              if (c <= d) {
                c = -1;
                break a;
              }
              if (null == b[d]) {
                c = d;
                break a;
              }
              d += 2;
            }
          }
        } else {
          a: {
            for (c = b.length, d = 0;;) {
              if (c <= d) {
                c = -1;
                break a;
              }
              if (v.a(a, b[d])) {
                c = d;
                break a;
              }
              d += 2;
            }
          }
        }
      }
    }
  }
  return c;
}
function ch(b, a, c) {
  this.A = b;
  this.V = a;
  this.Gb = c;
  this.l = 32374990;
  this.M = 0;
}
h = ch.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.Gb;
};
h.Ib = function() {
  return this.V < this.A.length - 2 ? new ch(this.A, this.V + 2, this.Gb) : null;
};
h.$ = function() {
  return (this.A.length - this.V) / 2;
};
h.Y = function() {
  return yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(td, this.Gb);
};
h.$a = function(b, a) {
  return Xd(a, this);
};
h.ab = function(b, a, c) {
  return Zd(a, c, this);
};
h.Ya = function() {
  return new Q(null, 2, 5, R, [this.A[this.V], this.A[this.V + 1]], null);
};
h.xb = function() {
  return this.V < this.A.length - 2 ? new ch(this.A, this.V + 2, this.Gb) : td;
};
h.aa = function() {
  return this;
};
h.U = function(b, a) {
  return new ch(this.A, this.V, a);
};
h.Z = function(b, a) {
  return Ud(a, this);
};
ch.prototype[xb] = function() {
  return vd(this);
};
function dh(b, a, c) {
  this.A = b;
  this.V = a;
  this.G = c;
}
dh.prototype.ub = function() {
  return this.V < this.G;
};
dh.prototype.next = function() {
  var b = new Q(null, 2, 5, R, [this.A[this.V], this.A[this.V + 1]], null);
  this.V += 2;
  return b;
};
function l(b, a, c, d) {
  this.R = b;
  this.G = a;
  this.A = c;
  this.m = d;
  this.l = 16647951;
  this.M = 8196;
}
h = l.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.keys = function() {
  return vd(eh.b ? eh.b(this) : eh.call(null, this));
};
h.entries = function() {
  return new $g(w(w(this)));
};
h.values = function() {
  return vd(fh.b ? fh.b(this) : fh.call(null, this));
};
h.has = function(b) {
  return ze(this, b);
};
h.get = function(b, a) {
  return this.T(null, b, a);
};
h.forEach = function(b) {
  for (var a = w(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.ra(null, e), g = F(f, 0, null), f = F(f, 1, null);
      b.a ? b.a(f, g) : b.call(null, f, g);
      e += 1;
    } else {
      if (a = w(a)) {
        se(a) ? (c = Tc(a), a = Uc(a), g = c, d = B(c), c = g) : (c = x(a), g = F(c, 0, null), f = F(c, 1, null), b.a ? b.a(f, g) : b.call(null, f, g), a = z(a), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  b = bh(this.A, a);
  return -1 === b ? c : this.A[b + 1];
};
h.wd = function(b, a, c) {
  b = this.A.length;
  for (var d = 0;;) {
    if (d < b) {
      var e = this.A[d], f = this.A[d + 1];
      c = a.c ? a.c(c, e, f) : a.call(null, c, e, f);
      if (Ed(c)) {
        return A.b ? A.b(c) : A.call(null, c);
      }
      d += 2;
    } else {
      return c;
    }
  }
};
h.ea = function() {
  return new dh(this.A, 0, 2 * this.G);
};
h.S = function() {
  return this.R;
};
h.$ = function() {
  return this.G;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Ad(this);
};
h.O = function(b, a) {
  if (null != a && (a.l & 1024 || k === a.jh)) {
    var c = this.A.length;
    if (this.G === a.$(null)) {
      for (var d = 0;;) {
        if (d < c) {
          var e = a.T(null, this.A[d], ve);
          if (e !== ve) {
            if (v.a(this.A[d + 1], e)) {
              d += 2;
            } else {
              return !1;
            }
          } else {
            return !1;
          }
        } else {
          return !0;
        }
      }
    } else {
      return !1;
    }
  } else {
    return Yg(this, a);
  }
};
h.Zd = function() {
  return new gh({}, this.A.length, yb(this.A));
};
h.Na = function() {
  return mc(S, this.R);
};
h.$a = function(b, a) {
  return Xd(a, this);
};
h.ab = function(b, a, c) {
  return Zd(a, c, this);
};
h.ia = function(b, a) {
  if (0 <= bh(this.A, a)) {
    var c = this.A.length, d = c - 2;
    if (0 === d) {
      return Fb(this);
    }
    for (var d = Array(d), e = 0, f = 0;;) {
      if (e >= c) {
        return new l(this.R, this.G - 1, d, null);
      }
      v.a(a, this.A[e]) || (d[f] = this.A[e], d[f + 1] = this.A[e + 1], f += 2);
      e += 2;
    }
  } else {
    return this;
  }
};
h.fa = function(b, a, c) {
  b = bh(this.A, a);
  if (-1 === b) {
    if (this.G < hh) {
      b = this.A;
      for (var d = b.length, e = Array(d + 2), f = 0;;) {
        if (f < d) {
          e[f] = b[f], f += 1;
        } else {
          break;
        }
      }
      e[d] = a;
      e[d + 1] = c;
      return new l(this.R, this.G + 1, e, null);
    }
    return mc(Vb(gg.a(ih, this), a, c), this.R);
  }
  if (c === this.A[b + 1]) {
    return this;
  }
  a = yb(this.A);
  a[b + 1] = c;
  return new l(this.R, this.G, a, null);
};
h.Yd = function(b, a) {
  return -1 !== bh(this.A, a);
};
h.aa = function() {
  var b = this.A;
  return 0 <= b.length - 2 ? new ch(b, 0, null) : null;
};
h.U = function(b, a) {
  return new l(a, this.G, this.A, this.m);
};
h.Z = function(b, a) {
  if (re(a)) {
    return Vb(this, Kb.a(a, 0), Kb.a(a, 1));
  }
  for (var c = this, d = w(a);;) {
    if (null == d) {
      return c;
    }
    var e = x(d);
    if (re(e)) {
      c = Vb(c, Kb.a(e, 0), Kb.a(e, 1)), d = z(d);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
h.call = function() {
  var b = null, b = function(a, b, d) {
    switch(arguments.length) {
      case 2:
        return this.W(null, b);
      case 3:
        return this.T(null, b, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.a = function(a, b) {
    return this.W(null, b);
  };
  b.c = function(a, b, d) {
    return this.T(null, b, d);
  };
  return b;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return this.W(null, b);
};
h.a = function(b, a) {
  return this.T(null, b, a);
};
var S = new l(null, 0, [], Bd), hh = 8;
function jh(b) {
  for (var a = [], c = 0;;) {
    if (c < b.length) {
      var d = b[c], e = b[c + 1];
      -1 === bh(a, d) && (a.push(d), a.push(e));
      c += 2;
    } else {
      break;
    }
  }
  return new l(null, a.length / 2, a, null);
}
l.prototype[xb] = function() {
  return vd(this);
};
function gh(b, a, c) {
  this.Kd = b;
  this.Cc = a;
  this.A = c;
  this.l = 258;
  this.M = 56;
}
h = gh.prototype;
h.$ = function() {
  if (m(this.Kd)) {
    return Me(this.Cc, 2);
  }
  throw Error("count after persistent!");
};
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  if (m(this.Kd)) {
    return b = bh(this.A, a), -1 === b ? c : this.A[b + 1];
  }
  throw Error("lookup after persistent!");
};
h.Id = function(b, a) {
  if (m(this.Kd)) {
    if (null != a ? a.l & 2048 || k === a.kh || (a.l ? 0 : p(Yb, a)) : p(Yb, a)) {
      return Kc(this, Ue.b ? Ue.b(a) : Ue.call(null, a), Ve.b ? Ve.b(a) : Ve.call(null, a));
    }
    for (var c = w(a), d = this;;) {
      var e = x(c);
      if (m(e)) {
        c = z(c), d = Kc(d, Ue.b ? Ue.b(e) : Ue.call(null, e), Ve.b ? Ve.b(e) : Ve.call(null, e));
      } else {
        return d;
      }
    }
  } else {
    throw Error("conj! after persistent!");
  }
};
h.ae = function() {
  if (m(this.Kd)) {
    return this.Kd = !1, new l(null, Me(this.Cc, 2), this.A, null);
  }
  throw Error("persistent! called twice");
};
h.pe = function(b, a, c) {
  if (m(this.Kd)) {
    b = bh(this.A, a);
    if (-1 === b) {
      return this.Cc + 2 <= 2 * hh ? (this.Cc += 2, this.A.push(a), this.A.push(c), this) : rf(kh.a ? kh.a(this.Cc, this.A) : kh.call(null, this.Cc, this.A), a, c);
    }
    c !== this.A[b + 1] && (this.A[b + 1] = c);
    return this;
  }
  throw Error("assoc! after persistent!");
};
h.tf = function(b, a) {
  if (m(this.Kd)) {
    var c = bh(this.A, a);
    0 <= c && (this.A[c] = this.A[this.Cc - 2], this.A[c + 1] = this.A[this.Cc - 1], c = this.A, c.pop(), c.pop(), this.Cc -= 2);
    return this;
  }
  throw Error("dissoc! after persistent!");
};
function kh(b, a) {
  for (var c = Hc(ih), d = 0;;) {
    if (d < b) {
      c = Kc(c, a[d], a[d + 1]), d += 2;
    } else {
      return c;
    }
  }
}
function lh() {
  this.w = !1;
}
function mh(b, a) {
  return b === a ? !0 : L(b, a) ? !0 : v.a(b, a);
}
function nh(b, a, c) {
  b = yb(b);
  b[a] = c;
  return b;
}
function oh(b, a) {
  var c = Array(b.length - 2);
  ue(b, 0, c, 0, 2 * a);
  ue(b, 2 * (a + 1), c, 2 * a, c.length - 2 * a);
  return c;
}
function ph(b, a, c, d) {
  b = b.hd(a);
  b.A[c] = d;
  return b;
}
function qh(b, a, c) {
  for (var d = b.length, e = 0, f = c;;) {
    if (e < d) {
      c = b[e];
      if (null != c) {
        var g = b[e + 1];
        c = a.c ? a.c(f, c, g) : a.call(null, f, c, g);
      } else {
        c = b[e + 1], c = null != c ? c.Od(a, f) : f;
      }
      if (Ed(c)) {
        return A.b ? A.b(c) : A.call(null, c);
      }
      e += 2;
      f = c;
    } else {
      return f;
    }
  }
}
function rh(b, a, c, d) {
  this.A = b;
  this.V = a;
  this.ze = c;
  this.Dc = d;
}
rh.prototype.advance = function() {
  for (var b = this.A.length;;) {
    if (this.V < b) {
      var a = this.A[this.V], c = this.A[this.V + 1];
      null != a ? a = this.ze = new Q(null, 2, 5, R, [a, c], null) : null != c ? (a = ad(c), a = a.ub() ? this.Dc = a : !1) : a = !1;
      this.V += 2;
      if (a) {
        return !0;
      }
    } else {
      return !1;
    }
  }
};
rh.prototype.ub = function() {
  var b = null != this.ze;
  return b ? b : (b = null != this.Dc) ? b : this.advance();
};
rh.prototype.next = function() {
  if (null != this.ze) {
    var b = this.ze;
    this.ze = null;
    return b;
  }
  if (null != this.Dc) {
    return b = this.Dc.next(), this.Dc.ub() || (this.Dc = null), b;
  }
  if (this.advance()) {
    return this.next();
  }
  throw Error("No such element");
};
rh.prototype.remove = function() {
  return Error("Unsupported operation");
};
function sh(b, a, c) {
  this.Ka = b;
  this.Fa = a;
  this.A = c;
}
h = sh.prototype;
h.hd = function(b) {
  if (b === this.Ka) {
    return this;
  }
  var a = Oe(this.Fa), c = Array(0 > a ? 4 : 2 * (a + 1));
  ue(this.A, 0, c, 0, 2 * a);
  return new sh(b, this.Fa, c);
};
h.ve = function(b, a, c, d, e) {
  var f = 1 << (c >>> a & 31);
  if (0 === (this.Fa & f)) {
    return this;
  }
  var g = Oe(this.Fa & f - 1), n = this.A[2 * g], r = this.A[2 * g + 1];
  return null == n ? (a = r.ve(b, a + 5, c, d, e), a === r ? this : null != a ? ph(this, b, 2 * g + 1, a) : this.Fa === f ? null : th(this, b, f, g)) : mh(d, n) ? (e[0] = !0, th(this, b, f, g)) : this;
};
function th(b, a, c, d) {
  if (b.Fa === c) {
    return null;
  }
  b = b.hd(a);
  a = b.A;
  var e = a.length;
  b.Fa ^= c;
  ue(a, 2 * (d + 1), a, 2 * d, e - 2 * (d + 1));
  a[e - 2] = null;
  a[e - 1] = null;
  return b;
}
h.te = function() {
  return uh ? uh(this.A) : vh.call(null, this.A);
};
h.Od = function(b, a) {
  return qh(this.A, b, a);
};
h.Bd = function(b, a, c, d) {
  var e = 1 << (a >>> b & 31);
  if (0 === (this.Fa & e)) {
    return d;
  }
  var f = Oe(this.Fa & e - 1), e = this.A[2 * f], f = this.A[2 * f + 1];
  return null == e ? f.Bd(b + 5, a, c, d) : mh(c, e) ? f : d;
};
h.Bc = function(b, a, c, d, e, f) {
  var g = 1 << (c >>> a & 31), n = Oe(this.Fa & g - 1);
  if (0 === (this.Fa & g)) {
    var r = Oe(this.Fa);
    if (2 * r < this.A.length) {
      b = this.hd(b);
      a = b.A;
      f.w = !0;
      a: {
        for (c = 2 * (r - n), f = 2 * n + (c - 1), r = 2 * (n + 1) + (c - 1);;) {
          if (0 === c) {
            break a;
          }
          a[r] = a[f];
          --r;
          --c;
          --f;
        }
      }
      a[2 * n] = d;
      a[2 * n + 1] = e;
      b.Fa |= g;
      return b;
    }
    if (16 <= r) {
      n = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      n[c >>> a & 31] = wh.Bc(b, a + 5, c, d, e, f);
      for (e = d = 0;;) {
        if (32 > d) {
          0 !== (this.Fa >>> d & 1) && (n[d] = null != this.A[e] ? wh.Bc(b, a + 5, kd(this.A[e]), this.A[e], this.A[e + 1], f) : this.A[e + 1], e += 2), d += 1;
        } else {
          break;
        }
      }
      return new xh(b, r + 1, n);
    }
    a = Array(2 * (r + 4));
    ue(this.A, 0, a, 0, 2 * n);
    a[2 * n] = d;
    a[2 * n + 1] = e;
    ue(this.A, 2 * n, a, 2 * (n + 1), 2 * (r - n));
    f.w = !0;
    b = this.hd(b);
    b.A = a;
    b.Fa |= g;
    return b;
  }
  r = this.A[2 * n];
  g = this.A[2 * n + 1];
  if (null == r) {
    return r = g.Bc(b, a + 5, c, d, e, f), r === g ? this : ph(this, b, 2 * n + 1, r);
  }
  if (mh(d, r)) {
    return e === g ? this : ph(this, b, 2 * n + 1, e);
  }
  f.w = !0;
  f = a + 5;
  d = yh ? yh(b, f, r, g, c, d, e) : zh.call(null, b, f, r, g, c, d, e);
  e = 2 * n;
  n = 2 * n + 1;
  b = this.hd(b);
  b.A[e] = null;
  b.A[n] = d;
  return b;
};
h.Ac = function(b, a, c, d, e) {
  var f = 1 << (a >>> b & 31), g = Oe(this.Fa & f - 1);
  if (0 === (this.Fa & f)) {
    var n = Oe(this.Fa);
    if (16 <= n) {
      g = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      g[a >>> b & 31] = wh.Ac(b + 5, a, c, d, e);
      for (d = c = 0;;) {
        if (32 > c) {
          0 !== (this.Fa >>> c & 1) && (g[c] = null != this.A[d] ? wh.Ac(b + 5, kd(this.A[d]), this.A[d], this.A[d + 1], e) : this.A[d + 1], d += 2), c += 1;
        } else {
          break;
        }
      }
      return new xh(null, n + 1, g);
    }
    b = Array(2 * (n + 1));
    ue(this.A, 0, b, 0, 2 * g);
    b[2 * g] = c;
    b[2 * g + 1] = d;
    ue(this.A, 2 * g, b, 2 * (g + 1), 2 * (n - g));
    e.w = !0;
    return new sh(null, this.Fa | f, b);
  }
  var r = this.A[2 * g], f = this.A[2 * g + 1];
  if (null == r) {
    return n = f.Ac(b + 5, a, c, d, e), n === f ? this : new sh(null, this.Fa, nh(this.A, 2 * g + 1, n));
  }
  if (mh(c, r)) {
    return d === f ? this : new sh(null, this.Fa, nh(this.A, 2 * g + 1, d));
  }
  e.w = !0;
  e = this.Fa;
  n = this.A;
  b += 5;
  b = Ah ? Ah(b, r, f, a, c, d) : zh.call(null, b, r, f, a, c, d);
  c = 2 * g;
  g = 2 * g + 1;
  d = yb(n);
  d[c] = null;
  d[g] = b;
  return new sh(null, e, d);
};
h.ue = function(b, a, c) {
  var d = 1 << (a >>> b & 31);
  if (0 === (this.Fa & d)) {
    return this;
  }
  var e = Oe(this.Fa & d - 1), f = this.A[2 * e], g = this.A[2 * e + 1];
  return null == f ? (b = g.ue(b + 5, a, c), b === g ? this : null != b ? new sh(null, this.Fa, nh(this.A, 2 * e + 1, b)) : this.Fa === d ? null : new sh(null, this.Fa ^ d, oh(this.A, e))) : mh(c, f) ? new sh(null, this.Fa ^ d, oh(this.A, e)) : this;
};
h.ea = function() {
  return new rh(this.A, 0, null, null);
};
var wh = new sh(null, 0, []);
function Bh(b, a, c) {
  var d = b.A, e = d.length;
  b = Array(2 * (b.G - 1));
  for (var f = 0, g = 1, n = 0;;) {
    if (f < e) {
      f !== c && null != d[f] && (b[g] = d[f], g += 2, n |= 1 << f), f += 1;
    } else {
      return new sh(a, n, b);
    }
  }
}
function Ch(b, a, c) {
  this.A = b;
  this.V = a;
  this.Dc = c;
}
Ch.prototype.ub = function() {
  for (var b = this.A.length;;) {
    if (null != this.Dc && this.Dc.ub()) {
      return !0;
    }
    if (this.V < b) {
      var a = this.A[this.V];
      this.V += 1;
      null != a && (this.Dc = ad(a));
    } else {
      return !1;
    }
  }
};
Ch.prototype.next = function() {
  if (this.ub()) {
    return this.Dc.next();
  }
  throw Error("No such element");
};
Ch.prototype.remove = function() {
  return Error("Unsupported operation");
};
function xh(b, a, c) {
  this.Ka = b;
  this.G = a;
  this.A = c;
}
h = xh.prototype;
h.hd = function(b) {
  return b === this.Ka ? this : new xh(b, this.G, yb(this.A));
};
h.ve = function(b, a, c, d, e) {
  var f = c >>> a & 31, g = this.A[f];
  if (null == g) {
    return this;
  }
  a = g.ve(b, a + 5, c, d, e);
  if (a === g) {
    return this;
  }
  if (null == a) {
    if (8 >= this.G) {
      return Bh(this, b, f);
    }
    b = ph(this, b, f, a);
    --b.G;
    return b;
  }
  return ph(this, b, f, a);
};
h.te = function() {
  return Dh ? Dh(this.A) : Eh.call(null, this.A);
};
h.Od = function(b, a) {
  for (var c = this.A.length, d = 0, e = a;;) {
    if (d < c) {
      var f = this.A[d];
      if (null != f && (e = f.Od(b, e), Ed(e))) {
        return A.b ? A.b(e) : A.call(null, e);
      }
      d += 1;
    } else {
      return e;
    }
  }
};
h.Bd = function(b, a, c, d) {
  var e = this.A[a >>> b & 31];
  return null != e ? e.Bd(b + 5, a, c, d) : d;
};
h.Bc = function(b, a, c, d, e, f) {
  var g = c >>> a & 31, n = this.A[g];
  if (null == n) {
    return b = ph(this, b, g, wh.Bc(b, a + 5, c, d, e, f)), b.G += 1, b;
  }
  a = n.Bc(b, a + 5, c, d, e, f);
  return a === n ? this : ph(this, b, g, a);
};
h.Ac = function(b, a, c, d, e) {
  var f = a >>> b & 31, g = this.A[f];
  if (null == g) {
    return new xh(null, this.G + 1, nh(this.A, f, wh.Ac(b + 5, a, c, d, e)));
  }
  b = g.Ac(b + 5, a, c, d, e);
  return b === g ? this : new xh(null, this.G, nh(this.A, f, b));
};
h.ue = function(b, a, c) {
  var d = a >>> b & 31, e = this.A[d];
  return null != e ? (b = e.ue(b + 5, a, c), b === e ? this : null == b ? 8 >= this.G ? Bh(this, null, d) : new xh(null, this.G - 1, nh(this.A, d, b)) : new xh(null, this.G, nh(this.A, d, b))) : this;
};
h.ea = function() {
  return new Ch(this.A, 0, null);
};
function Fh(b, a, c) {
  a *= 2;
  for (var d = 0;;) {
    if (d < a) {
      if (mh(c, b[d])) {
        return d;
      }
      d += 2;
    } else {
      return -1;
    }
  }
}
function Gh(b, a, c, d) {
  this.Ka = b;
  this.ed = a;
  this.G = c;
  this.A = d;
}
h = Gh.prototype;
h.hd = function(b) {
  if (b === this.Ka) {
    return this;
  }
  var a = Array(2 * (this.G + 1));
  ue(this.A, 0, a, 0, 2 * this.G);
  return new Gh(b, this.ed, this.G, a);
};
h.ve = function(b, a, c, d, e) {
  a = Fh(this.A, this.G, d);
  if (-1 === a) {
    return this;
  }
  e[0] = !0;
  if (1 === this.G) {
    return null;
  }
  b = this.hd(b);
  e = b.A;
  e[a] = e[2 * this.G - 2];
  e[a + 1] = e[2 * this.G - 1];
  e[2 * this.G - 1] = null;
  e[2 * this.G - 2] = null;
  --b.G;
  return b;
};
h.te = function() {
  return uh ? uh(this.A) : vh.call(null, this.A);
};
h.Od = function(b, a) {
  return qh(this.A, b, a);
};
h.Bd = function(b, a, c, d) {
  b = Fh(this.A, this.G, c);
  return 0 > b ? d : mh(c, this.A[b]) ? this.A[b + 1] : d;
};
h.Bc = function(b, a, c, d, e, f) {
  if (c === this.ed) {
    a = Fh(this.A, this.G, d);
    if (-1 === a) {
      if (this.A.length > 2 * this.G) {
        return a = 2 * this.G, c = 2 * this.G + 1, b = this.hd(b), b.A[a] = d, b.A[c] = e, f.w = !0, b.G += 1, b;
      }
      c = this.A.length;
      a = Array(c + 2);
      ue(this.A, 0, a, 0, c);
      a[c] = d;
      a[c + 1] = e;
      f.w = !0;
      d = this.G + 1;
      b === this.Ka ? (this.A = a, this.G = d, b = this) : b = new Gh(this.Ka, this.ed, d, a);
      return b;
    }
    return this.A[a + 1] === e ? this : ph(this, b, a + 1, e);
  }
  return (new sh(b, 1 << (this.ed >>> a & 31), [null, this, null, null])).Bc(b, a, c, d, e, f);
};
h.Ac = function(b, a, c, d, e) {
  return a === this.ed ? (b = Fh(this.A, this.G, c), -1 === b ? (b = 2 * this.G, a = Array(b + 2), ue(this.A, 0, a, 0, b), a[b] = c, a[b + 1] = d, e.w = !0, new Gh(null, this.ed, this.G + 1, a)) : v.a(this.A[b + 1], d) ? this : new Gh(null, this.ed, this.G, nh(this.A, b + 1, d))) : (new sh(null, 1 << (this.ed >>> b & 31), [null, this])).Ac(b, a, c, d, e);
};
h.ue = function(b, a, c) {
  b = Fh(this.A, this.G, c);
  return -1 === b ? this : 1 === this.G ? null : new Gh(null, this.ed, this.G - 1, oh(this.A, Me(b, 2)));
};
h.ea = function() {
  return new rh(this.A, 0, null, null);
};
function zh(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 6:
      return Ah(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    case 7:
      return yh(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
    default:
      throw Error([q("Invalid arity: "), q(a.length)].join(""));;
  }
}
function Ah(b, a, c, d, e, f) {
  var g = kd(a);
  if (g === d) {
    return new Gh(null, g, 2, [a, c, e, f]);
  }
  var n = new lh;
  return wh.Ac(b, g, a, c, n).Ac(b, d, e, f, n);
}
function yh(b, a, c, d, e, f, g) {
  var n = kd(c);
  if (n === e) {
    return new Gh(null, n, 2, [c, d, f, g]);
  }
  var r = new lh;
  return wh.Bc(b, a, n, c, d, r).Bc(b, a, e, f, g, r);
}
function Hh(b, a, c, d, e) {
  this.R = b;
  this.Ba = a;
  this.V = c;
  this.sa = d;
  this.m = e;
  this.l = 32374860;
  this.M = 0;
}
h = Hh.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.R;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(td, this.R);
};
h.$a = function(b, a) {
  return Xd(a, this);
};
h.ab = function(b, a, c) {
  return Zd(a, c, this);
};
h.Ya = function() {
  return null == this.sa ? new Q(null, 2, 5, R, [this.Ba[this.V], this.Ba[this.V + 1]], null) : x(this.sa);
};
h.xb = function() {
  var b = this, a = null == b.sa ? function() {
    var a = b.Ba, d = b.V + 2;
    return Ih ? Ih(a, d, null) : vh.call(null, a, d, null);
  }() : function() {
    var a = b.Ba, d = b.V, e = z(b.sa);
    return Ih ? Ih(a, d, e) : vh.call(null, a, d, e);
  }();
  return null != a ? a : td;
};
h.aa = function() {
  return this;
};
h.U = function(b, a) {
  return new Hh(a, this.Ba, this.V, this.sa, this.m);
};
h.Z = function(b, a) {
  return Ud(a, this);
};
Hh.prototype[xb] = function() {
  return vd(this);
};
function vh(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 1:
      return uh(arguments[0]);
    case 3:
      return Ih(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(a.length)].join(""));;
  }
}
function uh(b) {
  return Ih(b, 0, null);
}
function Ih(b, a, c) {
  if (null == c) {
    for (c = b.length;;) {
      if (a < c) {
        if (null != b[a]) {
          return new Hh(null, b, a, null, null);
        }
        var d = b[a + 1];
        if (m(d) && (d = d.te(), m(d))) {
          return new Hh(null, b, a + 2, d, null);
        }
        a += 2;
      } else {
        return null;
      }
    }
  } else {
    return new Hh(null, b, a, c, null);
  }
}
function Jh(b, a, c, d, e) {
  this.R = b;
  this.Ba = a;
  this.V = c;
  this.sa = d;
  this.m = e;
  this.l = 32374860;
  this.M = 0;
}
h = Jh.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.R;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(td, this.R);
};
h.$a = function(b, a) {
  return Xd(a, this);
};
h.ab = function(b, a, c) {
  return Zd(a, c, this);
};
h.Ya = function() {
  return x(this.sa);
};
h.xb = function() {
  var b;
  b = this.Ba;
  var a = this.V, c = z(this.sa);
  b = Kh ? Kh(null, b, a, c) : Eh.call(null, null, b, a, c);
  return null != b ? b : td;
};
h.aa = function() {
  return this;
};
h.U = function(b, a) {
  return new Jh(a, this.Ba, this.V, this.sa, this.m);
};
h.Z = function(b, a) {
  return Ud(a, this);
};
Jh.prototype[xb] = function() {
  return vd(this);
};
function Eh(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 1:
      return Dh(arguments[0]);
    case 4:
      return Kh(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([q("Invalid arity: "), q(a.length)].join(""));;
  }
}
function Dh(b) {
  return Kh(null, b, 0, null);
}
function Kh(b, a, c, d) {
  if (null == d) {
    for (d = a.length;;) {
      if (c < d) {
        var e = a[c];
        if (m(e) && (e = e.te(), m(e))) {
          return new Jh(b, a, c + 1, e, null);
        }
        c += 1;
      } else {
        return null;
      }
    }
  } else {
    return new Jh(b, a, c, d, null);
  }
}
function Lh(b, a, c) {
  this.Db = b;
  this.Cg = a;
  this.zf = c;
}
Lh.prototype.ub = function() {
  return rb(this.zf) || this.Cg.ub();
};
Lh.prototype.next = function() {
  if (this.zf) {
    return this.Cg.next();
  }
  this.zf = !0;
  return new Q(null, 2, 5, R, [null, this.Db], null);
};
Lh.prototype.remove = function() {
  return Error("Unsupported operation");
};
function Mh(b, a, c, d, e, f) {
  this.R = b;
  this.G = a;
  this.root = c;
  this.yb = d;
  this.Db = e;
  this.m = f;
  this.l = 16123663;
  this.M = 8196;
}
h = Mh.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.keys = function() {
  return vd(eh.b ? eh.b(this) : eh.call(null, this));
};
h.entries = function() {
  return new $g(w(w(this)));
};
h.values = function() {
  return vd(fh.b ? fh.b(this) : fh.call(null, this));
};
h.has = function(b) {
  return ze(this, b);
};
h.get = function(b, a) {
  return this.T(null, b, a);
};
h.forEach = function(b) {
  for (var a = w(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.ra(null, e), g = F(f, 0, null), f = F(f, 1, null);
      b.a ? b.a(f, g) : b.call(null, f, g);
      e += 1;
    } else {
      if (a = w(a)) {
        se(a) ? (c = Tc(a), a = Uc(a), g = c, d = B(c), c = g) : (c = x(a), g = F(c, 0, null), f = F(c, 1, null), b.a ? b.a(f, g) : b.call(null, f, g), a = z(a), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return null == a ? this.yb ? this.Db : c : null == this.root ? c : this.root.Bd(0, kd(a), a, c);
};
h.wd = function(b, a, c) {
  b = this.yb ? a.c ? a.c(c, null, this.Db) : a.call(null, c, null, this.Db) : c;
  return Ed(b) ? A.b ? A.b(b) : A.call(null, b) : null != this.root ? this.root.Od(a, b) : b;
};
h.ea = function() {
  var b = this.root ? ad(this.root) : Af();
  return this.yb ? new Lh(this.Db, b, !1) : b;
};
h.S = function() {
  return this.R;
};
h.$ = function() {
  return this.G;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Ad(this);
};
h.O = function(b, a) {
  return Yg(this, a);
};
h.Zd = function() {
  return new Nh({}, this.root, this.G, this.yb, this.Db);
};
h.Na = function() {
  return mc(ih, this.R);
};
h.ia = function(b, a) {
  if (null == a) {
    return this.yb ? new Mh(this.R, this.G - 1, this.root, !1, null, null) : this;
  }
  if (null == this.root) {
    return this;
  }
  var c = this.root.ue(0, kd(a), a);
  return c === this.root ? this : new Mh(this.R, this.G - 1, c, this.yb, this.Db, null);
};
h.fa = function(b, a, c) {
  if (null == a) {
    return this.yb && c === this.Db ? this : new Mh(this.R, this.yb ? this.G : this.G + 1, this.root, !0, c, null);
  }
  b = new lh;
  a = (null == this.root ? wh : this.root).Ac(0, kd(a), a, c, b);
  return a === this.root ? this : new Mh(this.R, b.w ? this.G + 1 : this.G, a, this.yb, this.Db, null);
};
h.Yd = function(b, a) {
  return null == a ? this.yb : null == this.root ? !1 : this.root.Bd(0, kd(a), a, ve) !== ve;
};
h.aa = function() {
  if (0 < this.G) {
    var b = null != this.root ? this.root.te() : null;
    return this.yb ? Ud(new Q(null, 2, 5, R, [null, this.Db], null), b) : b;
  }
  return null;
};
h.U = function(b, a) {
  return new Mh(a, this.G, this.root, this.yb, this.Db, this.m);
};
h.Z = function(b, a) {
  if (re(a)) {
    return Vb(this, Kb.a(a, 0), Kb.a(a, 1));
  }
  for (var c = this, d = w(a);;) {
    if (null == d) {
      return c;
    }
    var e = x(d);
    if (re(e)) {
      c = Vb(c, Kb.a(e, 0), Kb.a(e, 1)), d = z(d);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
h.call = function() {
  var b = null, b = function(a, b, d) {
    switch(arguments.length) {
      case 2:
        return this.W(null, b);
      case 3:
        return this.T(null, b, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.a = function(a, b) {
    return this.W(null, b);
  };
  b.c = function(a, b, d) {
    return this.T(null, b, d);
  };
  return b;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return this.W(null, b);
};
h.a = function(b, a) {
  return this.T(null, b, a);
};
var ih = new Mh(null, 0, null, !1, null, Bd);
function fe(b, a) {
  for (var c = b.length, d = 0, e = Hc(ih);;) {
    if (d < c) {
      var f = d + 1, e = e.pe(null, b[d], a[d]), d = f
    } else {
      return Jc(e);
    }
  }
}
Mh.prototype[xb] = function() {
  return vd(this);
};
function Nh(b, a, c, d, e) {
  this.Ka = b;
  this.root = a;
  this.count = c;
  this.yb = d;
  this.Db = e;
  this.l = 258;
  this.M = 56;
}
function Oh(b, a, c) {
  if (b.Ka) {
    if (null == a) {
      b.Db !== c && (b.Db = c), b.yb || (b.count += 1, b.yb = !0);
    } else {
      var d = new lh;
      a = (null == b.root ? wh : b.root).Bc(b.Ka, 0, kd(a), a, c, d);
      a !== b.root && (b.root = a);
      d.w && (b.count += 1);
    }
    return b;
  }
  throw Error("assoc! after persistent!");
}
h = Nh.prototype;
h.$ = function() {
  if (this.Ka) {
    return this.count;
  }
  throw Error("count after persistent!");
};
h.W = function(b, a) {
  return null == a ? this.yb ? this.Db : null : null == this.root ? null : this.root.Bd(0, kd(a), a);
};
h.T = function(b, a, c) {
  return null == a ? this.yb ? this.Db : c : null == this.root ? c : this.root.Bd(0, kd(a), a, c);
};
h.Id = function(b, a) {
  var c;
  a: {
    if (this.Ka) {
      if (null != a ? a.l & 2048 || k === a.kh || (a.l ? 0 : p(Yb, a)) : p(Yb, a)) {
        c = Oh(this, Ue.b ? Ue.b(a) : Ue.call(null, a), Ve.b ? Ve.b(a) : Ve.call(null, a));
      } else {
        c = w(a);
        for (var d = this;;) {
          var e = x(c);
          if (m(e)) {
            c = z(c), d = Oh(d, Ue.b ? Ue.b(e) : Ue.call(null, e), Ve.b ? Ve.b(e) : Ve.call(null, e));
          } else {
            c = d;
            break a;
          }
        }
      }
    } else {
      throw Error("conj! after persistent");
    }
  }
  return c;
};
h.ae = function() {
  var b;
  if (this.Ka) {
    this.Ka = null, b = new Mh(null, this.count, this.root, this.yb, this.Db, null);
  } else {
    throw Error("persistent! called twice");
  }
  return b;
};
h.pe = function(b, a, c) {
  return Oh(this, a, c);
};
h.tf = function(b, a) {
  if (this.Ka) {
    if (null == a) {
      this.yb && (this.yb = !1, this.Db = null, --this.count);
    } else {
      if (null != this.root) {
        var c = new lh, d = this.root.ve(this.Ka, 0, kd(a), a, c);
        d !== this.root && (this.root = d);
        m(c[0]) && --this.count;
      }
    }
  } else {
    throw Error("dissoc! after persistent!");
  }
  return this;
};
function Ph(b, a, c) {
  for (var d = a;;) {
    if (null != b) {
      a = c ? b.left : b.right, d = ce.a(d, b), b = a;
    } else {
      return d;
    }
  }
}
function Qh(b, a, c, d, e) {
  this.R = b;
  this.stack = a;
  this.Te = c;
  this.G = d;
  this.m = e;
  this.l = 32374862;
  this.M = 0;
}
h = Qh.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.R;
};
h.$ = function() {
  return 0 > this.G ? B(z(this)) + 1 : this.G;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(td, this.R);
};
h.$a = function(b, a) {
  return Xd(a, this);
};
h.ab = function(b, a, c) {
  return Zd(a, c, this);
};
h.Ya = function() {
  return ie(this.stack);
};
h.xb = function() {
  var b = x(this.stack), b = Ph(this.Te ? b.right : b.left, z(this.stack), this.Te);
  return null != b ? new Qh(null, b, this.Te, this.G - 1, null) : td;
};
h.aa = function() {
  return this;
};
h.U = function(b, a) {
  return new Qh(a, this.stack, this.Te, this.G, this.m);
};
h.Z = function(b, a) {
  return Ud(a, this);
};
Qh.prototype[xb] = function() {
  return vd(this);
};
function Rh(b, a, c) {
  return new Qh(null, Ph(b, null, a), a, c, null);
}
function Sh(b, a, c, d) {
  return c instanceof Th ? c.left instanceof Th ? new Th(c.key, c.w, c.left.$c(), new Uh(b, a, c.right, d, null), null) : c.right instanceof Th ? new Th(c.right.key, c.right.w, new Uh(c.key, c.w, c.left, c.right.left, null), new Uh(b, a, c.right.right, d, null), null) : new Uh(b, a, c, d, null) : new Uh(b, a, c, d, null);
}
function Vh(b, a, c, d) {
  return d instanceof Th ? d.right instanceof Th ? new Th(d.key, d.w, new Uh(b, a, c, d.left, null), d.right.$c(), null) : d.left instanceof Th ? new Th(d.left.key, d.left.w, new Uh(b, a, c, d.left.left, null), new Uh(d.key, d.w, d.left.right, d.right, null), null) : new Uh(b, a, c, d, null) : new Uh(b, a, c, d, null);
}
function Wh(b, a, c, d) {
  if (c instanceof Th) {
    return new Th(b, a, c.$c(), d, null);
  }
  if (d instanceof Uh) {
    return Vh(b, a, c, d.Ae());
  }
  if (d instanceof Th && d.left instanceof Uh) {
    return new Th(d.left.key, d.left.w, new Uh(b, a, c, d.left.left, null), Vh(d.key, d.w, d.left.right, d.right.Ae()), null);
  }
  throw Error("red-black tree invariant violation");
}
function Xh(b, a, c, d) {
  if (d instanceof Th) {
    return new Th(b, a, c, d.$c(), null);
  }
  if (c instanceof Uh) {
    return Sh(b, a, c.Ae(), d);
  }
  if (c instanceof Th && c.right instanceof Uh) {
    return new Th(c.right.key, c.right.w, Sh(c.key, c.w, c.left.Ae(), c.right.left), new Uh(b, a, c.right.right, d, null), null);
  }
  throw Error("red-black tree invariant violation");
}
var Yh = function Yh(a, c, d) {
  var e = null != a.left ? function() {
    var e = a.left;
    return Yh.c ? Yh.c(e, c, d) : Yh.call(null, e, c, d);
  }() : d;
  if (Ed(e)) {
    return A.b ? A.b(e) : A.call(null, e);
  }
  var f = function() {
    var d = a.key, f = a.w;
    return c.c ? c.c(e, d, f) : c.call(null, e, d, f);
  }();
  if (Ed(f)) {
    return A.b ? A.b(f) : A.call(null, f);
  }
  var g = null != a.right ? function() {
    var d = a.right;
    return Yh.c ? Yh.c(d, c, f) : Yh.call(null, d, c, f);
  }() : f;
  return Ed(g) ? A.b ? A.b(g) : A.call(null, g) : g;
};
function Uh(b, a, c, d, e) {
  this.key = b;
  this.w = a;
  this.left = c;
  this.right = d;
  this.m = e;
  this.l = 32402207;
  this.M = 0;
}
h = Uh.prototype;
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.Ff = function(b) {
  return b.bg(this);
};
h.Ae = function() {
  return new Th(this.key, this.w, this.left, this.right, null);
};
h.$c = function() {
  return this;
};
h.Ef = function(b) {
  return b.ag(this);
};
h.replace = function(b, a, c, d) {
  return new Uh(b, a, c, d, null);
};
h.ag = function(b) {
  return new Uh(b.key, b.w, this, b.right, null);
};
h.bg = function(b) {
  return new Uh(b.key, b.w, b.left, this, null);
};
h.Od = function(b, a) {
  return Yh(this, b, a);
};
h.W = function(b, a) {
  return Kb.c(this, a, null);
};
h.T = function(b, a, c) {
  return Kb.c(this, a, c);
};
h.ra = function(b, a) {
  return 0 === a ? this.key : 1 === a ? this.w : null;
};
h.Hb = function(b, a, c) {
  return 0 === a ? this.key : 1 === a ? this.w : c;
};
h.dd = function(b, a, c) {
  return (new Q(null, 2, 5, R, [this.key, this.w], null)).dd(null, a, c);
};
h.S = function() {
  return null;
};
h.$ = function() {
  return 2;
};
h.le = function() {
  return this.key;
};
h.me = function() {
  return this.w;
};
h.Lc = function() {
  return this.w;
};
h.Mc = function() {
  return new Q(null, 1, 5, R, [this.key], null);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return E;
};
h.$a = function(b, a) {
  return Fd(this, a);
};
h.ab = function(b, a, c) {
  return Gd(this, a, c);
};
h.fa = function(b, a, c) {
  return I.c(new Q(null, 2, 5, R, [this.key, this.w], null), a, c);
};
h.aa = function() {
  var b = this.key;
  return Hb(Hb(td, this.w), b);
};
h.U = function(b, a) {
  return Wd(new Q(null, 2, 5, R, [this.key, this.w], null), a);
};
h.Z = function(b, a) {
  return new Q(null, 3, 5, R, [this.key, this.w, a], null);
};
h.call = function() {
  var b = null, b = function(a, b, d) {
    switch(arguments.length) {
      case 2:
        return this.W(null, b);
      case 3:
        return this.T(null, b, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.a = function(a, b) {
    return this.W(null, b);
  };
  b.c = function(a, b, d) {
    return this.T(null, b, d);
  };
  return b;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return this.W(null, b);
};
h.a = function(b, a) {
  return this.T(null, b, a);
};
Uh.prototype[xb] = function() {
  return vd(this);
};
function Th(b, a, c, d, e) {
  this.key = b;
  this.w = a;
  this.left = c;
  this.right = d;
  this.m = e;
  this.l = 32402207;
  this.M = 0;
}
h = Th.prototype;
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.Ff = function(b) {
  return new Th(this.key, this.w, this.left, b, null);
};
h.Ae = function() {
  throw Error("red-black tree invariant violation");
};
h.$c = function() {
  return new Uh(this.key, this.w, this.left, this.right, null);
};
h.Ef = function(b) {
  return new Th(this.key, this.w, b, this.right, null);
};
h.replace = function(b, a, c, d) {
  return new Th(b, a, c, d, null);
};
h.ag = function(b) {
  return this.left instanceof Th ? new Th(this.key, this.w, this.left.$c(), new Uh(b.key, b.w, this.right, b.right, null), null) : this.right instanceof Th ? new Th(this.right.key, this.right.w, new Uh(this.key, this.w, this.left, this.right.left, null), new Uh(b.key, b.w, this.right.right, b.right, null), null) : new Uh(b.key, b.w, this, b.right, null);
};
h.bg = function(b) {
  return this.right instanceof Th ? new Th(this.key, this.w, new Uh(b.key, b.w, b.left, this.left, null), this.right.$c(), null) : this.left instanceof Th ? new Th(this.left.key, this.left.w, new Uh(b.key, b.w, b.left, this.left.left, null), new Uh(this.key, this.w, this.left.right, this.right, null), null) : new Uh(b.key, b.w, b.left, this, null);
};
h.Od = function(b, a) {
  return Yh(this, b, a);
};
h.W = function(b, a) {
  return Kb.c(this, a, null);
};
h.T = function(b, a, c) {
  return Kb.c(this, a, c);
};
h.ra = function(b, a) {
  return 0 === a ? this.key : 1 === a ? this.w : null;
};
h.Hb = function(b, a, c) {
  return 0 === a ? this.key : 1 === a ? this.w : c;
};
h.dd = function(b, a, c) {
  return (new Q(null, 2, 5, R, [this.key, this.w], null)).dd(null, a, c);
};
h.S = function() {
  return null;
};
h.$ = function() {
  return 2;
};
h.le = function() {
  return this.key;
};
h.me = function() {
  return this.w;
};
h.Lc = function() {
  return this.w;
};
h.Mc = function() {
  return new Q(null, 1, 5, R, [this.key], null);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return E;
};
h.$a = function(b, a) {
  return Fd(this, a);
};
h.ab = function(b, a, c) {
  return Gd(this, a, c);
};
h.fa = function(b, a, c) {
  return I.c(new Q(null, 2, 5, R, [this.key, this.w], null), a, c);
};
h.aa = function() {
  var b = this.key;
  return Hb(Hb(td, this.w), b);
};
h.U = function(b, a) {
  return Wd(new Q(null, 2, 5, R, [this.key, this.w], null), a);
};
h.Z = function(b, a) {
  return new Q(null, 3, 5, R, [this.key, this.w, a], null);
};
h.call = function() {
  var b = null, b = function(a, b, d) {
    switch(arguments.length) {
      case 2:
        return this.W(null, b);
      case 3:
        return this.T(null, b, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.a = function(a, b) {
    return this.W(null, b);
  };
  b.c = function(a, b, d) {
    return this.T(null, b, d);
  };
  return b;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return this.W(null, b);
};
h.a = function(b, a) {
  return this.T(null, b, a);
};
Th.prototype[xb] = function() {
  return vd(this);
};
var Zh = function Zh(a, c, d, e, f) {
  if (null == c) {
    return new Th(d, e, null, null, null);
  }
  var g = function() {
    var e = c.key;
    return a.a ? a.a(d, e) : a.call(null, d, e);
  }();
  if (0 === g) {
    return f[0] = c, null;
  }
  if (0 > g) {
    return g = function() {
      var g = c.left;
      return Zh.ba ? Zh.ba(a, g, d, e, f) : Zh.call(null, a, g, d, e, f);
    }(), null != g ? c.Ef(g) : null;
  }
  g = function() {
    var g = c.right;
    return Zh.ba ? Zh.ba(a, g, d, e, f) : Zh.call(null, a, g, d, e, f);
  }();
  return null != g ? c.Ff(g) : null;
}, $h = function $h(a, c) {
  if (null == a) {
    return c;
  }
  if (null == c) {
    return a;
  }
  if (a instanceof Th) {
    if (c instanceof Th) {
      var d = function() {
        var d = a.right, f = c.left;
        return $h.a ? $h.a(d, f) : $h.call(null, d, f);
      }();
      return d instanceof Th ? new Th(d.key, d.w, new Th(a.key, a.w, a.left, d.left, null), new Th(c.key, c.w, d.right, c.right, null), null) : new Th(a.key, a.w, a.left, new Th(c.key, c.w, d, c.right, null), null);
    }
    return new Th(a.key, a.w, a.left, function() {
      var d = a.right;
      return $h.a ? $h.a(d, c) : $h.call(null, d, c);
    }(), null);
  }
  if (c instanceof Th) {
    return new Th(c.key, c.w, function() {
      var d = c.left;
      return $h.a ? $h.a(a, d) : $h.call(null, a, d);
    }(), c.right, null);
  }
  d = function() {
    var d = a.right, f = c.left;
    return $h.a ? $h.a(d, f) : $h.call(null, d, f);
  }();
  return d instanceof Th ? new Th(d.key, d.w, new Uh(a.key, a.w, a.left, d.left, null), new Uh(c.key, c.w, d.right, c.right, null), null) : Wh(a.key, a.w, a.left, new Uh(c.key, c.w, d, c.right, null));
}, ai = function ai(a, c, d, e) {
  if (null != c) {
    var f = function() {
      var e = c.key;
      return a.a ? a.a(d, e) : a.call(null, d, e);
    }();
    if (0 === f) {
      return e[0] = c, $h(c.left, c.right);
    }
    if (0 > f) {
      return f = function() {
        var f = c.left;
        return ai.K ? ai.K(a, f, d, e) : ai.call(null, a, f, d, e);
      }(), null != f || null != e[0] ? c.left instanceof Uh ? Wh(c.key, c.w, f, c.right) : new Th(c.key, c.w, f, c.right, null) : null;
    }
    f = function() {
      var f = c.right;
      return ai.K ? ai.K(a, f, d, e) : ai.call(null, a, f, d, e);
    }();
    return null != f || null != e[0] ? c.right instanceof Uh ? Xh(c.key, c.w, c.left, f) : new Th(c.key, c.w, c.left, f, null) : null;
  }
  return null;
}, bi = function bi(a, c, d, e) {
  var f = c.key, g = a.a ? a.a(d, f) : a.call(null, d, f);
  return 0 === g ? c.replace(f, e, c.left, c.right) : 0 > g ? c.replace(f, c.w, function() {
    var f = c.left;
    return bi.K ? bi.K(a, f, d, e) : bi.call(null, a, f, d, e);
  }(), c.right) : c.replace(f, c.w, c.left, function() {
    var f = c.right;
    return bi.K ? bi.K(a, f, d, e) : bi.call(null, a, f, d, e);
  }());
};
function ci(b, a, c, d, e) {
  this.sc = b;
  this.rd = a;
  this.G = c;
  this.R = d;
  this.m = e;
  this.l = 418776847;
  this.M = 8192;
}
h = ci.prototype;
h.forEach = function(b) {
  for (var a = w(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.ra(null, e), g = F(f, 0, null), f = F(f, 1, null);
      b.a ? b.a(f, g) : b.call(null, f, g);
      e += 1;
    } else {
      if (a = w(a)) {
        se(a) ? (c = Tc(a), a = Uc(a), g = c, d = B(c), c = g) : (c = x(a), g = F(c, 0, null), f = F(c, 1, null), b.a ? b.a(f, g) : b.call(null, f, g), a = z(a), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
h.get = function(b, a) {
  return this.T(null, b, a);
};
h.entries = function() {
  return new $g(w(w(this)));
};
h.toString = function() {
  return cd(this);
};
h.keys = function() {
  return vd(eh.b ? eh.b(this) : eh.call(null, this));
};
h.values = function() {
  return vd(fh.b ? fh.b(this) : fh.call(null, this));
};
h.equiv = function(b) {
  return this.O(null, b);
};
function di(b, a) {
  for (var c = b.rd;;) {
    if (null != c) {
      var d;
      d = c.key;
      d = b.sc.a ? b.sc.a(a, d) : b.sc.call(null, a, d);
      if (0 === d) {
        return c;
      }
      c = 0 > d ? c.left : c.right;
    } else {
      return null;
    }
  }
}
h.has = function(b) {
  return ze(this, b);
};
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  b = di(this, a);
  return null != b ? b.w : c;
};
h.wd = function(b, a, c) {
  return null != this.rd ? Yh(this.rd, a, c) : c;
};
h.S = function() {
  return this.R;
};
h.$ = function() {
  return this.G;
};
h.$d = function() {
  return 0 < this.G ? Rh(this.rd, !1, this.G) : null;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Ad(this);
};
h.O = function(b, a) {
  return Yg(this, a);
};
h.Na = function() {
  return new ci(this.sc, null, 0, this.R, 0);
};
h.ia = function(b, a) {
  var c = [null], d = ai(this.sc, this.rd, a, c);
  return null == d ? null == Nd(c, 0) ? this : new ci(this.sc, null, 0, this.R, null) : new ci(this.sc, d.$c(), this.G - 1, this.R, null);
};
h.fa = function(b, a, c) {
  b = [null];
  var d = Zh(this.sc, this.rd, a, c, b);
  return null == d ? (b = Nd(b, 0), v.a(c, b.w) ? this : new ci(this.sc, bi(this.sc, this.rd, a, c), this.G, this.R, null)) : new ci(this.sc, d.$c(), this.G + 1, this.R, null);
};
h.Yd = function(b, a) {
  return null != di(this, a);
};
h.aa = function() {
  return 0 < this.G ? Rh(this.rd, !0, this.G) : null;
};
h.U = function(b, a) {
  return new ci(this.sc, this.rd, this.G, a, this.m);
};
h.Z = function(b, a) {
  if (re(a)) {
    return Vb(this, Kb.a(a, 0), Kb.a(a, 1));
  }
  for (var c = this, d = w(a);;) {
    if (null == d) {
      return c;
    }
    var e = x(d);
    if (re(e)) {
      c = Vb(c, Kb.a(e, 0), Kb.a(e, 1)), d = z(d);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
h.call = function() {
  var b = null, b = function(a, b, d) {
    switch(arguments.length) {
      case 2:
        return this.W(null, b);
      case 3:
        return this.T(null, b, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.a = function(a, b) {
    return this.W(null, b);
  };
  b.c = function(a, b, d) {
    return this.T(null, b, d);
  };
  return b;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return this.W(null, b);
};
h.a = function(b, a) {
  return this.T(null, b, a);
};
var ei = new ci(Ae, null, 0, null, Bd);
ci.prototype[xb] = function() {
  return vd(this);
};
var Of = function Of(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return Of.j(0 < c.length ? new rd(c.slice(0), 0, null) : null);
};
Of.j = function(b) {
  b = w(b);
  for (var a = Hc(ih);;) {
    if (b) {
      var c = z(z(b)), a = rf(a, x(b), $d(b));
      b = c;
    } else {
      return Jc(a);
    }
  }
};
Of.N = 0;
Of.P = function(b) {
  return Of.j(w(b));
};
var fi = function fi(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return fi.j(0 < c.length ? new rd(c.slice(0), 0, null) : null);
};
fi.j = function(b) {
  b = b instanceof rd && 0 === b.V ? b.A : Ab(b);
  return jh(b);
};
fi.N = 0;
fi.P = function(b) {
  return fi.j(w(b));
};
function gi(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  a: {
    for (a = w(0 < a.length ? new rd(a.slice(0), 0, null) : null), d = ei;;) {
      if (a) {
        c = z(z(a)), d = I.c(d, x(a), $d(a)), a = c;
      } else {
        break a;
      }
    }
  }
  return d;
}
function hi(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  a: {
    for (c = arguments[0], a = w(1 < a.length ? new rd(a.slice(1), 0, null) : null), d = new ci(Ce(c), null, 0, null, 0);;) {
      if (a) {
        c = z(z(a)), d = I.c(d, x(a), $d(a)), a = c;
      } else {
        break a;
      }
    }
  }
  return d;
}
function ii(b, a) {
  this.va = b;
  this.Gb = a;
  this.l = 32374988;
  this.M = 0;
}
h = ii.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.Gb;
};
h.Ib = function() {
  var b = (null != this.va ? this.va.l & 128 || k === this.va.Xe || (this.va.l ? 0 : p(Qb, this.va)) : p(Qb, this.va)) ? this.va.Ib(null) : z(this.va);
  return null == b ? null : new ii(b, this.Gb);
};
h.Y = function() {
  return yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(td, this.Gb);
};
h.$a = function(b, a) {
  return Xd(a, this);
};
h.ab = function(b, a, c) {
  return Zd(a, c, this);
};
h.Ya = function() {
  return this.va.Ya(null).le(null);
};
h.xb = function() {
  var b = (null != this.va ? this.va.l & 128 || k === this.va.Xe || (this.va.l ? 0 : p(Qb, this.va)) : p(Qb, this.va)) ? this.va.Ib(null) : z(this.va);
  return null != b ? new ii(b, this.Gb) : td;
};
h.aa = function() {
  return this;
};
h.U = function(b, a) {
  return new ii(this.va, a);
};
h.Z = function(b, a) {
  return Ud(a, this);
};
ii.prototype[xb] = function() {
  return vd(this);
};
function eh(b) {
  return (b = w(b)) ? new ii(b, null) : null;
}
function Ue(b) {
  return Zb(b);
}
function ji(b, a) {
  this.va = b;
  this.Gb = a;
  this.l = 32374988;
  this.M = 0;
}
h = ji.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.S = function() {
  return this.Gb;
};
h.Ib = function() {
  var b = (null != this.va ? this.va.l & 128 || k === this.va.Xe || (this.va.l ? 0 : p(Qb, this.va)) : p(Qb, this.va)) ? this.va.Ib(null) : z(this.va);
  return null == b ? null : new ji(b, this.Gb);
};
h.Y = function() {
  return yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(td, this.Gb);
};
h.$a = function(b, a) {
  return Xd(a, this);
};
h.ab = function(b, a, c) {
  return Zd(a, c, this);
};
h.Ya = function() {
  return this.va.Ya(null).me(null);
};
h.xb = function() {
  var b = (null != this.va ? this.va.l & 128 || k === this.va.Xe || (this.va.l ? 0 : p(Qb, this.va)) : p(Qb, this.va)) ? this.va.Ib(null) : z(this.va);
  return null != b ? new ji(b, this.Gb) : td;
};
h.aa = function() {
  return this;
};
h.U = function(b, a) {
  return new ji(this.va, a);
};
h.Z = function(b, a) {
  return Ud(a, this);
};
ji.prototype[xb] = function() {
  return vd(this);
};
function fh(b) {
  return (b = w(b)) ? new ji(b, null) : null;
}
function Ve(b) {
  return $b(b);
}
var ki = function ki(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return ki.j(0 < c.length ? new rd(c.slice(0), 0, null) : null);
};
ki.j = function(b) {
  return m(Df(Ge, b)) ? Cb.a(function(a, b) {
    return ce.a(m(a) ? a : S, b);
  }, b) : null;
};
ki.N = 0;
ki.P = function(b) {
  return ki.j(w(b));
};
var li = function li(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return li.j(arguments[0], 1 < c.length ? new rd(c.slice(1), 0, null) : null);
};
li.j = function(b, a) {
  return m(Df(Ge, a)) ? Cb.a(function(a) {
    return function(b, c) {
      return Cb.c(a, m(b) ? b : S, w(c));
    };
  }(function(a, d) {
    var c = x(d), f = $d(d);
    return ze(a, c) ? I.c(a, c, function() {
      var d = t.a(a, c);
      return b.a ? b.a(d, f) : b.call(null, d, f);
    }()) : I.c(a, c, f);
  }), a) : null;
};
li.N = 1;
li.P = function(b) {
  var a = x(b);
  b = z(b);
  return li.j(a, b);
};
function mi(b) {
  this.wf = b;
}
mi.prototype.ub = function() {
  return this.wf.ub();
};
mi.prototype.next = function() {
  if (this.wf.ub()) {
    return this.wf.next().za[0];
  }
  throw Error("No such element");
};
mi.prototype.remove = function() {
  return Error("Unsupported operation");
};
function V(b, a, c) {
  this.R = b;
  this.Ad = a;
  this.m = c;
  this.l = 15077647;
  this.M = 8196;
}
h = V.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.keys = function() {
  return vd(w(this));
};
h.entries = function() {
  return new ah(w(w(this)));
};
h.values = function() {
  return vd(w(this));
};
h.has = function(b) {
  return ze(this, b);
};
h.forEach = function(b) {
  for (var a = w(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.ra(null, e), g = F(f, 0, null), f = F(f, 1, null);
      b.a ? b.a(f, g) : b.call(null, f, g);
      e += 1;
    } else {
      if (a = w(a)) {
        se(a) ? (c = Tc(a), a = Uc(a), g = c, d = B(c), c = g) : (c = x(a), g = F(c, 0, null), f = F(c, 1, null), b.a ? b.a(f, g) : b.call(null, f, g), a = z(a), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return Ub(this.Ad, a) ? a : c;
};
h.ea = function() {
  return new mi(ad(this.Ad));
};
h.S = function() {
  return this.R;
};
h.$ = function() {
  return Eb(this.Ad);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Ad(this);
};
h.O = function(b, a) {
  return ne(a) && B(this) === B(a) && Cf(function(a) {
    return function(b) {
      return ze(a, b);
    };
  }(this), a);
};
h.Zd = function() {
  return new ni(Hc(this.Ad));
};
h.Na = function() {
  return Wd(oi, this.R);
};
h.jg = function(b, a) {
  return new V(this.R, Xb(this.Ad, a), null);
};
h.aa = function() {
  return eh(this.Ad);
};
h.U = function(b, a) {
  return new V(a, this.Ad, this.m);
};
h.Z = function(b, a) {
  return new V(this.R, I.c(this.Ad, a, null), null);
};
h.call = function() {
  var b = null, b = function(a, b, d) {
    switch(arguments.length) {
      case 2:
        return this.W(null, b);
      case 3:
        return this.T(null, b, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.a = function(a, b) {
    return this.W(null, b);
  };
  b.c = function(a, b, d) {
    return this.T(null, b, d);
  };
  return b;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return this.W(null, b);
};
h.a = function(b, a) {
  return this.T(null, b, a);
};
var oi = new V(null, S, Bd);
function pi(b) {
  var a = b.length;
  if (a <= hh) {
    for (var c = 0, d = Hc(S);;) {
      if (c < a) {
        var e = c + 1, d = Kc(d, b[c], null), c = e
      } else {
        return new V(null, Jc(d), null);
      }
    }
  } else {
    for (c = 0, d = Hc(oi);;) {
      if (c < a) {
        e = c + 1, d = Ic(d, b[c]), c = e;
      } else {
        return Jc(d);
      }
    }
  }
}
V.prototype[xb] = function() {
  return vd(this);
};
function ni(b) {
  this.qd = b;
  this.M = 136;
  this.l = 259;
}
h = ni.prototype;
h.Id = function(b, a) {
  this.qd = Kc(this.qd, a, null);
  return this;
};
h.ae = function() {
  return new V(null, Jc(this.qd), null);
};
h.$ = function() {
  return B(this.qd);
};
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return Tb.c(this.qd, a, ve) === ve ? c : a;
};
h.call = function() {
  function b(a, b, c) {
    return Tb.c(this.qd, b, ve) === ve ? c : b;
  }
  function a(a, b) {
    return Tb.c(this.qd, b, ve) === ve ? null : b;
  }
  var c = null, c = function(c, e, f) {
    switch(arguments.length) {
      case 2:
        return a.call(this, 0, e);
      case 3:
        return b.call(this, 0, e, f);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  c.a = a;
  c.c = b;
  return c;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return Tb.c(this.qd, b, ve) === ve ? null : b;
};
h.a = function(b, a) {
  return Tb.c(this.qd, b, ve) === ve ? a : b;
};
function qi(b) {
  b = w(b);
  if (null == b) {
    return oi;
  }
  if (b instanceof rd && 0 === b.V) {
    b = b.A;
    a: {
      for (var a = 0, c = Hc(oi);;) {
        if (a < b.length) {
          var d = a + 1, c = c.Id(null, b[a]), a = d
        } else {
          break a;
        }
      }
    }
    return c.ae(null);
  }
  for (d = Hc(oi);;) {
    if (null != b) {
      a = z(b), d = d.Id(null, b.Ya(null)), b = a;
    } else {
      return Jc(d);
    }
  }
}
function ri(b) {
  return function c(b, e) {
    return new ff(null, function() {
      return function(b, d) {
        for (;;) {
          var e = b, f = F(e, 0, null);
          if (e = w(e)) {
            if (ze(d, f)) {
              f = sd(e), e = d, b = f, d = e;
            } else {
              return Ud(f, c(sd(e), ce.a(d, f)));
            }
          } else {
            return null;
          }
        }
      }.call(null, b, e);
    }, null, null);
  }(b, oi);
}
function si(b) {
  for (var a = E;;) {
    if (z(b)) {
      a = ce.a(a, x(b)), b = z(b);
    } else {
      return w(a);
    }
  }
}
function ef(b) {
  if (null != b && (b.M & 4096 || k === b.mh)) {
    return b.ne(null);
  }
  if ("string" === typeof b) {
    return b;
  }
  throw Error([q("Doesn't support name: "), q(b)].join(""));
}
function ti(b, a) {
  for (var c = Hc(S), d = w(b), e = w(a);;) {
    if (d && e) {
      c = rf(c, x(d), x(e)), d = z(d), e = z(e);
    } else {
      return Jc(c);
    }
  }
}
var ui = function ui(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return ui.a(arguments[0], arguments[1]);
    case 3:
      return ui.c(arguments[0], arguments[1], arguments[2]);
    default:
      return ui.j(arguments[0], arguments[1], arguments[2], new rd(c.slice(3), 0, null));
  }
};
ui.a = function(b, a) {
  return a;
};
ui.c = function(b, a, c) {
  return (b.b ? b.b(a) : b.call(null, a)) > (b.b ? b.b(c) : b.call(null, c)) ? a : c;
};
ui.j = function(b, a, c, d) {
  return Cb.c(function(a, c) {
    return ui.c(b, a, c);
  }, ui.c(b, a, c), d);
};
ui.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  var d = z(c), c = x(d), d = z(d);
  return ui.j(a, b, c, d);
};
ui.N = 3;
function vi(b, a) {
  return new ff(null, function() {
    var c = w(a);
    if (c) {
      var d;
      d = x(c);
      d = b.b ? b.b(d) : b.call(null, d);
      c = m(d) ? Ud(x(c), vi(b, sd(c))) : null;
    } else {
      c = null;
    }
    return c;
  }, null, null);
}
function wi(b, a, c) {
  this.V = b;
  this.end = a;
  this.step = c;
}
wi.prototype.ub = function() {
  return 0 < this.step ? this.V < this.end : this.V > this.end;
};
wi.prototype.next = function() {
  var b = this.V;
  this.V += this.step;
  return b;
};
function xi(b, a, c, d, e) {
  this.R = b;
  this.start = a;
  this.end = c;
  this.step = d;
  this.m = e;
  this.l = 32375006;
  this.M = 8192;
}
h = xi.prototype;
h.toString = function() {
  return cd(this);
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.indexOf = function() {
  var b = null, b = function(a, b) {
    switch(arguments.length) {
      case 1:
        return Md(this, a, 0);
      case 2:
        return Md(this, a, b);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.b = function(a) {
    return Md(this, a, 0);
  };
  b.a = function(a, b) {
    return Md(this, a, b);
  };
  return b;
}();
h.lastIndexOf = function() {
  function b(a) {
    return Qd(this, a, B(this));
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return Qd(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = b;
  a.a = function(a, b) {
    return Qd(this, a, b);
  };
  return a;
}();
h.ra = function(b, a) {
  if (a < Eb(this)) {
    return this.start + a * this.step;
  }
  if (this.start > this.end && 0 === this.step) {
    return this.start;
  }
  throw Error("Index out of bounds");
};
h.Hb = function(b, a, c) {
  return a < Eb(this) ? this.start + a * this.step : this.start > this.end && 0 === this.step ? this.start : c;
};
h.ea = function() {
  return new wi(this.start, this.end, this.step);
};
h.S = function() {
  return this.R;
};
h.Ib = function() {
  return 0 < this.step ? this.start + this.step < this.end ? new xi(this.R, this.start + this.step, this.end, this.step, null) : null : this.start + this.step > this.end ? new xi(this.R, this.start + this.step, this.end, this.step, null) : null;
};
h.$ = function() {
  return rb(tc(this)) ? 0 : Math.ceil((this.end - this.start) / this.step);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = yd(this);
};
h.O = function(b, a) {
  return Td(this, a);
};
h.Na = function() {
  return Wd(td, this.R);
};
h.$a = function(b, a) {
  return Fd(this, a);
};
h.ab = function(b, a, c) {
  for (b = this.start;;) {
    if (0 < this.step ? b < this.end : b > this.end) {
      c = a.a ? a.a(c, b) : a.call(null, c, b);
      if (Ed(c)) {
        return A.b ? A.b(c) : A.call(null, c);
      }
      b += this.step;
    } else {
      return c;
    }
  }
};
h.Ya = function() {
  return null == tc(this) ? null : this.start;
};
h.xb = function() {
  return null != tc(this) ? new xi(this.R, this.start + this.step, this.end, this.step, null) : td;
};
h.aa = function() {
  return 0 < this.step ? this.start < this.end ? this : null : 0 > this.step ? this.start > this.end ? this : null : this.start === this.end ? null : this;
};
h.U = function(b, a) {
  return new xi(a, this.start, this.end, this.step, this.m);
};
h.Z = function(b, a) {
  return Ud(a, this);
};
xi.prototype[xb] = function() {
  return vd(this);
};
function yi(b, a) {
  return new xi(null, b, a, 1, null);
}
function zi(b) {
  a: {
    for (var a = b;;) {
      if (w(a)) {
        a = z(a);
      } else {
        break a;
      }
    }
  }
  return b;
}
function Ai(b, a) {
  if ("string" === typeof a) {
    var c = b.exec(a);
    return v.a(x(c), a) ? 1 === B(c) ? x(c) : Ig(c) : null;
  }
  throw new TypeError("re-matches must match against a string.");
}
function Bi(b, a) {
  if ("string" === typeof a) {
    var c = b.exec(a);
    return null == c ? null : 1 === B(c) ? x(c) : Ig(c);
  }
  throw new TypeError("re-find must match against a string.");
}
var Ci = function Ci(a, c) {
  var d = Bi(a, c), e = c.search(a), f = me(d) ? x(d) : d, g = Re(c, e + B(f));
  return m(d) ? new ff(null, function(c, d, e, f) {
    return function() {
      return Ud(c, w(f) ? Ci.a ? Ci.a(a, f) : Ci.call(null, a, f) : null);
    };
  }(d, e, f, g), null, null) : null;
};
function Di(b) {
  if (b instanceof RegExp) {
    return b;
  }
  var a = Bi(/^\(\?([idmsux]*)\)/, b), c = F(a, 0, null), a = F(a, 1, null);
  b = Re(b, B(c));
  return new RegExp(b, m(a) ? a : "");
}
function Ei(b, a, c, d, e, f, g) {
  var n = hb;
  hb = null == hb ? null : hb - 1;
  try {
    if (null != hb && 0 > hb) {
      return Ac(b, "#");
    }
    Ac(b, c);
    if (0 === pb.b(f)) {
      w(g) && Ac(b, function() {
        var a = Fi.b(f);
        return m(a) ? a : "...";
      }());
    } else {
      if (w(g)) {
        var r = x(g);
        a.c ? a.c(r, b, f) : a.call(null, r, b, f);
      }
      for (var u = z(g), y = pb.b(f) - 1;;) {
        if (!u || null != y && 0 === y) {
          w(u) && 0 === y && (Ac(b, d), Ac(b, function() {
            var a = Fi.b(f);
            return m(a) ? a : "...";
          }()));
          break;
        } else {
          Ac(b, d);
          var D = x(u);
          c = b;
          g = f;
          a.c ? a.c(D, c, g) : a.call(null, D, c, g);
          var G = z(u);
          c = y - 1;
          u = G;
          y = c;
        }
      }
    }
    return Ac(b, e);
  } finally {
    hb = n;
  }
}
function Gi(b, a) {
  for (var c = w(a), d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.ra(null, f);
      Ac(b, g);
      f += 1;
    } else {
      if (c = w(c)) {
        d = c, se(d) ? (c = Tc(d), e = Uc(d), d = c, g = B(c), c = e, e = g) : (g = x(d), Ac(b, g), c = z(d), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
}
function Hi(b) {
  bb.b ? bb.b(b) : bb.call(null, b);
  return null;
}
var Ii = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
function Ji(b) {
  return [q('"'), q(b.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(a) {
    return Ii[a];
  })), q('"')].join("");
}
function Ki(b, a) {
  var c = xe(t.a(b, nb));
  return c ? (c = null != a ? a.l & 131072 || k === a.lh ? !0 : !1 : !1) ? null != he(a) : c : c;
}
function Li(b, a, c) {
  if (null == b) {
    return Ac(a, "nil");
  }
  if (Ki(c, b)) {
    Ac(a, "^");
    var d = he(b);
    Mi.c ? Mi.c(d, a, c) : Mi.call(null, d, a, c);
    Ac(a, " ");
  }
  if (b.nc) {
    return b.rc(b, a, c);
  }
  if (null != b && (b.l & 2147483648 || k === b.Aa)) {
    return b.X(null, a, c);
  }
  if (!0 === b || !1 === b || "number" === typeof b) {
    return Ac(a, "" + q(b));
  }
  if (null != b && b.constructor === Object) {
    return Ac(a, "#js "), d = Tf.a(function(a) {
      return new Q(null, 2, 5, R, [df.b(a), b[a]], null);
    }, te(b)), Ni.K ? Ni.K(d, Mi, a, c) : Ni.call(null, d, Mi, a, c);
  }
  if (qb(b)) {
    return Ei(a, Mi, "#js [", " ", "]", c, b);
  }
  if (da(b)) {
    return m(mb.b(c)) ? Ac(a, Ji(b)) : Ac(a, b);
  }
  if (ea(b)) {
    var e = b.name;
    c = m(function() {
      var a = null == e;
      return a ? a : ta(e);
    }()) ? "Function" : e;
    return Gi(a, C(["#object[", c, ' "', "" + q(b), '"]'], 0));
  }
  if (b instanceof Date) {
    return c = function(a, b) {
      for (var c = "" + q(a);;) {
        if (B(c) < b) {
          c = [q("0"), q(c)].join("");
        } else {
          return c;
        }
      }
    }, Gi(a, C(['#inst "', "" + q(b.getUTCFullYear()), "-", c(b.getUTCMonth() + 1, 2), "-", c(b.getUTCDate(), 2), "T", c(b.getUTCHours(), 2), ":", c(b.getUTCMinutes(), 2), ":", c(b.getUTCSeconds(), 2), ".", c(b.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
  }
  if (b instanceof RegExp) {
    return Gi(a, C(['#"', b.source, '"'], 0));
  }
  if (m(b.constructor.Xb)) {
    return Gi(a, C(["#object[", b.constructor.Xb.replace(RegExp("/", "g"), "."), "]"], 0));
  }
  e = b.constructor.name;
  c = m(function() {
    var a = null == e;
    return a ? a : ta(e);
  }()) ? "Object" : e;
  return Gi(a, C(["#object[", c, " ", "" + q(b), "]"], 0));
}
function Mi(b, a, c) {
  var d = Oi.b(c);
  return m(d) ? (c = I.c(c, Pi, Li), d.c ? d.c(b, a, c) : d.call(null, b, a, c)) : Li(b, a, c);
}
function Qi(b, a) {
  var c;
  if (le(b)) {
    c = "";
  } else {
    c = q;
    var d = new Oa, e = new bd(d);
    a: {
      Mi(x(b), e, a);
      for (var f = w(z(b)), g = null, n = 0, r = 0;;) {
        if (r < n) {
          var u = g.ra(null, r);
          Ac(e, " ");
          Mi(u, e, a);
          r += 1;
        } else {
          if (f = w(f)) {
            g = f, se(g) ? (f = Tc(g), n = Uc(g), g = f, u = B(f), f = n, n = u) : (u = x(g), Ac(e, " "), Mi(u, e, a), f = z(g), g = null, n = 0), r = 0;
          } else {
            break a;
          }
        }
      }
    }
    e.Nc(null);
    c = "" + c(d);
  }
  return c;
}
function Ri(b, a) {
  return Hi(Qi(b, a));
}
function Si() {
  var b = kb();
  Hi("\n");
  return t.a(b, lb), null;
}
var Ti = function Ti(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return Ti.j(0 < c.length ? new rd(c.slice(0), 0, null) : null);
};
Ti.j = function(b) {
  return Qi(b, kb());
};
Ti.N = 0;
Ti.P = function(b) {
  return Ti.j(w(b));
};
var Ui = function() {
  function b(b) {
    var c = null;
    if (0 < arguments.length) {
      for (var c = 0, e = Array(arguments.length - 0);c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new rd(e, 0);
    }
    return a.call(this, c);
  }
  function a(a) {
    return Ri(a, I.c(kb(), mb, !1));
  }
  b.N = 0;
  b.P = function(b) {
    b = w(b);
    return a(b);
  };
  b.j = a;
  return b;
}(), Vi = function Vi(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return Vi.j(0 < c.length ? new rd(c.slice(0), 0, null) : null);
};
Vi.j = function(b) {
  return Qi(b, I.c(kb(), mb, !1));
};
Vi.N = 0;
Vi.P = function(b) {
  return Vi.j(w(b));
};
function Wi(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  Xi(0 < a.length ? new rd(a.slice(0), 0, null) : null);
}
function Xi(b) {
  Ri(b, I.c(kb(), mb, !1));
  return m(db) ? Si() : null;
}
function Ni(b, a, c, d) {
  return Ei(c, function(b, c, d) {
    var e = Zb(b);
    a.c ? a.c(e, c, d) : a.call(null, e, c, d);
    Ac(c, " ");
    b = $b(b);
    return a.c ? a.c(b, c, d) : a.call(null, b, c, d);
  }, "{", ", ", "}", d, w(b));
}
Sf.prototype.Aa = k;
Sf.prototype.X = function(b, a, c) {
  Ac(a, "#object [cljs.core.Volatile ");
  Mi(new l(null, 1, [Yi, this.state], null), a, c);
  return Ac(a, "]");
};
pd.prototype.Aa = k;
pd.prototype.X = function(b, a, c) {
  Ac(a, "#'");
  return Mi(this.fe, a, c);
};
rd.prototype.Aa = k;
rd.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
ff.prototype.Aa = k;
ff.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
Qh.prototype.Aa = k;
Qh.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
Hh.prototype.Aa = k;
Hh.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
Uh.prototype.Aa = k;
Uh.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "[", " ", "]", c, this);
};
ch.prototype.Aa = k;
ch.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
Kg.prototype.Aa = k;
Kg.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
af.prototype.Aa = k;
af.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
Sd.prototype.Aa = k;
Sd.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
Mh.prototype.Aa = k;
Mh.prototype.X = function(b, a, c) {
  return Ni(this, Mi, a, c);
};
Jh.prototype.Aa = k;
Jh.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
Og.prototype.Aa = k;
Og.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "[", " ", "]", c, this);
};
ci.prototype.Aa = k;
ci.prototype.X = function(b, a, c) {
  return Ni(this, Mi, a, c);
};
V.prototype.Aa = k;
V.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "#{", " ", "}", c, this);
};
lf.prototype.Aa = k;
lf.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
Mf.prototype.Aa = k;
Mf.prototype.X = function(b, a, c) {
  Ac(a, "#object [cljs.core.Atom ");
  Mi(new l(null, 1, [Yi, this.state], null), a, c);
  return Ac(a, "]");
};
ji.prototype.Aa = k;
ji.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
Th.prototype.Aa = k;
Th.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "[", " ", "]", c, this);
};
Q.prototype.Aa = k;
Q.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "[", " ", "]", c, this);
};
Tg.prototype.Aa = k;
Tg.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
Ye.prototype.Aa = k;
Ye.prototype.X = function(b, a) {
  return Ac(a, "()");
};
Ug.prototype.Aa = k;
Ug.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "#queue [", " ", "]", c, w(this));
};
l.prototype.Aa = k;
l.prototype.X = function(b, a, c) {
  return Ni(this, Mi, a, c);
};
xi.prototype.Aa = k;
xi.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
ii.prototype.Aa = k;
ii.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
We.prototype.Aa = k;
We.prototype.X = function(b, a, c) {
  return Ei(a, Mi, "(", " ", ")", c, this);
};
nd.prototype.je = k;
nd.prototype.vd = function(b, a) {
  if (a instanceof nd) {
    return md(this, a);
  }
  throw Error([q("Cannot compare "), q(this), q(" to "), q(a)].join(""));
};
K.prototype.je = k;
K.prototype.vd = function(b, a) {
  if (a instanceof K) {
    return bf(this, a);
  }
  throw Error([q("Cannot compare "), q(this), q(" to "), q(a)].join(""));
};
Og.prototype.je = k;
Og.prototype.vd = function(b, a) {
  if (re(a)) {
    return Be(this, a);
  }
  throw Error([q("Cannot compare "), q(this), q(" to "), q(a)].join(""));
};
Q.prototype.je = k;
Q.prototype.vd = function(b, a) {
  if (re(a)) {
    return Be(this, a);
  }
  throw Error([q("Cannot compare "), q(this), q(" to "), q(a)].join(""));
};
var Zi = null, $i = function $i(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 0:
      return $i.o();
    case 1:
      return $i.b(arguments[0]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
$i.o = function() {
  return $i.b("G__");
};
$i.b = function(b) {
  null == Zi && (Zi = U ? U(0) : Nf.call(null, 0));
  return od.b([q(b), q(Rf.a(Zi, Cd))].join(""));
};
$i.N = 1;
function aj(b, a) {
  this.Bb = b;
  this.value = a;
  this.l = 32768;
  this.M = 1;
}
aj.prototype.cd = function() {
  m(this.Bb) && (this.value = this.Bb.o ? this.Bb.o() : this.Bb.call(null), this.Bb = null);
  return this.value;
};
aj.prototype.sf = function() {
  return rb(this.Bb);
};
function bj(b) {
  return b instanceof aj ? A.b ? A.b(b) : A.call(null, b) : b;
}
function cj() {
}
var dj = function dj(a) {
  if (null != a && null != a.hh) {
    return a.hh(a);
  }
  var c = dj[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = dj._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IEncodeJS.-clj-\x3ejs", a);
};
function ej(b) {
  return (null != b ? k === b.gh || (b.L ? 0 : p(cj, b)) : p(cj, b)) ? dj(b) : "string" === typeof b || "number" === typeof b || b instanceof K || b instanceof nd ? fj.b ? fj.b(b) : fj.call(null, b) : Ti.j(C([b], 0));
}
var fj = function fj(a) {
  if (null == a) {
    return null;
  }
  if (null != a ? k === a.gh || (a.L ? 0 : p(cj, a)) : p(cj, a)) {
    return dj(a);
  }
  if (a instanceof K) {
    return ef(a);
  }
  if (a instanceof nd) {
    return "" + q(a);
  }
  if (pe(a)) {
    var c = {};
    a = w(a);
    for (var d = null, e = 0, f = 0;;) {
      if (f < e) {
        var g = d.ra(null, f), n = F(g, 0, null), g = F(g, 1, null);
        c[ej(n)] = fj.b ? fj.b(g) : fj.call(null, g);
        f += 1;
      } else {
        if (a = w(a)) {
          se(a) ? (e = Tc(a), a = Uc(a), d = e, e = B(e)) : (e = x(a), d = F(e, 0, null), e = F(e, 1, null), c[ej(d)] = fj.b ? fj.b(e) : fj.call(null, e), a = z(a), d = null, e = 0), f = 0;
        } else {
          break;
        }
      }
    }
    return c;
  }
  if (me(a)) {
    c = [];
    a = w(Tf.a(fj, a));
    d = null;
    for (f = e = 0;;) {
      if (f < e) {
        n = d.ra(null, f), c.push(n), f += 1;
      } else {
        if (a = w(a)) {
          d = a, se(d) ? (a = Tc(d), f = Uc(d), d = a, e = B(a), a = f) : (a = x(d), c.push(a), a = z(d), d = null, e = 0), f = 0;
        } else {
          break;
        }
      }
    }
    return c;
  }
  return a;
};
function gj() {
}
var hj = function hj(a, c) {
  if (null != a && null != a.fh) {
    return a.fh(a, c);
  }
  var d = hj[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = hj._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("IEncodeClojure.-js-\x3eclj", a);
};
function ij(b) {
  var a = C([jj, !1], 0), c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, jj);
  return function(b, c, d, n) {
    return function u(e) {
      return (null != e ? k === e.Zh || (e.L ? 0 : p(gj, e)) : p(gj, e)) ? hj(e, P(fi, a)) : we(e) ? zi(Tf.a(u, e)) : me(e) ? gg.a(null == e ? null : Fb(e), Tf.a(u, e)) : qb(e) ? Ig(Tf.a(u, e)) : tb(e) === Object ? gg.a(S, function() {
        return function(a, b, c, d) {
          return function T(f) {
            return new ff(null, function(a, b, c, d) {
              return function() {
                for (;;) {
                  var a = w(f);
                  if (a) {
                    if (se(a)) {
                      var b = Tc(a), c = B(b), g = kf(c);
                      a: {
                        for (var n = 0;;) {
                          if (n < c) {
                            var y = Kb.a(b, n);
                            nf(g, new Q(null, 2, 5, R, [d.b ? d.b(y) : d.call(null, y), u(e[y])], null));
                            n += 1;
                          } else {
                            b = !0;
                            break a;
                          }
                        }
                      }
                      return b ? mf(g.ta(), T(Uc(a))) : mf(g.ta(), null);
                    }
                    g = x(a);
                    return Ud(new Q(null, 2, 5, R, [d.b ? d.b(g) : d.call(null, g), u(e[g])], null), T(sd(a)));
                  }
                  return null;
                }
              };
            }(a, b, c, d), null, null);
          };
        }(b, c, d, n)(te(e));
      }()) : e;
    };
  }(a, c, d, m(d) ? df : q)(b);
}
function kj(b, a) {
  return Jc(Cb.c(function(a, d) {
    var c = b.b ? b.b(d) : b.call(null, d);
    return rf(a, c, ce.a(t.c(a, c, E), d));
  }, Hc(S), a));
}
var lj = null;
function mj() {
  if (null == lj) {
    var b = new l(null, 3, [nj, S, oj, S, pj, S], null);
    lj = U ? U(b) : Nf.call(null, b);
  }
  return lj;
}
function qj(b, a, c) {
  var d = v.a(a, c);
  if (!d && !(d = ze(pj.b(b).call(null, a), c)) && (d = re(c)) && (d = re(a))) {
    if (d = B(c) === B(a)) {
      for (var d = !0, e = 0;;) {
        if (d && e !== B(c)) {
          d = qj(b, a.b ? a.b(e) : a.call(null, e), c.b ? c.b(e) : c.call(null, e)), e += 1;
        } else {
          return d;
        }
      }
    } else {
      return d;
    }
  } else {
    return d;
  }
}
function rj(b) {
  var a;
  a = mj();
  a = A.b ? A.b(a) : A.call(null, a);
  return zf(t.a(nj.b(a), b));
}
function sj(b, a, c, d) {
  Rf.a(b, function() {
    return A.b ? A.b(a) : A.call(null, a);
  });
  Rf.a(c, function() {
    return A.b ? A.b(d) : A.call(null, d);
  });
}
var tj = function tj(a, c, d) {
  var e = (A.b ? A.b(d) : A.call(null, d)).call(null, a), e = m(m(e) ? e.b ? e.b(c) : e.call(null, c) : e) ? !0 : null;
  if (m(e)) {
    return e;
  }
  e = function() {
    for (var e = rj(c);;) {
      if (0 < B(e)) {
        var g = x(e);
        tj.c ? tj.c(a, g, d) : tj.call(null, a, g, d);
        e = sd(e);
      } else {
        return null;
      }
    }
  }();
  if (m(e)) {
    return e;
  }
  e = function() {
    for (var e = rj(a);;) {
      if (0 < B(e)) {
        var g = x(e);
        tj.c ? tj.c(g, c, d) : tj.call(null, g, c, d);
        e = sd(e);
      } else {
        return null;
      }
    }
  }();
  return m(e) ? e : !1;
};
function uj(b, a, c, d) {
  c = tj(b, a, c);
  return m(c) ? c : qj(d, b, a);
}
var vj = function vj(a, c, d, e, f, g, n) {
  var r = Cb.c(function(e, g) {
    var n = F(g, 0, null);
    F(g, 1, null);
    if (qj(A.b ? A.b(d) : A.call(null, d), c, n)) {
      var u;
      u = (u = null == e) ? u : uj(n, x(e), f, A.b ? A.b(d) : A.call(null, d));
      u = m(u) ? g : e;
      if (!m(uj(x(u), n, f, A.b ? A.b(d) : A.call(null, d)))) {
        throw Error([q("Multiple methods in multimethod '"), q(a), q("' match dispatch value: "), q(c), q(" -\x3e "), q(n), q(" and "), q(x(u)), q(", and neither is preferred")].join(""));
      }
      return u;
    }
    return e;
  }, null, A.b ? A.b(e) : A.call(null, e));
  if (m(r)) {
    if (v.a(A.b ? A.b(n) : A.call(null, n), A.b ? A.b(d) : A.call(null, d))) {
      return Rf.K(g, I, c, $d(r)), $d(r);
    }
    sj(g, e, n, d);
    return vj.Oa ? vj.Oa(a, c, d, e, f, g, n) : vj.call(null, a, c, d, e, f, g, n);
  }
  return null;
}, wj = function wj(a, c, d) {
  if (null != a && null != a.D) {
    return a.D(0, c, d);
  }
  var e = wj[ba(null == a ? null : a)];
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  e = wj._;
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  throw ub("IMultiFn.-add-method", a);
};
function xj(b, a) {
  throw Error([q("No method in multimethod '"), q(b), q("' for dispatch value: "), q(a)].join(""));
}
function yj(b, a, c, d, e, f, g, n) {
  this.name = b;
  this.J = a;
  this.vh = c;
  this.se = d;
  this.de = e;
  this.Sh = f;
  this.ye = g;
  this.ie = n;
  this.l = 4194305;
  this.M = 4352;
}
h = yj.prototype;
h.call = function() {
  function b(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, Y, qa, ib) {
    a = this;
    var fb = wf(a.J, b, c, d, e, C([f, g, n, u, r, y, D, G, H, M, O, T, la, ya, Y, qa, ib], 0)), Fa = zj(this, fb);
    m(Fa) || xj(a.name, fb);
    return wf(Fa, b, c, d, e, C([f, g, n, u, r, y, D, G, H, M, O, T, la, ya, Y, qa, ib], 0));
  }
  function a(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, Y, qa) {
    a = this;
    var fb = a.J.pb ? a.J.pb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, Y, qa) : a.J.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, Y, qa), Fa = zj(this, fb);
    m(Fa) || xj(a.name, fb);
    return Fa.pb ? Fa.pb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, Y, qa) : Fa.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, Y, qa);
  }
  function c(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, Y) {
    a = this;
    var fb = a.J.ob ? a.J.ob(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, Y) : a.J.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, Y), Fa = zj(this, fb);
    m(Fa) || xj(a.name, fb);
    return Fa.ob ? Fa.ob(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, Y) : Fa.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya, Y);
  }
  function d(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya) {
    a = this;
    var fb = a.J.nb ? a.J.nb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya) : a.J.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya), Y = zj(this, fb);
    m(Y) || xj(a.name, fb);
    return Y.nb ? Y.nb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya) : Y.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la, ya);
  }
  function e(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la) {
    a = this;
    var ya = a.J.mb ? a.J.mb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la) : a.J.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la), Y = zj(this, ya);
    m(Y) || xj(a.name, ya);
    return Y.mb ? Y.mb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la) : Y.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T, la);
  }
  function f(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T) {
    a = this;
    var la = a.J.lb ? a.J.lb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T) : a.J.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T), ya = zj(this, la);
    m(ya) || xj(a.name, la);
    return ya.lb ? ya.lb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T) : ya.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O, T);
  }
  function g(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O) {
    a = this;
    var T = a.J.kb ? a.J.kb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O) : a.J.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O), la = zj(this, T);
    m(la) || xj(a.name, T);
    return la.kb ? la.kb(b, c, d, e, f, g, n, u, r, y, D, G, H, M, O) : la.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M, O);
  }
  function n(a, b, c, d, e, f, g, n, u, r, y, D, G, H, M) {
    a = this;
    var O = a.J.jb ? a.J.jb(b, c, d, e, f, g, n, u, r, y, D, G, H, M) : a.J.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M), T = zj(this, O);
    m(T) || xj(a.name, O);
    return T.jb ? T.jb(b, c, d, e, f, g, n, u, r, y, D, G, H, M) : T.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H, M);
  }
  function r(a, b, c, d, e, f, g, n, u, r, y, D, G, H) {
    a = this;
    var M = a.J.ib ? a.J.ib(b, c, d, e, f, g, n, u, r, y, D, G, H) : a.J.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H), O = zj(this, M);
    m(O) || xj(a.name, M);
    return O.ib ? O.ib(b, c, d, e, f, g, n, u, r, y, D, G, H) : O.call(null, b, c, d, e, f, g, n, u, r, y, D, G, H);
  }
  function u(a, b, c, d, e, f, g, n, u, r, y, D, G) {
    a = this;
    var H = a.J.hb ? a.J.hb(b, c, d, e, f, g, n, u, r, y, D, G) : a.J.call(null, b, c, d, e, f, g, n, u, r, y, D, G), M = zj(this, H);
    m(M) || xj(a.name, H);
    return M.hb ? M.hb(b, c, d, e, f, g, n, u, r, y, D, G) : M.call(null, b, c, d, e, f, g, n, u, r, y, D, G);
  }
  function y(a, b, c, d, e, f, g, n, u, r, y, D) {
    a = this;
    var G = a.J.gb ? a.J.gb(b, c, d, e, f, g, n, u, r, y, D) : a.J.call(null, b, c, d, e, f, g, n, u, r, y, D), H = zj(this, G);
    m(H) || xj(a.name, G);
    return H.gb ? H.gb(b, c, d, e, f, g, n, u, r, y, D) : H.call(null, b, c, d, e, f, g, n, u, r, y, D);
  }
  function D(a, b, c, d, e, f, g, n, u, r, y) {
    a = this;
    var D = a.J.fb ? a.J.fb(b, c, d, e, f, g, n, u, r, y) : a.J.call(null, b, c, d, e, f, g, n, u, r, y), G = zj(this, D);
    m(G) || xj(a.name, D);
    return G.fb ? G.fb(b, c, d, e, f, g, n, u, r, y) : G.call(null, b, c, d, e, f, g, n, u, r, y);
  }
  function G(a, b, c, d, e, f, g, n, u, r) {
    a = this;
    var y = a.J.qb ? a.J.qb(b, c, d, e, f, g, n, u, r) : a.J.call(null, b, c, d, e, f, g, n, u, r), D = zj(this, y);
    m(D) || xj(a.name, y);
    return D.qb ? D.qb(b, c, d, e, f, g, n, u, r) : D.call(null, b, c, d, e, f, g, n, u, r);
  }
  function H(a, b, c, d, e, f, g, n, u) {
    a = this;
    var r = a.J.Za ? a.J.Za(b, c, d, e, f, g, n, u) : a.J.call(null, b, c, d, e, f, g, n, u), y = zj(this, r);
    m(y) || xj(a.name, r);
    return y.Za ? y.Za(b, c, d, e, f, g, n, u) : y.call(null, b, c, d, e, f, g, n, u);
  }
  function M(a, b, c, d, e, f, g, n) {
    a = this;
    var u = a.J.Oa ? a.J.Oa(b, c, d, e, f, g, n) : a.J.call(null, b, c, d, e, f, g, n), r = zj(this, u);
    m(r) || xj(a.name, u);
    return r.Oa ? r.Oa(b, c, d, e, f, g, n) : r.call(null, b, c, d, e, f, g, n);
  }
  function O(a, b, c, d, e, f, g) {
    a = this;
    var n = a.J.Xa ? a.J.Xa(b, c, d, e, f, g) : a.J.call(null, b, c, d, e, f, g), u = zj(this, n);
    m(u) || xj(a.name, n);
    return u.Xa ? u.Xa(b, c, d, e, f, g) : u.call(null, b, c, d, e, f, g);
  }
  function T(a, b, c, d, e, f) {
    a = this;
    var g = a.J.ba ? a.J.ba(b, c, d, e, f) : a.J.call(null, b, c, d, e, f), n = zj(this, g);
    m(n) || xj(a.name, g);
    return n.ba ? n.ba(b, c, d, e, f) : n.call(null, b, c, d, e, f);
  }
  function qa(a, b, c, d, e) {
    a = this;
    var f = a.J.K ? a.J.K(b, c, d, e) : a.J.call(null, b, c, d, e), g = zj(this, f);
    m(g) || xj(a.name, f);
    return g.K ? g.K(b, c, d, e) : g.call(null, b, c, d, e);
  }
  function la(a, b, c, d) {
    a = this;
    var e = a.J.c ? a.J.c(b, c, d) : a.J.call(null, b, c, d), f = zj(this, e);
    m(f) || xj(a.name, e);
    return f.c ? f.c(b, c, d) : f.call(null, b, c, d);
  }
  function ya(a, b, c) {
    a = this;
    var d = a.J.a ? a.J.a(b, c) : a.J.call(null, b, c), e = zj(this, d);
    m(e) || xj(a.name, d);
    return e.a ? e.a(b, c) : e.call(null, b, c);
  }
  function ib(a, b) {
    a = this;
    var c = a.J.b ? a.J.b(b) : a.J.call(null, b), d = zj(this, c);
    m(d) || xj(a.name, c);
    return d.b ? d.b(b) : d.call(null, b);
  }
  function Sc(a) {
    a = this;
    var b = a.J.o ? a.J.o() : a.J.call(null), c = zj(this, b);
    m(c) || xj(a.name, b);
    return c.o ? c.o() : c.call(null);
  }
  var Y = null, Y = function(Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag, bg, rl, Tq) {
    switch(arguments.length) {
      case 1:
        return Sc.call(this, Y);
      case 2:
        return ib.call(this, Y, Fa);
      case 3:
        return ya.call(this, Y, Fa, Ua);
      case 4:
        return la.call(this, Y, Fa, Ua, Mb);
      case 5:
        return qa.call(this, Y, Fa, Ua, Mb, Va);
      case 6:
        return T.call(this, Y, Fa, Ua, Mb, Va, wb);
      case 7:
        return O.call(this, Y, Fa, Ua, Mb, Va, wb, Nc);
      case 8:
        return M.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb);
      case 9:
        return H.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb);
      case 10:
        return G.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb);
      case 11:
        return D.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb, lc);
      case 12:
        return y.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb, lc, Cc);
      case 13:
        return u.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc);
      case 14:
        return r.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc);
      case 15:
        return n.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd);
      case 16:
        return g.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee);
      case 17:
        return f.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od);
      case 18:
        return e.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf);
      case 19:
        return d.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag);
      case 20:
        return c.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag, bg);
      case 21:
        return a.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag, bg, rl);
      case 22:
        return b.call(this, Y, Fa, Ua, Mb, Va, wb, Nc, Jb, Sb, Pb, lc, Cc, uc, Oc, wd, ee, Od, xf, Ag, bg, rl, Tq);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  Y.b = Sc;
  Y.a = ib;
  Y.c = ya;
  Y.K = la;
  Y.ba = qa;
  Y.Xa = T;
  Y.Oa = O;
  Y.Za = M;
  Y.qb = H;
  Y.fb = G;
  Y.gb = D;
  Y.hb = y;
  Y.ib = u;
  Y.jb = r;
  Y.kb = n;
  Y.lb = g;
  Y.mb = f;
  Y.nb = e;
  Y.ob = d;
  Y.pb = c;
  Y.ke = a;
  Y.Kc = b;
  return Y;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.o = function() {
  var b = this.J.o ? this.J.o() : this.J.call(null), a = zj(this, b);
  m(a) || xj(this.name, b);
  return a.o ? a.o() : a.call(null);
};
h.b = function(b) {
  var a = this.J.b ? this.J.b(b) : this.J.call(null, b), c = zj(this, a);
  m(c) || xj(this.name, a);
  return c.b ? c.b(b) : c.call(null, b);
};
h.a = function(b, a) {
  var c = this.J.a ? this.J.a(b, a) : this.J.call(null, b, a), d = zj(this, c);
  m(d) || xj(this.name, c);
  return d.a ? d.a(b, a) : d.call(null, b, a);
};
h.c = function(b, a, c) {
  var d = this.J.c ? this.J.c(b, a, c) : this.J.call(null, b, a, c), e = zj(this, d);
  m(e) || xj(this.name, d);
  return e.c ? e.c(b, a, c) : e.call(null, b, a, c);
};
h.K = function(b, a, c, d) {
  var e = this.J.K ? this.J.K(b, a, c, d) : this.J.call(null, b, a, c, d), f = zj(this, e);
  m(f) || xj(this.name, e);
  return f.K ? f.K(b, a, c, d) : f.call(null, b, a, c, d);
};
h.ba = function(b, a, c, d, e) {
  var f = this.J.ba ? this.J.ba(b, a, c, d, e) : this.J.call(null, b, a, c, d, e), g = zj(this, f);
  m(g) || xj(this.name, f);
  return g.ba ? g.ba(b, a, c, d, e) : g.call(null, b, a, c, d, e);
};
h.Xa = function(b, a, c, d, e, f) {
  var g = this.J.Xa ? this.J.Xa(b, a, c, d, e, f) : this.J.call(null, b, a, c, d, e, f), n = zj(this, g);
  m(n) || xj(this.name, g);
  return n.Xa ? n.Xa(b, a, c, d, e, f) : n.call(null, b, a, c, d, e, f);
};
h.Oa = function(b, a, c, d, e, f, g) {
  var n = this.J.Oa ? this.J.Oa(b, a, c, d, e, f, g) : this.J.call(null, b, a, c, d, e, f, g), r = zj(this, n);
  m(r) || xj(this.name, n);
  return r.Oa ? r.Oa(b, a, c, d, e, f, g) : r.call(null, b, a, c, d, e, f, g);
};
h.Za = function(b, a, c, d, e, f, g, n) {
  var r = this.J.Za ? this.J.Za(b, a, c, d, e, f, g, n) : this.J.call(null, b, a, c, d, e, f, g, n), u = zj(this, r);
  m(u) || xj(this.name, r);
  return u.Za ? u.Za(b, a, c, d, e, f, g, n) : u.call(null, b, a, c, d, e, f, g, n);
};
h.qb = function(b, a, c, d, e, f, g, n, r) {
  var u = this.J.qb ? this.J.qb(b, a, c, d, e, f, g, n, r) : this.J.call(null, b, a, c, d, e, f, g, n, r), y = zj(this, u);
  m(y) || xj(this.name, u);
  return y.qb ? y.qb(b, a, c, d, e, f, g, n, r) : y.call(null, b, a, c, d, e, f, g, n, r);
};
h.fb = function(b, a, c, d, e, f, g, n, r, u) {
  var y = this.J.fb ? this.J.fb(b, a, c, d, e, f, g, n, r, u) : this.J.call(null, b, a, c, d, e, f, g, n, r, u), D = zj(this, y);
  m(D) || xj(this.name, y);
  return D.fb ? D.fb(b, a, c, d, e, f, g, n, r, u) : D.call(null, b, a, c, d, e, f, g, n, r, u);
};
h.gb = function(b, a, c, d, e, f, g, n, r, u, y) {
  var D = this.J.gb ? this.J.gb(b, a, c, d, e, f, g, n, r, u, y) : this.J.call(null, b, a, c, d, e, f, g, n, r, u, y), G = zj(this, D);
  m(G) || xj(this.name, D);
  return G.gb ? G.gb(b, a, c, d, e, f, g, n, r, u, y) : G.call(null, b, a, c, d, e, f, g, n, r, u, y);
};
h.hb = function(b, a, c, d, e, f, g, n, r, u, y, D) {
  var G = this.J.hb ? this.J.hb(b, a, c, d, e, f, g, n, r, u, y, D) : this.J.call(null, b, a, c, d, e, f, g, n, r, u, y, D), H = zj(this, G);
  m(H) || xj(this.name, G);
  return H.hb ? H.hb(b, a, c, d, e, f, g, n, r, u, y, D) : H.call(null, b, a, c, d, e, f, g, n, r, u, y, D);
};
h.ib = function(b, a, c, d, e, f, g, n, r, u, y, D, G) {
  var H = this.J.ib ? this.J.ib(b, a, c, d, e, f, g, n, r, u, y, D, G) : this.J.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G), M = zj(this, H);
  m(M) || xj(this.name, H);
  return M.ib ? M.ib(b, a, c, d, e, f, g, n, r, u, y, D, G) : M.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G);
};
h.jb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H) {
  var M = this.J.jb ? this.J.jb(b, a, c, d, e, f, g, n, r, u, y, D, G, H) : this.J.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H), O = zj(this, M);
  m(O) || xj(this.name, M);
  return O.jb ? O.jb(b, a, c, d, e, f, g, n, r, u, y, D, G, H) : O.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H);
};
h.kb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M) {
  var O = this.J.kb ? this.J.kb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M) : this.J.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M), T = zj(this, O);
  m(T) || xj(this.name, O);
  return T.kb ? T.kb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M) : T.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M);
};
h.lb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O) {
  var T = this.J.lb ? this.J.lb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O) : this.J.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O), qa = zj(this, T);
  m(qa) || xj(this.name, T);
  return qa.lb ? qa.lb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O) : qa.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O);
};
h.mb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T) {
  var qa = this.J.mb ? this.J.mb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T) : this.J.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T), la = zj(this, qa);
  m(la) || xj(this.name, qa);
  return la.mb ? la.mb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T) : la.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T);
};
h.nb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa) {
  var la = this.J.nb ? this.J.nb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa) : this.J.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa), ya = zj(this, la);
  m(ya) || xj(this.name, la);
  return ya.nb ? ya.nb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa) : ya.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa);
};
h.ob = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la) {
  var ya = this.J.ob ? this.J.ob(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la) : this.J.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la), ib = zj(this, ya);
  m(ib) || xj(this.name, ya);
  return ib.ob ? ib.ob(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la) : ib.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la);
};
h.pb = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya) {
  var ib = this.J.pb ? this.J.pb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya) : this.J.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya), Sc = zj(this, ib);
  m(Sc) || xj(this.name, ib);
  return Sc.pb ? Sc.pb(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya) : Sc.call(null, b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya);
};
h.ke = function(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib) {
  var Sc = wf(this.J, b, a, c, d, C([e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib], 0)), Y = zj(this, Sc);
  m(Y) || xj(this.name, Sc);
  return wf(Y, b, a, c, d, C([e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib], 0));
};
h.D = function(b, a, c) {
  Rf.K(this.de, I, a, c);
  sj(this.ye, this.de, this.ie, this.se);
  return this;
};
function zj(b, a) {
  v.a(A.b ? A.b(b.ie) : A.call(null, b.ie), A.b ? A.b(b.se) : A.call(null, b.se)) || sj(b.ye, b.de, b.ie, b.se);
  var c = (A.b ? A.b(b.ye) : A.call(null, b.ye)).call(null, a);
  if (m(c)) {
    return c;
  }
  c = vj(b.name, a, b.se, b.de, b.Sh, b.ye, b.ie);
  return m(c) ? c : (A.b ? A.b(b.de) : A.call(null, b.de)).call(null, b.vh);
}
h.ne = function() {
  return Wc(this.name);
};
h.oe = function() {
  return Xc(this.name);
};
h.Y = function() {
  return fa(this);
};
function Aj(b, a) {
  this.Td = b;
  this.m = a;
  this.l = 2153775104;
  this.M = 2048;
}
h = Aj.prototype;
h.toString = function() {
  return this.Td;
};
h.equiv = function(b) {
  return this.O(null, b);
};
h.O = function(b, a) {
  return a instanceof Aj && this.Td === a.Td;
};
h.X = function(b, a) {
  return Ac(a, [q('#uuid "'), q(this.Td), q('"')].join(""));
};
h.Y = function() {
  null == this.m && (this.m = kd(this.Td));
  return this.m;
};
h.vd = function(b, a) {
  return Ya(this.Td, a.Td);
};
function Bj(b, a, c) {
  var d = Error(b);
  this.message = b;
  this.data = a;
  this.eg = c;
  this.name = d.name;
  this.description = d.description;
  this.Qh = d.Qh;
  this.fileName = d.fileName;
  this.lineNumber = d.lineNumber;
  this.columnNumber = d.columnNumber;
  this.stack = d.stack;
  return this;
}
Bj.prototype.__proto__ = Error.prototype;
Bj.prototype.Aa = k;
Bj.prototype.X = function(b, a, c) {
  Ac(a, "#error {:message ");
  Mi(this.message, a, c);
  m(this.data) && (Ac(a, ", :data "), Mi(this.data, a, c));
  m(this.eg) && (Ac(a, ", :cause "), Mi(this.eg, a, c));
  return Ac(a, "}");
};
Bj.prototype.toString = function() {
  return cd(this);
};
function Cj(b, a) {
  return new Bj(b, a, null);
}
;var Dj = new K(null, "response", "response", -1068424192), Ej = new K(null, "x-request-description", "x-request-description", -1092487008), Fj = new nd(null, "res", "res", 245523648, null), Gj = new K(null, "constraint", "constraint", 1725147424), Hj = new K(null, "description", "description", -1428560544), Ij = new K(null, "mandatory", "mandatory", 542802336), Jj = new nd(null, "\x26", "\x26", -2144855648, null), Kj = new K(null, "enum", "enum", 1679018432), Lj = new K(null, "path", "path", -188191168), 
Mj = new K(null, "logical-blocks", "logical-blocks", -1466339776), Nj = new nd("cljs.core", "unquote", "cljs.core/unquote", 1013085760, null), Oj = new nd(null, "when-first", "when-first", 821699168, null), Pj = new K(null, "properties", "properties", 685819552), Qj = new K(null, "neg", "neg", 1800032960), Rj = new K(null, "parser2", "parser2", 1013754688), Sj = new K(null, "x-is", "x-is", -1478987936), Tj = new K(null, "encodes", "encodes", 1574678400), Uj = new K(null, "schemes", "schemes", 604484480), 
Vj = new K(null, "arg3", "arg3", -1486822496), Wj = new K(null, "additionalProperties", "additionalProperties", -1203767392), Xj = new K(null, "default-type", "default-type", -1530724448), Yj = new K(null, "document-location", "document-location", -1571225599), Zj = new K(null, "full-results", "full-results", -1500225407), ak = new K(null, "cat", "cat", -1457810207), bk = new nd(null, "meta46556", "meta46556", -1672985311, null), ck = new K(null, "tags", "tags", 1771418977), dk = new K(null, "schema", 
"schema", -1582001791), ek = new nd(null, "defrecord*", "defrecord*", -1936366207, null), fk = new K(null, "end-of-string", "end-of-string", 1567354241), gk = new K(null, "securityDefinitions", "securityDefinitions", 1745103265), hk = new nd(null, "meta46539", "meta46539", -1780142463, null), ik = new K(null, "suffix", "suffix", 367373057), jk = new K(null, "generate-amf-info", "generate-amf-info", -1468924159), kk = new nd(null, "try", "try", -1273693247, null), lk = new K(null, "queryParameters", 
"queryParameters", -1640484895), mk = new K(null, "min", "min", 444991522), nk = new K(null, "selector", "selector", 762528866), ok = new nd("cljs.core", "*print-level*", "cljs.core/*print-level*", 65848482, null), pk = new K(null, "*?data*", "*?data*", 1047537922), qk = new nd(null, "*print-circle*", "*print-circle*", 1148404994, null), rk = new K(null, "format", "format", -1306924766), sk = new K(null, "else-params", "else-params", -832171646), tk = new K(null, "x-media-type", "x-media-type", -2042819166), 
uk = new K(null, "given", "given", 716253602), vk = new K(null, "ns-whitelist", "ns-whitelist", -1717299774), wk = new K(null, "multipleOf", "multipleOf", 1127305698), xk = new K(null, "exclusiveMaximum", "exclusiveMaximum", 1883434466), yk = new K(null, "definitions", "definitions", 167529986), zk = new K(null, "block", "block", 664686210), Ak = new K(null, "inherit", "inherit", -1840815422), Bk = new K(null, "testing-vars", "testing-vars", -2114769150), Ck = new K(null, "msg-cache", "msg-cache", 
-733775070), Dk = new K(null, "allows-separator", "allows-separator", -818967742), Ek = new K(null, "report", "report", 1394055010), Fk = new K(null, "Tag", "Tag", -1948095582), Gk = new K(null, "source-maps?", "source-maps?", 1903764418), Hk = new K(null, "request", "request", 1772954723), Ik = new nd(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), Jk = new K("mem", "all", "mem/all", 892075139), Kk = new K(null, "get", "get", 1683182755), Lk = new K(null, "x-ahead-declaration", 
"x-ahead-declaration", 1788752099), Mk = new K(null, "indent", "indent", -148200125), Nk = new K(null, "NOT", "NOT", -1689245341), Ok = new K(null, "full-listeners", "full-listeners", 50621827), Pk = new nd("cljs.pprint", "*print-pretty*", "cljs.pprint/*print-pretty*", -762636861, null), Qk = new nd("cljs.pprint", "*print-pprint-dispatch*", "cljs.pprint/*print-pprint-dispatch*", -1820734013, null), Rk = new K(null, "maxProperties", "maxProperties", 1289793027), Sk = new nd(null, "*print-suppress-namespaces*", 
"*print-suppress-namespaces*", 1795828355, null), Tk = new K(null, "miser-width", "miser-width", -1310049437), Uk = new K(null, "ord", "ord", 1142548323), Vk = new nd(null, "struct", "struct", 325972931, null), Wk = new K(null, "lexical", "lexical", 1489871876), Xk = new K(null, "uniqueItems", "uniqueItems", -826722268), Yk = new K(null, "fn", "fn", -1175266204), Zk = new K(null, "CRLF", "CRLF", 11418756), $k = new K(null, "amf-not-found", "amf-not-found", 1989963972), al = new K(null, "negative-listeners", 
"negative-listeners", 55241092), bl = new K(null, "generation", "generation", -2132542044), cl = new K(null, "begin-test-var", "begin-test-var", -908571100), dl = new K("rl", "reset", "rl/reset", -800926172), nb = new K(null, "meta", "meta", 1499536964), el = new K(null, "HTAB", "HTAB", 11392612), fl = new K(null, "full", "full", 436801220), gl = new nd(null, "..", "..", -300507420, null), hl = new K(null, "payloads", "payloads", 418461476), il = new nd(null, "*print-pretty*", "*print-pretty*", 726795140, 
null), jl = new nd(null, "*print-pprint-dispatch*", "*print-pprint-dispatch*", -1709114492, null), kl = new nd(null, "tag-id", "tag-id", 329302980, null), ll = new K(null, "buffer-block", "buffer-block", -10937307), ml = new nd(null, "max-columns", "max-columns", -912112507, null), nl = new nd(null, "meta39323", "meta39323", 791142565, null), ol = new K(null, "libraries", "libraries", -303286011), pl = new nd(null, "blockable", "blockable", -28395259, null), ql = new K(null, "extends", "extends", 
-954903259), ob = new K(null, "dup", "dup", 556298533), sl = new K(null, "testing-contexts", "testing-contexts", -1485646523), tl = new K(null, "rule-separator", "rule-separator", 1539322213), ul = new K(null, "arg2", "arg2", 1729550917), vl = new K(null, "commainterval", "commainterval", -1980061083), wl = new K(null, "anyOf", "anyOf", -1046092155), xl = new K(null, "key", "key", -1516042587), yl = new K(null, "patch", "patch", 380775109), zl = new K(null, "hide-tag-rule", "hide-tag-rule", 150267589), 
Al = new K("rl", "peek", "rl/peek", -291391771), Bl = new K(null, "Operation", "Operation", -57321627), Cl = new K(null, "fragments", "fragments", 1456109445), Dl = new K(null, "pretty-writer", "pretty-writer", -1222834267), El = new K(null, "body-media-type", "body-media-type", 935956389), Fl = new K(null, "parent", "parent", -878878779), Gl = new K(null, "index", "index", -1531685915), Hl = new K(null, "ns-blacklist", "ns-blacklist", 1957763142), Il = new K(null, "LWSP", "LWSP", 782998598), Jl = 
new K(null, "sections", "sections", -886710106), Kl = new K(null, "license", "license", 1475708262), Ll = new K(null, "rate-limit", "rate-limit", 1748082022), Ml = new K(null, "private", "private", -558947994), Nl = new K(null, "LF", "LF", 1177033158), Ol = new K(null, "else", "else", -1508377146), Pl = new K(null, "miser", "miser", -556060186), Ql = new K(null, "is", "is", 369128998), Rl = new K(null, "keywordize", "keywordize", 1381210758), Sl = new K(null, "fragment-node", "fragment-node", 961617574), 
Tl = new K(null, "report-counters", "report-counters", -1702609242), Ul = new K(null, "securedBy", "securedBy", 14373542), Vl = new K(null, "right-margin", "right-margin", -810413306), Wl = new K(null, "protocol", "protocol", 652470118), Xl = new nd("cljs.pprint", "*print-base*", "cljs.pprint/*print-base*", 1887526790, null), Yl = new K(null, "alt", "alt", -3214426), Zl = new K(null, "lookahead", "lookahead", -400102393), $l = new nd(null, "if-not", "if-not", -265415609, null), am = new nd("cljs.core", 
"deref", "cljs.core/deref", 1901963335, null), bm = new K(null, "unknown", "unknown", -935977881), cm = new nd(null, "ns*", "ns*", 1840949383, null), dm = new K(null, "failure", "failure", 720415879), em = new K(null, "offset", "offset", 296498311), fm = new nd(null, "*print-level*", "*print-level*", -634488505, null), gm = new K(null, "vargs", "vargs", -966597273), hm = new K(null, "password", "password", 417022471), im = new nd(null, "doseq", "doseq", 221164135, null), jm = new K(null, "input-format", 
"input-format", -422703481), km = new K(null, "resourceTypes", "resourceTypes", -1912490361), lm = new K(null, "cur", "cur", 1153190599), mm = new K(null, "look", "look", -539441433), nm = new K(null, "queue", "queue", 1455835879), om = new K(null, "displayName", "displayName", -809144601), pm = new K(null, "bin-char", "bin-char", -1662780697), qm = new K("instaparse.gll", "end-index", "instaparse.gll/end-index", -1851404441), rm = new K(null, "ARRAY_TYPE", "ARRAY_TYPE", -473571449), sm = new K(null, 
"security", "security", 886963079), Pf = new K(null, "validator", "validator", -1966190681), tm = new K(null, "EndPoint", "EndPoint", 972970919), um = new K(null, "resource-path", "resource-path", -196672504), vm = new nd(null, "finally", "finally", -1065347064, null), wm = new K("rl", "all", "rl/all", 892118056), xm = new K(null, "method", "method", 55703592), ym = new K(null, "content", "content", 15833224), zm = new K(null, "fragment", "fragment", 826775688), Am = new K(null, "arguments", "arguments", 
-1182834456), Bm = new K(null, "raw", "raw", 1604651272), Cm = new K(null, "default", "default", -1987822328), Dm = new K(null, "finally-block", "finally-block", 832982472), Em = new K(null, "added", "added", 2057651688), Fm = new K(null, "Request", "Request", 430220808), Gm = new K(null, "paths-sources", "paths-sources", -2128643576), Hm = new K(null, "output_", "output_", -36797880), Im = new nd(null, "when-let", "when-let", -1383043480, null), Jm = new K(null, "msg_", "msg_", -1925147E3), Km = 
new K(null, "func", "func", -238706040), Lm = new nd(null, "loop*", "loop*", 615029416, null), Mm = new K(null, "protocols", "protocols", -5615896), Nm = new K(null, "ns", "ns", 441598760), Om = new K(null, "symbol", "symbol", -1038572696), Pm = new K(null, "warn", "warn", -436710552), Qm = new K(null, "generator-fn", "generator-fn", 811851656), Rm = new K(null, "sources", "sources", -321166424), Sm = new K(null, "msecs", "msecs", 1711980553), W = new K(null, "name", "name", 1843675177), Tm = new nd("cljs.pprint", 
"*print-radix*", "cljs.pprint/*print-radix*", 1558253641, null), Um = new K(null, "allowedTargets", "allowedTargets", 934831209), Vm = new K(null, "n", "n", 562130025), Wm = new K(null, "start-production", "start-production", 687546537), Xm = new K(null, "w", "w", 354169001), Ym = new K(null, "locaton", "locaton", -241201943), Zm = new K(null, "elidable?", "elidable?", 248362249), $m = new K(null, "not-delivered", "not-delivered", 1599158697), an = new K(null, "trace", "trace", -1082747415), bn = 
new K(null, "remaining-arg-count", "remaining-arg-count", -1216589335), cn = new K(null, "rule", "rule", 729973257), dn = new K(null, "produces", "produces", 321755657), en = new K(null, "is-trait", "is-trait", -1528848887), fn = new K(null, "inline-fragments", "inline-fragments", -1716232695), gn = new K("cljs.test", "pprint", "cljs.test/pprint", 1627393641), hn = new K(null, "trait-name", "trait-name", 871919241), jn = new K(null, "dt", "dt", -368444759), kn = new K(null, "formatter", "formatter", 
-483008823), ln = new K(null, "fill", "fill", 883462889), mn = new K(null, "rulename-right", "rulename-right", 1125609193), nn = new K(null, "raml", "raml", -1437281527), on = new K(null, "comma", "comma", 1699024745), pn = new K(null, "value", "value", 305978217), qn = new K(null, "req-id", "req-id", -471642231), rn = new K(null, "result-path", "result-path", -1768558615), sn = new K(null, "section", "section", -300141526), tn = new K(null, "response-key", "response-key", 1189303338), un = new K(null, 
"VCHAR", "VCHAR", 1962437706), vn = new nd(null, "*print-length*", "*print-length*", -687693654, null), wn = new K(null, "x-rdf-type", "x-rdf-type", -1245746006), xn = new K(null, "DomainProperty", "DomainProperty", 1211775210), yn = new K(null, "DIGIT", "DIGIT", 341251338), zn = new nd("cljs.pprint", "*print-miser-width*", "cljs.pprint/*print-miser-width*", 1588913450, null), An = new K(null, "qualifier", "qualifier", 125841738), Bn = new nd(null, "cljs.core", "cljs.core", 770546058, null), Cn = 
new K(null, "maximum", "maximum", 573880714), Dn = new nd(null, "miser-width", "miser-width", 330482090, null), En = new K(null, "x-uses", "x-uses", -1227721302), Fn = new nd(null, "let", "let", 358118826, null), Gn = new K(null, "file", "file", -1269645878), Hn = new nd(null, "-\x3e", "-\x3e", -2139605430, null), In = new K(null, "operation", "operation", -1267664310), Jn = new K(null, "username", "username", 1605666410), Kn = new K(null, "end-pos", "end-pos", -1643883926), Ln = new K(null, "full-graph?", 
"full-graph?", -1034157366), Mn = new K(null, "from-library", "from-library", 1270850282), Nn = new K(null, "alias-chain", "alias-chain", 534594282), On = new K(null, "circle", "circle", 1903212362), Pn = new K(null, "memory", "memory", -1449401430), Qn = new K(null, "end-column", "end-column", 1425389514), Rn = new K(null, "externalDocs", "externalDocs", -568695862), Sn = new K(null, "cwd", "cwd", 14056523), Tn = new K(null, "secs", "secs", 1532330091), Un = new nd(null, "pred__52186", "pred__52186", 
-853660565, null), Vn = new K(null, "mode", "mode", 654403691), Wn = new K("mem", "del", "mem/del", 574870667), Xn = new K(null, "start", "start", -355208981), Yn = new nd(null, "meta52190", "meta52190", 1608583531, null), Zn = new K(null, "lines", "lines", -700165781), $n = new K(null, "fail-index", "fail-index", 248726923), ao = new K(null, "months", "months", -45571637), bo = new K(null, "err", "err", -2089457205), co = new K(null, "params", "params", 710516235), eo = new K(null, "nt", "nt", -835425781), 
fo = new K(null, "grammar", "grammar", 1881328267), go = new nd(null, "fn", "fn", 465265323, null), ho = new K(null, "abstract", "abstract", 1319624427), io = new K(null, "max-iterations", "max-iterations", 2021275563), jo = new K(null, "?file", "?file", 1533429675), ko = new K(null, "hide-nt", "hide-nt", -228813845), lo = new K(null, "pos", "pos", -864607220), mo = new K(null, "days", "days", -1394072564), no = new K(null, "rep", "rep", -1226820564), oo = new K(null, "paths", "paths", -1807389588), 
po = new K(null, "output-format", "output-format", -1826382676), Yi = new K(null, "val", "val", 128701612), qo = new K(null, "SP", "SP", 124290284), ro = new K(null, "to-raml", "to-raml", -441204468), so = new K(null, "writing", "writing", -1486865108), to = new nd("cljs.pprint", "*print-suppress-namespaces*", "cljs.pprint/*print-suppress-namespaces*", 1649488204, null), X = new K(null, "recur", "recur", -437573268), uo = new K(null, "type", "type", 1174270348), vo = new K(null, "UNION_TYPE", "UNION_TYPE", 
-1311432052), wo = new K(null, "NUM", "NUM", -218662260), xo = new K(null, "path-item", "path-item", 308390572), yo = new K(null, "inside-comment", "inside-comment", 1258069708), zo = new K(null, "catch-block", "catch-block", 1175212748), Ao = new K(null, "mins", "mins", 467369676), Bo = new K(null, "delete", "delete", -1768633620), Co = new K(null, "tag-value", "tag-value", -1601654932), Do = new K(null, "parameter-from-args", "parameter-from-args", -758446196), Eo = new nd(null, "do", "do", 1686842252, 
null), Fo = new K(null, "done-nl", "done-nl", -381024340), Go = new nd(null, "when-not", "when-not", -1223136340, null), Ho = new K(null, "debug", "debug", -1608172596), Io = new K(null, "TYPE_NAME", "TYPE_NAME", -245619732), Jo = new K(null, "suppress-namespaces", "suppress-namespaces", 2130686956), Ko = new nd(null, "when", "when", 1064114221, null), Lo = new K(null, "library-declarations", "library-declarations", -1816740819), Mo = new K(null, "ns-str", "ns-str", -2062616499), Pi = new K(null, 
"fallback-impl", "fallback-impl", -1501286995), No = new K(null, "star", "star", 279424429), Oo = new K(null, "char-val", "char-val", 1408617933), Po = new K(null, "references", "references", 882562509), Qo = new K(null, "hostname_", "hostname_", -2091647379), Ro = new K(null, "source", "source", -433931539), lb = new K(null, "flush-on-newline", "flush-on-newline", -151457939), So = new K(null, "relative-to", "relative-to", -470100051), To = new K(null, "minLength", "minLength", -1538722770), Uo = 
new K(null, "Payload", "Payload", 1882263630), Vo = new K(null, "port", "port", 1534937262), Wo = new K(null, "status-code", "status-code", -1060410130), Xo = new K(null, "string", "string", -1989541586), Yo = new K(null, "vector", "vector", 1902966158), Zo = new K(null, "all", "all", 892129742), $o = new K(null, "?ns-str", "?ns-str", 2012733966), ap = new nd(null, "defn", "defn", -126010802, null), bp = new nd(null, "letfn*", "letfn*", -110097810, null), cp = new nd(null, "capped", "capped", -1650988402, 
null), dp = new K(null, "e", "e", 1381269198), ep = new K(null, "header", "header", 119441134), fp = new nd(null, "if", "if", 1181717262, null), gp = new K(null, "parent-path", "parent-path", -2115866866), hp = new K(null, "DomainPropertySchema", "DomainPropertySchema", 1106320174), ip = new K(null, "hiccup", "hiccup", 1218876238), jp = new K(null, "rules", "rules", 1198912366), kp = new K(null, "char-format", "char-format", -1016499218), lp = new K(null, "x-generated", "x-generated", -2047799281), 
mp = new K(null, "start-col", "start-col", 668080143), np = new K(null, "is-fragment", "is-fragment", -1792321457), op = new K(null, "radix", "radix", 857016463), pp = new K(null, "resolved", "resolved", 968763567), qp = new nd(null, "new", "new", -444906321, null), rp = new K(null, "lo", "lo", -931799889), oj = new K(null, "descendants", "descendants", 1824886031), sp = new K(null, "colon-up-arrow", "colon-up-arrow", 244853007), tp = new K(null, "consumes", "consumes", -138432145), up = new nd(null, 
"ns", "ns", 2082130287, null), vp = new K(null, "k", "k", -2146297393), wp = new K(null, "terms-of-service", "terms-of-service", 419157455), xp = new K(null, "mediaType", "mediaType", 272273903), yp = new K(null, "title", "title", 636505583), zp = new K(null, "documentation", "documentation", 1889593999), Ap = new K(null, "enabled?", "enabled?", -1376075057), Bp = new K(null, "prefix", "prefix", -265908465), Cp = new K(null, "column", "column", 2078222095), Dp = new K(null, "parameter-kind", "parameter-kind", 
-1614758129), Ep = new K(null, "types", "types", 590030639), Fp = new nd(null, "meta45570", "meta45570", 1684881199, null), Gp = new K(null, "expecting", "expecting", -57706705), Hp = new K(null, "headers", "headers", -835030129), Ip = new K("instaparse", "failure", "instaparse/failure", 1422918607), Jp = new K(null, "colon", "colon", -965200945), Kp = new K(null, "inheritance", "inheritance", 1144321999), Lp = new K(null, "hide", "hide", -596913169), Mp = new K(null, "high", "high", 2027297808), 
Np = new K(null, "declares", "declares", 1501306928), Op = new K(null, "library", "library", 467978288), Pp = new K(null, "minProperties", "minProperties", 100355152), pj = new K(null, "ancestors", "ancestors", -776045424), Qp = new K(null, "document-type", "document-type", -1309437776), Rp = new K(null, "middleware", "middleware", 1462115504), Sp = new K(null, "fatal", "fatal", 1874419888), Tp = new K(null, "stream", "stream", 1534941648), Up = new K(null, "level", "level", 1290497552), Vp = new K(null, 
"paren", "paren", -294107600), Wp = new nd(null, "*print-radix*", "*print-radix*", 1168517744, null), Xp = new K(null, "HEXDIG", "HEXDIG", -200221072), Yp = new K(null, "CTL", "CTL", -9995632), Zp = new K(null, "option", "option", 65132272), mb = new K(null, "readably", "readably", 1129599760), $p = new K(null, "summary", "summary", 380847952), aq = new nd(null, "m", "m", -1021758608, null), bq = new nd(null, "meta39479", "meta39479", 851627920, null), cq = new K(null, "hex-char", "hex-char", 764443568), 
dq = new K(null, "right-bracket", "right-bracket", 951856080), eq = new K(null, "DQUOTE", "DQUOTE", -571169808), Fi = new K(null, "more-marker", "more-marker", -14717935), fq = new K(null, "unhide", "unhide", -413983695), gq = new K(null, "dispatch", "dispatch", 1319337009), hq = new K(null, "type-hint", "type-hint", -879003535), iq = new nd(null, "fields", "fields", -291534703, null), jq = new K(null, "document", "document", -1329188687), kq = new K(null, "endpoints", "endpoints", 274088209), lq = 
new K(null, "bin-val", "bin-val", 1705209105), mq = new K(null, "head", "head", -771383919), nq = new K(null, "end-test-var", "end-test-var", 984198545), oq = new K(null, "reason", "reason", -2070751759), pq = new K(null, "ebnf", "ebnf", 31967825), qq = new nd("cljs.pprint", "*print-right-margin*", "cljs.pprint/*print-right-margin*", -56183119, null), rq = new K(null, "parse-ast", "parse-ast", 987456177), sq = new K(null, "library-alias", "library-alias", 1078091505), tq = new nd("cljs.core", "*print-length*", 
"cljs.core/*print-length*", -20766927, null), uq = new K(null, "Includes", "Includes", -1674370255), vq = new K(null, "enlive", "enlive", 1679023921), wq = new nd(null, "cljs.pprint", "cljs.pprint", -966900911, null), xq = new K(null, "host", "host", -1558485167), yq = new K(null, "validation-results", "validation-results", 207208305), zq = new K(null, "alt-or-ord", "alt-or-ord", 310249425), Aq = new K(null, "uriParameters", "uriParameters", -1363503151), Bq = new K(null, "partial", "partial", 241141745), 
Cq = new K(null, "document-parser", "document-parser", -1990181806), Dq = new K(null, "dec-val", "dec-val", -1263870894), Eq = new K(null, "concatenation", "concatenation", -951369614), Fq = new K(null, "total", "total", 1916810418), Gq = new K(null, "alternation", "alternation", -1162147630), Hq = new K(null, "usage", "usage", -1583752910), Iq = new K(null, "parser", "parser", -1543495310), Jq = new K(null, "fail", "fail", 1706214930), Kq = new nd(null, "deftype*", "deftype*", 962659890, null), 
Lq = new nd(null, "let*", "let*", 1920721458, null), Mq = new nd(null, "struct-map", "struct-map", -1387540878, null), Nq = new K(null, "regexp", "regexp", -541372782), Oq = new K(null, "x-annotationTypes", "x-annotationTypes", 1916555986), Pq = new K(null, "parser1", "parser1", -439601422), Qq = new K(null, "securitySchemes", "securitySchemes", -515181774), Rq = new K(null, "queryString", "queryString", 1560163154), Sq = new K(null, "val-type", "val-type", -279850094), Uq = new K(null, "success", 
"success", 1890645906), Vq = new K(null, "padchar", "padchar", 2018584530), Wq = new nd(null, "js*", "js*", -1134233646, null), Xq = new K(null, "reporter", "reporter", -805360621), Yq = new K(null, "repetition", "repetition", 1938392115), Zq = new K(null, "negative-lookahead", "negative-lookahead", 874382387), $q = new nd(null, "dotimes", "dotimes", -818708397, null), ar = new K(null, "buffer-blob", "buffer-blob", -1830112173), br = new K(null, "resolve-types", "resolve-types", 1893628083), cr = 
new K(null, "output-fn", "output-fn", 1600951539), dr = new K(null, "nodes", "nodes", -2099585805), er = new nd(null, "*print-lines*", "*print-lines*", 75920659, null), fr = new K(null, "node-builder", "node-builder", -1956562605), gr = new K(null, "dynamic", "dynamic", 704819571), hr = new K(null, "schemas", "schemas", 575070579), ir = new K(null, "buffering", "buffering", -876713613), jr = new K(null, "line", "line", 212345235), kr = new nd(null, "tag-value", "tag-value", 38876595, null), lr = 
new K(null, "Extends", "Extends", 1417396851), mr = new nd(null, "with-open", "with-open", 172119667, null), nr = new K(null, "list", "list", 765357683), or = new nd(null, "fn*", "fn*", -752876845, null), pr = new K(null, "end-run-tests", "end-run-tests", 267300563), qr = new nd(null, "val", "val", 1769233139, null), rr = new K(null, "right-params", "right-params", -1790676237), sr = new nd(null, "defonce", "defonce", -1681484013, null), tr = new K(null, "?err", "?err", 549653299), ur = new K(null, 
"keyword", "keyword", 811389747), vr = new K(null, "x-response-bodies-with-media-types", "x-response-bodies-with-media-types", -68622541), wr = new K("mem", "fresh", "mem/fresh", -1179989133), xr = new nd(null, "recur", "recur", 1202958259, null), yr = new K(null, "*assert*", "*assert*", -160895053), zr = new K(null, "root", "root", -448657453), Ar = new nd(null, "*print-miser-width*", "*print-miser-width*", 1206624211, null), Br = new K(null, "data-error", "data-error", -1058016301), Cr = new K(null, 
"result", "result", 1415092211), Dr = new K(null, "examples", "examples", -473712556), Er = new nd(null, "meta53920", "meta53920", 994495572, null), Fr = new K(null, "with", "with", -1536296876), Gr = new K(null, "WSP", "WSP", -1046948716), Hr = new K(null, "segment", "segment", -964921196), Ir = new nd(null, "defn-", "defn-", 1097765044, null), Jr = new K(null, "trait", "trait", 626034900), pb = new K(null, "print-length", "print-length", 1931866356), Kr = new K(null, "max", "max", 61366548), Lr = 
new K(null, "rulename-left", "rulename-left", -1824251564), Mr = new K(null, "trailing-white-space", "trailing-white-space", 1496006996), Nr = new K(null, "factor", "factor", -2103172748), Or = new K(null, "syntax", "syntax", -1637761676), Pr = new K(null, "Epsilon", "Epsilon", 133418452), Qr = new K(null, "deprecated", "deprecated", 1498275348), Rr = new K("instaparse.gll", "start-index", "instaparse.gll/start-index", 404653620), Sr = new K(null, "fileTypes", "fileTypes", -200305100), Tr = new K(null, 
"label", "label", 1718410804), Ur = new K(null, "additional-properties", "additional-properties", 1492807220), Z = new K(null, "id", "id", -1388402092), Vr = new K(null, "uses", "uses", 232664692), Wr = new K(null, "base-path", "base-path", 495760020), Xr = new K(null, "undefined", "undefined", -1970511116), Yr = new K(null, "red", "red", -969428204), Zr = new nd(null, "domain-cache", "domain-cache", -710105228, null), $r = new K(null, "resource", "resource", 251898836), as = new K(null, "body-id", 
"body-id", -1830466604), bs = new K(null, "optional", "optional", 2053951509), cs = new K(null, "mincol", "mincol", 1230695445), ds = new nd("clojure.core", "deref", "clojure.core/deref", 188719157, null), es = new K(null, "catch-exception", "catch-exception", -1997306795), fs = new K(null, "end-test-all-vars", "end-test-all-vars", 548827253), gs = new K(null, "CR", "CR", -1654295403), hs = new K(null, "minpad", "minpad", 323570901), is = new K(null, "minimum", "minimum", -1621006059), js = new K(null, 
"current", "current", -1088038603), ks = new K(null, "at", "at", 1476951349), ls = new K(null, "minItems", "minItems", 1950622069), ms = new K(null, "deref", "deref", -145586795), ns = new K(null, "parent-id", "parent-id", -1400729131), os = new K(null, "comment", "comment", 532206069), nj = new K(null, "parents", "parents", -2027538891), ps = new K(null, "count", "count", 2139924085), qs = new K(null, "per-line-prefix", "per-line-prefix", 846941813), rs = new K(null, "plus", "plus", 211540661), 
ss = new K(null, "responses", "responses", 1257546453), ts = new K(null, "expected", "expected", 1583670997), Bf = new nd(null, "meta36356", "meta36356", 869544725, null), us = new K(null, "expanded-fragments", "expanded-fragments", -2072588266), vs = new K(null, "prev", "prev", -1597069226), ws = new K(null, "shape", "shape", 1190694006), xs = new K(null, "colnum", "colnum", 2023796854), ys = new nd(null, "meta46527", "meta46527", 903617782, null), zs = new K(null, "OCTET", "OCTET", -743420682), 
As = new nd("undefined", "threw-error", "undefined/threw-error", -2085122794, null), Bs = new K(null, "severity", "severity", 175684886), Cs = new K(null, "info", "info", -317069002), Ds = new nd("cljs.core", "*print-readably*", "cljs.core/*print-readably*", -354670250, null), Es = new K(null, "__location__", "__location__", 1492829526), Fs = new K(null, "length", "length", 588987862), Gs = new nd(null, "loop", "loop", 1244978678, null), Hs = new K(null, "stack", "stack", -793405930), Is = new K(null, 
"epsilon", "epsilon", -730158570), Js = new nd(null, "lexical-cache-raml", "lexical-cache-raml", -325789162, null), Ks = new K(null, "stacktrace-fonts", "stacktrace-fonts", 830799382), Ls = new K(null, "continue-block", "continue-block", -1852047850), Ms = new K(null, "x-abstract-node", "x-abstract-node", 323829302), Ns = new K(null, "SCALAR_TYPE", "SCALAR_TYPE", -784669066), Os = new nd("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), Ps = new K(null, "overflowchar", "overflowchar", 
-1620088106), Qs = new K(null, "amf-lexical-token", "amf-lexical-token", -678900970), Rs = new K(null, "no-stacktrace?", "no-stacktrace?", 1701072694), Ss = new K(null, "content-type", "content-type", -508222634), Ts = new K("cljs.test", "default", "cljs.test/default", -1581405322), Us = new K(null, "exclusiveMinimum", "exclusiveMinimum", -869557322), Vs = new K(null, "reduction-type", "reduction-type", -488293450), Ws = new K(null, "x-merge", "x-merge", -223073322), Xs = new K(null, "wrapped-ast-token", 
"wrapped-ast-token", 1208240151), Ys = new K(null, "end-line", "end-line", 1837326455), Zs = new K(null, "rulelist", "rulelist", -1871218473), $s = new K(null, "SourceMap", "SourceMap", 1559238903), at = new K(null, "opt-whitespace", "opt-whitespace", 1115207927), bt = new nd(null, "condp", "condp", 1054325175, null), ct = new K(null, "timestamp_", "timestamp_", -954533417), dt = new K(null, "x-description", "x-description", 11346423), et = new K(null, "low", "low", -1601362409), ft = new K(null, 
"Parameter", "Parameter", 912770583), gt = new K(null, "right", "right", -452581833), ht = new K(null, "hours", "hours", 58380855), it = new K(null, "?data", "?data", -9471433), jt = new K(null, "colinc", "colinc", -584873385), kt = new K(null, "post", "post", 269697687), lt = new K(null, "focus", "focus", 234677911), mt = new K(null, "?line", "?line", -631853385), nt = new K(null, "begin-test-ns", "begin-test-ns", -1701237033), ot = new K(null, "supported-operations", "supported-operations", -2116656425), 
pt = new K(null, "years", "years", -1298579689), qt = new nd(null, "meta38398", "meta38398", -436438249, null), rt = new K(null, "maxLength", "maxLength", -1633020073), st = new nd(null, "cond", "cond", 1606708055, null), tt = new K(null, "repeat", "repeat", 832692087), ut = new K(null, "min-level", "min-level", 1634684919), vt = new K(null, "ALPHA", "ALPHA", -1463859144), wt = new K(null, "accepts", "accepts", 1429714104), xt = new K(null, "TYPE_EXPRESSION", "TYPE_EXPRESSION", 260003064), yt = new K(null, 
"optimize", "optimize", -1912349448), zt = new K(null, "both", "both", -393648840), At = new K(null, "d", "d", 1972142424), Bt = new K(null, "annotations", "annotations", 1640956248), Ct = new K(null, "swagger", "swagger", -79684232), Dt = new nd(null, "binding", "binding", -2114503176, null), Et = new nd(null, "update-reference-model*", "update-reference-model*", 832310808, null), Ft = new K(null, "next-stack", "next-stack", -481930728), Gt = new K(null, "error", "error", -978969032), Ht = new K(null, 
"annotationTypes", "annotationTypes", -5184968), It = new K(null, "base-uri", "base-uri", 18484824), Jt = new K(null, "x-response-payloads", "x-response-payloads", -1125770632), Kt = new K(null, "x-traits", "x-traits", 309801624), Lt = new nd(null, "with-local-vars", "with-local-vars", 837642072, null), Mt = new K(null, "def", "def", -1043430536), Nt = new nd(null, "defmacro", "defmacro", 2054157304, null), Ot = new K(null, "Response", "Response", -842236936), Pt = new K(null, "standard", "standard", 
-1769206695), Qt = new K(null, "console", "console", 1228072057), Rt = new K(null, "options", "options", 99638489), St = new nd(null, "set!", "set!", 250714521, null), Tt = new K(null, "clauses", "clauses", 1454841241), Ut = new K(null, "Type", "Type", -1483634215), Vt = new K(null, "indent-t", "indent-t", 528318969), Wt = new K(null, "x-fileTypes", "x-fileTypes", -738989543), Xt = new K(null, "tag", "tag", -1290361223), Yt = new K(null, "pass", "pass", 1574159993), Zt = new K(null, "x-baseUriParameters", 
"x-baseUriParameters", 1866984153), $t = new K(null, "document-generator", "document-generator", 988418841), au = new K(null, "hex-val", "hex-val", 1267737401), bu = new K(null, "anchor", "anchor", 1549638489), cu = new K(null, "domain", "domain", 1847214937), du = new nd("cljs.pprint", "*print-circle*", "cljs.pprint/*print-circle*", 1606185849, null), eu = new K(null, "linear", "linear", 872268697), fu = new K(null, "x-uniqueItems", "x-uniqueItems", -197577799), gu = new K(null, "seq", "seq", -1817803783), 
hu = new K(null, "target", "target", 253001721), iu = new nd(null, "locking", "locking", 1542862874, null), ju = new nd(null, ".", ".", 1975675962, null), ku = new nd(null, "*print-right-margin*", "*print-right-margin*", -437272454, null), lu = new K(null, "first", "first", -644103046), mu = new K(null, "put", "put", 1299772570), nu = new nd(null, "var", "var", 870848730, null), ou = new nd(null, "parsing-channel", "parsing-channel", 1912455418, null), pu = new K(null, "declarations", "declarations", 
1621100858), qu = new nd(null, "quote", "quote", 1377916282, null), ru = new K(null, "bracket-info", "bracket-info", -1600092774), su = new K(null, "set", "set", 304602554), tu = new K(null, "base-args", "base-args", -1268706822), uu = new K(null, "items", "items", 1031954938), vu = new K(null, "pretty", "pretty", -1916372486), wu = new nd(null, "lb", "lb", 950310490, null), xu = new K(null, "end", "end", -268185958), yu = new K(null, "logical-block-callback", "logical-block-callback", 1612691194), 
zu = new K(null, "CHAR", "CHAR", -1280338086), Au = new K(null, "base", "base", 185279322), Bu = new K(null, "termsOfService", "termsOfService", -1938050214), Cu = new K(null, "arglists", "arglists", 1661989754), Du = new K(null, "version", "version", 425292698), Eu = new K(null, "min-version", "min-version", -1697197126), Fu = new K(null, "query", "query", -1288509510), Gu = new nd(null, "if-let", "if-let", 1803593690, null), Hu = new K(null, "openapi", "openapi", 1860088859), Iu = new K(null, "raw-console?", 
"raw-console?", -2061489061), Ju = new K(null, "your-version", "your-version", -351781765), Ku = new nd(null, "id", "id", 252129435, null), Lu = new K(null, "local-ref", "local-ref", 561004699), Mu = new nd(null, "*print-readably*", "*print-readably*", -761361221, null), Nu = new K(null, "?meta", "?meta", -793560773), Ou = new K(null, "hierarchy", "hierarchy", -1053470341), Pu = new K(null, "actual", "actual", 107306363), Qu = new nd(null, "catch", "catch", -1616370245, null), Ru = new K(null, "buffer-level", 
"buffer-level", 928864731), Su = new K(null, "intra-block-nl", "intra-block-nl", 1808826875), Tu = new K(null, "form-str", "form-str", 871608859), Uu = new K(null, "body", "body", -2049205669), Vu = new K(null, "separator", "separator", -1628749125), Wu = new K(null, "flags", "flags", 1775418075), Oi = new K(null, "alt-impl", "alt-impl", 670969595), Xu = new K(null, "parsed-location", "parsed-location", 1396479835), Yu = new nd(null, "writer", "writer", 1362963291, null), Zu = new K(null, "ms", "ms", 
-1152709733), $u = new K(null, "$ref", "$ref", 841290683), av = new K(null, "doc", "doc", 1913296891), bv = new K(null, "directive", "directive", 793559132), cv = new K(null, "logical-block", "logical-block", -581022564), dv = new K(null, "abnf", "abnf", -152462052), ev = new K(null, "location", "location", 1815599388), fv = new K(null, "of", "of", -2075414212), gv = new K(null, "inclusion", "inclusion", 1758170492), hv = new K(null, "last", "last", 1105735132), iv = new K(null, "parameters", "parameters", 
-1229919748), jv = new nd(null, "expr__52187", "expr__52187", -1018666468, null), kv = new K(null, "provider", "provider", -302056900), lv = new K(null, "contact", "contact", 609093372), jj = new K(null, "keywordize-keys", "keywordize-keys", 1310784252), mv = new K(null, "jsdoc", "jsdoc", 1745183516), nv = new nd("cljs.pprint", "*print-lines*", "cljs.pprint/*print-lines*", 534683484, null), ov = new K(null, "children-id", "children-id", -1377926115), pv = new K(null, "baseUriParameters", "baseUriParameters", 
-1768318947), qv = new K(null, "end-test-ns", "end-test-ns", 1620675645), rv = new K(null, "x-request-payloads", "x-request-payloads", 2091605117), sv = new K(null, "up-arrow", "up-arrow", 1705310333), tv = new K(null, "BIT", "BIT", -1854474115), uv = new K(null, "parsers", "parsers", -804353827), vv = new K(null, "listeners", "listeners", 394544445), wv = new K(null, "string-ci", "string-ci", 374631805), xv = new K(null, "type-tag", "type-tag", -1873863267), yv = new K(null, "weeks", "weeks", 1844596125), 
zv = new nd(null, "meta45951", "meta45951", -1330715203, null), Av = new K(null, "map", "map", 1371690461), Bv = new K(null, "auto-whitespace", "auto-whitespace", 741152317), Cv = new K(null, "scheme", "scheme", 90199613), Dv = new K(null, "object", "object", 1474613949), Ev = new K(null, "min-remaining", "min-remaining", 962687677), Fv = new K(null, "test", "test", 577538877), Gv = new K(null, "rest", "rest", -1241696419), Hv = new K(null, "char-range", "char-range", 1443391389), Iv = new K(null, 
"async?", "async?", 1523057758), Jv = new K(null, "dec-char", "dec-char", -646625154), Kv = new nd(null, "throw", "throw", 595905694, null), Lv = new K(null, "arg1", "arg1", 951899358), Mv = new K(null, "required", "required", 1807647006), Nv = new K(null, "APIDocumentation", "APIDocumentation", -1265158850), Ov = new K(null, "nl-t", "nl-t", -1608382114), Pv = new K(null, "buffer", "buffer", 617295198), Qv = new K(null, "start-pos", "start-pos", 668789086), Rv = new K(null, "all-resources", "all-resources", 
1389054398), Sv = new K(null, "hi", "hi", -1821422114), Tv = new K(null, "maxItems", "maxItems", 576652798), Uv = new K(null, "max-columns", "max-columns", 1742323262), Vv = new K(null, "conforms", "conforms", 1167083070), Wv = new K(null, "appenders", "appenders", 1245583998), Xv = new K(null, "char", "char", -641587586), Yv = new K(null, "start-block-t", "start-block-t", -373430594), Zv = new K(null, "operationId", "operationId", -1797978402), $v = new K(null, "Document", "Document", -1429967106), 
aw = new K(null, "exponentchar", "exponentchar", 1986664222), bw = new K(null, "message", "message", -406056002), cw = new K(null, "raml-expression", "raml-expression", -1252198466), dw = new K(null, "range", "range", 1639692286), ew = new K(null, "end-block-t", "end-block-t", 1544648735), fw = new K(null, "in", "in", -1531184865), gw = new K(null, "media-type", "media-type", -764436129), hw = new K(null, "pattern", "pattern", 242135423), iw = new nd(null, "def", "def", 597100991, null), jw = new K(null, 
"opt", "opt", -794706369), kw = new K(null, "baseUri", "baseUri", 984587871), lw = new K(null, "text", "text", -1790561697), mw = new nd(null, "*print-base*", "*print-base*", 2037937791, null), nw = new K(null, "protocols?", "protocols?", -143647009), ow = new K(null, "data", "data", -232669377), pw = new nd(null, "f", "f", 43394975, null), qw = new K(null, "commachar", "commachar", 652859327), rw = new K(null, "basePath", "basePath", -169642017), sw = new K(null, "traits", "traits", 1778193407), 
tw = new nd(null, "meta46573", "meta46573", 1717737471, null), uw = new K(null, "end-test-vars", "end-test-vars", -1394419713), vw = new K(null, "results", "results", -1134170113);
var ww, xw = function xw(a) {
  if (null != a && null != a.Ye) {
    return a.Ye();
  }
  var c = xw[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = xw._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Channel.close!", a);
}, yw = function yw(a) {
  if (null != a && null != a.pg) {
    return !0;
  }
  var c = yw[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = yw._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Handler.active?", a);
}, zw = function zw(a) {
  if (null != a && null != a.qg) {
    return a.Bb;
  }
  var c = zw[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = zw._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Handler.commit", a);
}, Aw = function Aw(a, c) {
  if (null != a && null != a.og) {
    return a.og(0, c);
  }
  var d = Aw[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = Aw._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("Buffer.add!*", a);
}, Bw = function Bw(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 1:
      return Bw.b(arguments[0]);
    case 2:
      return Bw.a(arguments[0], arguments[1]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
Bw.b = function(b) {
  return b;
};
Bw.a = function(b, a) {
  if (null == a) {
    throw Error("Assert failed: (not (nil? itm))");
  }
  return Aw(b, a);
};
Bw.N = 2;
function Cw(b, a, c, d, e) {
  for (var f = 0;;) {
    if (f < e) {
      c[d + f] = b[a + f], f += 1;
    } else {
      break;
    }
  }
}
function Dw(b, a, c, d) {
  this.head = b;
  this.za = a;
  this.length = c;
  this.A = d;
}
Dw.prototype.pop = function() {
  if (0 === this.length) {
    return null;
  }
  var b = this.A[this.za];
  this.A[this.za] = null;
  this.za = (this.za + 1) % this.A.length;
  --this.length;
  return b;
};
Dw.prototype.unshift = function(b) {
  this.A[this.head] = b;
  this.head = (this.head + 1) % this.A.length;
  this.length += 1;
  return null;
};
function Ew(b, a) {
  b.length + 1 === b.A.length && b.resize();
  b.unshift(a);
}
Dw.prototype.resize = function() {
  var b = Array(2 * this.A.length);
  return this.za < this.head ? (Cw(this.A, this.za, b, 0, this.length), this.za = 0, this.head = this.length, this.A = b) : this.za > this.head ? (Cw(this.A, this.za, b, 0, this.A.length - this.za), Cw(this.A, 0, b, this.A.length - this.za, this.head), this.za = 0, this.head = this.length, this.A = b) : this.za === this.head ? (this.head = this.za = 0, this.A = b) : null;
};
function Fw(b, a) {
  for (var c = b.length, d = 0;;) {
    if (d < c) {
      var e = b.pop();
      (a.b ? a.b(e) : a.call(null, e)) && b.unshift(e);
      d += 1;
    } else {
      break;
    }
  }
}
function Gw(b) {
  if (!(0 < b)) {
    throw Error([q("Assert failed: "), q("Can't create a ring buffer of size 0"), q("\n"), q("(\x3e n 0)")].join(""));
  }
  return new Dw(0, 0, 0, Array(b));
}
function Hw(b, a) {
  this.wa = b;
  this.n = a;
  this.l = 2;
  this.M = 0;
}
function Iw(b) {
  return b.wa.length === b.n;
}
Hw.prototype.og = function(b, a) {
  Ew(this.wa, a);
  return this;
};
Hw.prototype.$ = function() {
  return this.wa.length;
};
if ("undefined" === typeof Jw) {
  var Jw = {}
}
;var Kw;
a: {
  var Lw = aa.navigator;
  if (Lw) {
    var Mw = Lw.userAgent;
    if (Mw) {
      Kw = Mw;
      break a;
    }
  }
  Kw = "";
}
function Nw(b) {
  return -1 != Kw.indexOf(b);
}
;var Ow;
function Pw() {
  var b = aa.MessageChannel;
  "undefined" === typeof b && "undefined" !== typeof window && window.postMessage && window.addEventListener && !Nw("Presto") && (b = function() {
    var a = document.createElement("IFRAME");
    a.style.display = "none";
    a.src = "";
    document.documentElement.appendChild(a);
    var b = a.contentWindow, a = b.document;
    a.open();
    a.write("");
    a.close();
    var c = "callImmediate" + Math.random(), d = "file:" == b.location.protocol ? "*" : b.location.protocol + "//" + b.location.host, a = ka(function(a) {
      if (("*" == d || a.origin == d) && a.data == c) {
        this.port1.onmessage();
      }
    }, this);
    b.addEventListener("message", a, !1);
    this.port1 = {};
    this.port2 = {postMessage:function() {
      b.postMessage(c, d);
    }};
  });
  if ("undefined" !== typeof b && !Nw("Trident") && !Nw("MSIE")) {
    var a = new b, c = {}, d = c;
    a.port1.onmessage = function() {
      if (void 0 !== c.next) {
        c = c.next;
        var a = c.fg;
        c.fg = null;
        a();
      }
    };
    return function(b) {
      d.next = {fg:b};
      d = d.next;
      a.port2.postMessage(0);
    };
  }
  return "undefined" !== typeof document && "onreadystatechange" in document.createElement("SCRIPT") ? function(a) {
    var b = document.createElement("SCRIPT");
    b.onreadystatechange = function() {
      b.onreadystatechange = null;
      b.parentNode.removeChild(b);
      b = null;
      a();
      a = null;
    };
    document.documentElement.appendChild(b);
  } : function(a) {
    aa.setTimeout(a, 0);
  };
}
;var Qw = Gw(32), Rw = !1, Sw = !1;
function Tw() {
  Rw = !0;
  Sw = !1;
  for (var b = 0;;) {
    var a = Qw.pop();
    if (null != a && (a.o ? a.o() : a.call(null), 1024 > b)) {
      b += 1;
      continue;
    }
    break;
  }
  Rw = !1;
  return 0 < Qw.length ? Uw.o ? Uw.o() : Uw.call(null) : null;
}
function Uw() {
  var b = Sw;
  if (m(m(b) ? Rw : b)) {
    return null;
  }
  Sw = !0;
  !ea(aa.setImmediate) || aa.Window && aa.Window.prototype && !Nw("Edge") && aa.Window.prototype.setImmediate == aa.setImmediate ? (Ow || (Ow = Pw()), Ow(Tw)) : aa.setImmediate(Tw);
}
function Vw(b) {
  Ew(Qw, b);
  Uw();
}
;var Ww;
function Xw(b) {
  "undefined" === typeof Ww && (Ww = function(a, b) {
    this.w = a;
    this.Ch = b;
    this.l = 425984;
    this.M = 0;
  }, Ww.prototype.U = function(a, b) {
    return new Ww(this.w, b);
  }, Ww.prototype.S = function() {
    return this.Ch;
  }, Ww.prototype.cd = function() {
    return this.w;
  }, Ww.yc = function() {
    return new Q(null, 2, 5, R, [qr, qt], null);
  }, Ww.nc = !0, Ww.Xb = "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels38397", Ww.rc = function(a, b) {
    return Ac(b, "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels38397");
  });
  return new Ww(b, S);
}
function Yw(b, a) {
  this.re = b;
  this.w = a;
}
function Zw(b) {
  return yw(b.re);
}
var $w = function $w(a) {
  if (null != a && null != a.ng) {
    return a.ng();
  }
  var c = $w[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = $w._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("MMC.abort", a);
};
function ax(b, a, c, d, e, f, g) {
  this.Sd = b;
  this.$e = a;
  this.Ed = c;
  this.Ze = d;
  this.wa = e;
  this.closed = f;
  this.qc = g;
}
ax.prototype.ng = function() {
  for (;;) {
    var b = this.Ed.pop();
    if (null != b) {
      var a = b.re;
      Vw(function(a) {
        return function() {
          return a.b ? a.b(!0) : a.call(null, !0);
        };
      }(a.Bb, a, b.w, b, this));
    }
    break;
  }
  Fw(this.Ed, Ff(!1));
  return xw(this);
};
function bx(b, a, c) {
  if (null == a) {
    throw Error([q("Assert failed: "), q("Can't put nil in on a channel"), q("\n"), q("(not (nil? val))")].join(""));
  }
  var d = b.closed;
  if (d) {
    return Xw(!d);
  }
  if (m(function() {
    var a = b.wa;
    return m(a) ? rb(Iw(b.wa)) : a;
  }())) {
    for (var e = Ed(b.qc.a ? b.qc.a(b.wa, a) : b.qc.call(null, b.wa, a));;) {
      if (0 < b.Sd.length && 0 < B(b.wa)) {
        c = b.Sd.pop();
        var f = c.Bb, g = b.wa.wa.pop();
        Vw(function(a, b) {
          return function() {
            return a.b ? a.b(b) : a.call(null, b);
          };
        }(f, g, c, e, d, b));
      }
      break;
    }
    e && $w(b);
    return Xw(!0);
  }
  e = function() {
    for (;;) {
      var a = b.Sd.pop();
      if (m(a)) {
        if (m(!0)) {
          return a;
        }
      } else {
        return null;
      }
    }
  }();
  if (m(e)) {
    return c = zw(e), Vw(function(b) {
      return function() {
        return b.b ? b.b(a) : b.call(null, a);
      };
    }(c, e, d, b)), Xw(!0);
  }
  64 < b.Ze ? (b.Ze = 0, Fw(b.Ed, Zw)) : b.Ze += 1;
  if (m(c.uf(null))) {
    if (!(1024 > b.Ed.length)) {
      throw Error([q("Assert failed: "), q([q("No more than "), q(1024), q(" pending puts are allowed on a single channel."), q(" Consider using a windowed buffer.")].join("")), q("\n"), q("(\x3c (.-length puts) impl/MAX-QUEUE-SIZE)")].join(""));
    }
    Ew(b.Ed, new Yw(c, a));
  }
  return null;
}
function cx(b, a) {
  if (null != b.wa && 0 < B(b.wa)) {
    for (var c = a.Bb, d = Xw(b.wa.wa.pop());;) {
      if (!m(Iw(b.wa))) {
        var e = b.Ed.pop();
        if (null != e) {
          var f = e.re, g = e.w;
          Vw(function(a) {
            return function() {
              return a.b ? a.b(!0) : a.call(null, !0);
            };
          }(f.Bb, f, g, e, c, d, b));
          Ed(b.qc.a ? b.qc.a(b.wa, g) : b.qc.call(null, b.wa, g)) && $w(b);
          continue;
        }
      }
      break;
    }
    return d;
  }
  c = function() {
    for (;;) {
      var a = b.Ed.pop();
      if (m(a)) {
        if (yw(a.re)) {
          return a;
        }
      } else {
        return null;
      }
    }
  }();
  if (m(c)) {
    return d = zw(c.re), Vw(function(a) {
      return function() {
        return a.b ? a.b(!0) : a.call(null, !0);
      };
    }(d, c, b)), Xw(c.w);
  }
  if (m(b.closed)) {
    return m(b.wa) && (b.qc.b ? b.qc.b(b.wa) : b.qc.call(null, b.wa)), m(m(!0) ? a.Bb : !0) ? (c = function() {
      var a = b.wa;
      return m(a) ? 0 < B(b.wa) : a;
    }(), c = m(c) ? b.wa.wa.pop() : null, Xw(c)) : null;
  }
  64 < b.$e ? (b.$e = 0, Fw(b.Sd, yw)) : b.$e += 1;
  if (m(a.uf(null))) {
    if (!(1024 > b.Sd.length)) {
      throw Error([q("Assert failed: "), q([q("No more than "), q(1024), q(" pending takes are allowed on a single channel.")].join("")), q("\n"), q("(\x3c (.-length takes) impl/MAX-QUEUE-SIZE)")].join(""));
    }
    Ew(b.Sd, a);
  }
  return null;
}
ax.prototype.Ye = function() {
  var b = this;
  if (!b.closed) {
    for (b.closed = !0, m(function() {
      var a = b.wa;
      return m(a) ? 0 === b.Ed.length : a;
    }()) && (b.qc.b ? b.qc.b(b.wa) : b.qc.call(null, b.wa));;) {
      var a = b.Sd.pop();
      if (null != a) {
        var c = a.Bb, d = m(function() {
          var a = b.wa;
          return m(a) ? 0 < B(b.wa) : a;
        }()) ? b.wa.wa.pop() : null;
        Vw(function(a, b) {
          return function() {
            return a.b ? a.b(b) : a.call(null, b);
          };
        }(c, d, a, this));
      } else {
        break;
      }
    }
  }
  return null;
};
function dx(b) {
  console.log(b);
  return null;
}
function ex(b, a) {
  var c = (m(null) ? null : dx).call(null, a);
  return null == c ? b : Bw.a(b, c);
}
function fx(b) {
  return new ax(Gw(32), 0, Gw(32), 0, b, !1, function() {
    return function(a) {
      return function() {
        function b(b, c) {
          try {
            return a.a ? a.a(b, c) : a.call(null, b, c);
          } catch (n) {
            return ex(b, n);
          }
        }
        function d(b) {
          try {
            return a.b ? a.b(b) : a.call(null, b);
          } catch (g) {
            return ex(b, g);
          }
        }
        var e = null, e = function(a, c) {
          switch(arguments.length) {
            case 1:
              return d.call(this, a);
            case 2:
              return b.call(this, a, c);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        e.b = d;
        e.a = b;
        return e;
      }();
    }(m(null) ? null.b ? null.b(Bw) : null.call(null, Bw) : Bw);
  }());
}
;var gx;
function hx(b) {
  "undefined" === typeof gx && (gx = function(a, b) {
    this.Bb = a;
    this.Dh = b;
    this.l = 393216;
    this.M = 0;
  }, gx.prototype.U = function(a, b) {
    return new gx(this.Bb, b);
  }, gx.prototype.S = function() {
    return this.Dh;
  }, gx.prototype.pg = function() {
    return !0;
  }, gx.prototype.uf = function() {
    return !0;
  }, gx.prototype.qg = function() {
    return this.Bb;
  }, gx.yc = function() {
    return new Q(null, 2, 5, R, [pw, nl], null);
  }, gx.nc = !0, gx.Xb = "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers39322", gx.rc = function(a, b) {
    return Ac(b, "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers39322");
  });
  return new gx(b, S);
}
function ix(b) {
  try {
    return b[0].call(null, b);
  } catch (a) {
    throw a instanceof Object && b[6].Ye(), a;
  }
}
function jx(b, a, c) {
  c = cx(c, hx(function(c) {
    b[2] = c;
    b[1] = a;
    return ix(b);
  }));
  return m(c) ? (b[2] = A.b ? A.b(c) : A.call(null, c), b[1] = a, X) : null;
}
function kx(b, a, c, d) {
  c = bx(c, d, hx(function(c) {
    b[2] = c;
    b[1] = a;
    return ix(b);
  }));
  return m(c) ? (b[2] = A.b ? A.b(c) : A.call(null, c), b[1] = a, X) : null;
}
function lx(b, a) {
  var c = b[6];
  null != a && bx(c, a, hx(function() {
    return function() {
      return null;
    };
  }(c)));
  c.Ye();
  return c;
}
function mx(b, a, c, d, e, f, g, n) {
  this.Ic = b;
  this.Jc = a;
  this.Qc = c;
  this.Oc = d;
  this.Vc = e;
  this.h = f;
  this.g = g;
  this.m = n;
  this.l = 2229667594;
  this.M = 8192;
}
h = mx.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "catch-block":
      return this.Ic;
    case "catch-exception":
      return this.Jc;
    case "finally-block":
      return this.Qc;
    case "continue-block":
      return this.Oc;
    case "prev":
      return this.Vc;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", c, N.a(new Q(null, 5, 5, R, [new Q(null, 2, 5, R, [zo, this.Ic], null), new Q(null, 2, 5, R, [es, this.Jc], null), new Q(null, 2, 5, R, [Dm, this.Qc], null), new Q(null, 2, 5, R, [Ls, this.Oc], null), new Q(null, 2, 5, R, [vs, this.Vc], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 5, new Q(null, 5, 5, R, [zo, es, Dm, Ls, vs], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 5 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 5, [Dm, null, zo, null, es, null, vs, null, Ls, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new mx(this.Ic, this.Jc, this.Qc, this.Oc, this.Vc, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(zo, a) : L.call(null, zo, a)) ? new mx(c, this.Jc, this.Qc, this.Oc, this.Vc, this.h, this.g, null) : m(L.a ? L.a(es, a) : L.call(null, es, a)) ? new mx(this.Ic, c, this.Qc, this.Oc, this.Vc, this.h, this.g, null) : m(L.a ? L.a(Dm, a) : L.call(null, Dm, a)) ? new mx(this.Ic, this.Jc, c, this.Oc, this.Vc, this.h, this.g, null) : m(L.a ? L.a(Ls, a) : L.call(null, Ls, a)) ? new mx(this.Ic, this.Jc, this.Qc, c, this.Vc, this.h, this.g, null) : m(L.a ? L.a(vs, a) : L.call(null, vs, 
  a)) ? new mx(this.Ic, this.Jc, this.Qc, this.Oc, c, this.h, this.g, null) : new mx(this.Ic, this.Jc, this.Qc, this.Oc, this.Vc, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 5, 5, R, [new Q(null, 2, 5, R, [zo, this.Ic], null), new Q(null, 2, 5, R, [es, this.Jc], null), new Q(null, 2, 5, R, [Dm, this.Qc], null), new Q(null, 2, 5, R, [Ls, this.Oc], null), new Q(null, 2, 5, R, [vs, this.Vc], null)], null), this.g));
};
h.U = function(b, a) {
  return new mx(this.Ic, this.Jc, this.Qc, this.Oc, this.Vc, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
function nx(b, a, c) {
  b[4] = new mx(a, Error, null, c, b[4], null, null, null);
}
function ox(b) {
  for (;;) {
    var a = b[4], c = zo.b(a), d = es.b(a), e = b[5];
    if (m(function() {
      var b = e;
      return m(b) ? rb(a) : b;
    }())) {
      throw e;
    }
    if (m(function() {
      var a = e;
      return m(a) ? (a = c, m(a) ? v.a(Cm, d) || e instanceof d : a) : a;
    }())) {
      b[1] = c;
      b[2] = e;
      b[5] = null;
      b[4] = I.j(a, zo, null, C([es, null], 0));
      break;
    }
    if (m(function() {
      var b = e;
      return m(b) ? rb(c) && rb(Dm.b(a)) : b;
    }())) {
      b[4] = vs.b(a);
    } else {
      if (m(function() {
        var b = e;
        return m(b) ? (b = rb(c)) ? Dm.b(a) : b : b;
      }())) {
        b[1] = Dm.b(a);
        b[4] = I.c(a, Dm, null);
        break;
      }
      if (m(function() {
        var b = rb(e);
        return b ? Dm.b(a) : b;
      }())) {
        b[1] = Dm.b(a);
        b[4] = I.c(a, Dm, null);
        break;
      }
      if (rb(e) && rb(Dm.b(a))) {
        b[1] = Ls.b(a);
        b[4] = vs.b(a);
        break;
      }
      throw Error("No matching clause");
    }
  }
}
;for (var px = Array(1), qx = 0;;) {
  if (qx < px.length) {
    px[qx] = null, qx += 1;
  } else {
    break;
  }
}
;function rx(b) {
  b = v.a(b, 0) ? null : b;
  if (m(null) && !m(b)) {
    throw Error([q("Assert failed: "), q("buffer must be supplied when transducer is"), q("\n"), q("buf-or-n")].join(""));
  }
  b = "number" === typeof b ? new Hw(Gw(b), b) : b;
  return fx(b);
}
(function(b) {
  "undefined" === typeof ww && (ww = function(a, b, d) {
    this.Bb = a;
    this.dg = b;
    this.Eh = d;
    this.l = 393216;
    this.M = 0;
  }, ww.prototype.U = function(a, b) {
    return new ww(this.Bb, this.dg, b);
  }, ww.prototype.S = function() {
    return this.Eh;
  }, ww.prototype.pg = function() {
    return !0;
  }, ww.prototype.uf = function() {
    return this.dg;
  }, ww.prototype.qg = function() {
    return this.Bb;
  }, ww.yc = function() {
    return new Q(null, 3, 5, R, [pw, pl, bq], null);
  }, ww.nc = !0, ww.Xb = "cljs.core.async/t_cljs$core$async39478", ww.rc = function(a, b) {
    return Ac(b, "cljs.core.async/t_cljs$core$async39478");
  });
  return new ww(b, !0, S);
})(function() {
  return null;
});
function sx() {
}
var tx = function tx(a) {
  if (null != a && null != a.Da) {
    return a.Da(a);
  }
  var c = tx[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = tx._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Node.id", a);
}, ux = function ux(a) {
  if (null != a && null != a.Ea) {
    return a.Ea(a);
  }
  var c = ux[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = ux._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Node.name", a);
}, vx = function vx(a) {
  if (null != a && null != a.Ca) {
    return a.Ca(a);
  }
  var c = vx[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = vx._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Node.description", a);
}, wx = function wx(a) {
  if (null != a && null != a.Ja) {
    return a.Ja(a);
  }
  var c = wx[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = wx._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Node.sources", a);
};
function xx(b) {
  if (null != b && null != b.Ia) {
    return b.Ia(b);
  }
  var a = xx[ba(null == b ? null : b)];
  if (null != a) {
    return a.b ? a.b(b) : a.call(null, b);
  }
  a = xx._;
  if (null != a) {
    return a.b ? a.b(b) : a.call(null, b);
  }
  throw ub("Node.extends", b);
}
var yx = function yx(a) {
  if (null != a && null != a.Ha) {
    return a.Ha(a);
  }
  var c = yx[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = yx._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Node.additional-properties", a);
};
function zx() {
}
function Ax(b) {
  if (null != b && null != b.Uf) {
    return b.Uf();
  }
  var a = Ax[ba(null == b ? null : b)];
  if (null != a) {
    return a.b ? a.b(b) : a.call(null, b);
  }
  a = Ax._;
  if (null != a) {
    return a.b ? a.b(b) : a.call(null, b);
  }
  throw ub("Extends.arguments", b);
}
function Bx() {
}
var Cx = function Cx(a) {
  if (null != a && null != a.Xf) {
    return a.target;
  }
  var c = Cx[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Cx._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Includes.target", a);
}, Dx = function Dx(a) {
  if (null != a && null != a.Wf) {
    return a.label;
  }
  var c = Dx[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Dx._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Includes.label", a);
};
function Ex(b) {
  return null != b ? k === b.sd ? !0 : b.L ? !1 : p(Bx, b) : p(Bx, b);
}
function Fx(b, a, c, d, e, f, g, n, r, u, y) {
  this.id = b;
  this.name = a;
  this.description = c;
  this.B = d;
  this.v = e;
  this.target = f;
  this.label = g;
  this.ic = n;
  this.h = r;
  this.g = u;
  this.m = y;
  this.l = 2229667594;
  this.M = 8192;
}
h = Fx.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "name":
      return this.name;
    case "description":
      return this.description;
    case "sources":
      return this.B;
    case "additional-properties":
      return this.v;
    case "target":
      return this.target;
    case "label":
      return this.label;
    case "arguments":
      return this.ic;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.ParsedExtends{", ", ", "}", c, N.a(new Q(null, 8, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [hu, this.target], null), new Q(null, 2, 5, R, [Tr, this.label], null), new Q(null, 2, 5, R, [Am, this.ic], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 8, new Q(null, 8, 5, R, [Z, W, Hj, Rm, Ur, hu, Tr, Am], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 8 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 8, [Hj, null, Am, null, Rm, null, W, null, Tr, null, Ur, null, Z, null, hu, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new Fx(this.id, this.name, this.description, this.B, this.v, this.target, this.label, this.ic, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new Fx(c, this.name, this.description, this.B, this.v, this.target, this.label, this.ic, this.h, this.g, null) : m(L.a ? L.a(W, a) : L.call(null, W, a)) ? new Fx(this.id, c, this.description, this.B, this.v, this.target, this.label, this.ic, this.h, this.g, null) : m(L.a ? L.a(Hj, a) : L.call(null, Hj, a)) ? new Fx(this.id, this.name, c, this.B, this.v, this.target, this.label, this.ic, this.h, this.g, null) : m(L.a ? L.a(Rm, a) : L.call(null, Rm, 
  a)) ? new Fx(this.id, this.name, this.description, c, this.v, this.target, this.label, this.ic, this.h, this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new Fx(this.id, this.name, this.description, this.B, c, this.target, this.label, this.ic, this.h, this.g, null) : m(L.a ? L.a(hu, a) : L.call(null, hu, a)) ? new Fx(this.id, this.name, this.description, this.B, this.v, c, this.label, this.ic, this.h, this.g, null) : m(L.a ? L.a(Tr, a) : L.call(null, Tr, a)) ? new Fx(this.id, this.name, 
  this.description, this.B, this.v, this.target, c, this.ic, this.h, this.g, null) : m(L.a ? L.a(Am, a) : L.call(null, Am, a)) ? new Fx(this.id, this.name, this.description, this.B, this.v, this.target, this.label, c, this.h, this.g, null) : new Fx(this.id, this.name, this.description, this.B, this.v, this.target, this.label, this.ic, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 8, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [hu, this.target], null), new Q(null, 2, 5, R, [Tr, this.label], null), new Q(null, 2, 5, R, [Am, this.ic], null)], null), this.g));
};
h.sd = k;
h.Xf = function() {
  return this.target;
};
h.Wf = function() {
  return this.label;
};
h.U = function(b, a) {
  return new Fx(this.id, this.name, this.description, this.B, this.v, this.target, this.label, this.ic, a, this.g, this.m);
};
h.Tf = k;
h.Uf = function() {
  var b = this.ic;
  return m(b) ? b : E;
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return this.name;
};
h.Ca = function() {
  return this.description;
};
h.Ja = function() {
  return this.B;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function Gx(b) {
  return new Fx(Z.b(b), W.b(b), Hj.b(b), Rm.b(b), Ur.b(b), hu.b(b), Tr.b(b), Am.b(b), null, J.j(b, Z, C([W, Hj, Rm, Ur, hu, Tr, Am], 0)), null);
}
function Hx(b, a, c, d, e, f, g, n, r, u) {
  this.id = b;
  this.name = a;
  this.description = c;
  this.B = d;
  this.v = e;
  this.target = f;
  this.label = g;
  this.h = n;
  this.g = r;
  this.m = u;
  this.l = 2229667594;
  this.M = 8192;
}
h = Hx.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "name":
      return this.name;
    case "description":
      return this.description;
    case "sources":
      return this.B;
    case "additional-properties":
      return this.v;
    case "target":
      return this.target;
    case "label":
      return this.label;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.ParsedIncludes{", ", ", "}", c, N.a(new Q(null, 7, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [hu, this.target], null), new Q(null, 2, 5, R, [Tr, this.label], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 7, new Q(null, 7, 5, R, [Z, W, Hj, Rm, Ur, hu, Tr], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 7 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 7, [Hj, null, Rm, null, W, null, Tr, null, Ur, null, Z, null, hu, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new Hx(this.id, this.name, this.description, this.B, this.v, this.target, this.label, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new Hx(c, this.name, this.description, this.B, this.v, this.target, this.label, this.h, this.g, null) : m(L.a ? L.a(W, a) : L.call(null, W, a)) ? new Hx(this.id, c, this.description, this.B, this.v, this.target, this.label, this.h, this.g, null) : m(L.a ? L.a(Hj, a) : L.call(null, Hj, a)) ? new Hx(this.id, this.name, c, this.B, this.v, this.target, this.label, this.h, this.g, null) : m(L.a ? L.a(Rm, a) : L.call(null, Rm, a)) ? new Hx(this.id, this.name, 
  this.description, c, this.v, this.target, this.label, this.h, this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new Hx(this.id, this.name, this.description, this.B, c, this.target, this.label, this.h, this.g, null) : m(L.a ? L.a(hu, a) : L.call(null, hu, a)) ? new Hx(this.id, this.name, this.description, this.B, this.v, c, this.label, this.h, this.g, null) : m(L.a ? L.a(Tr, a) : L.call(null, Tr, a)) ? new Hx(this.id, this.name, this.description, this.B, this.v, this.target, c, this.h, 
  this.g, null) : new Hx(this.id, this.name, this.description, this.B, this.v, this.target, this.label, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 7, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [hu, this.target], null), new Q(null, 2, 5, R, [Tr, this.label], null)], null), this.g));
};
h.sd = k;
h.Xf = function() {
  return this.target;
};
h.Wf = function() {
  return this.label;
};
h.U = function(b, a) {
  return new Hx(this.id, this.name, this.description, this.B, this.v, this.target, this.label, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return this.name;
};
h.Ca = function() {
  return this.description;
};
h.Ja = function() {
  return this.B;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function Ix(b) {
  return new Hx(Z.b(b), W.b(b), Hj.b(b), Rm.b(b), Ur.b(b), hu.b(b), Tr.b(b), null, J.j(b, Z, C([W, Hj, Rm, Ur, hu, Tr], 0)), null);
}
function Jx() {
}
var Kx = function Kx(a) {
  if (null != a && null != a.Hg) {
    return a.source;
  }
  var c = Kx[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Kx._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("SourceMap.source", a);
}, Lx = function Lx(a) {
  if (null != a && null != a.Ig) {
    return a.Hc;
  }
  var c = Lx[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Lx._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("SourceMap.tags", a);
};
function Mx(b, a, c, d, e, f, g) {
  this.id = b;
  this.source = a;
  this.Hc = c;
  this.v = d;
  this.h = e;
  this.g = f;
  this.m = g;
  this.l = 2229667594;
  this.M = 8192;
}
h = Mx.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "source":
      return this.source;
    case "tags":
      return this.Hc;
    case "additional-properties":
      return this.v;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.DocumentSourceMap{", ", ", "}", c, N.a(new Q(null, 4, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Ro, this.source], null), new Q(null, 2, 5, R, [ck, this.Hc], null), new Q(null, 2, 5, R, [Ur, this.v], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 4, new Q(null, 4, 5, R, [Z, Ro, ck, Ur], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 4 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 4, [ck, null, Ro, null, Ur, null, Z, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new Mx(this.id, this.source, this.Hc, this.v, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new Mx(c, this.source, this.Hc, this.v, this.h, this.g, null) : m(L.a ? L.a(Ro, a) : L.call(null, Ro, a)) ? new Mx(this.id, c, this.Hc, this.v, this.h, this.g, null) : m(L.a ? L.a(ck, a) : L.call(null, ck, a)) ? new Mx(this.id, this.source, c, this.v, this.h, this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new Mx(this.id, this.source, this.Hc, c, this.h, this.g, null) : new Mx(this.id, this.source, this.Hc, this.v, this.h, I.c(this.g, 
  a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 4, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Ro, this.source], null), new Q(null, 2, 5, R, [ck, this.Hc], null), new Q(null, 2, 5, R, [Ur, this.v], null)], null), this.g));
};
h.U = function(b, a) {
  return new Mx(this.id, this.source, this.Hc, this.v, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.Gg = k;
h.Hg = function() {
  return this.source;
};
h.Ig = function() {
  return this.Hc;
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "Document source map";
};
h.Ca = function() {
  return [q("Source map for a document located at "), q(this.source)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  var b = this.v;
  return m(b) ? b : E;
};
function Nx(b, a, c) {
  return new Mx(b, a, c, E, null, null, null);
}
function Ox() {
}
var Px = function Px(a) {
  if (null != a && null != a.Ob) {
    return a.Ob(a);
  }
  var c = Px[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Px._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Tag.tag-id", a);
}, Qx = function Qx(a) {
  if (null != a && null != a.Pb) {
    return a.Pb(a);
  }
  var c = Qx[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Qx._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Tag.value", a);
};
function Rx(b, a) {
  var c = function() {
    var a = Rm.b(b);
    if (m(a)) {
      return a;
    }
    try {
      return wx(b);
    } catch (e) {
      if (e instanceof Error) {
        return null;
      }
      throw e;
    }
  }();
  return null != c ? cg(sb, fg(cg(function() {
    return function(b) {
      return v.a(a, Px(b));
    };
  }(c), fg(Tf.a(Lx, c))))) : E;
}
function Sx(b, a, c) {
  var d = function() {
    var a = Rm.b(b);
    if (m(a)) {
      return a;
    }
    try {
      return wx(b);
    } catch (g) {
      if (g instanceof Error) {
        return null;
      }
      throw g;
    }
  }();
  if (null != d) {
    var e = function() {
      for (var b = d, e = E;;) {
        if (le(b)) {
          return e;
        }
        var n = x(b), r = Px(a), n = I.c(n, ck, hg(function(a, b, d, e) {
          return function(a) {
            return v.a(e, Px(a)) ? c : a;
          };
        }(b, e, n, r, d), Lx(n))), b = sd(b), e = ce.a(e, n);
      }
    }();
    return I.c(b, Rm, e);
  }
  return b;
}
function Tx(b) {
  var a = function() {
    var a = Rm.b(b);
    if (m(a)) {
      return a;
    }
    try {
      return wx(b);
    } catch (e) {
      if (e instanceof Error) {
        return null;
      }
      throw e;
    }
  }();
  if (null != a) {
    var c = function() {
      for (var b = a, c = E;;) {
        if (le(b)) {
          return c;
        }
        var f = x(b), f = I.c(f, ck, cg(function() {
          return function(a) {
            return yf("uses-library-tag", Px(a));
          };
        }(b, c, f, a), Lx(f))), c = 0 < B(ck.b(f)) ? ce.a(c, f) : c, b = sd(b);
      }
    }();
    return I.c(b, Rm, c);
  }
  return b;
}
function Ux(b, a, c, d, e) {
  this.id = b;
  this.location = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = Ux.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "location":
      return this.location;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.FileParsedTag{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ev, this.location], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Z, ev], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "file-parsed";
};
h.Pb = function() {
  return this.location;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [Z, null, ev, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new Ux(this.id, this.location, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new Ux(c, this.location, this.h, this.g, null) : m(L.a ? L.a(ev, a) : L.call(null, ev, a)) ? new Ux(this.id, c, this.h, this.g, null) : new Ux(this.id, this.location, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ev, this.location], null)], null), this.g));
};
h.U = function(b, a) {
  return new Ux(this.id, this.location, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "File parsed tag";
};
h.Ca = function() {
  return [q("This node was generating parsing a file located at "), q(this.location)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function Vx(b, a, c, d, e) {
  this.id = b;
  this.ja = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = Vx.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "document-type":
      return this.ja;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.DocumentTypeTag{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Qp, this.ja], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Z, Qp], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "document-type";
};
h.Pb = function() {
  return this.ja;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [Qp, null, Z, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new Vx(this.id, this.ja, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new Vx(c, this.ja, this.h, this.g, null) : m(L.a ? L.a(Qp, a) : L.call(null, Qp, a)) ? new Vx(this.id, c, this.h, this.g, null) : new Vx(this.id, this.ja, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Qp, this.ja], null)], null), this.g));
};
h.U = function(b, a) {
  return new Vx(this.id, this.ja, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "Document type tag";
};
h.Ca = function() {
  return [q("This node was generating parsing a file of type "), q(this.ja)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function Wx(b, a, c, d, e) {
  this.id = b;
  this.path = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = Wx.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "path":
      return this.path;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.NodeParsedTag{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Lj, this.path], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Z, Lj], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "node-parsed";
};
h.Pb = function() {
  return this.path;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [Lj, null, Z, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new Wx(this.id, this.path, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new Wx(c, this.path, this.h, this.g, null) : m(L.a ? L.a(Lj, a) : L.call(null, Lj, a)) ? new Wx(this.id, c, this.h, this.g, null) : new Wx(this.id, this.path, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Lj, this.path], null)], null), this.g));
};
h.U = function(b, a) {
  return new Wx(this.id, this.path, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "Node parsed tag";
};
h.Ca = function() {
  return [q("This node was generating parsing a node located at "), q(this.path)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function Xx(b, a, c, d, e) {
  this.id = b;
  this.path = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = Xx.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "path":
      return this.path;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.NestedResourcePathParsedTag{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Lj, this.path], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Z, Lj], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "nested-resource-path-parsed";
};
h.Pb = function() {
  return this.path;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [Lj, null, Z, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new Xx(this.id, this.path, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new Xx(c, this.path, this.h, this.g, null) : m(L.a ? L.a(Lj, a) : L.call(null, Lj, a)) ? new Xx(this.id, c, this.h, this.g, null) : new Xx(this.id, this.path, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Lj, this.path], null)], null), this.g));
};
h.U = function(b, a) {
  return new Xx(this.id, this.path, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "Nested resource parsed tag";
};
h.Ca = function() {
  return [q("This node was generating parsing a nested resource with path "), q(this.path)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function Yx(b, a, c, d, e) {
  this.id = b;
  this.bd = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = Yx.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "children-id":
      return this.bd;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.NestedResourceChildrenTag{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ov, this.bd], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Z, ov], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "nested-resource-nested-children";
};
h.Pb = function() {
  return this.bd;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [Z, null, ov, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new Yx(this.id, this.bd, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new Yx(c, this.bd, this.h, this.g, null) : m(L.a ? L.a(ov, a) : L.call(null, ov, a)) ? new Yx(this.id, c, this.h, this.g, null) : new Yx(this.id, this.bd, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ov, this.bd], null)], null), this.g));
};
h.U = function(b, a) {
  return new Yx(this.id, this.bd, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "Resource nested children tag";
};
h.Ca = function() {
  return [q("This resource has a nested resource "), q(this.bd)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function Zx(b, a, c, d, e) {
  this.id = b;
  this.nd = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = Zx.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "parent-id":
      return this.nd;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.NestedResourceParentIdTag{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ns, this.nd], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Z, ns], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "nested-resource-parent-id";
};
h.Pb = function() {
  return this.nd;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [Z, null, ns, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new Zx(this.id, this.nd, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new Zx(c, this.nd, this.h, this.g, null) : m(L.a ? L.a(ns, a) : L.call(null, ns, a)) ? new Zx(this.id, c, this.h, this.g, null) : new Zx(this.id, this.nd, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ns, this.nd], null)], null), this.g));
};
h.U = function(b, a) {
  return new Zx(this.id, this.nd, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "Resource parent id  tag";
};
h.Ca = function() {
  return [q("This resource has a parent resource "), q(this.nd)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function $x(b, a, c, d, e) {
  this.id = b;
  this.Ga = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = $x.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "tag-value":
      return this.Ga;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.APITagTag{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Co, this.Ga], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Z, Co], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "api-tag-tag";
};
h.Pb = function() {
  return this.Ga;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [Co, null, Z, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new $x(this.id, this.Ga, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new $x(c, this.Ga, this.h, this.g, null) : m(L.a ? L.a(Co, a) : L.call(null, Co, a)) ? new $x(this.id, c, this.h, this.g, null) : new $x(this.id, this.Ga, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Co, this.Ga], null)], null), this.g));
};
h.U = function(b, a) {
  return new $x(this.id, this.Ga, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "API specific tag";
};
h.Ca = function() {
  return [q("API specific tag with value "), q(this.Ga)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function ay(b, a, c, d, e) {
  this.id = b;
  this.Ga = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = ay.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "tag-value":
      return this.Ga;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.InlineFragmentParsedTag{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Co, this.Ga], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Z, Co], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "inline-fragment-parsed-tag";
};
h.Pb = function() {
  return this.Ga;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [Co, null, Z, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new ay(this.id, this.Ga, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new ay(c, this.Ga, this.h, this.g, null) : m(L.a ? L.a(Co, a) : L.call(null, Co, a)) ? new ay(this.id, c, this.h, this.g, null) : new ay(this.id, this.Ga, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Co, this.Ga], null)], null), this.g));
};
h.U = function(b, a) {
  return new ay(this.id, this.Ga, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "Inline fragment  tag";
};
h.Ca = function() {
  return [q("Inline fragment tag with value "), q(this.Ga)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function by(b, a, c, d, e) {
  this.id = b;
  this.Ga = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = by.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "tag-value":
      return this.Ga;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.ExtendIncludeFragmentParsedTag{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Co, this.Ga], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Z, Co], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "extend-include-fragment-parsed-tag";
};
h.Pb = function() {
  return this.Ga;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [Co, null, Z, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new by(this.id, this.Ga, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new by(c, this.Ga, this.h, this.g, null) : m(L.a ? L.a(Co, a) : L.call(null, Co, a)) ? new by(this.id, c, this.h, this.g, null) : new by(this.id, this.Ga, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [Co, this.Ga], null)], null), this.g));
};
h.U = function(b, a) {
  return new by(this.id, this.Ga, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "Extend Include Fragment";
};
h.Ca = function() {
  return [q("Extend Include Fragment tag with value "), q(this.Ga)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function cy(b, a, c, d, e) {
  this.id = b;
  this.value = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = cy.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "value":
      return this.value;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.IsTraitTag{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [pn, this.value], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Z, pn], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "is-trait-tag";
};
h.Pb = function() {
  return this.value;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [pn, null, Z, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new cy(this.id, this.value, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new cy(c, this.value, this.h, this.g, null) : m(L.a ? L.a(pn, a) : L.call(null, pn, a)) ? new cy(this.id, c, this.h, this.g, null) : new cy(this.id, this.value, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [pn, this.value], null)], null), this.g));
};
h.U = function(b, a) {
  return new cy(this.id, this.value, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "Is trait tag";
};
h.Ca = function() {
  return [q("Is trait tag with name "), q(this.value)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function dy(b, a, c, d, e) {
  this.id = b;
  this.value = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = dy.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "value":
      return this.value;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.IsTypeTag{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [pn, this.value], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Z, pn], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "is-type-tag";
};
h.Pb = function() {
  return this.value;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [pn, null, Z, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new dy(this.id, this.value, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new dy(c, this.value, this.h, this.g, null) : m(L.a ? L.a(pn, a) : L.call(null, pn, a)) ? new dy(this.id, c, this.h, this.g, null) : new dy(this.id, this.value, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [pn, this.value], null)], null), this.g));
};
h.U = function(b, a) {
  return new dy(this.id, this.value, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "Is type tag";
};
h.Ca = function() {
  return [q("Is type tag with name "), q(this.value)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function ey(b) {
  return new dy(Z.b(b), pn.b(b), null, J.j(b, Z, C([pn], 0)), null);
}
function fy(b, a, c, d, e) {
  this.id = b;
  this.value = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = fy.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "value":
      return this.value;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.IsAnnotationTag{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [pn, this.value], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Z, pn], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "is-annotation-tag";
};
h.Pb = function() {
  return this.value;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [pn, null, Z, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new fy(this.id, this.value, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new fy(c, this.value, this.h, this.g, null) : m(L.a ? L.a(pn, a) : L.call(null, pn, a)) ? new fy(this.id, c, this.h, this.g, null) : new fy(this.id, this.value, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [pn, this.value], null)], null), this.g));
};
h.U = function(b, a) {
  return new fy(this.id, this.value, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "Is annotation tag";
};
h.Ca = function() {
  return [q("Is annotation tag with name "), q(this.value)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function gy(b, a, c, d, e) {
  this.id = b;
  this.pd = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = gy.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "trait-name":
      return this.pd;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.ExtendsTraitTag{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [hn, this.pd], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Z, hn], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "extends-trait-tag";
};
h.Pb = function() {
  return this.pd;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [hn, null, Z, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new gy(this.id, this.pd, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new gy(c, this.pd, this.h, this.g, null) : m(L.a ? L.a(hn, a) : L.call(null, hn, a)) ? new gy(this.id, c, this.h, this.g, null) : new gy(this.id, this.pd, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [hn, this.pd], null)], null), this.g));
};
h.U = function(b, a) {
  return new gy(this.id, this.pd, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return "Extends trait tag";
};
h.Ca = function() {
  return [q("Extends trait tag with name "), q(this.pd)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function hy(b, a, c, d, e, f) {
  this.id = b;
  this.Sc = a;
  this.Rc = c;
  this.h = d;
  this.g = e;
  this.m = f;
  this.l = 2229667594;
  this.M = 8192;
}
h = hy.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "library-alias":
      return this.Sc;
    case "library":
      return this.Rc;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.UsesLibraryTag{", ", ", "}", c, N.a(new Q(null, 3, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [sq, this.Sc], null), new Q(null, 2, 5, R, [Op, this.Rc], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 3, new Q(null, 3, 5, R, [Z, sq, Op], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 3 + B(this.g);
};
h.Vb = k;
h.Ob = function() {
  return "uses-library-tag";
};
h.Pb = function() {
  return this.Rc;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 3, [Op, null, sq, null, Z, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new hy(this.id, this.Sc, this.Rc, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new hy(c, this.Sc, this.Rc, this.h, this.g, null) : m(L.a ? L.a(sq, a) : L.call(null, sq, a)) ? new hy(this.id, c, this.Rc, this.h, this.g, null) : m(L.a ? L.a(Op, a) : L.call(null, Op, a)) ? new hy(this.id, this.Sc, c, this.h, this.g, null) : new hy(this.id, this.Sc, this.Rc, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 3, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [sq, this.Sc], null), new Q(null, 2, 5, R, [Op, this.Rc], null)], null), this.g));
};
h.U = function(b, a) {
  return new hy(this.id, this.Sc, this.Rc, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return this.Sc;
};
h.Ca = function() {
  return [q("Uses library tag with name "), q(this.Sc), q(" located at "), q(this.Rc)].join("");
};
h.Ja = function() {
  return E;
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  return E;
};
function iy() {
}
var jy = function jy(a) {
  if (null != a && null != a.Vf) {
    return a.Ma;
  }
  var c = jy[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = jy._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Fragment.encodes", a);
};
function ky() {
}
var ly = function ly(a) {
  if (null != a && null != a.ff) {
    return a.ff(a);
  }
  var c = ly[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = ly._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Module.declares", a);
}, my = function my(a) {
  if (null != a && null != a.Ne) {
    return a.Ne(a);
  }
  var c = my[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = my._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Unit.resolved", a);
}, ny = function ny(a) {
  if (null != a && null != a.gf) {
    return a.location;
  }
  var c = ny[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = ny._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Unit.location", a);
}, oy = function oy(a) {
  if (null != a && null != a.Me) {
    return a.Me(a);
  }
  var c = oy[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = oy._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Unit.references", a);
};
function py(b, a) {
  var c = [q(b), q("#/source-map/0")].join(""), d = null != b ? new Ux([q(c), q("/tag/file-parsed")].join(""), b, null, null, null) : null, e = null != a ? new Vx([q(c), q("/tag/document-type")].join(""), a, null, null, null) : null;
  return null != b ? new Q(null, 1, 5, R, [new Mx(c, b, cg(sb, new Q(null, 2, 5, R, [d, e], null)), E, null, null, null)], null) : E;
}
function qy(b, a, c, d, e, f, g, n, r, u, y) {
  this.location = b;
  this.Ma = a;
  this.La = c;
  this.oa = d;
  this.v = e;
  this.ja = f;
  this.pa = g;
  this.raw = n;
  this.h = r;
  this.g = u;
  this.m = y;
  this.l = 2229667594;
  this.M = 8192;
}
h = qy.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "location":
      return this.location;
    case "encodes":
      return this.Ma;
    case "declares":
      return this.La;
    case "references":
      return this.oa;
    case "additional-properties":
      return this.v;
    case "document-type":
      return this.ja;
    case "resolved":
      return this.pa;
    case "raw":
      return this.raw;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.ParsedDocument{", ", ", "}", c, N.a(new Q(null, 8, 5, R, [new Q(null, 2, 5, R, [ev, this.location], null), new Q(null, 2, 5, R, [Tj, this.Ma], null), new Q(null, 2, 5, R, [Np, this.La], null), new Q(null, 2, 5, R, [Po, this.oa], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [Qp, this.ja], null), new Q(null, 2, 5, R, [pp, this.pa], null), new Q(null, 2, 5, R, [Bm, this.raw], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 8, new Q(null, 8, 5, R, [ev, Tj, Np, Po, Ur, Qp, pp, Bm], null), m(this.g) ? ad(this.g) : Af());
};
h.gf = function() {
  return this.location;
};
h.Me = function() {
  var b = this.oa;
  return m(b) ? b : E;
};
h.Ne = function() {
  var b = this.pa;
  return m(b) ? b : !1;
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 8 + B(this.g);
};
h.vc = k;
h.Vf = function() {
  return this.Ma;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.Ub = k;
h.ff = function() {
  var b = this.La;
  return m(b) ? b : E;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 8, [Tj, null, Bm, null, Po, null, pp, null, Np, null, Qp, null, Ur, null, ev, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new qy(this.location, this.Ma, this.La, this.oa, this.v, this.ja, this.pa, this.raw, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(ev, a) : L.call(null, ev, a)) ? new qy(c, this.Ma, this.La, this.oa, this.v, this.ja, this.pa, this.raw, this.h, this.g, null) : m(L.a ? L.a(Tj, a) : L.call(null, Tj, a)) ? new qy(this.location, c, this.La, this.oa, this.v, this.ja, this.pa, this.raw, this.h, this.g, null) : m(L.a ? L.a(Np, a) : L.call(null, Np, a)) ? new qy(this.location, this.Ma, c, this.oa, this.v, this.ja, this.pa, this.raw, this.h, this.g, null) : m(L.a ? L.a(Po, a) : L.call(null, Po, a)) ? new qy(this.location, 
  this.Ma, this.La, c, this.v, this.ja, this.pa, this.raw, this.h, this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new qy(this.location, this.Ma, this.La, this.oa, c, this.ja, this.pa, this.raw, this.h, this.g, null) : m(L.a ? L.a(Qp, a) : L.call(null, Qp, a)) ? new qy(this.location, this.Ma, this.La, this.oa, this.v, c, this.pa, this.raw, this.h, this.g, null) : m(L.a ? L.a(pp, a) : L.call(null, pp, a)) ? new qy(this.location, this.Ma, this.La, this.oa, this.v, this.ja, c, this.raw, 
  this.h, this.g, null) : m(L.a ? L.a(Bm, a) : L.call(null, Bm, a)) ? new qy(this.location, this.Ma, this.La, this.oa, this.v, this.ja, this.pa, c, this.h, this.g, null) : new qy(this.location, this.Ma, this.La, this.oa, this.v, this.ja, this.pa, this.raw, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 8, 5, R, [new Q(null, 2, 5, R, [ev, this.location], null), new Q(null, 2, 5, R, [Tj, this.Ma], null), new Q(null, 2, 5, R, [Np, this.La], null), new Q(null, 2, 5, R, [Po, this.oa], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [Qp, this.ja], null), new Q(null, 2, 5, R, [pp, this.pa], null), new Q(null, 2, 5, R, [Bm, this.raw], null)], null), this.g));
};
h.U = function(b, a) {
  return new qy(this.location, this.Ma, this.La, this.oa, this.v, this.ja, this.pa, this.raw, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.location;
};
h.Ea = function() {
  return this.location;
};
h.Ca = function() {
  return null;
};
h.Ja = function() {
  return py(this.location, this.ja);
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  var b = this.v;
  return m(b) ? b : E;
};
function ry(b) {
  return new qy(ev.b(b), Tj.b(b), Np.b(b), Po.b(b), Ur.b(b), Qp.b(b), pp.b(b), Bm.b(b), null, J.j(b, ev, C([Tj, Np, Po, Ur, Qp, pp, Bm], 0)), null);
}
function sy(b, a, c, d, e, f, g, n, r, u, y) {
  this.location = b;
  this.La = a;
  this.oa = c;
  this.v = d;
  this.ja = e;
  this.pa = f;
  this.description = g;
  this.raw = n;
  this.h = r;
  this.g = u;
  this.m = y;
  this.l = 2229667594;
  this.M = 8192;
}
h = sy.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "location":
      return this.location;
    case "declares":
      return this.La;
    case "references":
      return this.oa;
    case "additional-properties":
      return this.v;
    case "document-type":
      return this.ja;
    case "resolved":
      return this.pa;
    case "description":
      return this.description;
    case "raw":
      return this.raw;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.ParsedModule{", ", ", "}", c, N.a(new Q(null, 8, 5, R, [new Q(null, 2, 5, R, [ev, this.location], null), new Q(null, 2, 5, R, [Np, this.La], null), new Q(null, 2, 5, R, [Po, this.oa], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [Qp, this.ja], null), new Q(null, 2, 5, R, [pp, this.pa], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [Bm, this.raw], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 8, new Q(null, 8, 5, R, [ev, Np, Po, Ur, Qp, pp, Hj, Bm], null), m(this.g) ? ad(this.g) : Af());
};
h.gf = function() {
  return this.location;
};
h.Me = function() {
  var b = this.oa;
  return m(b) ? b : E;
};
h.Ne = function() {
  var b = this.pa;
  return m(b) ? b : !1;
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 8 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.Ub = k;
h.ff = function() {
  var b = this.La;
  return m(b) ? b : E;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 8, [Hj, null, Bm, null, Po, null, pp, null, Np, null, Qp, null, Ur, null, ev, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new sy(this.location, this.La, this.oa, this.v, this.ja, this.pa, this.description, this.raw, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(ev, a) : L.call(null, ev, a)) ? new sy(c, this.La, this.oa, this.v, this.ja, this.pa, this.description, this.raw, this.h, this.g, null) : m(L.a ? L.a(Np, a) : L.call(null, Np, a)) ? new sy(this.location, c, this.oa, this.v, this.ja, this.pa, this.description, this.raw, this.h, this.g, null) : m(L.a ? L.a(Po, a) : L.call(null, Po, a)) ? new sy(this.location, this.La, c, this.v, this.ja, this.pa, this.description, this.raw, this.h, this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, 
  Ur, a)) ? new sy(this.location, this.La, this.oa, c, this.ja, this.pa, this.description, this.raw, this.h, this.g, null) : m(L.a ? L.a(Qp, a) : L.call(null, Qp, a)) ? new sy(this.location, this.La, this.oa, this.v, c, this.pa, this.description, this.raw, this.h, this.g, null) : m(L.a ? L.a(pp, a) : L.call(null, pp, a)) ? new sy(this.location, this.La, this.oa, this.v, this.ja, c, this.description, this.raw, this.h, this.g, null) : m(L.a ? L.a(Hj, a) : L.call(null, Hj, a)) ? new sy(this.location, 
  this.La, this.oa, this.v, this.ja, this.pa, c, this.raw, this.h, this.g, null) : m(L.a ? L.a(Bm, a) : L.call(null, Bm, a)) ? new sy(this.location, this.La, this.oa, this.v, this.ja, this.pa, this.description, c, this.h, this.g, null) : new sy(this.location, this.La, this.oa, this.v, this.ja, this.pa, this.description, this.raw, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 8, 5, R, [new Q(null, 2, 5, R, [ev, this.location], null), new Q(null, 2, 5, R, [Np, this.La], null), new Q(null, 2, 5, R, [Po, this.oa], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [Qp, this.ja], null), new Q(null, 2, 5, R, [pp, this.pa], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [Bm, this.raw], null)], null), this.g));
};
h.U = function(b, a) {
  return new sy(this.location, this.La, this.oa, this.v, this.ja, this.pa, this.description, this.raw, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.location;
};
h.Ea = function() {
  return this.location;
};
h.Ca = function() {
  return this.description;
};
h.Ja = function() {
  return py(this.location, this.ja);
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  var b = this.v;
  return m(b) ? b : E;
};
function ty(b) {
  return new sy(ev.b(b), Np.b(b), Po.b(b), Ur.b(b), Qp.b(b), pp.b(b), Hj.b(b), Bm.b(b), null, J.j(b, ev, C([Np, Po, Ur, Qp, pp, Hj, Bm], 0)), null);
}
function uy(b, a, c, d, e, f, g, n, r, u) {
  this.location = b;
  this.Ma = a;
  this.v = c;
  this.oa = d;
  this.ja = e;
  this.pa = f;
  this.raw = g;
  this.h = n;
  this.g = r;
  this.m = u;
  this.l = 2229667594;
  this.M = 8192;
}
h = uy.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "location":
      return this.location;
    case "encodes":
      return this.Ma;
    case "additional-properties":
      return this.v;
    case "references":
      return this.oa;
    case "document-type":
      return this.ja;
    case "resolved":
      return this.pa;
    case "raw":
      return this.raw;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.document.ParsedFragment{", ", ", "}", c, N.a(new Q(null, 7, 5, R, [new Q(null, 2, 5, R, [ev, this.location], null), new Q(null, 2, 5, R, [Tj, this.Ma], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [Po, this.oa], null), new Q(null, 2, 5, R, [Qp, this.ja], null), new Q(null, 2, 5, R, [pp, this.pa], null), new Q(null, 2, 5, R, [Bm, this.raw], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 7, new Q(null, 7, 5, R, [ev, Tj, Ur, Po, Qp, pp, Bm], null), m(this.g) ? ad(this.g) : Af());
};
h.gf = function() {
  return this.location;
};
h.Me = function() {
  var b = this.oa;
  return m(b) ? b : E;
};
h.Ne = function() {
  var b = this.pa;
  return m(b) ? b : !1;
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 7 + B(this.g);
};
h.vc = k;
h.Vf = function() {
  return this.Ma;
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 7, [Tj, null, Bm, null, Po, null, pp, null, Qp, null, Ur, null, ev, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new uy(this.location, this.Ma, this.v, this.oa, this.ja, this.pa, this.raw, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(ev, a) : L.call(null, ev, a)) ? new uy(c, this.Ma, this.v, this.oa, this.ja, this.pa, this.raw, this.h, this.g, null) : m(L.a ? L.a(Tj, a) : L.call(null, Tj, a)) ? new uy(this.location, c, this.v, this.oa, this.ja, this.pa, this.raw, this.h, this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new uy(this.location, this.Ma, c, this.oa, this.ja, this.pa, this.raw, this.h, this.g, null) : m(L.a ? L.a(Po, a) : L.call(null, Po, a)) ? new uy(this.location, this.Ma, this.v, 
  c, this.ja, this.pa, this.raw, this.h, this.g, null) : m(L.a ? L.a(Qp, a) : L.call(null, Qp, a)) ? new uy(this.location, this.Ma, this.v, this.oa, c, this.pa, this.raw, this.h, this.g, null) : m(L.a ? L.a(pp, a) : L.call(null, pp, a)) ? new uy(this.location, this.Ma, this.v, this.oa, this.ja, c, this.raw, this.h, this.g, null) : m(L.a ? L.a(Bm, a) : L.call(null, Bm, a)) ? new uy(this.location, this.Ma, this.v, this.oa, this.ja, this.pa, c, this.h, this.g, null) : new uy(this.location, this.Ma, 
  this.v, this.oa, this.ja, this.pa, this.raw, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 7, 5, R, [new Q(null, 2, 5, R, [ev, this.location], null), new Q(null, 2, 5, R, [Tj, this.Ma], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [Po, this.oa], null), new Q(null, 2, 5, R, [Qp, this.ja], null), new Q(null, 2, 5, R, [pp, this.pa], null), new Q(null, 2, 5, R, [Bm, this.raw], null)], null), this.g));
};
h.U = function(b, a) {
  return new uy(this.location, this.Ma, this.v, this.oa, this.ja, this.pa, this.raw, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.location;
};
h.Ea = function() {
  return this.location;
};
h.Ca = function() {
  return null;
};
h.Ja = function() {
  return py(this.location, this.ja);
};
h.Ia = function() {
  return E;
};
h.Ha = function() {
  var b = this.v;
  return m(b) ? b : E;
};
function vy(b) {
  return new uy(ev.b(b), Tj.b(b), Ur.b(b), Po.b(b), Qp.b(b), pp.b(b), Bm.b(b), null, J.j(b, ev, C([Tj, Ur, Po, Qp, pp, Bm], 0)), null);
}
;function wy(b) {
  return null != t.a(b, df.b("@location"));
}
function xy(b) {
  return t.a(b, df.b("@data"));
}
function yy(b) {
  return t.a(b, df.b("@location"));
}
function zy(b) {
  return t.a(b, df.b("@fragment"));
}
var Ay = df.b("@data"), By = df.b("@location"), Cy = df.b("@fragment");
function Dy(b, a) {
  var c = B(a);
  a: {
    if (0 === c) {
      c = 1;
    } else {
      for (var d = c | 0, c = 1, e = 31;;) {
        var f;
        f = d;
        if (ye(f)) {
          f = 0 === (f & 1);
        } else {
          throw Error([q("Argument must be an integer: "), q(f)].join(""));
        }
        d = Me(d, 2);
        if (!f) {
          if (0 === d) {
            c = dd(e, c);
            break a;
          }
          c = dd(e, c);
        }
        e = dd(e, e);
      }
    }
  }
  c |= 0;
  return (dd(c, b.cf) | 0) + (a.cf - c);
}
function Ey(b, a) {
  for (var c = kg(b, a), d = a;;) {
    if (m(Fy.b ? Fy.b(c) : Fy.call(null, c))) {
      c = t.a(c, 0), d = ce.a(d, 0);
    } else {
      return d;
    }
  }
}
function Gy(b, a) {
  return new ff(null, function() {
    var c = Ud, d = kg(b, a), e;
    a: {
      e = b;
      for (var f = a;;) {
        if (v.a(B(f), 1)) {
          e = ie(f) < (Hy.b ? Hy.b(e) : Hy.call(null, e)) - 1 ? Ey(e, new Q(null, 1, 5, R, [ie(f) + 1], null)) : null;
          break a;
        }
        var g = ie(f), n;
        n = kg(e, je(f));
        n = Hy.b ? Hy.b(n) : Hy.call(null, n);
        if (g < n - 1) {
          e = Ey(e, ce.a(je(f), ie(f) + 1));
          break a;
        }
        f = je(f);
      }
    }
    return c(d, m(e) ? Gy(b, e) : null);
  }, null, null);
}
var Iy = function Iy(a, c) {
  if (null != a && null != a.wg) {
    return a.wg(0, c);
  }
  var d = Iy[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = Iy._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("ConjFlat.conj-flat", a);
};
function Jy(b, a, c, d, e, f) {
  this.ua = b;
  this.cf = a;
  this.kd = c;
  this.G = d;
  this.be = e;
  this.Ve = f;
  this.l = 31850958;
  this.M = 0;
}
h = Jy.prototype;
h.toString = function() {
  return cd(w(this));
};
h.W = function(b, a) {
  return this.ua.W(null, a);
};
h.T = function(b, a, c) {
  return this.ua.T(null, a, c);
};
h.S = function() {
  return he(this.ua);
};
h.Ib = function() {
  return z(w(this));
};
h.$ = function() {
  return this.G;
};
h.Y = function() {
  return this.kd;
};
h.O = function(b, a) {
  return v.a(this.kd, kd(a)) && v.a(this.G, B(a)) && (v.a(this.G, 0) || v.a(w(this), a));
};
h.Na = function() {
  return Wd(Ky, he(this));
};
h.Ya = function() {
  return x(w(this));
};
h.xb = function() {
  return sd(w(this));
};
h.aa = function() {
  if (!m(this.Ve)) {
    var b;
    this.be ? (b = this.ua, b = 0 < B(b) ? Gy(b, Ey(b, new Q(null, 1, 5, R, [0], null))) : null) : b = w(this.ua);
    this.Ve = b;
  }
  return this.Ve;
};
h.U = function(b, a) {
  return new Jy(Wd(this.ua, a), this.cf, this.kd, this.G, this.be, null);
};
h.Z = function(b, a) {
  return Ud(a, this);
};
h.wg = function(b, a) {
  if (null == a) {
    return this;
  }
  if (m(Fy.b ? Fy.b(a) : Fy.call(null, a))) {
    if (0 === this.G) {
      return a;
    }
    if (32 >= B(a)) {
      var c = Dy(this, a), d = this.G + B(a), e = gg.a(this.ua, a), f = c, c = xd(c, d), g = this.be;
      return new Jy(e, f, c, d, g ? g : a.be, null);
    }
    c = Dy(this, a);
    d = this.G + B(a);
    return new Jy(ce.a(this.ua, a), c, xd(c, d), d, !0, null);
  }
  c = dd(31, this.cf) + kd(a) | 0;
  d = this.G + 1;
  return new Jy(ce.a(this.ua, a), c, xd(c, d), d, this.be, null);
};
h.Aa = k;
h.X = function(b, a, c) {
  return Dc(w(this), a, c);
};
function Ly(b) {
  b = Ig(b);
  var a = B(b), c;
  a: {
    c = 1;
    for (var d = w(b);;) {
      if (null != d) {
        c = dd(31, c) + kd(x(d)) | 0, d = z(d);
      } else {
        break a;
      }
    }
  }
  return new Jy(b, c, xd(c, a), a, !1, null);
}
var Ky = Ly(E);
function Fy(b) {
  return b instanceof Jy;
}
function Hy(b) {
  return m(Fy(b)) ? B(b.ua) : B(b);
}
var My = function My(a, c) {
  for (;;) {
    if (w(c)) {
      var d = x(c);
      if (m(Fy(d))) {
        var d = My.a ? My.a(a, d) : My.call(null, a, d), e = z(c)
      } else {
        d = qf.a(a, d), e = z(c);
      }
      a = d;
      c = e;
    } else {
      return a;
    }
  }
}, Ny = function Ny(a) {
  if (null != a && null != a.Nd) {
    return a.Nd();
  }
  var c = Ny[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Ny._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("GetVec.get-vec", a);
};
function Oy(b, a, c, d) {
  this.ua = b;
  this.kd = a;
  this.G = c;
  this.Zb = d;
  this.l = 167142175;
  this.M = 2048;
}
h = Oy.prototype;
h.toString = function() {
  return cd(this.Nd());
};
h.W = function(b, a) {
  return Ny(this).W(null, a);
};
h.T = function(b, a, c) {
  return Ny(this).T(null, a, c);
};
h.Nd = function() {
  var b = this;
  rb(A.b ? A.b(b.Zb) : A.call(null, b.Zb)) && (Rf.a(b.Zb, function() {
    return function() {
      var a;
      a = A.b ? A.b(b.ua) : A.call(null, b.ua);
      var c;
      c = Hc(E);
      a = Jc(My(c, a));
      return Wd(a, he(A.b ? A.b(b.ua) : A.call(null, b.ua)));
    };
  }(this)), Rf.a(b.ua, function() {
    return function() {
      return null;
    };
  }(this)));
  return A.b ? A.b(b.Zb) : A.call(null, b.Zb);
};
h.wd = function(b, a, c) {
  return Ny(this).wd(null, a, c);
};
h.ra = function(b, a) {
  return Ny(this).ra(null, a);
};
h.Hb = function(b, a, c) {
  return Ny(this).Hb(null, a, c);
};
h.dd = function(b, a, c) {
  return Ny(this).dd(null, a, c);
};
h.S = function() {
  return m(A.b ? A.b(this.Zb) : A.call(null, this.Zb)) ? he(A.b ? A.b(this.Zb) : A.call(null, this.Zb)) : he(A.b ? A.b(this.ua) : A.call(null, this.ua));
};
h.$ = function() {
  return this.G;
};
h.Lc = function() {
  return Ny(this).Lc(null);
};
h.Mc = function() {
  return Ny(this).Mc(null);
};
h.$d = function() {
  return 0 < this.G ? zc(Ny(this)) : null;
};
h.Y = function() {
  return this.kd;
};
h.O = function(b, a) {
  return v.a(this.kd, kd(a)) && v.a(this.G, B(a)) && v.a(Ny(this), a);
};
h.Na = function() {
  return Wd(E, he(this));
};
h.fa = function(b, a, c) {
  return I.c(Ny(this), a, c);
};
h.Yd = function(b, a) {
  return Ny(this).Yd(null, a);
};
h.aa = function() {
  return w(Ny(this));
};
h.U = function(b, a) {
  var c = this;
  return m(A.b ? A.b(c.Zb) : A.call(null, c.Zb)) ? new Oy(function() {
    var a = A.b ? A.b(c.ua) : A.call(null, c.ua);
    return U ? U(a) : Nf.call(null, a);
  }(), c.kd, c.G, function() {
    var b = Wd(A.b ? A.b(c.Zb) : A.call(null, c.Zb), a);
    return U ? U(b) : Nf.call(null, b);
  }()) : new Oy(function() {
    var b = Wd(A.b ? A.b(c.ua) : A.call(null, c.ua), a);
    return U ? U(b) : Nf.call(null, b);
  }(), c.kd, c.G, function() {
    var a = A.b ? A.b(c.Zb) : A.call(null, c.Zb);
    return U ? U(a) : Nf.call(null, a);
  }());
};
h.Z = function(b, a) {
  return ce.a(Ny(this), a);
};
h.call = function() {
  function b(a, b, c) {
    return this.Nd().c(null, b, c);
  }
  function a(a, b) {
    return this.Nd().a(null, b);
  }
  var c = null, c = function(c, e, f) {
    switch(arguments.length) {
      case 2:
        return a.call(this, 0, e);
      case 3:
        return b.call(this, 0, e, f);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  c.a = a;
  c.c = b;
  return c;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return this.Nd().a(null, b);
};
h.a = function(b, a) {
  return this.Nd().c(null, b, a);
};
h.vd = function(b, a) {
  return Qc(Ny(this), a);
};
h.Aa = k;
h.X = function(b, a, c) {
  return Dc(Ny(this), a, c);
};
function Py(b) {
  if (m(b.be)) {
    if (m(b.Ve)) {
      b = Ig(w(b));
    } else {
      var a;
      a = b.ua;
      a = U ? U(a) : Nf.call(null, a);
      b = new Oy(a, b.kd, b.G, U ? U(null) : Nf.call(null, null));
    }
  } else {
    b = b.ua;
  }
  return b;
}
;function Qy(b) {
  return w(b) && rb(z(b));
}
function Ry(b) {
  return I.c(b, Yr, Sy);
}
var Sy = new l(null, 1, [Vs, Bm], null), Ty = new l(null, 2, [ip, function(b) {
  return new l(null, 2, [Vs, ip, xl, b], null);
}, vq, function(b) {
  return new l(null, 2, [Vs, vq, xl, b], null);
}], null), Uy = new l(null, 2, [vq, function(b, a) {
  return new l(null, 2, [Xt, b, ym, Hb(td, a)], null);
}, ip, function(b, a) {
  return new Q(null, 2, 5, R, [b, a], null);
}], null);
function Vy(b, a) {
  switch(Vs.b(b) instanceof K ? Vs.b(b).ca : null) {
    case "raw":
      return Iy(Ky, a);
    case "hiccup":
      return Py(Iy(Ly(new Q(null, 1, 5, R, [xl.b(b)], null)), a));
    case "enlive":
      var c = Iy(Ky, a);
      return new l(null, 2, [Xt, xl.b(b), ym, 0 === B(c) ? null : c], null);
    default:
      return b.b ? b.b(a) : b.call(null, a);
  }
}
function Wy(b, a) {
  var c = Ty.b ? Ty.b(b) : Ty.call(null, b);
  if (m(c)) {
    return gg.a(S, function() {
      return function(a, b) {
        return function g(c) {
          return new ff(null, function(a) {
            return function() {
              for (;;) {
                var b = w(c);
                if (b) {
                  if (se(b)) {
                    var d = Tc(b), e = B(d), n = kf(e);
                    a: {
                      for (var r = 0;;) {
                        if (r < e) {
                          var M = Kb.a(d, r), O = F(M, 0, null), M = F(M, 1, null);
                          nf(n, m(Yr.b(M)) ? new Q(null, 2, 5, R, [O, M], null) : new Q(null, 2, 5, R, [O, I.c(M, Yr, a.b ? a.b(O) : a.call(null, O))], null));
                          r += 1;
                        } else {
                          d = !0;
                          break a;
                        }
                      }
                    }
                    return d ? mf(n.ta(), g(Uc(b))) : mf(n.ta(), null);
                  }
                  d = x(b);
                  n = F(d, 0, null);
                  d = F(d, 1, null);
                  return Ud(m(Yr.b(d)) ? new Q(null, 2, 5, R, [n, d], null) : new Q(null, 2, 5, R, [n, I.c(d, Yr, a.b ? a.b(n) : a.call(null, n))], null), g(sd(b)));
                }
                return null;
              }
            };
          }(a, b), null, null);
        };
      }(c, c)(a);
    }());
  }
  throw [q("Invalid output format"), q(b), q(". Use :enlive or :hiccup.")].join("");
}
;var Xy = new l(null, 1, [Xt, Is], null);
function Yy(b) {
  return v.a(b, Xy) ? Xy : new l(null, 2, [Xt, jw, Iq, b], null);
}
function Zy(b) {
  return v.a(b, Xy) ? Xy : new l(null, 2, [Xt, rs, Iq, b], null);
}
function $y(b) {
  return v.a(b, Xy) ? Xy : new l(null, 2, [Xt, No, Iq, b], null);
}
function az(b, a, c) {
  if (!(b <= a)) {
    throw Error("Assert failed: (\x3c\x3d m n)");
  }
  return v.a(c, Xy) ? Xy : new l(null, 4, [Xt, no, Iq, c, mk, b, Kr, a], null);
}
var bz = function bz(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return bz.j(0 < c.length ? new rd(c.slice(0), 0, null) : null);
};
bz.j = function(b) {
  return Cf(Hf(v, Xy), b) ? Xy : m(Qy(b)) ? x(b) : new l(null, 2, [Xt, Yl, uv, b], null);
};
bz.N = 0;
bz.P = function(b) {
  return bz.j(w(b));
};
var cz = function cz(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 0:
      return cz.o();
    default:
      return cz.j(arguments[0], new rd(c.slice(1), 0, null));
  }
};
cz.o = function() {
  return Xy;
};
cz.j = function(b, a) {
  var c = v.a(b, Xy) ? dg(pi([Xy]), a) : a;
  w(c) ? (c = P(cz, c), c = new l(null, 3, [Xt, Uk, Pq, b, Rj, c], null)) : c = b;
  return c;
};
cz.P = function(b) {
  var a = x(b);
  b = z(b);
  return cz.j(a, b);
};
cz.N = 1;
var dz = function dz(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return dz.j(0 < c.length ? new rd(c.slice(0), 0, null) : null);
};
dz.j = function(b) {
  if (Cf(Hf(v, Xy), b)) {
    return Xy;
  }
  b = dg(pi([Xy]), b);
  return m(Qy(b)) ? x(b) : new l(null, 2, [Xt, ak, uv, b], null);
};
dz.N = 0;
dz.P = function(b) {
  return dz.j(w(b));
};
function ez(b) {
  return v.a(b, "") ? Xy : new l(null, 2, [Xt, Xo, Xo, b], null);
}
function fz(b) {
  return v.a(b, "") ? Xy : new l(null, 2, [Xt, wv, Xo, b], null);
}
function gz(b, a) {
  if (!(b <= a)) {
    throw Error([q("Assert failed: "), q("Character range minimum must be less than or equal the maximum"), q("\n"), q("(\x3c\x3d lo hi)")].join(""));
  }
  return new l(null, 3, [Xt, Xv, rp, b, Sv, a], null);
}
function hz(b) {
  return b instanceof RegExp ? (b = "" + q(b), Se(b, 1, B(b) - 1)) : b;
}
function iz(b) {
  b = [q("^"), q(hz(b))].join("");
  return v.a(b, "^") ? Xy : new l(null, 2, [Xt, Nq, Nq, Di(b)], null);
}
function jz(b) {
  return new l(null, 2, [Xt, eo, ur, b], null);
}
function kz(b) {
  return new l(null, 2, [Xt, mm, Iq, b], null);
}
function lz(b) {
  return new l(null, 2, [Xt, Qj, Iq, b], null);
}
function mz(b) {
  return I.c(b, Lp, !0);
}
var nz = function nz(a) {
  var c = m(Lp.b(a)) ? J.a(a, Lp) : a;
  return m(Iq.b(c)) ? I.c(c, Iq, function() {
    var a = Iq.b(c);
    return nz.b ? nz.b(a) : nz.call(null, a);
  }()) : m(uv.b(c)) ? I.c(c, uv, Tf.a(nz, uv.b(c))) : v.a(Xt.b(c), Uk) ? I.j(c, Pq, function() {
    var a = Pq.b(c);
    return nz.b ? nz.b(a) : nz.call(null, a);
  }(), C([Rj, function() {
    var a = Rj.b(c);
    return nz.b ? nz.b(a) : nz.call(null, a);
  }()], 0)) : c;
};
function oz(b) {
  return gg.a(S, function() {
    return function c(b) {
      return new ff(null, function() {
        for (;;) {
          var d = w(b);
          if (d) {
            if (se(d)) {
              var f = Tc(d), g = B(f), n = kf(g);
              a: {
                for (var r = 0;;) {
                  if (r < g) {
                    var u = Kb.a(f, r), y = F(u, 0, null), u = F(u, 1, null);
                    nf(n, new Q(null, 2, 5, R, [y, nz(u)], null));
                    r += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? mf(n.ta(), c(Uc(d))) : mf(n.ta(), null);
            }
            f = x(d);
            n = F(f, 0, null);
            f = F(f, 1, null);
            return Ud(new Q(null, 2, 5, R, [n, nz(f)], null), c(sd(d)));
          }
          return null;
        }
      }, null, null);
    }(b);
  }());
}
function pz(b, a) {
  var c = Ty.b ? Ty.b(b) : Ty.call(null, b);
  if (m(c)) {
    return gg.a(S, function() {
      return function(a, b) {
        return function g(c) {
          return new ff(null, function(a) {
            return function() {
              for (;;) {
                var b = w(c);
                if (b) {
                  if (se(b)) {
                    var d = Tc(b), e = B(d), n = kf(e);
                    a: {
                      for (var r = 0;;) {
                        if (r < e) {
                          var M = Kb.a(d, r), O = F(M, 0, null), M = F(M, 1, null);
                          nf(n, new Q(null, 2, 5, R, [O, I.c(M, Yr, a.b ? a.b(O) : a.call(null, O))], null));
                          r += 1;
                        } else {
                          d = !0;
                          break a;
                        }
                      }
                    }
                    return d ? mf(n.ta(), g(Uc(b))) : mf(n.ta(), null);
                  }
                  d = x(b);
                  n = F(d, 0, null);
                  d = F(d, 1, null);
                  return Ud(new Q(null, 2, 5, R, [n, I.c(d, Yr, a.b ? a.b(n) : a.call(null, n))], null), g(sd(b)));
                }
                return null;
              }
            };
          }(a, b), null, null);
        };
      }(c, c)(a);
    }());
  }
  throw [q("Invalid output format"), q(b), q(". Use :enlive or :hiccup.")].join("");
}
function qz(b, a) {
  var c = Ty.b ? Ty.b(b) : Ty.call(null, b);
  if (m(c)) {
    return gg.a(S, function() {
      return function(a, b) {
        return function g(c) {
          return new ff(null, function(a) {
            return function() {
              for (;;) {
                var b = w(c);
                if (b) {
                  if (se(b)) {
                    var d = Tc(b), e = B(d), n = kf(e);
                    a: {
                      for (var r = 0;;) {
                        if (r < e) {
                          var M = Kb.a(d, r), O = F(M, 0, null), M = F(M, 1, null);
                          nf(n, new Q(null, 2, 5, R, [O, I.c(nz(M), Yr, a.b ? a.b(O) : a.call(null, O))], null));
                          r += 1;
                        } else {
                          d = !0;
                          break a;
                        }
                      }
                    }
                    return d ? mf(n.ta(), g(Uc(b))) : mf(n.ta(), null);
                  }
                  d = x(b);
                  n = F(d, 0, null);
                  d = F(d, 1, null);
                  return Ud(new Q(null, 2, 5, R, [n, I.c(nz(d), Yr, a.b ? a.b(n) : a.call(null, n))], null), g(sd(b)));
                }
                return null;
              }
            };
          }(a, b), null, null);
        };
      }(c, c)(a);
    }());
  }
  throw [q("Invalid output format"), q(b), q(". Use :enlive or :hiccup.")].join("");
}
var rz = function rz(a, c) {
  var d = Xt.b(a) instanceof K ? Xt.b(a).ca : null;
  switch(d) {
    case "neg":
      return mg.K(a, new Q(null, 1, 5, R, [Iq], null), rz, c);
    case "cat":
      return I.c(a, uv, Tf.a(function() {
        return function(a) {
          return rz.a ? rz.a(a, c) : rz.call(null, a, c);
        };
      }(d), uv.b(a)));
    case "ord":
      return I.j(a, Pq, function() {
        var d = Pq.b(a);
        return rz.a ? rz.a(d, c) : rz.call(null, d, c);
      }(), C([Rj, function() {
        var d = Rj.b(a);
        return rz.a ? rz.a(d, c) : rz.call(null, d, c);
      }()], 0));
    case "alt":
      return I.c(a, uv, Tf.a(function() {
        return function(a) {
          return rz.a ? rz.a(a, c) : rz.call(null, a, c);
        };
      }(d), uv.b(a)));
    case "look":
      return mg.K(a, new Q(null, 1, 5, R, [Iq], null), rz, c);
    case "nt":
      return a;
    case "rep":
      return mg.K(a, new Q(null, 1, 5, R, [Iq], null), rz, c);
    case "star":
      return mg.K(a, new Q(null, 1, 5, R, [Iq], null), rz, c);
    case "string":
      return m(Yr.b(a)) ? I.c(dz.j(C([c, J.a(a, Yr)], 0)), Yr, Yr.b(a)) : dz.j(C([c, a], 0));
    case "regexp":
      return m(Yr.b(a)) ? I.c(dz.j(C([c, J.a(a, Yr)], 0)), Yr, Yr.b(a)) : dz.j(C([c, a], 0));
    case "plus":
      return mg.K(a, new Q(null, 1, 5, R, [Iq], null), rz, c);
    case "epsilon":
      return a;
    case "string-ci":
      return m(Yr.b(a)) ? I.c(dz.j(C([c, J.a(a, Yr)], 0)), Yr, Yr.b(a)) : dz.j(C([c, a], 0));
    case "opt":
      return mg.K(a, new Q(null, 1, 5, R, [Iq], null), rz, c);
    default:
      throw Error([q("No matching clause: "), q(Xt.b(a))].join(""));;
  }
};
function sz(b, a, c, d) {
  var e = mz(Yy(jz(d))), f = I.c(c, d, Ry(c.b ? c.b(d) : c.call(null, d)));
  c = gg.a(S, function() {
    return function(a, b) {
      return function u(c) {
        return new ff(null, function(a) {
          return function() {
            for (;;) {
              var b = w(c);
              if (b) {
                if (se(b)) {
                  var d = Tc(b), e = B(d), f = kf(e);
                  a: {
                    for (var g = 0;;) {
                      if (g < e) {
                        var n = Kb.a(d, g), y = F(n, 0, null), n = F(n, 1, null);
                        nf(f, new Q(null, 2, 5, R, [y, rz(n, a)], null));
                        g += 1;
                      } else {
                        d = !0;
                        break a;
                      }
                    }
                  }
                  return d ? mf(f.ta(), u(Uc(b))) : mf(f.ta(), null);
                }
                d = x(b);
                f = F(d, 0, null);
                d = F(d, 1, null);
                return Ud(new Q(null, 2, 5, R, [f, rz(d, a)], null), u(sd(b)));
              }
              return null;
            }
          };
        }(a, b), null, null);
      };
    }(e, f)(b);
  }());
  a = I.c(c, a, I.c(dz.j(C([J.a(c.b ? c.b(a) : c.call(null, a), Yr), e], 0)), Yr, Yr.b(c.b ? c.b(a) : c.call(null, a))));
  return ki.j(C([a, f], 0));
}
;function tz(b) {
  return function() {
    function a(a) {
      var b = null;
      if (0 < arguments.length) {
        for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
          d[b] = arguments[b + 0], ++b;
        }
        b = new rd(d, 0);
      }
      return c.call(this, b);
    }
    function c(a) {
      a = Wf(2, a);
      if (v.a(B(a), 1)) {
        return a = x(a), b.b ? b.b(a) : b.call(null, a);
      }
      a = Ig(a);
      return b.b ? b.b(a) : b.call(null, a);
    }
    a.N = 0;
    a.P = function(a) {
      a = w(a);
      return c(a);
    };
    a.j = c;
    return a;
  }();
}
function uz(b, a, c) {
  if ("string" === typeof a) {
    return b.replace(new RegExp(String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08"), "g"), c);
  }
  if (a instanceof RegExp) {
    return "string" === typeof c ? b.replace(new RegExp(a.source, "g"), c) : b.replace(new RegExp(a.source, "g"), tz(c));
  }
  throw [q("Invalid match arg: "), q(a)].join("");
}
function vz(b, a, c) {
  return b.replace(a, c);
}
function wz(b, a) {
  for (var c = new Oa, d = w(a);;) {
    if (null != d) {
      c.append("" + q(x(d))), d = z(d), null != d && c.append(b);
    } else {
      return c.toString();
    }
  }
}
function xz(b) {
  return b.toLowerCase();
}
function yz(b, a) {
  if (0 >= a || a >= 2 + B(b)) {
    return ce.a(Ig(Ud("", Tf.a(q, w(b)))), "");
  }
  if (m(Qe ? qc(1, a) : Pe.call(null, 1, a))) {
    return new Q(null, 1, 5, R, [b], null);
  }
  if (m(Qe ? qc(2, a) : Pe.call(null, 2, a))) {
    return new Q(null, 2, 5, R, ["", b], null);
  }
  var c = a - 2;
  return ce.a(Ig(Ud("", Lg(Ig(Tf.a(q, w(b))), 0, c))), b.substring(c));
}
function zz(b, a) {
  return Az(b, a, 0);
}
function Az(b, a, c) {
  if ("/(?:)/" === "" + q(a)) {
    a = yz(b, c);
  } else {
    if (1 > c) {
      a = Ig(("" + q(b)).split(a));
    } else {
      a: {
        for (var d = c, e = E;;) {
          if (1 === d) {
            a = ce.a(e, b);
            break a;
          }
          var f = Bi(a, b);
          if (null != f) {
            var g = b.indexOf(f), f = b.substring(g + B(f)), d = d - 1, e = ce.a(e, b.substring(0, g));
            b = f;
          } else {
            a = ce.a(e, b);
            break a;
          }
        }
      }
    }
  }
  if (0 === c && 1 < B(a)) {
    a: {
      for (c = a;;) {
        if ("" === ie(c)) {
          c = je(c);
        } else {
          break a;
        }
      }
    }
  } else {
    c = a;
  }
  return c;
}
function Bz(b, a) {
  var c = b.indexOf(a);
  return 0 > c ? null : c;
}
function Cz(b, a) {
  return pa(b, a);
}
;function Jf(b, a, c) {
  (a = rb(a)) ? (a = c.b ? c.b(Xt) : c.call(null, Xt), b = b.b ? b.b(a) : b.call(null, a)) : b = a;
  return m(b) ? [q("("), q(Dz ? Dz(c, !1) : Ez.call(null, c, !1)), q(")")].join("") : Dz ? Dz(c, !1) : Ez.call(null, c, !1);
}
var Fz = Hf(Jf, new V(null, new l(null, 3, [ak, null, Uk, null, Yl, null], null), null));
function Gz(b) {
  switch(b) {
    case "\n":
      return "\\n";
    case "\b":
      return "\\b";
    case "\f":
      return "\\f";
    case "\r":
      return "\\r";
    case "\t":
      return "\\t";
    default:
      return b;
  }
}
function Hz(b) {
  return uz([q('#"'), q(b.source.substring(1)), q('"')].join(""), /[\s]/, Gz);
}
function Iz(b) {
  return 4095 >= b ? [q("0000"), q(b.toString(16))].join("").substr(-4) : b.toString(16);
}
function Jz(b) {
  var a = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b;
  b = t.a(a, rp);
  a = t.a(a, Sv);
  return v.a(b, a) ? [q("%x"), q(Iz(b))].join("") : [q("%x"), q(Iz(b)), q("-"), q(Iz(a))].join("");
}
function Ez(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 1:
      return Dz(arguments[0], !1);
    case 2:
      return Dz(arguments[0], arguments[1]);
    default:
      throw Error([q("Invalid arity: "), q(a.length)].join(""));;
  }
}
function Dz(b, a) {
  var c = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, d = t.a(c, Iq), e = t.a(c, Pq), f = t.a(c, Rj), g = t.a(c, uv), n = t.a(c, Xt);
  if (m(function() {
    var b = rb(a);
    return b ? Lp.b(c) : b;
  }())) {
    return [q("\x3c"), q(Dz(c, !0)), q("\x3e")].join("");
  }
  var r = n instanceof K ? n.ca : null;
  switch(r) {
    case "neg":
      return [q("!"), q(Fz.a ? Fz.a(a, d) : Fz.call(null, a, d))].join("");
    case "cat":
      return wz(" ", Tf.a(If(new V(null, new l(null, 2, [Uk, null, Yl, null], null), null), a), g));
    case "ord":
      return [q(Jf(new V(null, new l(null, 1, [Yl, null], null), null), a, e)), q(" / "), q(Jf(new V(null, new l(null, 1, [Yl, null], null), null), a, f))].join("");
    case "alt":
      return wz(" | ", Tf.a(If(new V(null, new l(null, 1, [Uk, null], null), null), a), g));
    case "look":
      return [q("\x26"), q(Fz.a ? Fz.a(a, d) : Fz.call(null, a, d))].join("");
    case "nt":
      return Re("" + q(ur.b(c)), 1);
    case "rep":
      return yf(mk.b(c), Kr.b(c)) ? [q(Fz.a ? Fz.a(a, d) : Fz.call(null, a, d)), q("{"), q(mk.b(c)), q(","), q(Kr.b(c)), q("}")].join("") : [q(Fz.a ? Fz.a(a, d) : Fz.call(null, a, d)), q("{"), q(mk.b(c)), q("}")].join("");
    case "star":
      return [q(Fz.a ? Fz.a(a, d) : Fz.call(null, a, d)), q("*")].join("");
    case "string":
      var u = new Oa, y = db, D = bb;
      db = !0;
      bb = function(a, b, c) {
        return function(a) {
          return c.append(a);
        };
      }(y, D, u, r, b, c, c, d, e, f, g, n);
      try {
        Ri(C([Xo.b(c)], 0), kb());
      } finally {
        bb = D, db = y;
      }
      return "" + q(u);
    case "regexp":
      return Hz(Nq.b(c));
    case "plus":
      return [q(Fz.a ? Fz.a(a, d) : Fz.call(null, a, d)), q("+")].join("");
    case "epsilon":
      return "ε";
    case "string-ci":
      u = new Oa;
      y = db;
      D = bb;
      db = !0;
      bb = function(a, b, c) {
        return function(a) {
          return c.append(a);
        };
      }(y, D, u, r, b, c, c, d, e, f, g, n);
      try {
        Ri(C([Xo.b(c)], 0), kb());
      } finally {
        bb = D, db = y;
      }
      return "" + q(u);
    case "char":
      return Jz(c);
    case "opt":
      return [q(Fz.a ? Fz.a(a, d) : Fz.call(null, a, d)), q("?")].join("");
    default:
      throw Error([q("No matching clause: "), q(n)].join(""));;
  }
}
function Kz(b, a) {
  return v.a(Vs.b(Yr.b(a)), Bm) ? [q("\x3c"), q(ef(b)), q("\x3e"), q(" \x3d "), q(Dz(a, !1))].join("") : [q(ef(b)), q(" \x3d "), q(Dz(a, !1))].join("");
}
function Lz(b) {
  var a = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, c = t.a(a, fo), d = t.a(a, Wm);
  return wz("\n", Ud(Kz(d, c.b ? c.b(d) : c.call(null, d)), function() {
    return function(a, b, c, d) {
      return function u(e) {
        return new ff(null, function(a, b, c, d) {
          return function() {
            for (var a = e;;) {
              if (a = w(a)) {
                if (se(a)) {
                  var b = Tc(a), c = B(b), f = kf(c);
                  a: {
                    for (var g = 0;;) {
                      if (g < c) {
                        var n = Kb.a(b, g), y = F(n, 0, null), n = F(n, 1, null);
                        yf(y, d) && nf(f, Kz(y, n));
                        g += 1;
                      } else {
                        b = !0;
                        break a;
                      }
                    }
                  }
                  return b ? mf(f.ta(), u(Uc(a))) : mf(f.ta(), null);
                }
                b = x(a);
                f = F(b, 0, null);
                b = F(b, 1, null);
                if (yf(f, d)) {
                  return Ud(Kz(f, b), u(sd(a)));
                }
                a = sd(a);
              } else {
                return null;
              }
            }
          };
        }(a, b, c, d), null, null);
      };
    }(b, a, c, d)(c);
  }()));
}
;function Mz(b) {
  return null != b && 0 <= b && 1114111 >= b ? 65536 <= b && 1114111 >= b ? String.fromCharCode((b >> 10) + 55232) + String.fromCharCode((b & 1023) + 56320) : String.fromCharCode(b) : null;
}
function Nz(b, a) {
  var c = b.charCodeAt(a);
  if (55296 <= c && 56319 >= c && a + 1 < b.length) {
    var d = b.charCodeAt(a + 1);
    if (56320 <= d && 57343 >= d) {
      return 55296 <= c && 56319 >= c && 56320 <= d && 57343 >= d ? (c << 10) - 56623104 + (d - 56320 + 65536) : null;
    }
  } else {
    if (56320 <= c && 57343 >= c && 0 < a && (d = b.charCodeAt(a - 1), 55296 <= d && 56319 >= d)) {
      return -(55296 <= d && 56319 >= d && 56320 <= c && 57343 >= c ? (d << 10) - 56623104 + (c - 56320 + 65536) : 0);
    }
  }
  return c;
}
;function Oz(b) {
  return xe((new V(null, new l(null, 2, ["\n", null, "\r", null], null), null)).call(null, b));
}
function Pz(b, a) {
  for (var c = w(uz(a, "\r\n", "\n")), d = b;;) {
    if (le(c)) {
      return "";
    }
    if (v.a(d, 1)) {
      return P(q, vi(Ef(Oz), c));
    }
    m(Oz(x(c))) ? (c = z(c), --d) : c = z(c);
  }
}
function Qz(b) {
  m(Nk.b(b)) ? (Ui.j(C(["NOT "], 0)), Ui.j(C([Nk.b(b)], 0))) : m(Hv.b(b)) ? Ui.j(C([Jz(b)], 0)) : b instanceof RegExp ? Ui.j(C([Hz(b)], 0)) : Ri(C([b], 0), kb());
}
function Rz(b) {
  var a = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b;
  b = t.a(a, jr);
  var c = t.a(a, Cp), d = t.a(a, lw), a = t.a(a, oq);
  Xi(C(["Parse error at line", b, ", column", c, ":\n"], 0));
  Xi(C([d], 0));
  Xi(C([ye(c) ? 1 >= c ? "^" : P(q, N.a(Yf(c - 1, " "), new Q(null, 1, 5, R, ["^"], null))) : null], 0));
  c = ri(Tf.a(Gp, cg(fl, a)));
  b = ri(Tf.a(Gp, cg(Ef(fl), a)));
  d = B(c) + B(b);
  0 !== d && (v.a(1, d) ? Xi(C(["Expected:"], 0)) : Xi(C(["Expected one of:"], 0)));
  for (var c = w(c), d = null, e = a = 0;;) {
    if (e < a) {
      var f = d.ra(null, e);
      Qz(f);
      Xi(C([" (followed by end-of-string)"], 0));
      e += 1;
    } else {
      if (c = w(c)) {
        d = c, se(d) ? (c = Tc(d), e = Uc(d), d = c, a = B(c), c = e) : (c = x(d), Qz(c), Xi(C([" (followed by end-of-string)"], 0)), c = z(d), d = null, a = 0), e = 0;
      } else {
        break;
      }
    }
  }
  b = w(b);
  c = null;
  for (e = a = 0;;) {
    if (e < a) {
      d = c.ra(null, e), Qz(d), Wi(), e += 1;
    } else {
      if (b = w(b)) {
        c = b, se(c) ? (b = Tc(c), a = Uc(c), c = b, d = B(b), b = a, a = d) : (d = x(c), Qz(d), Wi(), b = z(c), c = null, a = 0), e = 0;
      } else {
        break;
      }
    }
  }
}
;var Sz = function Sz(a) {
  if (null != a && null != a.xg) {
    return a.xg();
  }
  var c = Sz[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = Sz._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("ISegment.toString", a);
};
function Tz(b, a, c) {
  this.text = b;
  this.offset = a;
  this.count = c;
  this.l = 2;
  this.M = 0;
}
Tz.prototype.xg = function() {
  return this.text.substring(this.offset, this.offset + this.count);
};
Tz.prototype.$ = function() {
  return this.count;
};
function Uz(b, a, c) {
  switch(Xt.b(b) instanceof K ? Xt.b(b).ca : null) {
    case "neg":
      return Vz.c ? Vz.c(b, a, c) : Vz.call(null, b, a, c);
    case "cat":
      return Wz.c ? Wz.c(b, a, c) : Wz.call(null, b, a, c);
    case "ord":
      return Xz.c ? Xz.c(b, a, c) : Xz.call(null, b, a, c);
    case "alt":
      return Yz.c ? Yz.c(b, a, c) : Yz.call(null, b, a, c);
    case "look":
      return Zz.c ? Zz.c(b, a, c) : Zz.call(null, b, a, c);
    case "nt":
      return $z.c ? $z.c(b, a, c) : $z.call(null, b, a, c);
    case "rep":
      return aA.c ? aA.c(b, a, c) : aA.call(null, b, a, c);
    case "star":
      return bA.c ? bA.c(b, a, c) : bA.call(null, b, a, c);
    case "string":
      return cA.c ? cA.c(b, a, c) : cA.call(null, b, a, c);
    case "regexp":
      return dA.c ? dA.c(b, a, c) : dA.call(null, b, a, c);
    case "plus":
      return eA.c ? eA.c(b, a, c) : eA.call(null, b, a, c);
    case "epsilon":
      return fA.c ? fA.c(b, a, c) : fA.call(null, b, a, c);
    case "string-ci":
      return gA.c ? gA.c(b, a, c) : gA.call(null, b, a, c);
    case "char":
      return hA.c ? hA.c(b, a, c) : hA.call(null, b, a, c);
    case "opt":
      return iA.c ? iA.c(b, a, c) : iA.call(null, b, a, c);
    default:
      throw Error([q("No matching clause: "), q(Xt.b(b))].join(""));;
  }
}
function jA(b, a, c) {
  switch(Xt.b(b) instanceof K ? Xt.b(b).ca : null) {
    case "neg":
      return Vz.c ? Vz.c(b, a, c) : Vz.call(null, b, a, c);
    case "cat":
      return kA.c ? kA.c(b, a, c) : kA.call(null, b, a, c);
    case "ord":
      return lA.c ? lA.c(b, a, c) : lA.call(null, b, a, c);
    case "alt":
      return mA.c ? mA.c(b, a, c) : mA.call(null, b, a, c);
    case "look":
      return nA.c ? nA.c(b, a, c) : nA.call(null, b, a, c);
    case "nt":
      return oA.c ? oA.c(b, a, c) : oA.call(null, b, a, c);
    case "rep":
      return pA.c ? pA.c(b, a, c) : pA.call(null, b, a, c);
    case "star":
      return qA.c ? qA.c(b, a, c) : qA.call(null, b, a, c);
    case "string":
      return rA.c ? rA.c(b, a, c) : rA.call(null, b, a, c);
    case "regexp":
      return sA.c ? sA.c(b, a, c) : sA.call(null, b, a, c);
    case "plus":
      return tA.c ? tA.c(b, a, c) : tA.call(null, b, a, c);
    case "epsilon":
      return uA.c ? uA.c(b, a, c) : uA.call(null, b, a, c);
    case "string-ci":
      return vA.c ? vA.c(b, a, c) : vA.call(null, b, a, c);
    case "char":
      return wA.c ? wA.c(b, a, c) : wA.call(null, b, a, c);
    case "opt":
      return xA.c ? xA.c(b, a, c) : xA.call(null, b, a, c);
    default:
      throw Error([q("No matching clause: "), q(Xt.b(b))].join(""));;
  }
}
function yA(b, a, c, d, e) {
  this.index = b;
  this.reason = a;
  this.h = c;
  this.g = d;
  this.m = e;
  this.l = 2229667594;
  this.M = 8192;
}
h = yA.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "index":
      return this.index;
    case "reason":
      return this.reason;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#instaparse.gll.Failure{", ", ", "}", c, N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Gl, this.index], null), new Q(null, 2, 5, R, [oq, this.reason], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 2, new Q(null, 2, 5, R, [Gl, oq], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 2 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 2, [Gl, null, oq, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new yA(this.index, this.reason, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Gl, a) : L.call(null, Gl, a)) ? new yA(c, this.reason, this.h, this.g, null) : m(L.a ? L.a(oq, a) : L.call(null, oq, a)) ? new yA(this.index, c, this.h, this.g, null) : new yA(this.index, this.reason, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [Gl, this.index], null), new Q(null, 2, 5, R, [oq, this.reason], null)], null), this.g));
};
h.U = function(b, a) {
  return new yA(this.index, this.reason, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.Aa = k;
h.X = function(b, a) {
  var c = this;
  return Ac(a, function() {
    var a = new Oa, b = db, f = bb;
    db = !0;
    bb = function(a, b, c) {
      return function(a) {
        return c.append(a);
      };
    }(b, f, a, c);
    try {
      Rz(c);
    } finally {
      bb = f, db = b;
    }
    return "" + q(a);
  }());
};
function zA(b) {
  return new Tz(b, 0, B(b));
}
function AA(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O) {
  this.Pa = b;
  this.text = a;
  this.Fb = c;
  this.Cb = d;
  this.Eb = e;
  this.stack = f;
  this.cb = g;
  this.tb = n;
  this.Ua = r;
  this.vb = u;
  this.Ba = y;
  this.eb = D;
  this.sb = G;
  this.h = H;
  this.g = M;
  this.m = O;
  this.l = 2229667594;
  this.M = 8192;
}
h = AA.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "msg-cache":
      return this.vb;
    case "negative-listeners":
      return this.Ua;
    case "generation":
      return this.tb;
    case "failure":
      return this.sb;
    case "fail-index":
      return this.Cb;
    case "grammar":
      return this.Pa;
    case "success":
      return this.eb;
    case "nodes":
      return this.Ba;
    case "node-builder":
      return this.Eb;
    case "segment":
      return this.Fb;
    case "stack":
      return this.stack;
    case "next-stack":
      return this.cb;
    case "text":
      return this.text;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#instaparse.gll.Tramp{", ", ", "}", c, N.a(new Q(null, 13, 5, R, [new Q(null, 2, 5, R, [fo, this.Pa], null), new Q(null, 2, 5, R, [lw, this.text], null), new Q(null, 2, 5, R, [Hr, this.Fb], null), new Q(null, 2, 5, R, [$n, this.Cb], null), new Q(null, 2, 5, R, [fr, this.Eb], null), new Q(null, 2, 5, R, [Hs, this.stack], null), new Q(null, 2, 5, R, [Ft, this.cb], null), new Q(null, 2, 5, R, [bl, this.tb], null), new Q(null, 2, 5, R, [al, this.Ua], null), new Q(null, 2, 5, R, [Ck, this.vb], 
  null), new Q(null, 2, 5, R, [dr, this.Ba], null), new Q(null, 2, 5, R, [Uq, this.eb], null), new Q(null, 2, 5, R, [dm, this.sb], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 13, new Q(null, 13, 5, R, [fo, lw, Hr, $n, fr, Hs, Ft, bl, al, Ck, dr, Uq, dm], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 13 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 13, [Ck, null, al, null, bl, null, dm, null, $n, null, fo, null, Uq, null, dr, null, fr, null, Hr, null, Hs, null, Ft, null, lw, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new AA(this.Pa, this.text, this.Fb, this.Cb, this.Eb, this.stack, this.cb, this.tb, this.Ua, this.vb, this.Ba, this.eb, this.sb, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(fo, a) : L.call(null, fo, a)) ? new AA(c, this.text, this.Fb, this.Cb, this.Eb, this.stack, this.cb, this.tb, this.Ua, this.vb, this.Ba, this.eb, this.sb, this.h, this.g, null) : m(L.a ? L.a(lw, a) : L.call(null, lw, a)) ? new AA(this.Pa, c, this.Fb, this.Cb, this.Eb, this.stack, this.cb, this.tb, this.Ua, this.vb, this.Ba, this.eb, this.sb, this.h, this.g, null) : m(L.a ? L.a(Hr, a) : L.call(null, Hr, a)) ? new AA(this.Pa, this.text, c, this.Cb, this.Eb, this.stack, this.cb, 
  this.tb, this.Ua, this.vb, this.Ba, this.eb, this.sb, this.h, this.g, null) : m(L.a ? L.a($n, a) : L.call(null, $n, a)) ? new AA(this.Pa, this.text, this.Fb, c, this.Eb, this.stack, this.cb, this.tb, this.Ua, this.vb, this.Ba, this.eb, this.sb, this.h, this.g, null) : m(L.a ? L.a(fr, a) : L.call(null, fr, a)) ? new AA(this.Pa, this.text, this.Fb, this.Cb, c, this.stack, this.cb, this.tb, this.Ua, this.vb, this.Ba, this.eb, this.sb, this.h, this.g, null) : m(L.a ? L.a(Hs, a) : L.call(null, Hs, a)) ? 
  new AA(this.Pa, this.text, this.Fb, this.Cb, this.Eb, c, this.cb, this.tb, this.Ua, this.vb, this.Ba, this.eb, this.sb, this.h, this.g, null) : m(L.a ? L.a(Ft, a) : L.call(null, Ft, a)) ? new AA(this.Pa, this.text, this.Fb, this.Cb, this.Eb, this.stack, c, this.tb, this.Ua, this.vb, this.Ba, this.eb, this.sb, this.h, this.g, null) : m(L.a ? L.a(bl, a) : L.call(null, bl, a)) ? new AA(this.Pa, this.text, this.Fb, this.Cb, this.Eb, this.stack, this.cb, c, this.Ua, this.vb, this.Ba, this.eb, this.sb, 
  this.h, this.g, null) : m(L.a ? L.a(al, a) : L.call(null, al, a)) ? new AA(this.Pa, this.text, this.Fb, this.Cb, this.Eb, this.stack, this.cb, this.tb, c, this.vb, this.Ba, this.eb, this.sb, this.h, this.g, null) : m(L.a ? L.a(Ck, a) : L.call(null, Ck, a)) ? new AA(this.Pa, this.text, this.Fb, this.Cb, this.Eb, this.stack, this.cb, this.tb, this.Ua, c, this.Ba, this.eb, this.sb, this.h, this.g, null) : m(L.a ? L.a(dr, a) : L.call(null, dr, a)) ? new AA(this.Pa, this.text, this.Fb, this.Cb, this.Eb, 
  this.stack, this.cb, this.tb, this.Ua, this.vb, c, this.eb, this.sb, this.h, this.g, null) : m(L.a ? L.a(Uq, a) : L.call(null, Uq, a)) ? new AA(this.Pa, this.text, this.Fb, this.Cb, this.Eb, this.stack, this.cb, this.tb, this.Ua, this.vb, this.Ba, c, this.sb, this.h, this.g, null) : m(L.a ? L.a(dm, a) : L.call(null, dm, a)) ? new AA(this.Pa, this.text, this.Fb, this.Cb, this.Eb, this.stack, this.cb, this.tb, this.Ua, this.vb, this.Ba, this.eb, c, this.h, this.g, null) : new AA(this.Pa, this.text, 
  this.Fb, this.Cb, this.Eb, this.stack, this.cb, this.tb, this.Ua, this.vb, this.Ba, this.eb, this.sb, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 13, 5, R, [new Q(null, 2, 5, R, [fo, this.Pa], null), new Q(null, 2, 5, R, [lw, this.text], null), new Q(null, 2, 5, R, [Hr, this.Fb], null), new Q(null, 2, 5, R, [$n, this.Cb], null), new Q(null, 2, 5, R, [fr, this.Eb], null), new Q(null, 2, 5, R, [Hs, this.stack], null), new Q(null, 2, 5, R, [Ft, this.cb], null), new Q(null, 2, 5, R, [bl, this.tb], null), new Q(null, 2, 5, R, [al, this.Ua], null), new Q(null, 2, 5, R, [Ck, this.vb], null), new Q(null, 2, 5, R, [dr, this.Ba], 
  null), new Q(null, 2, 5, R, [Uq, this.eb], null), new Q(null, 2, 5, R, [dm, this.sb], null)], null), this.g));
};
h.U = function(b, a) {
  return new AA(this.Pa, this.text, this.Fb, this.Cb, this.Eb, this.stack, this.cb, this.tb, this.Ua, this.vb, this.Ba, this.eb, this.sb, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
function BA(b, a, c, d, e) {
  return new AA(b, a, c, d, e, E, E, 0, hi(Je), S, S, null, new yA(0, E, null, null, null), null, null, null);
}
function CA(b, a) {
  return new l(null, 2, [Cr, b, Gl, a], null);
}
function DA(b, a, c, d, e, f, g) {
  this.jc = b;
  this.pc = a;
  this.lc = c;
  this.ac = d;
  this.h = e;
  this.g = f;
  this.m = g;
  this.l = 2229667594;
  this.M = 8192;
}
h = DA.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "listeners":
      return this.jc;
    case "full-listeners":
      return this.pc;
    case "results":
      return this.lc;
    case "full-results":
      return this.ac;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#instaparse.gll.Node{", ", ", "}", c, N.a(new Q(null, 4, 5, R, [new Q(null, 2, 5, R, [vv, this.jc], null), new Q(null, 2, 5, R, [Ok, this.pc], null), new Q(null, 2, 5, R, [vw, this.lc], null), new Q(null, 2, 5, R, [Zj, this.ac], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 4, new Q(null, 4, 5, R, [vv, Ok, vw, Zj], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 4 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 4, [Zj, null, Ok, null, vv, null, vw, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new DA(this.jc, this.pc, this.lc, this.ac, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(vv, a) : L.call(null, vv, a)) ? new DA(c, this.pc, this.lc, this.ac, this.h, this.g, null) : m(L.a ? L.a(Ok, a) : L.call(null, Ok, a)) ? new DA(this.jc, c, this.lc, this.ac, this.h, this.g, null) : m(L.a ? L.a(vw, a) : L.call(null, vw, a)) ? new DA(this.jc, this.pc, c, this.ac, this.h, this.g, null) : m(L.a ? L.a(Zj, a) : L.call(null, Zj, a)) ? new DA(this.jc, this.pc, this.lc, c, this.h, this.g, null) : new DA(this.jc, this.pc, this.lc, this.ac, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 4, 5, R, [new Q(null, 2, 5, R, [vv, this.jc], null), new Q(null, 2, 5, R, [Ok, this.pc], null), new Q(null, 2, 5, R, [vw, this.lc], null), new Q(null, 2, 5, R, [Zj, this.ac], null)], null), this.g));
};
h.U = function(b, a) {
  return new DA(this.jc, this.pc, this.lc, this.ac, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
function EA(b, a) {
  return b.stack = ce.a(b.stack, a);
}
function FA(b, a, c) {
  var d = b.vb, e = Gl.b(c), f = new Q(null, 2, 5, R, [a, e], null), g = t.c(d, f, 0), d = function() {
    return function() {
      return a.b ? a.b(c) : a.call(null, c);
    };
  }(d, e, f, g);
  g > b.tb ? b.cb = ce.a(b.cb, d) : b.stack = ce.a(b.stack, d);
  b.vb = I.c(b.vb, f, g + 1);
}
function GA(b, a) {
  var c = b.Ba, c = c.b ? c.b(a) : c.call(null, a);
  return m(c) ? 0 < B(c.jc) : null;
}
function HA(b, a) {
  var c = b.Ba, c = c.b ? c.b(a) : c.call(null, a);
  return m(c) ? 0 < B(c.pc) || 0 < B(c.jc) : null;
}
function IA(b, a) {
  var c = b.Ba, c = c.b ? c.b(a) : c.call(null, a);
  return m(c) ? 0 < B(c.ac) || 0 < B(c.lc) : null;
}
function JA(b, a) {
  var c = b.Ba, c = c.b ? c.b(a) : c.call(null, a);
  m(c) || (c = new DA(E, E, oi, oi, null, null, null), b.Ba = I.c(b.Ba, a, c));
  return c;
}
function KA(b, a) {
  return (null != b ? b.l & 262144 || k === b.uh || (b.l ? 0 : p(kc, b)) : p(kc, b)) ? Wd(b, a) : b;
}
function LA(b, a, c) {
  var d = JA(b, a), e = a.b ? a.b(1) : a.call(null, 1);
  c = m(Lp.b(e)) ? I.c(c, Cr, null) : c;
  e = Yr.b(e);
  a = m(e) ? CA(KA(Vy(e, Cr.b(c)), new l(null, 2, [Rr, a.b ? a.b(0) : a.call(null, 0), qm, Gl.b(c)], null)), Gl.b(c)) : c;
  e = v.a(B(b.text), Gl.b(a));
  c = m(e) ? d.ac : d.lc;
  if (rb(c.b ? c.b(a) : c.call(null, a))) {
    m(e) ? d.ac = ce.a(d.ac, a) : d.lc = ce.a(d.lc, a);
    c = w(d.jc);
    for (var f = null, g = 0, n = 0;;) {
      if (n < g) {
        var r = f.ra(null, n);
        FA(b, r, a);
        n += 1;
      } else {
        if (c = w(c)) {
          f = c, se(f) ? (c = Tc(f), n = Uc(f), f = c, g = B(c), c = n) : (c = x(f), FA(b, c, a), c = z(f), f = null, g = 0), n = 0;
        } else {
          break;
        }
      }
    }
    if (m(e)) {
      for (d = w(d.pc), e = null, g = f = 0;;) {
        if (g < f) {
          c = e.ra(null, g), FA(b, c, a), g += 1;
        } else {
          if (d = w(d)) {
            e = d, se(e) ? (d = Tc(e), f = Uc(e), e = d, c = B(d), d = f, f = c) : (c = x(e), FA(b, c, a), d = z(e), e = null, f = 0), g = 0;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
  } else {
    return null;
  }
}
function MA(b, a, c) {
  var d = GA(b, a), e = JA(b, a);
  e.jc = ce.a(e.jc, c);
  for (var f = w(e.lc), g = null, n = 0, r = 0;;) {
    if (r < n) {
      var u = g.ra(null, r);
      FA(b, c, u);
      r += 1;
    } else {
      if (f = w(f)) {
        g = f, se(g) ? (f = Tc(g), r = Uc(g), g = f, n = B(f), f = r) : (f = x(g), FA(b, c, f), f = z(g), g = null, n = 0), r = 0;
      } else {
        break;
      }
    }
  }
  f = w(e.ac);
  g = null;
  for (r = n = 0;;) {
    if (r < n) {
      u = g.ra(null, r), FA(b, c, u), r += 1;
    } else {
      if (f = w(f)) {
        g = f, se(g) ? (f = Tc(g), r = Uc(g), g = f, n = B(f), f = r) : (f = x(g), FA(b, c, f), f = z(g), g = null, n = 0), r = 0;
      } else {
        break;
      }
    }
  }
  return rb(d) ? EA(b, function() {
    return function() {
      return Uz(a.b ? a.b(1) : a.call(null, 1), a.b ? a.b(0) : a.call(null, 0), b);
    };
  }(d, e)) : null;
}
function NA(b, a, c) {
  var d = HA(b, a), e = JA(b, a);
  e.pc = ce.a(e.pc, c);
  for (var f = w(e.ac), g = null, n = 0, r = 0;;) {
    if (r < n) {
      var u = g.ra(null, r);
      FA(b, c, u);
      r += 1;
    } else {
      if (f = w(f)) {
        g = f, se(g) ? (f = Tc(g), r = Uc(g), g = f, n = B(f), f = r) : (f = x(g), FA(b, c, f), f = z(g), g = null, n = 0), r = 0;
      } else {
        break;
      }
    }
  }
  return rb(d) ? EA(b, function() {
    return function() {
      return jA(a.b ? a.b(1) : a.call(null, 1), a.b ? a.b(0) : a.call(null, 0), b);
    };
  }(d, e)) : null;
}
var OA = Hf(li, gg);
function PA(b, a, c) {
  var d;
  d = b.Ua;
  a = jh([a.b ? a.b(0) : a.call(null, 0), new Q(null, 1, 5, R, [c], null)]);
  d = OA.a ? OA.a(d, a) : OA.call(null, d, a);
  return b.Ua = d;
}
function QA(b, a, c, d) {
  b.sb = function(a) {
    var b = Gl.b(a);
    switch(Ae(c, b)) {
      case 1:
        return new yA(c, new Q(null, 1, 5, R, [d], null), null, null, null);
      case 0:
        return new yA(c, ce.a(oq.b(a), d), null, null, null);
      case -1:
        return a;
      default:
        throw Error([q("No matching clause: "), q(Ae(c, b))].join(""));;
    }
  }.call(null, b.sb);
  return v.a(c, b.Cb) ? LA(b, a, CA(function() {
    var a = b.Eb, d = b.text.substring(c), g = B(b.text);
    return RA.ba ? RA.ba(a, Ip, d, c, g) : RA.call(null, a, Ip, d, c, g);
  }(), B(b.text))) : null;
}
function SA(b) {
  var a = ie(b.stack);
  b.stack = je(b.stack);
  a.o ? a.o() : a.call(null);
}
function TA(b, a) {
  for (;;) {
    var c = b.stack;
    if (m(b.eb)) {
      return Ud(Cr.b(b.eb), new ff(null, function(a) {
        return function() {
          a.eb = null;
          return TA(a, !0);
        };
      }(b, a, c), null, null));
    }
    if (0 < B(c)) {
      SA(b);
    } else {
      if (0 < B(b.Ua)) {
        var d = x(b.Ua), c = F(d, 0, null), d = F(d, 1, null), e = ie(d);
        e.o ? e.o() : e.call(null);
        v.a(B(d), 1) ? b.Ua = J.a(b.Ua, c) : b.Ua = ng(b.Ua, c);
      } else {
        if (m(a)) {
          b.stack = b.cb, b.cb = E, b.tb += 1, a = null;
        } else {
          return null;
        }
      }
    }
  }
}
function UA(b, a) {
  return function(c) {
    return LA(a, b, c);
  };
}
function VA(b, a) {
  return function() {
    return LA(a, b, CA(null, b.b ? b.b(0) : b.call(null, 0)));
  };
}
var WA = function WA(a, c, d, e) {
  return function(f) {
    var g = null != f && (f.l & 64 || k === f.I) ? P(Of, f) : f;
    f = t.a(g, Cr);
    g = t.a(g, Gl);
    f = Iy(a, f);
    if (w(c)) {
      var g = new Q(null, 2, 5, R, [g, x(c)], null), n = z(c);
      f = WA.K ? WA.K(f, n, d, e) : WA.call(null, f, n, d, e);
      f = MA(e, g, f);
    } else {
      f = LA(e, d, CA(f, g));
    }
    return f;
  };
}, XA = function XA(a, c, d, e) {
  return function(f) {
    var g = null != f && (f.l & 64 || k === f.I) ? P(Of, f) : f;
    f = t.a(g, Cr);
    var g = t.a(g, Gl), n = Iy(a, f);
    return m(Qy(c)) ? NA(e, new Q(null, 2, 5, R, [g, x(c)], null), function() {
      var a = z(c);
      return XA.K ? XA.K(n, a, d, e) : XA.call(null, n, a, d, e);
    }()) : w(c) ? MA(e, new Q(null, 2, 5, R, [g, x(c)], null), function() {
      var a = z(c);
      return XA.K ? XA.K(n, a, d, e) : XA.call(null, n, a, d, e);
    }()) : LA(e, d, CA(n, g));
  };
}, YA = function YA(a, c, d, e, f) {
  return function(g) {
    var n = null != g && (g.l & 64 || k === g.I) ? P(Of, g) : g;
    g = t.a(n, Cr);
    n = t.a(n, Gl);
    if (v.a(n, d)) {
      return 0 === B(a) ? LA(f, e, CA(null, n)) : null;
    }
    g = Iy(a, g);
    MA(f, new Q(null, 2, 5, R, [n, c], null), YA.ba ? YA.ba(g, c, n, e, f) : YA.call(null, g, c, n, e, f));
    return LA(f, e, CA(g, n));
  };
}, ZA = function ZA(a, c, d, e, f) {
  return function(g) {
    var n = null != g && (g.l & 64 || k === g.I) ? P(Of, g) : g;
    g = t.a(n, Cr);
    n = t.a(n, Gl);
    if (v.a(n, d)) {
      return 0 === B(a) ? LA(f, e, CA(null, n)) : null;
    }
    g = Iy(a, g);
    return v.a(n, B(lw.b(f))) ? LA(f, e, CA(g, n)) : MA(f, new Q(null, 2, 5, R, [n, c], null), ZA.ba ? ZA.ba(g, c, n, e, f) : ZA.call(null, g, c, n, e, f));
  };
}, $A = function $A(a, c, d, e, f, g, n) {
  return function(f) {
    var u = null != f && (f.l & 64 || k === f.I) ? P(Of, f) : f;
    f = t.a(u, Cr);
    u = t.a(u, Gl);
    f = Iy(a, f);
    d <= B(f) && B(f) <= e && LA(n, g, CA(f, u));
    return B(f) < e ? MA(n, new Q(null, 2, 5, R, [u, c], null), $A.Oa ? $A.Oa(f, c, d, e, u, g, n) : $A.call(null, f, c, d, e, u, g, n)) : null;
  };
}, aB = function aB(a, c, d, e, f, g, n) {
  return function(f) {
    var u = null != f && (f.l & 64 || k === f.I) ? P(Of, f) : f;
    f = t.a(u, Cr);
    u = t.a(u, Gl);
    f = Iy(a, f);
    return v.a(u, B(lw.b(n))) ? d <= B(f) && B(f) <= e ? LA(n, g, CA(f, u)) : null : B(f) < e ? MA(n, new Q(null, 2, 5, R, [u, c], null), aB.Oa ? aB.Oa(f, c, d, e, u, g, n) : aB.call(null, f, c, d, e, u, g, n)) : null;
  };
};
function bB(b) {
  return function(a) {
    return b.eb = a;
  };
}
function cA(b, a, c) {
  var d = Xo.b(b), e = c.text, f;
  f = B(e);
  var g = a + B(d);
  f = f < g ? f : g;
  return v.a(d, e.substring(a, f)) ? LA(c, new Q(null, 2, 5, R, [a, b], null), CA(d, f)) : QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 2, [Xt, Xo, Gp, d], null));
}
function rA(b, a, c) {
  var d = Xo.b(b), e = c.text, f;
  f = B(e);
  var g = a + B(d);
  f = f < g ? f : g;
  g = e.substring(a, f);
  return v.a(f, B(e)) && v.a(d, g) ? LA(c, new Q(null, 2, 5, R, [a, b], null), CA(d, f)) : QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 3, [Xt, Xo, Gp, d, fl, !0], null));
}
function gA(b, a, c) {
  var d = Xo.b(b), e = c.text, f;
  f = B(e);
  var g = a + B(d);
  f = f < g ? f : g;
  return m(v.a(d.toUpperCase(), e.substring(a, f).toUpperCase())) ? LA(c, new Q(null, 2, 5, R, [a, b], null), CA(d, f)) : QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 2, [Xt, Xo, Gp, d], null));
}
function vA(b, a, c) {
  var d = Xo.b(b), e = c.text, f = function() {
    var b = B(e), c = a + B(d);
    return b < c ? b : c;
  }(), g = e.substring(a, f);
  return m(function() {
    var a = v.a(f, B(e));
    return a ? v.a(d.toUpperCase(), g.toUpperCase()) : a;
  }()) ? LA(c, new Q(null, 2, 5, R, [a, b], null), CA(d, f)) : QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 3, [Xt, Xo, Gp, d, fl, !0], null));
}
function hA(b, a, c) {
  var d = rp.b(b), e = Sv.b(b), f = lw.b(c);
  if (a >= B(f)) {
    return QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 2, [Xt, Xv, Gp, new l(null, 3, [Hv, !0, rp, d, Sv, e], null)], null));
  }
  if (65535 >= e) {
    return f = f.charCodeAt(a), d <= f && f <= e ? LA(c, new Q(null, 2, 5, R, [a, b], null), CA(Ke(f), a + 1)) : QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 2, [Xt, Xv, Gp, new l(null, 3, [Hv, !0, rp, d, Sv, e], null)], null));
  }
  var f = Nz(f, a | 0), g = Mz(f);
  return d <= f && f <= e ? LA(c, new Q(null, 2, 5, R, [a, b], null), CA(g, a + B(g))) : QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 2, [Xt, Xv, Gp, new l(null, 3, [Hv, !0, rp, d, Sv, e], null)], null));
}
function wA(b, a, c) {
  var d = rp.b(b), e = Sv.b(b), f = lw.b(c), g = B(f);
  if (a >= B(f)) {
    return QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 3, [Xt, Xv, Gp, new l(null, 3, [Hv, !0, rp, d, Sv, e], null), fl, !0], null));
  }
  if (65535 >= e) {
    return f = f.charCodeAt(a), v.a(a + 1, g) && d <= f && f <= e ? LA(c, new Q(null, 2, 5, R, [a, b], null), CA(Ke(f), g)) : QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 3, [Xt, Xv, Gp, new l(null, 3, [Hv, !0, rp, d, Sv, e], null), fl, !0], null));
  }
  var f = Nz(f, a | 0), n = Mz(f);
  return v.a(a + B(n), g) && d <= f && f <= e ? LA(c, new Q(null, 2, 5, R, [a, b], null), CA(n, g)) : QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 3, [Xt, Xv, Gp, new l(null, 3, [Hv, !0, rp, d, Sv, e], null), fl, !0], null));
}
function cB(b, a) {
  var c = (new RegExp(b.source, "g")).exec(a);
  return m(m(c) ? 0 === c.index : c) ? x(c) : null;
}
function dA(b, a, c) {
  var d = Nq.b(b), e = c.Fb, f = B(e), e = Sz(new Tz(e.text, e.offset + a, f - a)), e = cB(d, e);
  return m(e) ? LA(c, new Q(null, 2, 5, R, [a, b], null), CA(e, a + B(e))) : QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 2, [Xt, Nq, Gp, d], null));
}
function sA(b, a, c) {
  var d = Nq.b(b), e = Hr.b(c), f = B(e), f = Sz(new Tz(e.text, e.offset + a, f - a)), f = cB(d, f), g = B(e) - a;
  return m(m(f) ? v.a(B(f), g) : f) ? LA(c, new Q(null, 2, 5, R, [a, b], null), CA(f, B(e))) : QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 3, [Xt, Nq, Gp, d, fl, !0], null));
}
var Wz = function(b) {
  return function(a, c, d) {
    var e = uv.b(a);
    return MA(d, new Q(null, 2, 5, R, [c, x(e)], null), WA(b, z(e), new Q(null, 2, 5, R, [c, a], null), d));
  };
}(Ky), kA = function(b) {
  return function(a, c, d) {
    var e = uv.b(a);
    return MA(d, new Q(null, 2, 5, R, [c, x(e)], null), XA(b, z(e), new Q(null, 2, 5, R, [c, a], null), d));
  };
}(Ky), eA = function(b) {
  return function(a, c, d) {
    var e = Iq.b(a);
    return MA(d, new Q(null, 2, 5, R, [c, e], null), YA(b, e, c, new Q(null, 2, 5, R, [c, a], null), d));
  };
}(Ky), tA = function(b) {
  return function(a, c, d) {
    var e = Iq.b(a);
    return MA(d, new Q(null, 2, 5, R, [c, e], null), ZA(b, e, c, new Q(null, 2, 5, R, [c, a], null), d));
  };
}(Ky), aA = function(b) {
  return function(a, c, d) {
    var e = Iq.b(a), f = mk.b(a), g = Kr.b(a);
    return 0 === f ? (LA(d, new Q(null, 2, 5, R, [c, a], null), CA(null, c)), 1 <= g ? MA(d, new Q(null, 2, 5, R, [c, e], null), $A(b, e, 1, g, c, new Q(null, 2, 5, R, [c, a], null), d)) : null) : MA(d, new Q(null, 2, 5, R, [c, e], null), $A(b, e, f, g, c, new Q(null, 2, 5, R, [c, a], null), d));
  };
}(Ky), pA = function(b) {
  return function(a, c, d) {
    var e = Iq.b(a), f = mk.b(a), g = Kr.b(a);
    return 0 === f ? (LA(d, new Q(null, 2, 5, R, [c, a], null), CA(null, c)), 1 <= g ? MA(d, new Q(null, 2, 5, R, [c, e], null), aB(b, e, 1, g, c, new Q(null, 2, 5, R, [c, a], null), d)) : null) : MA(d, new Q(null, 2, 5, R, [c, e], null), aB(b, e, f, g, c, new Q(null, 2, 5, R, [c, a], null), d));
  };
}(Ky), bA = function(b) {
  return function(a, c, d) {
    var e = Iq.b(a);
    MA(d, new Q(null, 2, 5, R, [c, e], null), YA(b, e, c, new Q(null, 2, 5, R, [c, a], null), d));
    return LA(d, new Q(null, 2, 5, R, [c, a], null), CA(null, c));
  };
}(Ky), qA = function(b) {
  return function(a, c, d) {
    var e = Iq.b(a);
    return v.a(c, B(lw.b(d))) ? LA(d, new Q(null, 2, 5, R, [c, a], null), CA(null, c)) : MA(d, new Q(null, 2, 5, R, [c, e], null), ZA(b, e, c, new Q(null, 2, 5, R, [c, a], null), d));
  };
}(Ky);
function Yz(b, a, c) {
  for (var d = uv.b(b), d = w(d), e = null, f = 0, g = 0;;) {
    if (g < f) {
      var n = e.ra(null, g);
      MA(c, new Q(null, 2, 5, R, [a, n], null), UA(new Q(null, 2, 5, R, [a, b], null), c));
      g += 1;
    } else {
      if (d = w(d)) {
        e = d, se(e) ? (d = Tc(e), f = Uc(e), e = d, n = B(d), d = f, f = n) : (n = x(e), MA(c, new Q(null, 2, 5, R, [a, n], null), UA(new Q(null, 2, 5, R, [a, b], null), c)), d = z(e), e = null, f = 0), g = 0;
      } else {
        return null;
      }
    }
  }
}
function mA(b, a, c) {
  for (var d = uv.b(b), d = w(d), e = null, f = 0, g = 0;;) {
    if (g < f) {
      var n = e.ra(null, g);
      NA(c, new Q(null, 2, 5, R, [a, n], null), UA(new Q(null, 2, 5, R, [a, b], null), c));
      g += 1;
    } else {
      if (d = w(d)) {
        e = d, se(e) ? (d = Tc(e), f = Uc(e), e = d, n = B(d), d = f, f = n) : (n = x(e), NA(c, new Q(null, 2, 5, R, [a, n], null), UA(new Q(null, 2, 5, R, [a, b], null), c)), d = z(e), e = null, f = 0), g = 0;
      } else {
        return null;
      }
    }
  }
}
function Xz(b, a, c) {
  var d = Pq.b(b), e = Rj.b(b), f = new Q(null, 2, 5, R, [a, d], null), g = new Q(null, 2, 5, R, [a, e], null);
  b = UA(new Q(null, 2, 5, R, [a, b], null), c);
  MA(c, f, b);
  return PA(c, f, function(a, b, d, e, f) {
    return function() {
      return MA(c, e, f);
    };
  }(d, e, f, g, b));
}
function lA(b, a, c) {
  var d = Pq.b(b), e = Rj.b(b), f = new Q(null, 2, 5, R, [a, d], null), g = new Q(null, 2, 5, R, [a, e], null);
  b = UA(new Q(null, 2, 5, R, [a, b], null), c);
  NA(c, f, b);
  return PA(c, f, function(a, b, d, e, f) {
    return function() {
      return NA(c, e, f);
    };
  }(d, e, f, g, b));
}
function iA(b, a, c) {
  var d = Iq.b(b);
  MA(c, new Q(null, 2, 5, R, [a, d], null), UA(new Q(null, 2, 5, R, [a, b], null), c));
  return LA(c, new Q(null, 2, 5, R, [a, b], null), CA(null, a));
}
function xA(b, a, c) {
  var d = Iq.b(b);
  NA(c, new Q(null, 2, 5, R, [a, d], null), UA(new Q(null, 2, 5, R, [a, b], null), c));
  return v.a(a, B(lw.b(c))) ? LA(c, new Q(null, 2, 5, R, [a, b], null), CA(null, a)) : QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 2, [Xt, bs, Gp, fk], null));
}
function $z(b, a, c) {
  var d;
  d = fo.b(c);
  var e = ur.b(b);
  d = t.c(d, e, e);
  return MA(c, new Q(null, 2, 5, R, [a, d], null), UA(new Q(null, 2, 5, R, [a, b], null), c));
}
function oA(b, a, c) {
  var d;
  d = fo.b(c);
  var e = ur.b(b);
  d = t.c(d, e, e);
  return NA(c, new Q(null, 2, 5, R, [a, d], null), UA(new Q(null, 2, 5, R, [a, b], null), c));
}
function Zz(b, a, c) {
  var d = Iq.b(b);
  return MA(c, new Q(null, 2, 5, R, [a, d], null), VA(new Q(null, 2, 5, R, [a, b], null), c));
}
function nA(b, a, c) {
  return v.a(a, B(lw.b(c))) ? Zz(b, a, c) : QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 2, [Xt, Zl, Gp, fk], null));
}
function Vz(b, a, c) {
  var d = Iq.b(b), e = new Q(null, 2, 5, R, [a, d], null);
  if (m(IA(c, e))) {
    return QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 1, [Xt, Zq], null));
  }
  MA(c, e, function() {
    return function(a) {
      return function() {
        return bj(a);
      };
    }(new aj(function(d) {
      return function() {
        return QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 2, [Xt, Zq, Gp, new l(null, 1, [Nk, Dz(d, !1)], null)], null));
      };
    }(d, e), null), d, e);
  }());
  return PA(c, e, function(d, e) {
    return function() {
      return rb(IA(c, e)) ? LA(c, new Q(null, 2, 5, R, [a, b], null), CA(null, a)) : null;
    };
  }(d, e));
}
function fA(b, a, c) {
  return LA(c, new Q(null, 2, 5, R, [a, b], null), CA(null, a));
}
function uA(b, a, c) {
  return v.a(a, B(lw.b(c))) ? LA(c, new Q(null, 2, 5, R, [a, b], null), CA(null, a)) : QA(c, new Q(null, 2, 5, R, [a, b], null), a, new l(null, 2, [Xt, Pr, Gp, fk], null));
}
function dB(b, a, c) {
  m(c) ? MA(b, new Q(null, 2, 5, R, [0, a], null), bB(b)) : NA(b, new Q(null, 2, 5, R, [0, a], null), bB(b));
}
function eB(b, a, c, d) {
  b = BA(b, c, zA(c), -1, null);
  dB(b, jz(a), d);
  a = TA(b, null);
  if (m(a)) {
    c = x(a);
  } else {
    a = b.sb;
    a: {
      d = Gl.b(a);
      for (var e = b = 1, f = 0;;) {
        if (v.a(d, f)) {
          d = new l(null, 2, [jr, b, Cp, e], null);
          break a;
        }
        v.a("\n", t.a(c, f)) ? (f += 1, b += 1, e = 1) : (f += 1, e += 1);
      }
    }
    c = ki.j(C([a, d, new l(null, 1, [lw, Pz(jr.b(d), c)], null)], 0));
  }
  return c;
}
function RA(b, a, c, d, e) {
  return Wd(b.a ? b.a(a, c) : b.call(null, a, c), new l(null, 2, [Rr, d, qm, e], null));
}
;function fB(b, a) {
  return (null != b ? b.l & 262144 || k === b.uh || (b.l ? 0 : p(kc, b)) : p(kc, b)) ? Wd(b, ki.j(C([a, he(b)], 0))) : b;
}
var gB = function gB(a, c) {
  var d;
  d = Xt.b(c);
  d = a.b ? a.b(d) : a.call(null, d);
  return m(d) ? fB(P(d, Tf.a(Hf(gB, a), ym.b(c))), he(c)) : m(Xt.b(c)) ? I.c(c, ym, Tf.a(Hf(gB, a), ym.b(c))) : c;
}, hB = function hB(a, c) {
  if (oe(c) && w(c)) {
    var d;
    d = x(c);
    d = a.b ? a.b(d) : a.call(null, d);
    return m(d) ? fB(P(d, Tf.a(Hf(hB, a), z(c))), he(c)) : Wd(gg.a(new Q(null, 1, 5, R, [x(c)], null), Tf.a(Hf(hB, a), z(c))), he(c));
  }
  return c;
}, iB = function iB(a, c) {
  var d;
  d = (d = pe(c)) ? Xt.b(c) : d;
  if (m(d)) {
    return gB(a, c);
  }
  if (re(c) && x(c) instanceof K) {
    return hB(a, c);
  }
  if (oe(c)) {
    return Wd(Tf.a(Hf(iB, a), c), he(c));
  }
  if (c instanceof yA) {
    return c;
  }
  throw "Invalid parse-tree, not recognized as either enlive or hiccup format.";
};
var jB = function jB(a) {
  if (null != a && null != a.sg) {
    return a.sg();
  }
  var c = jB[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = jB._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("PushbackReader.read-char", a);
};
function kB(b, a, c) {
  this.sa = b;
  this.buffer = a;
  this.vf = c;
}
kB.prototype.sg = function() {
  return 0 === this.buffer.length ? (this.vf += 1, this.sa[this.vf]) : this.buffer.pop();
};
function lB(b) {
  throw Error(P(q, b));
}
Di("^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
Di("^([-+]?[0-9]+)/([0-9]+)$");
Di("^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
Di("^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
var mB = Di("^[0-9A-Fa-f]{2}$"), nB = Di("^[0-9A-Fa-f]{4}$");
function oB(b, a, c) {
  return m(Ai(b, c)) ? c : lB(C(["Unexpected unicode escape \\", a, c], 0));
}
function pB(b) {
  var a = jB(b), c = "t" === a ? "\t" : "r" === a ? "\r" : "n" === a ? "\n" : "\\" === a ? "\\" : '"' === a ? '"' : "b" === a ? "\b" : "f" === a ? "\f" : null;
  m(c) ? a = c : "x" === a ? (b = (new Oa(jB(b), jB(b))).toString(), a = String.fromCharCode(parseInt(oB(mB, a, b), 16))) : "u" === a ? (b = (new Oa(jB(b), jB(b), jB(b), jB(b))).toString(), a = String.fromCharCode(parseInt(oB(nB, a, b), 16))) : a = /[^0-9]/.test(a) ? lB(C(["Unexpected unicode escape \\", a], 0)) : String.fromCharCode(a);
  return a;
}
var qB = function(b, a) {
  return function(c, d) {
    return t.a(m(d) ? a : b, c);
  };
}(new Q(null, 13, 5, R, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null), new Q(null, 13, 5, R, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null)), rB = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
function sB(b) {
  b = parseInt(b, 10);
  return rb(isNaN(b)) ? b : null;
}
function tB(b, a, c, d) {
  b <= a && a <= c || lB(C([[q(d), q(" Failed:  "), q(b), q("\x3c\x3d"), q(a), q("\x3c\x3d"), q(c)].join("")], 0));
  return a;
}
function uB(b) {
  var a = Ai(rB, b);
  F(a, 0, null);
  var c = F(a, 1, null), d = F(a, 2, null), e = F(a, 3, null), f = F(a, 4, null), g = F(a, 5, null), n = F(a, 6, null), r = F(a, 7, null), u = F(a, 8, null), y = F(a, 9, null), D = F(a, 10, null);
  if (rb(a)) {
    return lB(C([[q("Unrecognized date/time syntax: "), q(b)].join("")], 0));
  }
  var G = sB(c), H = function() {
    var a = sB(d);
    return m(a) ? a : 1;
  }();
  b = function() {
    var a = sB(e);
    return m(a) ? a : 1;
  }();
  var a = function() {
    var a = sB(f);
    return m(a) ? a : 0;
  }(), c = function() {
    var a = sB(g);
    return m(a) ? a : 0;
  }(), M = function() {
    var a = sB(n);
    return m(a) ? a : 0;
  }(), O = function() {
    var a;
    a: {
      if (v.a(3, B(r))) {
        a = r;
      } else {
        if (3 < B(r)) {
          a = r.substring(0, 3);
        } else {
          for (a = new Oa(r);;) {
            if (3 > a.ud.length) {
              a = a.append("0");
            } else {
              a = a.toString();
              break a;
            }
          }
        }
      }
    }
    a = sB(a);
    return m(a) ? a : 0;
  }(), u = (v.a(u, "-") ? -1 : 1) * (60 * function() {
    var a = sB(y);
    return m(a) ? a : 0;
  }() + function() {
    var a = sB(D);
    return m(a) ? a : 0;
  }());
  return new Q(null, 8, 5, R, [G, tB(1, H, 12, "timestamp month field must be in range 1..12"), tB(1, b, function() {
    var a;
    a = 0 === (G % 4 + 4) % 4;
    m(a) && (a = rb(0 === (G % 100 + 100) % 100), a = m(a) ? a : 0 === (G % 400 + 400) % 400);
    return qB.a ? qB.a(H, a) : qB.call(null, H, a);
  }(), "timestamp day field must be in range 1..last day in month"), tB(0, a, 23, "timestamp hour field must be in range 0..23"), tB(0, c, 59, "timestamp minute field must be in range 0..59"), tB(0, M, v.a(c, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), tB(0, O, 999, "timestamp millisecond field must be in range 0..999"), u], null);
}
var vB = new l(null, 4, ["inst", function(b) {
  var a;
  if ("string" === typeof b) {
    if (a = uB(b), m(a)) {
      b = F(a, 0, null);
      var c = F(a, 1, null), d = F(a, 2, null), e = F(a, 3, null), f = F(a, 4, null), g = F(a, 5, null), n = F(a, 6, null);
      a = F(a, 7, null);
      a = new Date(Date.UTC(b, c - 1, d, e, f, g, n) - 6E4 * a);
    } else {
      a = lB(C([[q("Unrecognized date/time syntax: "), q(b)].join("")], 0));
    }
  } else {
    a = lB(C(["Instance literal expects a string for its timestamp."], 0));
  }
  return a;
}, "uuid", function(b) {
  return "string" === typeof b ? new Aj(b, null) : lB(C(["UUID literal expects a string as its representation."], 0));
}, "queue", function(b) {
  return re(b) ? gg.a(Vg, b) : lB(C(["Queue literal expects a vector for its elements."], 0));
}, "js", function(b) {
  if (re(b)) {
    var a = [];
    b = w(b);
    for (var c = null, d = 0, e = 0;;) {
      if (e < d) {
        var f = c.ra(null, e);
        a.push(f);
        e += 1;
      } else {
        if (b = w(b)) {
          c = b, se(c) ? (b = Tc(c), e = Uc(c), c = b, d = B(b), b = e) : (b = x(c), a.push(b), b = z(c), c = null, d = 0), e = 0;
        } else {
          break;
        }
      }
    }
    return a;
  }
  if (pe(b)) {
    a = {};
    b = w(b);
    c = null;
    for (e = d = 0;;) {
      if (e < d) {
        var g = c.ra(null, e), f = F(g, 0, null), g = F(g, 1, null);
        a[ef(f)] = g;
        e += 1;
      } else {
        if (b = w(b)) {
          se(b) ? (d = Tc(b), b = Uc(b), c = d, d = B(d)) : (d = x(b), c = F(d, 0, null), d = F(d, 1, null), a[ef(c)] = d, b = z(b), c = null, d = 0), e = 0;
        } else {
          break;
        }
      }
    }
    return a;
  }
  return lB(C([[q("JS literal expects a vector or map containing "), q("only string or unqualified keyword keys")].join("")], 0));
}], null);
U || Nf.call(null, vB);
U || Nf.call(null, null);
var wB = !1, xB = /(?:(?!(?:\(\*|\*\)))[\s\S])*/, yB = mz(jz(at)), zB = Wy(ip, fe([Qj, ak, Uk, tl, Yl, mm, cn, eo, ko, yo, No, Xo, jp, Lp, Vp, zq, Nq, Nr, os, rs, Is, at, jw], [dz.j(C([mz(ez("!")), yB, jz(Nr)], 0)), Zy(dz.j(C([yB, bz.j(C([jz(Nr), jz(mm), jz(Qj)], 0)), yB], 0))), dz.j(C([jz(ak), Zy(dz.j(C([yB, mz(ez("/")), yB, jz(ak)], 0)))], 0)), bz.j(C([ez(":"), ez(":\x3d"), ez("::\x3d"), ez("\x3d")], 0)), dz.j(C([jz(ak), $y(dz.j(C([yB, mz(ez("|")), yB, jz(ak)], 0)))], 0)), dz.j(C([mz(ez("\x26")), 
yB, jz(Nr)], 0)), dz.j(C([bz.j(C([jz(eo), jz(ko)], 0)), yB, mz(jz(tl)), yB, jz(zq), mz(bz.j(C([jz(at), dz.j(C([jz(at), bz.j(C([ez(";"), ez(".")], 0)), jz(at)], 0))], 0)))], 0)), dz.j(C([lz(jz(Is)), iz("[^, \\r\\t\\n\x3c\x3e(){}\\[\\]+*?:\x3d|'\"#\x26!;./]+")], 0)), dz.j(C([mz(ez("\x3c")), yB, jz(eo), yB, mz(ez("\x3e"))], 0)), dz.j(C([iz(xB), $y(dz.j(C([jz(os), iz(xB)], 0)))], 0)), bz.j(C([dz.j(C([mz(ez("{")), yB, jz(zq), yB, mz(ez("}"))], 0)), dz.j(C([jz(Nr), yB, mz(ez("*"))], 0))], 0)), bz.j(C([iz(/'[^'\\]*(?:\\.[^'\\]*)*'/), 
iz(/\"[^\"\\]*(?:\\.[^\"\\]*)*\"/)], 0)), Ry(dz.j(C([yB, Zy(jz(cn))], 0))), dz.j(C([mz(ez("\x3c")), yB, jz(zq), yB, mz(ez("\x3e"))], 0)), dz.j(C([mz(ez("(")), yB, jz(zq), yB, mz(ez(")"))], 0)), Ry(bz.j(C([jz(Yl), jz(Uk)], 0))), bz.j(C([iz(/#'[^'\\]*(?:\\.[^'\\]*)*'/), iz(/#\"[^\"\\]*(?:\\.[^\"\\]*)*\"/)], 0)), Ry(bz.j(C([jz(eo), jz(Xo), jz(Nq), jz(jw), jz(No), jz(rs), jz(Vp), jz(Lp), jz(Is)], 0))), dz.j(C([ez("(*"), jz(yo), ez("*)")], 0)), dz.j(C([jz(Nr), yB, mz(ez("+"))], 0)), bz.j(C([ez("Epsilon"), 
ez("epsilon"), ez("EPSILON"), ez("eps"), ez("ε")], 0)), dz.j(C([iz("[,\\s]*"), $y(dz.j(C([jz(os), iz("[,\\s]*")], 0)))], 0)), bz.j(C([dz.j(C([mz(ez("[")), yB, jz(zq), yB, mz(ez("]"))], 0)), dz.j(C([jz(Nr), yB, mz(ez("?"))], 0))], 0))]));
function AB(b) {
  for (var a = w(b), c = E;;) {
    var d = x(a);
    if (m(d)) {
      switch(d) {
        case "\\":
          var e = $d(a);
          if (m(e)) {
            v.a(e, "'") ? (a = Vf(2, a), c = ce.a(c, e)) : (a = Vf(2, a), c = ce.j(c, d, C([e], 0)));
            continue;
          } else {
            throw [q("Encountered backslash character at end of string:"), q(b)].join("");
          }
        ;
        case '"':
          a = z(a);
          c = ce.j(c, "\\", C(['"'], 0));
          continue;
        default:
          a = z(a), c = ce.a(c, d);
      }
    } else {
      return P(q, c);
    }
  }
}
function BB(b) {
  b = Se(b, 1, B(b) - 1);
  b = AB(b);
  a: {
    b = new kB([q(b), q('"')].join(""), [], -1);
    for (var a = new Oa, c = jB(b);;) {
      if (null == c) {
        b = lB(C(["EOF while reading"], 0));
        break a;
      }
      if ("\\" === c) {
        a.append(pB(b));
      } else {
        if ('"' === c) {
          b = a.toString();
          break a;
        }
        a.append(c);
      }
      c = jB(b);
    }
  }
  return b;
}
function CB(b) {
  b = Se(b, 2, B(b) - 1);
  b = AB(b);
  return Di(b);
}
var DB = function DB(a) {
  for (;;) {
    switch((x.b ? x.b(a) : x.call(null, a)) instanceof K ? (x.b ? x.b(a) : x.call(null, a)).ca : null) {
      case "neg":
        return lz(function() {
          var c = ae.b ? ae.b(a) : ae.call(null, a);
          return DB.b ? DB.b(c) : DB.call(null, c);
        }());
      case "cat":
        return P(dz, Tf.a(DB, z.b ? z.b(a) : z.call(null, a)));
      case "ord":
        return P(cz, Tf.a(DB, z.b ? z.b(a) : z.call(null, a)));
      case "alt":
        return P(bz, Tf.a(DB, z.b ? z.b(a) : z.call(null, a)));
      case "look":
        return kz(function() {
          var c = ae.b ? ae.b(a) : ae.call(null, a);
          return DB.b ? DB.b(c) : DB.call(null, c);
        }());
      case "rule":
        var c = z.b ? z.b(a) : z.call(null, a), d = F(c, 0, null), c = F(c, 1, null);
        return v.a(x.b ? x.b(d) : x.call(null, d), ko) ? new Q(null, 2, 5, R, [df.b(function() {
          var a = ae.b ? ae.b(d) : ae.call(null, d);
          return ae.b ? ae.b(a) : ae.call(null, a);
        }()), Ry(DB.b ? DB.b(c) : DB.call(null, c))], null) : new Q(null, 2, 5, R, [df.b(ae.b ? ae.b(d) : ae.call(null, d)), DB.b ? DB.b(c) : DB.call(null, c)], null);
      case "nt":
        return jz(df.b(ae.b ? ae.b(a) : ae.call(null, a)));
      case "star":
        return $y(function() {
          var c = ae.b ? ae.b(a) : ae.call(null, a);
          return DB.b ? DB.b(c) : DB.call(null, c);
        }());
      case "string":
        return (m(wB) ? fz : ez).call(null, BB(ae.b ? ae.b(a) : ae.call(null, a)));
      case "hide":
        return mz(function() {
          var c = ae.b ? ae.b(a) : ae.call(null, a);
          return DB.b ? DB.b(c) : DB.call(null, c);
        }());
      case "paren":
        a = ae.b ? ae.b(a) : ae.call(null, a);
        continue;
      case "regexp":
        return iz(CB(ae.b ? ae.b(a) : ae.call(null, a)));
      case "plus":
        return Zy(function() {
          var c = ae.b ? ae.b(a) : ae.call(null, a);
          return DB.b ? DB.b(c) : DB.call(null, c);
        }());
      case "epsilon":
        return Xy;
      case "opt":
        return Yy(function() {
          var c = ae.b ? ae.b(a) : ae.call(null, a);
          return DB.b ? DB.b(c) : DB.call(null, c);
        }());
      default:
        throw Error([q("No matching clause: "), q(x.b ? x.b(a) : x.call(null, a))].join(""));;
    }
  }
}, EB = function EB(a) {
  for (;;) {
    switch(Xt.b(a) instanceof K ? Xt.b(a).ca : null) {
      case "neg":
        a = Iq.b(a);
        continue;
      case "cat":
        return ag(EB, C([uv.b(a)], 0));
      case "ord":
        return ag(EB, C([new Q(null, 2, 5, R, [Pq.b(a), Rj.b(a)], null)], 0));
      case "alt":
        return ag(EB, C([uv.b(a)], 0));
      case "look":
        a = Iq.b(a);
        continue;
      case "nt":
        return new Q(null, 1, 5, R, [ur.b(a)], null);
      case "rep":
        a = Iq.b(a);
        continue;
      case "star":
        a = Iq.b(a);
        continue;
      case "string":
        return E;
      case "regexp":
        return E;
      case "plus":
        a = Iq.b(a);
        continue;
      case "epsilon":
        return E;
      case "string-ci":
        return E;
      case "char":
        return E;
      case "opt":
        a = Iq.b(a);
        continue;
      default:
        throw Error([q("No matching clause: "), q(Xt.b(a))].join(""));;
    }
  }
};
function FB(b) {
  for (var a = qi(eh(b)), c = w(ri(ag(EB, C([fh(b)], 0)))), d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.ra(null, f);
      if (!m(a.b ? a.b(g) : a.call(null, g))) {
        throw [q(Re("" + q(g), 1)), q(" occurs on the right-hand side of your grammar, but not on the left")].join("");
      }
      f += 1;
    } else {
      if (c = w(c)) {
        d = c;
        if (se(d)) {
          c = Tc(d), f = Uc(d), d = c, e = B(c), c = f;
        } else {
          c = x(d);
          if (!m(a.b ? a.b(c) : a.call(null, c))) {
            throw [q(Re("" + q(c), 1)), q(" occurs on the right-hand side of your grammar, but not on the left")].join("");
          }
          c = z(d);
          d = null;
          e = 0;
        }
        f = 0;
      } else {
        break;
      }
    }
  }
  return b;
}
function GB(b, a) {
  var c = eB(zB, jp, b, !1);
  if (c instanceof yA) {
    throw [q("Error parsing grammar specification:\n"), q(function() {
      var a = new Oa, b = db, d = bb;
      db = !0;
      bb = function(a, b, c) {
        return function(a) {
          return c.append(a);
        };
      }(b, d, a, c);
      try {
        Xi(C([c], 0));
      } finally {
        bb = d, db = b;
      }
      return "" + q(a);
    }())].join("");
  }
  var d = Tf.a(DB, c), e = x(x(d));
  return new l(null, 3, [fo, FB(Wy(a, gg.a(S, d))), Wm, e, po, a], null);
}
function HB(b, a, c) {
  if (null == c) {
    throw "When you build a parser from a map of parser combinators, you must provide a start production using the :start keyword argument.";
  }
  return new l(null, 3, [fo, FB(Wy(a, b)), Wm, c, po, a], null);
}
;function IB(b, a) {
  var c = Array.prototype.slice.call(arguments), d = c.shift();
  if ("undefined" == typeof d) {
    throw Error("[goog.string.format] Template required");
  }
  return d.replace(/%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g, function(a, b, d, n, r, u, y, D) {
    if ("%" == u) {
      return "%";
    }
    var e = c.shift();
    if ("undefined" == typeof e) {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = e;
    return IB.gd[u].apply(null, arguments);
  });
}
IB.gd = {};
IB.gd.s = function(b, a, c) {
  return isNaN(c) || "" == c || b.length >= Number(c) ? b : b = -1 < a.indexOf("-", 0) ? b + wa(" ", Number(c) - b.length) : wa(" ", Number(c) - b.length) + b;
};
IB.gd.f = function(b, a, c, d, e) {
  d = b.toString();
  isNaN(e) || "" == e || (d = parseFloat(b).toFixed(e));
  var f;
  f = 0 > Number(b) ? "-" : 0 <= a.indexOf("+") ? "+" : 0 <= a.indexOf(" ") ? " " : "";
  0 <= Number(b) && (d = f + d);
  if (isNaN(c) || d.length >= Number(c)) {
    return d;
  }
  d = isNaN(e) ? Math.abs(Number(b)).toString() : Math.abs(Number(b)).toFixed(e);
  b = Number(c) - d.length - f.length;
  0 <= a.indexOf("-", 0) ? d = f + d + wa(" ", b) : (a = 0 <= a.indexOf("0", 0) ? "0" : " ", d = f + wa(a, b) + d);
  return d;
};
IB.gd.d = function(b, a, c, d, e, f, g, n) {
  return IB.gd.f(parseInt(b, 10), a, c, d, 0, f, g, n);
};
IB.gd.i = IB.gd.d;
IB.gd.u = IB.gd.d;
var JB = fe([Zk, el, Il, Nl, un, yn, qo, Xp, Yp, eq, Gr, gs, zs, vt, zu, tv], [ez("\r\n"), ez("\t"), bz.j(C([bz.j(C([ez(" "), ez("\t")], 0)), $y(dz.j(C([ez("\r\n"), bz.j(C([ez(" "), ez("\t")], 0))], 0)))], 0)), ez("\n"), iz("[\\u0021-\\u007E]"), iz("[0-9]"), ez(" "), iz("[0-9a-fA-F]"), iz("[\\u0000-\\u001F|\\u007F]"), ez('"'), bz.j(C([ez(" "), ez("\t")], 0)), ez("\r"), iz("[\\u0000-\\u00FF]"), iz("[a-zA-Z]"), iz("[\\u0001-\\u007F]"), iz("[01]")]), KB = function KB(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return KB.j(0 < c.length ? new rd(c.slice(0), 0, null) : null);
};
KB.j = function(b) {
  if (v.a("-", $d(b))) {
    var a = F(b, 0, null);
    F(b, 1, null);
    var c = F(b, 2, null);
    return gz(a, c);
  }
  return P(dz, function() {
    return function e(a) {
      return new ff(null, function() {
        for (;;) {
          var b = w(a);
          if (b) {
            if (se(b)) {
              var c = Tc(b), f = B(c), u = kf(f);
              a: {
                for (var y = 0;;) {
                  if (y < f) {
                    var D = Kb.a(c, y);
                    nf(u, gz(D, D));
                    y += 1;
                  } else {
                    c = !0;
                    break a;
                  }
                }
              }
              return c ? mf(u.ta(), e(Uc(b))) : mf(u.ta(), null);
            }
            u = x(b);
            return Ud(gz(u, u), e(sd(b)));
          }
          return null;
        }
      }, null, null);
    }(b);
  }());
};
KB.N = 0;
KB.P = function(b) {
  return KB.j(w(b));
};
function LB(b, a) {
  return gg.a(S, function() {
    return function d(a) {
      return new ff(null, function() {
        for (var e = a;;) {
          if (e = w(e)) {
            if (se(e)) {
              var g = Tc(e), n = B(g), r = kf(n);
              a: {
                for (var u = 0;;) {
                  if (u < n) {
                    var y = Kb.a(g, u);
                    ze(b, y) && nf(r, new Q(null, 2, 5, R, [y, b.b ? b.b(y) : b.call(null, y)], null));
                    u += 1;
                  } else {
                    g = !0;
                    break a;
                  }
                }
              }
              return g ? mf(r.ta(), d(Uc(e))) : mf(r.ta(), null);
            }
            r = x(e);
            if (ze(b, r)) {
              return Ud(new Q(null, 2, 5, R, [r, b.b ? b.b(r) : b.call(null, r)], null), d(sd(e)));
            }
            e = sd(e);
          } else {
            return null;
          }
        }
      }, null, null);
    }(a);
  }());
}
function MB(b) {
  return ki.j(C([LB(JB, ri(ag(EB, C([fh(b)], 0)))), b], 0));
}
function NB(b, a) {
  var c = v.a(Yr.b(b), Sy), d = v.a(Yr.b(a), Sy);
  return m(m(c) ? d : c) ? Ry(bz.j(C([J.a(b, Yr), J.a(a, Yr)], 0))) : m(c) ? Ry(bz.j(C([J.a(b, Yr), a], 0))) : m(d) ? Ry(bz.j(C([b, J.a(a, Yr)], 0))) : bz.j(C([b, a], 0));
}
var OB = fe([Qj, zl, mm, pm, cn, mn, wo, Oo, Lp, Zp, cq, lq, Dq, Eq, Gq, Nq, Yq, Lr, tt, au, Jv], [lz, function(b, a) {
  return jh([b, Ry(a)]);
}, kz, function() {
  function b(b) {
    var c = null;
    if (0 < arguments.length) {
      for (var c = 0, e = Array(arguments.length - 0);c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new rd(e, 0);
    }
    return a.call(this, c);
  }
  function a(a) {
    a = P(q, a);
    return parseInt(a, 2);
  }
  b.N = 0;
  b.P = function(b) {
    b = w(b);
    return a(b);
  };
  b.j = a;
  return b;
}(), Of, function() {
  function b(b) {
    var c = null;
    if (0 < arguments.length) {
      for (var c = 0, e = Array(arguments.length - 0);c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new rd(e, 0);
    }
    return a.call(this, c);
  }
  function a(a) {
    return m(!1) ? jz(df.b(P(q, a).toUpperCase())) : jz(df.b(P(q, a)));
  }
  b.N = 0;
  b.P = function(b) {
    b = w(b);
    return a(b);
  };
  b.j = a;
  return b;
}(), function() {
  function b(b) {
    var c = null;
    if (0 < arguments.length) {
      for (var c = 0, e = Array(arguments.length - 0);c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new rd(e, 0);
    }
    return a.call(this, c);
  }
  function a(a) {
    a = P(q, a);
    return parseInt(a);
  }
  b.N = 0;
  b.P = function(b) {
    b = w(b);
    return a(b);
  };
  b.j = a;
  return b;
}(), function() {
  function b(b) {
    var c = null;
    if (0 < arguments.length) {
      for (var c = 0, e = Array(arguments.length - 0);c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new rd(e, 0);
    }
    return a.call(this, c);
  }
  function a(a) {
    return fz(P(q, a));
  }
  b.N = 0;
  b.P = function(b) {
    b = w(b);
    return a(b);
  };
  b.j = a;
  return b;
}(), mz, Yy, function() {
  function b(b) {
    var c = null;
    if (0 < arguments.length) {
      for (var c = 0, e = Array(arguments.length - 0);c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new rd(e, 0);
    }
    return a.call(this, c);
  }
  function a(a) {
    a = P(q, a);
    return parseInt(a, 16);
  }
  b.N = 0;
  b.P = function(b) {
    b = w(b);
    return a(b);
  };
  b.j = a;
  return b;
}(), KB, KB, dz, bz, Gf.a(iz, CB), function() {
  function b(a, b) {
    return le(a) ? $y(b) : v.a(B(a), 2) ? az(et.b(a), Mp.b(a), b) : v.a(et.b(a), 1) ? Zy(b) : v.a(Mp.b(a), 1) ? Yy(b) : az(function() {
      var b = et.b(a);
      return m(b) ? b : 0;
    }(), function() {
      var b = Mp.b(a);
      return m(b) ? b : Infinity;
    }(), b);
  }
  var a = null, a = function(a, d) {
    switch(arguments.length) {
      case 1:
        return a;
      case 2:
        return b.call(this, a, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.b = function(a) {
    return a;
  };
  a.a = b;
  return a;
}(), function() {
  function b(b) {
    var c = null;
    if (0 < arguments.length) {
      for (var c = 0, e = Array(arguments.length - 0);c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new rd(e, 0);
    }
    return a.call(this, c);
  }
  function a(a) {
    return m(!1) ? df.b(P(q, a).toUpperCase()) : df.b(P(q, a));
  }
  b.N = 0;
  b.P = function(b) {
    b = w(b);
    return a(b);
  };
  b.j = a;
  return b;
}(), function() {
  function b(b) {
    var c = null;
    if (0 < arguments.length) {
      for (var c = 0, e = Array(arguments.length - 0);c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new rd(e, 0);
    }
    return a.call(this, c);
  }
  function a(a) {
    switch(B(a)) {
      case 1:
        return v.a(x(a), "*") ? S : new l(null, 2, [et, x(a), Mp, x(a)], null);
      case 2:
        return v.a(x(a), "*") ? new l(null, 1, [Mp, $d(a)], null) : new l(null, 1, [et, x(a)], null);
      case 3:
        return new l(null, 2, [et, x(a), Mp, Nd(a, 2)], null);
      default:
        throw Error([q("No matching clause: "), q(B(a))].join(""));;
    }
  }
  b.N = 0;
  b.P = function(b) {
    b = w(b);
    return a(b);
  };
  b.j = a;
  return b;
}(), KB, function() {
  function b(b) {
    var c = null;
    if (0 < arguments.length) {
      for (var c = 0, e = Array(arguments.length - 0);c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new rd(e, 0);
    }
    return a.call(this, c);
  }
  function a(a) {
    a = P(q, a);
    return parseInt(a);
  }
  b.N = 0;
  b.P = function(b) {
    b = w(b);
    return a(b);
  };
  b.j = a;
  return b;
}()]), PB = Wy(ip, function(b) {
  if (m(Bi(/[:=]/, b))) {
    var a = eB(zB, jp, b, !1);
    if (a instanceof yA) {
      throw [q("Error parsing grammar specification:\n"), q(function() {
        var b = new Oa, c = db, f = bb;
        db = !0;
        bb = function(a, b, c) {
          return function(a) {
            return c.append(a);
          };
        }(c, f, b, a);
        try {
          Xi(C([a], 0));
        } finally {
          bb = f, db = c;
        }
        return "" + q(b);
      }())].join("");
    }
    return gg.a(S, Tf.a(DB, a));
  }
  var c = eB(zB, zq, b, !1);
  if (c instanceof yA) {
    throw [q("Error parsing grammar specification:\n"), q(function() {
      var a = new Oa, b = db, f = bb;
      db = !0;
      bb = function(a, b, c) {
        return function(a) {
          return c.append(a);
        };
      }(b, f, a, c);
      try {
        Xi(C([c], 0));
      } finally {
        bb = f, db = b;
      }
      return "" + q(a);
    }())].join("");
  }
  return DB(x(c));
}("\n\x3crulelist\x3e \x3d \x3copt-whitespace\x3e (rule | hide-tag-rule)+;\nrule \x3d rulename-left \x3cdefined-as\x3e alternation \x3copt-whitespace\x3e;\nhide-tag-rule \x3d hide-tag \x3cdefined-as\x3e alternation \x3copt-whitespace\x3e;\nrulename-left \x3d rulename;\nrulename-right \x3d rulename;\n\x3crulename\x3e \x3d #'[a-zA-Z][-a-zA-Z0-9]*';\n\x3chide-tag\x3e \x3d \x3c'\x3c' opt-whitespace\x3e rulename-left \x3copt-whitespace '\x3e'\x3e;\ndefined-as \x3d \x3copt-whitespace\x3e ('\x3d' | '\x3d/') \x3copt-whitespace\x3e;\nalternation \x3d concatenation (\x3copt-whitespace '/' opt-whitespace\x3e concatenation)*;\nconcatenation \x3d repetition (\x3cwhitespace\x3e repetition)*;\nrepetition \x3d [repeat] \x3copt-whitespace\x3e element;\nrepeat \x3d NUM | (NUM? '*' NUM?);\n\x3celement\x3e \x3d rulename-right | group | hide | option | char-val | num-val\n          | look | neg | regexp;\nlook \x3d \x3c'\x26' opt-whitespace\x3e element;\nneg \x3d \x3c'!' opt-whitespace\x3e element;\n\x3cgroup\x3e \x3d \x3c'(' opt-whitespace\x3e alternation \x3copt-whitespace ')'\x3e;\noption \x3d \x3c'[' opt-whitespace\x3e alternation \x3copt-whitespace ']'\x3e;\nhide \x3d \x3c'\x3c' opt-whitespace\x3e alternation \x3copt-whitespace '\x3e'\x3e;\nchar-val \x3d \x3c'\\u0022'\x3e #'[\\u0020-\\u0021\\u0023-\\u007E]'* \x3c'\\u0022'\x3e (* double-quoted strings *)\n         | \x3c'\\u0027'\x3e #'[\\u0020-\\u0026(-~]'* \x3c'\\u0027'\x3e;  (* single-quoted strings *)\n\x3cnum-val\x3e \x3d \x3c'%'\x3e (bin-val | dec-val | hex-val);\nbin-val \x3d \x3c'b'\x3e bin-char\n          [ (\x3c'.'\x3e bin-char)+ | ('-' bin-char) ];\nbin-char \x3d ('0' | '1')+;\ndec-val \x3d \x3c'd'\x3e dec-char\n          [ (\x3c'.'\x3e dec-char)+ | ('-' dec-char) ];\ndec-char \x3d DIGIT+;\nhex-val \x3d \x3c'x'\x3e hex-char\n          [ (\x3c'.'\x3e hex-char)+ | ('-' hex-char) ];\nhex-char \x3d HEXDIG+;\nNUM \x3d DIGIT+;\n\x3cDIGIT\x3e \x3d #'[0-9]';\n\x3cHEXDIG\x3e \x3d #'[0-9a-fA-F]';\nopt-whitespace \x3d #'\\s*(?:;.*?(?:\\u000D?\\u000A\\s*|$))*';\nwhitespace \x3d #'\\s+(?:;.*?\\u000D?\\u000A\\s*)*';\nregexp \x3d #\"#'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'\"\n       | #\"#\\\"[^\\\"\\\\]*(?:\\\\.[^\\\"\\\\]*)*\\\"\"\n"));
function QB(b, a) {
  var c = eB(PB, Zs, b, !1);
  if (c instanceof yA) {
    throw [q("Error parsing grammar specification:\n"), q(function() {
      var a = new Oa, b = db, d = bb;
      db = !0;
      bb = function(a, b, c) {
        return function(a) {
          return c.append(a);
        };
      }(b, d, a, c);
      try {
        Xi(C([c], 0));
      } finally {
        bb = d, db = b;
      }
      return "" + q(a);
    }())].join("");
  }
  var d = iB(OB, c), e = MB(tf(li, NB, d)), d = x(x(x(d)));
  return new l(null, 3, [fo, FB(Wy(a, e)), Wm, d, po, a], null);
}
;function RB(b) {
  var a = he(b);
  b = Rr.b(a);
  a = qm.b(a);
  return m(m(b) ? a : b) ? new Q(null, 2, 5, R, [b, a], null) : null;
}
;function SB(b) {
  return re(b) && v.a(B(b), 1) || pe(b) && ze(b, Xt) && le(t.a(b, ym)) || le(b);
}
var TB = new yA(null, null, null, null, null), UB = function UB(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 1:
      return UB.b(arguments[0]);
    case 2:
      return UB.a(arguments[0], arguments[1]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
UB.b = function(b) {
  var a = RB(b);
  F(a, 0, null);
  a = F(a, 1, null);
  return m(a) ? Le(a) : B(b);
};
UB.a = function(b, a) {
  var c = RB(b);
  F(c, 0, null);
  c = F(c, 1, null);
  return m(c) ? Le(c) : a + B(b);
};
UB.N = 2;
function VB(b, a, c, d, e) {
  b = BA(b, c, d, -1, null);
  MA(b, new Q(null, 2, 5, R, [e, a], null), bB(b));
  return TA(b, null);
}
function WB(b, a, c, d, e, f) {
  var g = B(c);
  for (f = w(f);;) {
    if (f) {
      var n = x(f), r = RB(n);
      F(r, 0, null);
      r = F(r, 1, null);
      r = m(r) ? r : e + B(n);
      if (v.a(r, g)) {
        return new Q(null, 3, 5, R, [n, r, null], null);
      }
      var u = w(VB(b, a, c, d, r));
      if (u) {
        return new Q(null, 3, 5, R, [n, r, u], null);
      }
      f = z(f);
    } else {
      return null;
    }
  }
}
function XB(b, a, c, d, e) {
  var f = B(c), g = VB(b, a, c, d, e);
  e = Le(e);
  var n = WB(b, a, c, d, e, g);
  F(n, 0, null);
  F(n, 1, null);
  F(n, 2, null);
  g = e;
  for (e = Ky;;) {
    var r = n, u = F(r, 0, null), n = F(r, 1, null), y = F(r, 2, null);
    if (null == r || v.a(g, n)) {
      return TB;
    }
    if (null == y) {
      return KA(Iy(e, u), new l(null, 3, [yt, Pn, Rr, 0, qm, f], null));
    }
    g = Le(n);
    e = Iy(e, u);
    n = WB(b, a, c, d, n, y);
  }
}
function YB(b, a, c, d, e) {
  if (!m((new V(null, new l(null, 2, [ip, null, vq, null], null), null)).call(null, c))) {
    throw Error("Assert failed: (#{:hiccup :enlive} output-format)");
  }
  if (v.a(c, ip)) {
    a: {
      c = zA(e);
      var f = B(e), g = VB(b, a, e, c, 0), n = Le(0), r = Ly(new Q(null, 1, 5, R, [d], null)), g = WB(b, a, e, c, n, g);
      F(g, 0, null);
      F(g, 1, null);
      F(g, 2, null);
      d = n;
      n = r;
      for (r = g;;) {
        var u = r, y = F(u, 0, null), r = F(u, 1, null), g = F(u, 2, null);
        if (null == u || v.a(d, r)) {
          b = TB;
          break a;
        }
        if (null == g) {
          b = KA(Py(Iy(n, y)), new l(null, 3, [yt, Pn, Rr, 0, qm, f], null));
          break a;
        }
        d = Le(r);
        n = Iy(n, y);
        r = WB(b, a, e, c, r, g);
      }
    }
  } else {
    if (v.a(c, vq)) {
      a: {
        for (c = zA(e), f = B(e), r = VB(b, a, e, c, 0), n = Le(0), g = WB(b, a, e, c, n, r), F(g, 0, null), F(g, 1, null), F(g, 2, null), r = Ky;;) {
          var D = g, u = F(D, 0, null), g = F(D, 1, null), y = F(D, 2, null);
          if (null == D || v.a(n, g)) {
            b = TB;
            break a;
          }
          if (null == y) {
            b = KA(new l(null, 2, [Xt, d, ym, w(Iy(r, u))], null), new l(null, 3, [yt, Pn, Rr, 0, qm, f], null));
            break a;
          }
          n = Le(g);
          r = Iy(r, u);
          g = WB(b, a, e, c, g, y);
        }
      }
    } else {
      b = null;
    }
  }
  return b;
}
function ZB(b, a, c, d, e, f) {
  var g = zA(f), n = B(f), r = VB(b, a, f, g, 0);
  if (m(function() {
    var b = le(r);
    return b ? b : Lp.b(a);
  }())) {
    return TB;
  }
  var u = tf(ui, UB, r), y = UB.b(u), D = XB(b, Iq.b(c), f, g, y);
  b = new l(null, 3, [yt, Pn, Rr, 0, qm, n], null);
  if (m(function() {
    var a = D instanceof yA;
    return a ? a : (a = v.a(Xt.b(c), No)) ? SB(D) : a;
  }())) {
    return TB;
  }
  switch(d instanceof K ? d.ca : null) {
    case "enlive":
      return KA(new l(null, 2, [Xt, e, ym, Iy(Iy(Ky, u), D)], null), b);
    case "hiccup":
      return KA(Py(Iy(Iy(Ly(new Q(null, 1, 5, R, [e], null)), u), D)), b);
    default:
      return KA(Iy(Iy(Ky, u), D), b);
  }
}
function $B(b, a, c, d, e) {
  var f = uv.b(d), g = be(f), n;
  if (n = v.a(Xt.b(d), ak)) {
    n = (new V(null, new l(null, 2, [No, null, rs, null], null), null)).call(null, Xt.b(g)), n = m(n) ? rb(Lp.b(g)) && rb(Lp.b(Iq.b(g))) : n;
  }
  if (rb(n)) {
    return TB;
  }
  f = P(dz, si(f));
  return v.a(Yr.b(d), Sy) ? ZB(b, f, g, null, c, a) : ZB(b, f, g, e, c, a);
}
function aC(b, a, c) {
  var d = fo.b(b);
  b = po.b(b);
  var e = t.a(d, c);
  return v.a(Lp.b(e), !0) ? TB : v.a(Yr.b(e), Sy) ? v.a(Xt.b(e), No) ? (c = Iq.b(e), b = zA(a), XB(d, c, a, b, 0)) : v.a(Xt.b(e), rs) ? (c = Iq.b(e), b = zA(a), a = XB(d, c, a, b, 0), m(SB(a)) ? TB : a) : $B(d, a, c, e, b) : v.a(Xt.b(e), No) ? YB(d, Iq.b(e), b, c, a) : v.a(Xt.b(e), rs) ? (a = YB(d, Iq.b(e), b, c, a), m(SB(a)) ? TB : a) : $B(d, a, c, e, b);
}
;function bC(b, a) {
  if (v.a(null, a)) {
    return b;
  }
  if (v.a(ym, a)) {
    return I.c(b, fo, oz(fo.b(b)));
  }
  if (v.a(ck, a)) {
    return I.c(b, fo, pz(po.b(b), fo.b(b)));
  }
  if (v.a(Zo, a)) {
    return I.c(b, fo, qz(po.b(b), fo.b(b)));
  }
  throw Error([q("No matching clause: "), q(a)].join(""));
}
function cC(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  return dC(arguments[0], arguments[1], 2 < a.length ? new rd(a.slice(2), 0, null) : null);
}
function dC(b, a, c) {
  var d = null != c && (c.l & 64 || k === c.I) ? P(Of, c) : c;
  if (!ze(new V(null, new l(null, 4, [null, null, ck, null, ym, null, Zo, null], null), null), t.a(d, fq))) {
    throw Error("Assert failed: (contains? #{nil :tags :content :all} (get options :unhide))");
  }
  if (!ze(new V(null, new l(null, 2, [null, null, Pn, null], null), null), t.a(d, yt))) {
    throw Error("Assert failed: (contains? #{nil :memory} (get options :optimize))");
  }
  c = t.c(d, Xn, Wm.b(b));
  var e = t.c(d, Bq, !1), f = t.c(d, yt, !1), g = t.a(d, fq);
  b = bC(b, g);
  return m(Fq.b(d)) ? (f = fo.b(b), b = po.b(b), d = Uy.b ? Uy.b(b) : Uy.call(null, b), b = eB(f, c, a, e), b instanceof yA ? (g = Gl.b(b), f = BA(f, a, zA(a), g, d), dB(f, jz(c), e), e = TA(f, null), m(e) ? a = x(e) : (e = RA(d, Ip, a, 0, B(a)), a = RA(d, c, e, 0, B(a))), a = Wd(a, ki.j(C([b, he(a)], 0)))) : a = b, a) : m(m(f) ? rb(e) : f) ? (d = aC(b, a, c), m(eC.b ? eC.b(d) : eC.call(null, d)) ? eB(fo.b(b), c, a, e) : d) : eB(fo.b(b), c, a, e);
}
function fC(b, a, c, d, e, f) {
  this.Pa = b;
  this.Gd = a;
  this.Cd = c;
  this.h = d;
  this.g = e;
  this.m = f;
  this.l = 2229667595;
  this.M = 8192;
}
h = fC.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "grammar":
      return this.Pa;
    case "start-production":
      return this.Gd;
    case "output-format":
      return this.Cd;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#instaparse.core.Parser{", ", ", "}", c, N.a(new Q(null, 3, 5, R, [new Q(null, 2, 5, R, [fo, this.Pa], null), new Q(null, 2, 5, R, [Wm, this.Gd], null), new Q(null, 2, 5, R, [po, this.Cd], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 3, new Q(null, 3, 5, R, [fo, Wm, po], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 3 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 3, [Wm, null, fo, null, po, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new fC(this.Pa, this.Gd, this.Cd, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(fo, a) : L.call(null, fo, a)) ? new fC(c, this.Gd, this.Cd, this.h, this.g, null) : m(L.a ? L.a(Wm, a) : L.call(null, Wm, a)) ? new fC(this.Pa, c, this.Cd, this.h, this.g, null) : m(L.a ? L.a(po, a) : L.call(null, po, a)) ? new fC(this.Pa, this.Gd, c, this.h, this.g, null) : new fC(this.Pa, this.Gd, this.Cd, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 3, 5, R, [new Q(null, 2, 5, R, [fo, this.Pa], null), new Q(null, 2, 5, R, [Wm, this.Gd], null), new Q(null, 2, 5, R, [po, this.Cd], null)], null), this.g));
};
h.U = function(b, a) {
  return new fC(this.Pa, this.Gd, this.Cd, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.call = function() {
  var b = null, b = function(a, b, d, e, f, g, n, r) {
    switch(arguments.length) {
      case 2:
        return cC(this, b);
      case 4:
        return dC(this, b, C([d, e], 0));
      case 6:
        return dC(this, b, C([d, e, f, g], 0));
      case 8:
        return dC(this, b, C([d, e, f, g, n, r], 0));
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  b.a = function(a, b) {
    return cC(this, b);
  };
  b.K = function(a, b, d, e) {
    return dC(this, b, C([d, e], 0));
  };
  b.Xa = function(a, b, d, e, f, g) {
    return dC(this, b, C([d, e, f, g], 0));
  };
  b.Za = function(a, b, d, e, f, g, n, r) {
    return dC(this, b, C([d, e, f, g, n, r], 0));
  };
  return b;
}();
h.apply = function(b, a) {
  return this.call.apply(this, [this].concat(yb(a)));
};
h.b = function(b) {
  return cC(this, b);
};
h.c = function(b, a, c) {
  return dC(this, b, C([a, c], 0));
};
h.ba = function(b, a, c, d, e) {
  return dC(this, b, C([a, c, d, e], 0));
};
h.Oa = function(b, a, c, d, e, f, g) {
  return dC(this, b, C([a, c, d, e, f, g], 0));
};
function gC(b) {
  return new fC(fo.b(b), Wm.b(b), po.b(b), null, J.j(b, fo, C([Wm, po], 0)), null);
}
h.Aa = k;
h.X = function(b, a) {
  return Ac(a, Lz(this));
};
function hC(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  return iC(arguments[0], 1 < a.length ? new rd(a.slice(1), 0, null) : null);
}
function iC(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a;
  if (!ze(new V(null, new l(null, 3, [null, null, pq, null, dv, null], null), null), t.a(c, jm))) {
    throw Error("Assert failed: (contains? #{nil :ebnf :abnf} (get options :input-format))");
  }
  if (!ze(new V(null, new l(null, 3, [null, null, ip, null, vq, null], null), null), t.a(c, po))) {
    throw Error("Assert failed: (contains? #{nil :hiccup :enlive} (get options :output-format))");
  }
  if (!function() {
    var a = t.a(c, Bv);
    return null == a || ze(jC, a) || pe(a) && ze(a, fo) && ze(a, Wm);
  }()) {
    throw Error("Assert failed: (let [ws-parser (get options :auto-whitespace)] (or (nil? ws-parser) (contains? standard-whitespace-parsers ws-parser) (and (map? ws-parser) (contains? ws-parser :grammar) (contains? ws-parser :start-production))))");
  }
  var d = t.c(c, jm, pq), e = function() {
    var b = d instanceof K ? d.ca : null;
    switch(b) {
      case "abnf":
        return QB;
      case "ebnf":
        return m(t.a(c, wv)) ? function() {
          return function(a, b) {
            var c = wB;
            wB = !0;
            try {
              return GB(a, b);
            } finally {
              wB = c;
            }
          };
        }(b, d, a, c, c) : GB;
      default:
        throw Error([q("No matching clause: "), q(d)].join(""));;
    }
  }(), f = t.c(c, po, ip), g = t.c(c, Xn, null), n = "string" === typeof b ? function() {
    var a = e.a ? e.a(b, f) : e.call(null, b, f);
    return m(g) ? gC(I.c(a, Wm, g)) : gC(a);
  }() : pe(b) ? function() {
    var a = HB(b, f, g);
    return gC(a);
  }() : re(b) ? function() {
    var a = m(g) ? g : b.b ? b.b(0) : b.call(null, 0), a = HB(P(Of, b), f, a);
    return gC(a);
  }() : null, r = t.a(c, Bv), r = r instanceof K ? t.a(jC, r) : r;
  if (m(r)) {
    var u = null != r && (r.l & 64 || k === r.I) ? P(Of, r) : r, r = t.a(u, fo), u = t.a(u, Wm);
    return I.c(n, fo, sz(fo.b(n), Wm.b(n), r, u));
  }
  return n;
}
function eC(b) {
  return b instanceof yA || he(b) instanceof yA;
}
var jC = new l(null, 2, [Pt, hC("whitespace \x3d #'\\s+'"), on, hC("whitespace \x3d #'[,\\s]+'")], null);
function kC(b) {
  return [q("http://raml.org/vocabularies/document#"), q(b)].join("");
}
function lC(b) {
  return [q("http://raml.org/vocabularies/http#"), q(b)].join("");
}
function mC(b) {
  return [q("http://raml.org/vocabularies/shapes#"), q(b)].join("");
}
function nC(b) {
  return [q("http://www.w3.org/ns/shacl#"), q(b)].join("");
}
function oC(b) {
  return [q("http://schema.org/"), q(b)].join("");
}
function pC(b) {
  return [q("http://www.w3.org/ns/hydra/core#"), q(b)].join("");
}
function qC(b) {
  return [q("http://www.w3.org/2001/XMLSchema#"), q(b)].join("");
}
function rC(b) {
  return [q("http://raml.org/vocabularies/shapes/anon#"), q(b)].join("");
}
var sC = kC("Document"), tC = kC("Fragment"), uC = kC("Module"), vC = kC("Unit"), wC = kC("SourceMap"), xC = kC("Tag"), yC = kC("DomainElement");
kC("AbstractDomainElement");
var zC = kC("ExtendRelationship"), AC = kC("IncludeRelationship"), BC = kC("source"), CC = kC("location"), DC = kC("declares"), EC = kC("references"), FC = kC("encodes"), GC = kC("tag"), HC = kC("tagId"), IC = kC("tagValue"), JC = kC("extends"), KC = kC("target"), LC = kC("label"), MC = kC("arguments");
kC("fragmentNode");
var NC = kC("additionalProperties"), OC = kC("abstractDomainElement"), PC = lC("APIDocumentation"), QC = oC("name"), RC = oC("description"), SC = lC("host"), TC = lC("scheme"), UC = lC("basePath"), VC = lC("accepts"), WC = lC("contentType"), XC = oC("provider"), YC = lC("termsOfService"), ZC = oC("version"), $C = oC("license"), aD = lC("endpoint"), bD = lC("EndPoint"), cD = pC("supportedOperation"), dD = lC("path"), eD = pC("Operation"), fD = pC("method"), gD = pC("returns"), hD = pC("expects"), 
iD = lC("Response"), jD = pC("statusCode"), kD = lC("payload"), lD = lC("Payload"), mD = lC("mediaType"), nD = lC("schema"), oD = nC("Shape"), pD = lC("Request"), qD = lC("parameter"), rD = lC("Parameter"), sD = pC("required"), tD = lC("paramBinding"), uD = kC("DomainPropertySchema"), vD = kC("domain"), wD = kC("range"), xD = kC("DomainProperty"), yD = kC("object");
function zD(b, a, c) {
  if (Xe(c)) {
    return c = P($e, Tf.a(b, c)), a.b ? a.b(c) : a.call(null, c);
  }
  if (we(c)) {
    return c = zi(Tf.a(b, c)), a.b ? a.b(c) : a.call(null, c);
  }
  if (qe(c)) {
    return c = Cb.c(function(a, c) {
      return ce.a(a, b.b ? b.b(c) : b.call(null, c));
    }, c, c), a.b ? a.b(c) : a.call(null, c);
  }
  me(c) && (c = gg.a(null == c ? null : Fb(c), Tf.a(b, c)));
  return a.b ? a.b(c) : a.call(null, c);
}
var AD = function AD(a, c) {
  return zD(Hf(AD, a), a, c);
};
function BD(b) {
  return AD(function(a) {
    return function(b) {
      return pe(b) ? gg.a(S, Tf.a(a, b)) : b;
    };
  }(function(a) {
    var b = F(a, 0, null);
    a = F(a, 1, null);
    return "string" === typeof b ? new Q(null, 2, 5, R, [df.b(b), a], null) : new Q(null, 2, 5, R, [b, a], null);
  }), b);
}
;var CD = {}, db = !1, bb = function() {
  function b(b) {
    var c = null;
    if (0 < arguments.length) {
      for (var c = 0, e = Array(arguments.length - 0);c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new rd(e, 0);
    }
    return a.call(this, c);
  }
  function a(a) {
    return console.log.apply(console, Bb ? Ab(a) : zb.call(null, a));
  }
  b.N = 0;
  b.P = function(b) {
    b = w(b);
    return a(b);
  };
  b.j = a;
  return b;
}(), cb = function() {
  function b(b) {
    var c = null;
    if (0 < arguments.length) {
      for (var c = 0, e = Array(arguments.length - 0);c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new rd(e, 0);
    }
    return a.call(this, c);
  }
  function a(a) {
    return console.error.apply(console, Bb ? Ab(a) : zb.call(null, a));
  }
  b.N = 0;
  b.P = function(b) {
    b = w(b);
    return a(b);
  };
  b.j = a;
  return b;
}();
function DD(b) {
  var a = b instanceof Error;
  if (a) {
    return a;
  }
  a = b instanceof global.Error;
  return m(a) ? a : null != Gt.b(b);
}
function ED(b) {
  try {
    return parseInt(b);
  } catch (a) {
    if (a instanceof Error) {
      return b;
    }
    throw a;
  }
}
function FD(b) {
  if (pa(b, "http://") || pa(b, "https://")) {
    var a = rx(null), c = rx(1);
    Vw(function(a, c) {
      return function() {
        var d = function() {
          return function(a) {
            return function() {
              function b(b) {
                for (;;) {
                  var c;
                  a: {
                    try {
                      for (;;) {
                        var d = a(b);
                        if (!L(d, X)) {
                          c = d;
                          break a;
                        }
                      }
                    } catch (O) {
                      if (O instanceof Object) {
                        b[5] = O, ox(b), c = X;
                      } else {
                        throw O;
                      }
                    }
                  }
                  if (!L(c, X)) {
                    return c;
                  }
                }
              }
              function c() {
                var a = [null, null, null, null, null, null, null];
                a[0] = d;
                a[1] = 1;
                return a;
              }
              var d = null, d = function(a) {
                switch(arguments.length) {
                  case 0:
                    return c.call(this);
                  case 1:
                    return b.call(this, a);
                }
                throw Error("Invalid arity: " + arguments.length);
              };
              d.o = c;
              d.b = b;
              return d;
            }();
          }(function(a, c) {
            return function(d) {
              var e = d[1];
              if (1 === e) {
                var f = JS_REST(b), g = function() {
                  return function(a, b, c, d) {
                    return function(e) {
                      var f = rx(1);
                      Vw(function(a, b, c, d, f) {
                        return function() {
                          var g = function() {
                            return function(a) {
                              return function() {
                                function b(b) {
                                  for (;;) {
                                    var c;
                                    a: {
                                      try {
                                        for (;;) {
                                          var d = a(b);
                                          if (!L(d, X)) {
                                            c = d;
                                            break a;
                                          }
                                        }
                                      } catch (Oc) {
                                        if (Oc instanceof Object) {
                                          b[5] = Oc, ox(b), c = X;
                                        } else {
                                          throw Oc;
                                        }
                                      }
                                    }
                                    if (!L(c, X)) {
                                      return c;
                                    }
                                  }
                                }
                                function c() {
                                  var a = [null, null, null, null, null, null, null];
                                  a[0] = d;
                                  a[1] = 1;
                                  return a;
                                }
                                var d = null, d = function(a) {
                                  switch(arguments.length) {
                                    case 0:
                                      return c.call(this);
                                    case 1:
                                      return b.call(this, a);
                                  }
                                  throw Error("Invalid arity: " + arguments.length);
                                };
                                d.o = c;
                                d.b = b;
                                return d;
                              }();
                            }(function(a, b, c, d, f) {
                              return function(a) {
                                var b = a[1];
                                return 1 === b ? kx(a, 2, f, e.entity) : 2 === b ? lx(a, a[2]) : null;
                              };
                            }(a, b, c, d, f), a, b, c, d, f);
                          }(), n = function() {
                            var b = g.o ? g.o() : g.call(null);
                            b[6] = a;
                            return b;
                          }();
                          return ix(n);
                        };
                      }(f, a, b, c, d));
                      return f;
                    };
                  }(f, e, a, c);
                }(), n = f.then(g), u = n.catch(function() {
                  return function(a, b, c, d, e, f) {
                    return function() {
                      var g = rx(1);
                      Vw(function(a, b, c, d, e, f, g) {
                        return function() {
                          var n = function() {
                            return function(a) {
                              return function() {
                                function b(b) {
                                  for (;;) {
                                    var c;
                                    a: {
                                      try {
                                        for (;;) {
                                          var d = a(b);
                                          if (!L(d, X)) {
                                            c = d;
                                            break a;
                                          }
                                        }
                                      } catch (Od) {
                                        if (Od instanceof Object) {
                                          b[5] = Od, ox(b), c = X;
                                        } else {
                                          throw Od;
                                        }
                                      }
                                    }
                                    if (!L(c, X)) {
                                      return c;
                                    }
                                  }
                                }
                                function c() {
                                  var a = [null, null, null, null, null, null, null];
                                  a[0] = d;
                                  a[1] = 1;
                                  return a;
                                }
                                var d = null, d = function(a) {
                                  switch(arguments.length) {
                                    case 0:
                                      return c.call(this);
                                    case 1:
                                      return b.call(this, a);
                                  }
                                  throw Error("Invalid arity: " + arguments.length);
                                };
                                d.o = c;
                                d.b = b;
                                return d;
                              }();
                            }(function(a, b, c, d, e, f, g) {
                              return function(a) {
                                var b = a[1];
                                return 1 === b ? (b = fe([Gt], [CD.hi]), kx(a, 2, g, b)) : 2 === b ? lx(a, a[2]) : null;
                              };
                            }(a, b, c, d, e, f, g), a, b, c, d, e, f, g);
                          }(), u = function() {
                            var b = n.o ? n.o() : n.call(null);
                            b[6] = a;
                            return b;
                          }();
                          return ix(u);
                        };
                      }(g, a, b, c, d, e, f));
                      return g;
                    };
                  }(f, g, n, e, a, c);
                }());
                return lx(d, u);
              }
              return null;
            };
          }(a, c), a, c);
        }(), e = function() {
          var b = d.o ? d.o() : d.call(null);
          b[6] = a;
          return b;
        }();
        return ix(e);
      };
    }(c, a));
  } else {
    var c = pa(b, "file://") ? uz(b, "file://", "") : b, a = rx(null), d = rx(1);
    Vw(function(a, b, c) {
      return function() {
        var d = function() {
          return function(a) {
            return function() {
              function b(b) {
                for (;;) {
                  var c;
                  a: {
                    try {
                      for (;;) {
                        var d = a(b);
                        if (!L(d, X)) {
                          c = d;
                          break a;
                        }
                      }
                    } catch (T) {
                      if (T instanceof Object) {
                        b[5] = T, ox(b), c = X;
                      } else {
                        throw T;
                      }
                    }
                  }
                  if (!L(c, X)) {
                    return c;
                  }
                }
              }
              function c() {
                var a = [null, null, null, null, null, null, null];
                a[0] = d;
                a[1] = 1;
                return a;
              }
              var d = null, d = function(a) {
                switch(arguments.length) {
                  case 0:
                    return c.call(this);
                  case 1:
                    return b.call(this, a);
                }
                throw Error("Invalid arity: " + arguments.length);
              };
              d.o = c;
              d.b = b;
              return d;
            }();
          }(function(a, b, c) {
            return function(d) {
              var e = d[1];
              if (1 === e) {
                var f = zz(b, /#/), g = x(f), n = NODE_FS.ii(g, function() {
                  return function(a, b, c, d, e, f) {
                    return function(g, n) {
                      var u = rx(1);
                      Vw(function(a, b, c, d, e, f, u) {
                        return function() {
                          var r = function() {
                            return function(a) {
                              return function() {
                                function b(b) {
                                  for (;;) {
                                    var c;
                                    a: {
                                      try {
                                        for (;;) {
                                          var d = a(b);
                                          if (!L(d, X)) {
                                            c = d;
                                            break a;
                                          }
                                        }
                                      } catch (bg) {
                                        if (bg instanceof Object) {
                                          b[5] = bg, ox(b), c = X;
                                        } else {
                                          throw bg;
                                        }
                                      }
                                    }
                                    if (!L(c, X)) {
                                      return c;
                                    }
                                  }
                                }
                                function c() {
                                  var a = [null, null, null, null, null, null, null];
                                  a[0] = d;
                                  a[1] = 1;
                                  return a;
                                }
                                var d = null, d = function(a) {
                                  switch(arguments.length) {
                                    case 0:
                                      return c.call(this);
                                    case 1:
                                      return b.call(this, a);
                                  }
                                  throw Error("Invalid arity: " + arguments.length);
                                };
                                d.o = c;
                                d.b = b;
                                return d;
                              }();
                            }(function(a, b, c, d, e, f, u) {
                              return function(a) {
                                var b = a[1];
                                return 1 === b ? (a[1] = null != g ? 2 : 3, X) : 2 === b ? (b = fe([Gt], [g]), kx(a, 5, u, b)) : 3 === b ? kx(a, 6, u, n.toString()) : 4 === b ? lx(a, a[2]) : 5 === b || 6 === b ? (a[2] = a[2], a[1] = 4, X) : null;
                              };
                            }(a, b, c, d, e, f, u), a, b, c, d, e, f, u);
                          }(), y = function() {
                            var b = r.o ? r.o() : r.call(null);
                            b[6] = a;
                            return b;
                          }();
                          return ix(y);
                        };
                      }(u, a, b, c, d, e, f));
                      return u;
                    };
                  }(f, g, e, a, b, c);
                }());
                return lx(d, n);
              }
              return null;
            };
          }(a, b, c), a, b, c);
        }(), e = function() {
          var b = d.o ? d.o() : d.call(null);
          b[6] = a;
          return b;
        }();
        return ix(e);
      };
    }(d, c, a));
  }
  return a;
}
function GD(b) {
  var a = rx(null), c = rx(1);
  Vw(function(a, c) {
    return function() {
      var d = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (M) {
                    if (M instanceof Object) {
                      b[5] = M, ox(b), c = X;
                    } else {
                      throw M;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function(a, c) {
          return function(d) {
            var e = d[1];
            if (1 === e) {
              var f = zz(b, /#/), g = NODE_FS.ki(x, f);
              d[7] = g;
              return lx(d, function() {
                return function(a, b, c, d, e) {
                  return function(f) {
                    var g = rx(1);
                    Vw(function(a, b, c, d, e, g) {
                      return function() {
                        var n = function() {
                          return function(a) {
                            return function() {
                              function b(b) {
                                for (;;) {
                                  var c;
                                  a: {
                                    try {
                                      for (;;) {
                                        var d = a(b);
                                        if (!L(d, X)) {
                                          c = d;
                                          break a;
                                        }
                                      }
                                    } catch (uc) {
                                      if (uc instanceof Object) {
                                        b[5] = uc, ox(b), c = X;
                                      } else {
                                        throw uc;
                                      }
                                    }
                                  }
                                  if (!L(c, X)) {
                                    return c;
                                  }
                                }
                              }
                              function c() {
                                var a = [null, null, null, null, null, null, null, null, null];
                                a[0] = d;
                                a[1] = 1;
                                return a;
                              }
                              var d = null, d = function(a) {
                                switch(arguments.length) {
                                  case 0:
                                    return c.call(this);
                                  case 1:
                                    return b.call(this, a);
                                }
                                throw Error("Invalid arity: " + arguments.length);
                              };
                              d.o = c;
                              d.b = b;
                              return d;
                            }();
                          }(function(a, b, c, d, e, g) {
                            return function(a) {
                              var b = a[1];
                              if (1 === b) {
                                return a[1] = null != f ? 2 : 3, X;
                              }
                              if (2 === b || 3 === b) {
                                return a[2] = null, a[1] = 4, X;
                              }
                              if (4 === b) {
                                var b = a[2], c = fe([Gt], [f]);
                                a[7] = b;
                                return kx(a, 5, g, c);
                              }
                              return 5 === b ? (a[8] = a[2], kx(a, 6, g, null)) : 6 === b ? lx(a, a[2]) : null;
                            };
                          }(a, b, c, d, e, g), a, b, c, d, e, g);
                        }(), u = function() {
                          var b = n.o ? n.o() : n.call(null);
                          b[6] = a;
                          return b;
                        }();
                        return ix(u);
                      };
                    }(g, a, b, c, d, e));
                    return g;
                  };
                }(f, g, e, a, c);
              }());
            }
            return null;
          };
        }(a, c), a, c);
      }(), e = function() {
        var b = d.o ? d.o() : d.call(null);
        b[6] = a;
        return b;
      }();
      return ix(e);
    };
  }(c, a));
  return a;
}
function HD(b) {
  try {
    var a, c = fj(b);
    a = JS_AST("", c);
    return ij(a);
  } catch (d) {
    if (d instanceof Error) {
      return Xi(C(["ERROR"], 0)), a = C([d], 0), Ri(a, kb()), m(db) && Si(), Xi(C([b], 0)), ij(JSON.parse(b));
    }
    throw d;
  }
}
function ID(b) {
  return JSON.stringify(fj(b));
}
function JD(b) {
  b = ij(b);
  return pe(b) ? BD(b) : b;
}
function KD(b, a) {
  var c = rx(null), d = ID(b), e = ID(a);
  (function() {
    return SHACL(e, "application/ld+json", d, "application/ld+json", function(a, b, c, d, e, y, D) {
      return function(f, g) {
        var n = rx(1);
        Vw(function(a, b, c, d, e, n, u, r) {
          return function() {
            var y = function() {
              return function(a) {
                return function() {
                  function b(b) {
                    for (;;) {
                      var c;
                      a: {
                        try {
                          for (;;) {
                            var d = a(b);
                            if (!L(d, X)) {
                              c = d;
                              break a;
                            }
                          }
                        } catch (Pb) {
                          if (Pb instanceof Object) {
                            b[5] = Pb, ox(b), c = X;
                          } else {
                            throw Pb;
                          }
                        }
                      }
                      if (!L(c, X)) {
                        return c;
                      }
                    }
                  }
                  function c() {
                    var a = [null, null, null, null, null, null, null];
                    a[0] = d;
                    a[1] = 1;
                    return a;
                  }
                  var d = null, d = function(a) {
                    switch(arguments.length) {
                      case 0:
                        return c.call(this);
                      case 1:
                        return b.call(this, a);
                    }
                    throw Error("Invalid arity: " + arguments.length);
                  };
                  d.o = c;
                  d.b = b;
                  return d;
                }();
              }(function(a, b, c, d, e, n) {
                return function(a) {
                  var b = a[1];
                  if (1 === b) {
                    return a[1] = null != f ? 2 : 3, X;
                  }
                  if (2 === b) {
                    var b = [bo], c = [ij(f)], b = fe(b, c);
                    return kx(a, 5, n, b);
                  }
                  return 3 === b ? (b = ij(JSON.parse(g)), kx(a, 6, n, b)) : 4 === b ? lx(a, a[2]) : 5 === b || 6 === b ? (a[2] = a[2], a[1] = 4, X) : null;
                };
              }(a, b, c, d, e, n, u, r), a, b, c, d, e, n, u, r);
            }(), D = function() {
              var b = y.o ? y.o() : y.call(null);
              b[6] = a;
              return b;
            }();
            return ix(D);
          };
        }(n, a, b, c, d, e, y, D));
        return n;
      };
    }(e, "application/ld+json", d, "application/ld+json", c, d, e));
  })();
  return c;
}
;var LD = Nw("Opera"), MD = Nw("Trident") || Nw("MSIE"), ND = Nw("Edge"), OD = Nw("Gecko") && !(-1 != Kw.toLowerCase().indexOf("webkit") && !Nw("Edge")) && !(Nw("Trident") || Nw("MSIE")) && !Nw("Edge"), PD = -1 != Kw.toLowerCase().indexOf("webkit") && !Nw("Edge");
PD && Nw("Mobile");
Nw("Macintosh");
Nw("Windows");
Nw("Linux") || Nw("CrOS");
var QD = aa.navigator || null;
QD && (QD.appVersion || "").indexOf("X11");
Nw("Android");
!Nw("iPhone") || Nw("iPod") || Nw("iPad");
Nw("iPad");
Nw("iPod");
function RD() {
  var b = aa.document;
  return b ? b.documentMode : void 0;
}
var SD;
a: {
  var TD = "", UD = function() {
    var b = Kw;
    if (OD) {
      return /rv\:([^\);]+)(\)|;)/.exec(b);
    }
    if (ND) {
      return /Edge\/([\d\.]+)/.exec(b);
    }
    if (MD) {
      return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(b);
    }
    if (PD) {
      return /WebKit\/(\S+)/.exec(b);
    }
    if (LD) {
      return /(?:Version)[ \/]?(\S+)/.exec(b);
    }
  }();
  UD && (TD = UD ? UD[1] : "");
  if (MD) {
    var VD = RD();
    if (null != VD && VD > parseFloat(TD)) {
      SD = String(VD);
      break a;
    }
  }
  SD = TD;
}
var WD = {};
function XD(b) {
  var a;
  if (!(a = WD[b])) {
    a = 0;
    for (var c = va(String(SD)).split("."), d = va(String(b)).split("."), e = Math.max(c.length, d.length), f = 0;0 == a && f < e;f++) {
      var g = c[f] || "", n = d[f] || "", r = RegExp("(\\d*)(\\D*)", "g"), u = RegExp("(\\d*)(\\D*)", "g");
      do {
        var y = r.exec(g) || ["", "", ""], D = u.exec(n) || ["", "", ""];
        if (0 == y[0].length && 0 == D[0].length) {
          break;
        }
        a = xa(0 == y[1].length ? 0 : parseInt(y[1], 10), 0 == D[1].length ? 0 : parseInt(D[1], 10)) || xa(0 == y[2].length, 0 == D[2].length) || xa(y[2], D[2]);
      } while (0 == a);
    }
    a = WD[b] = 0 <= a;
  }
  return a;
}
var YD;
var ZD = aa.document;
YD = ZD && MD ? RD() || ("CSS1Compat" == ZD.compatMode ? parseInt(SD, 10) : 5) : void 0;
MD && XD("9");
!PD || XD("528");
OD && XD("1.9b") || MD && XD("8") || LD && XD("9.5") || PD && XD("528");
OD && !XD("8") || MD && XD("9");
function $D(b) {
  if (b.zc && "function" == typeof b.zc) {
    return b.zc();
  }
  if (da(b)) {
    return b.split("");
  }
  if (ca(b)) {
    for (var a = [], c = b.length, d = 0;d < c;d++) {
      a.push(b[d]);
    }
    return a;
  }
  return Aa(b);
}
function aE(b, a, c) {
  if (b.forEach && "function" == typeof b.forEach) {
    b.forEach(a, c);
  } else {
    if (ca(b) || da(b)) {
      Sa(b, a, c);
    } else {
      var d;
      if (b.zd && "function" == typeof b.zd) {
        d = b.zd();
      } else {
        if (b.zc && "function" == typeof b.zc) {
          d = void 0;
        } else {
          if (ca(b) || da(b)) {
            d = [];
            for (var e = b.length, f = 0;f < e;f++) {
              d.push(f);
            }
          } else {
            d = Ba(b);
          }
        }
      }
      for (var e = $D(b), f = e.length, g = 0;g < f;g++) {
        a.call(c, e[g], d && d[g], b);
      }
    }
  }
}
;function bE(b, a) {
  this.Tc = {};
  this.Qb = [];
  this.rb = 0;
  var c = arguments.length;
  if (1 < c) {
    if (c % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var d = 0;d < c;d += 2) {
      this.set(arguments[d], arguments[d + 1]);
    }
  } else {
    b && this.addAll(b);
  }
}
h = bE.prototype;
h.zc = function() {
  cE(this);
  for (var b = [], a = 0;a < this.Qb.length;a++) {
    b.push(this.Tc[this.Qb[a]]);
  }
  return b;
};
h.zd = function() {
  cE(this);
  return this.Qb.concat();
};
h.qe = function(b) {
  return dE(this.Tc, b);
};
h.clear = function() {
  this.Tc = {};
  this.rb = this.Qb.length = 0;
};
h.remove = function(b) {
  return dE(this.Tc, b) ? (delete this.Tc[b], this.rb--, this.Qb.length > 2 * this.rb && cE(this), !0) : !1;
};
function cE(b) {
  if (b.rb != b.Qb.length) {
    for (var a = 0, c = 0;a < b.Qb.length;) {
      var d = b.Qb[a];
      dE(b.Tc, d) && (b.Qb[c++] = d);
      a++;
    }
    b.Qb.length = c;
  }
  if (b.rb != b.Qb.length) {
    for (var e = {}, c = a = 0;a < b.Qb.length;) {
      d = b.Qb[a], dE(e, d) || (b.Qb[c++] = d, e[d] = 1), a++;
    }
    b.Qb.length = c;
  }
}
h.get = function(b, a) {
  return dE(this.Tc, b) ? this.Tc[b] : a;
};
h.set = function(b, a) {
  dE(this.Tc, b) || (this.rb++, this.Qb.push(b));
  this.Tc[b] = a;
};
h.addAll = function(b) {
  var a;
  b instanceof bE ? (a = b.zd(), b = b.zc()) : (a = Ba(b), b = Aa(b));
  for (var c = 0;c < a.length;c++) {
    this.set(a[c], b[c]);
  }
};
h.forEach = function(b, a) {
  for (var c = this.zd(), d = 0;d < c.length;d++) {
    var e = c[d], f = this.get(e);
    b.call(a, f, e, this);
  }
};
h.clone = function() {
  return new bE(this);
};
function dE(b, a) {
  return Object.prototype.hasOwnProperty.call(b, a);
}
;function eE(b, a, c, d, e) {
  this.reset(b, a, c, d, e);
}
eE.prototype.tg = null;
var fE = 0;
eE.prototype.reset = function(b, a, c, d, e) {
  "number" == typeof e || fE++;
  d || ma();
  this.we = b;
  this.Oh = a;
  delete this.tg;
};
eE.prototype.Dg = function(b) {
  this.we = b;
};
function gE(b) {
  this.Bg = b;
  this.vg = this.nf = this.we = this.af = null;
}
function hE(b, a) {
  this.name = b;
  this.value = a;
}
hE.prototype.toString = function() {
  return this.name;
};
var iE = new hE("INFO", 800), jE = new hE("CONFIG", 700);
h = gE.prototype;
h.getName = function() {
  return this.Bg;
};
h.getParent = function() {
  return this.af;
};
h.Dg = function(b) {
  this.we = b;
};
function kE(b) {
  if (b.we) {
    return b.we;
  }
  if (b.af) {
    return kE(b.af);
  }
  Ra("Root logger has no level set.");
  return null;
}
h.log = function(b, a, c) {
  if (b.value >= kE(this).value) {
    for (ea(a) && (a = a()), b = new eE(b, String(a), this.Bg), c && (b.tg = c), c = "log:" + b.Oh, aa.console && (aa.console.timeStamp ? aa.console.timeStamp(c) : aa.console.markTimeline && aa.console.markTimeline(c)), aa.msWriteProfilerMark && aa.msWriteProfilerMark(c), c = this;c;) {
      a = c;
      var d = b;
      if (a.vg) {
        for (var e = 0, f;f = a.vg[e];e++) {
          f(d);
        }
      }
      c = c.getParent();
    }
  }
};
h.info = function(b, a) {
  this.log(iE, b, a);
};
var lE = {}, mE = null;
function nE(b) {
  mE || (mE = new gE(""), lE[""] = mE, mE.Dg(jE));
  var a;
  if (!(a = lE[b])) {
    a = new gE(b);
    var c = b.lastIndexOf("."), d = b.substr(c + 1), c = nE(b.substr(0, c));
    c.nf || (c.nf = {});
    c.nf[d] = a;
    a.af = c;
    lE[b] = a;
  }
  return a;
}
;var oE = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#(.*))?$/;
function pE(b, a) {
  if (b) {
    for (var c = b.split("\x26"), d = 0;d < c.length;d++) {
      var e = c[d].indexOf("\x3d"), f, g = null;
      0 <= e ? (f = c[d].substring(0, e), g = c[d].substring(e + 1)) : f = c[d];
      a(f, g ? decodeURIComponent(g.replace(/\+/g, " ")) : "");
    }
  }
}
;nE("goog.net.XhrIo");
U || Nf.call(null, 0);
new Oa;
if ("undefined" === typeof qE) {
  var qE = {}
}
if ("undefined" === typeof rE) {
  var rE = {}
}
if ("undefined" === typeof sE) {
  var sE = {}
}
;function tE(b, a) {
  var c = tf(ui, b, a);
  return Ud(c, dg(function(a) {
    return function(b) {
      return a === b;
    };
  }(c), a));
}
var uE = function uE(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 1:
      return uE.b(arguments[0]);
    case 2:
      return uE.a(arguments[0], arguments[1]);
    default:
      return uE.j(arguments[0], arguments[1], new rd(c.slice(2), 0, null));
  }
};
uE.b = function(b) {
  return b;
};
uE.a = function(b, a) {
  for (;;) {
    if (B(a) < B(b)) {
      var c = b;
      b = a;
      a = c;
    } else {
      return Cb.c(function(a, b) {
        return function(a, c) {
          return ze(b, c) ? a : ke.a(a, c);
        };
      }(b, a), b, b);
    }
  }
};
uE.j = function(b, a, c) {
  b = tE(function(a) {
    return -B(a);
  }, ce.j(c, a, C([b], 0)));
  return Cb.c(uE, x(b), sd(b));
};
uE.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  c = z(c);
  return uE.j(a, b, c);
};
uE.N = 2;
var vE = function vE(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 1:
      return vE.b(arguments[0]);
    case 2:
      return vE.a(arguments[0], arguments[1]);
    default:
      return vE.j(arguments[0], arguments[1], new rd(c.slice(2), 0, null));
  }
};
vE.b = function(b) {
  return b;
};
vE.a = function(b, a) {
  return B(b) < B(a) ? Cb.c(function(b, d) {
    return ze(a, d) ? ke.a(b, d) : b;
  }, b, b) : Cb.c(ke, b, a);
};
vE.j = function(b, a, c) {
  return Cb.c(vE, b, ce.a(c, a));
};
vE.P = function(b) {
  var a = x(b), c = z(b);
  b = x(c);
  c = z(c);
  return vE.j(a, b, c);
};
vE.N = 2;
function wE(b, a) {
  Cb.c(function(a, d) {
    return m(b.b ? b.b(d) : b.call(null, d)) ? !0 : new Dd(null);
  }, !0, a);
}
function xE(b) {
  b = A.b ? A.b(b) : A.call(null, b);
  var a;
  a = Jm.b(b);
  a = A.b ? A.b(a) : A.call(null, a);
  throw Cj(a, J.a(b, Jm));
}
var yE = {}, zE = {};
function AE(b, a, c, d) {
  if (m(xE)) {
    var e = new aj(function(e, g) {
      return function() {
        var f = new Date, r = m(b) ? b : "?", u = "" + q(a), y = c === yE, D = y ? "\x3cundefined\x3e" : null == c ? "\x3cnil\x3e" : "" + q(c), G = zE === d ? null : d, r = new aj(function(a, b, c, d, e, f) {
          return function() {
            var a;
            a = m(f) ? "" + q(f) : null;
            var g;
            g = [q("Invariant violation in `"), q("taoensso.encore"), q(":"), q(b), q("`. Test form: `"), q(c), q("` with failing input: `"), q(e), q("`")].join("");
            return rb(f) ? g : d ? [q(g), q("\n`val` error: "), q(a)].join("") : [q(g), q("\n`pred-form` error: "), q(a)].join("");
          };
        }(f, r, u, y, D, G, e, g), null), D = function() {
          if (m(null)) {
            try {
              return null.o ? null.o() : null.call(null);
            } catch (H) {
              if (H instanceof Error) {
                return new l(null, 1, [Br, H], null);
              }
              throw H;
            }
          } else {
            return null;
          }
        }();
        return fe([pk, Jm, Zm, jn, Yi, Mo, Sq, tr, yr, it, mt, Tu], [null, r, !0, f, y ? As : c, "taoensso.encore", y ? As : tb(c), G, !0, D, b, u]);
      };
    }(xE, xE), null);
    return xE.b ? xE.b(e) : xE.call(null, e);
  }
  return null;
}
;function BE(b, a) {
  this.Pc = this.Hd = this.od = "";
  this.Qd = null;
  this.yd = this.Ec = "";
  this.tc = this.zh = !1;
  var c;
  if (b instanceof BE) {
    this.tc = void 0 !== a ? a : b.tc, CE(this, b.od), c = b.Hd, DE(this), this.Hd = c, c = b.Pc, DE(this), this.Pc = c, EE(this, b.Qd), c = b.Ec, DE(this), this.Ec = c, FE(this, b.Wc.clone()), c = b.yd, DE(this), this.yd = c;
  } else {
    if (b && (c = String(b).match(oE))) {
      this.tc = !!a;
      CE(this, c[1] || "", !0);
      var d = c[2] || "";
      DE(this);
      this.Hd = GE(d);
      d = c[3] || "";
      DE(this);
      this.Pc = GE(d, !0);
      EE(this, c[4]);
      d = c[5] || "";
      DE(this);
      this.Ec = GE(d, !0);
      FE(this, c[6] || "", !0);
      c = c[7] || "";
      DE(this);
      this.yd = GE(c);
    } else {
      this.tc = !!a, this.Wc = new HE(null, 0, this.tc);
    }
  }
}
BE.prototype.toString = function() {
  var b = [], a = this.od;
  a && b.push(IE(a, JE, !0), ":");
  var c = this.Pc;
  if (c || "file" == a) {
    b.push("//"), (a = this.Hd) && b.push(IE(a, JE, !0), "@"), b.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), c = this.Qd, null != c && b.push(":", String(c));
  }
  if (c = this.Ec) {
    this.Pc && "/" != c.charAt(0) && b.push("/"), b.push(IE(c, "/" == c.charAt(0) ? KE : LE, !0));
  }
  (c = this.Wc.toString()) && b.push("?", c);
  (c = this.yd) && b.push("#", IE(c, ME));
  return b.join("");
};
BE.prototype.resolve = function(b) {
  var a = this.clone(), c = !!b.od;
  c ? CE(a, b.od) : c = !!b.Hd;
  if (c) {
    var d = b.Hd;
    DE(a);
    a.Hd = d;
  } else {
    c = !!b.Pc;
  }
  c ? (d = b.Pc, DE(a), a.Pc = d) : c = null != b.Qd;
  d = b.Ec;
  if (c) {
    EE(a, b.Qd);
  } else {
    if (c = !!b.Ec) {
      if ("/" != d.charAt(0)) {
        if (this.Pc && !this.Ec) {
          d = "/" + d;
        } else {
          var e = a.Ec.lastIndexOf("/");
          -1 != e && (d = a.Ec.substr(0, e + 1) + d);
        }
      }
      e = d;
      if (".." == e || "." == e) {
        d = "";
      } else {
        if (-1 != e.indexOf("./") || -1 != e.indexOf("/.")) {
          for (var d = pa(e, "/"), e = e.split("/"), f = [], g = 0;g < e.length;) {
            var n = e[g++];
            "." == n ? d && g == e.length && f.push("") : ".." == n ? ((1 < f.length || 1 == f.length && "" != f[0]) && f.pop(), d && g == e.length && f.push("")) : (f.push(n), d = !0);
          }
          d = f.join("/");
        } else {
          d = e;
        }
      }
    }
  }
  c ? (DE(a), a.Ec = d) : c = "" !== b.Wc.toString();
  c ? FE(a, GE(b.Wc.toString())) : c = !!b.yd;
  c && (b = b.yd, DE(a), a.yd = b);
  return a;
};
BE.prototype.clone = function() {
  return new BE(this);
};
function CE(b, a, c) {
  DE(b);
  b.od = c ? GE(a, !0) : a;
  b.od && (b.od = b.od.replace(/:$/, ""));
}
function EE(b, a) {
  DE(b);
  if (a) {
    a = Number(a);
    if (isNaN(a) || 0 > a) {
      throw Error("Bad port number " + a);
    }
    b.Qd = a;
  } else {
    b.Qd = null;
  }
}
function FE(b, a, c) {
  DE(b);
  a instanceof HE ? (b.Wc = a, b.Wc.Af(b.tc)) : (c || (a = IE(a, NE)), b.Wc = new HE(a, 0, b.tc));
}
function DE(b) {
  if (b.zh) {
    throw Error("Tried to modify a read-only Uri");
  }
}
BE.prototype.Af = function(b) {
  this.tc = b;
  this.Wc && this.Wc.Af(b);
  return this;
};
function GE(b, a) {
  return b ? a ? decodeURI(b.replace(/%25/g, "%2525")) : decodeURIComponent(b) : "";
}
function IE(b, a, c) {
  return da(b) ? (b = encodeURI(b).replace(a, OE), c && (b = b.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), b) : null;
}
function OE(b) {
  b = b.charCodeAt(0);
  return "%" + (b >> 4 & 15).toString(16) + (b & 15).toString(16);
}
var JE = /[#\/\?@]/g, LE = /[\#\?:]/g, KE = /[\#\?]/g, NE = /[\#\?@]/g, ME = /#/g;
function HE(b, a, c) {
  this.rb = this.bb = null;
  this.oc = b || null;
  this.tc = !!c;
}
function PE(b) {
  b.bb || (b.bb = new bE, b.rb = 0, b.oc && pE(b.oc, function(a, c) {
    b.add(decodeURIComponent(a.replace(/\+/g, " ")), c);
  }));
}
h = HE.prototype;
h.add = function(b, a) {
  PE(this);
  this.oc = null;
  b = QE(this, b);
  var c = this.bb.get(b);
  c || this.bb.set(b, c = []);
  c.push(a);
  this.rb += 1;
  return this;
};
h.remove = function(b) {
  PE(this);
  b = QE(this, b);
  return this.bb.qe(b) ? (this.oc = null, this.rb -= this.bb.get(b).length, this.bb.remove(b)) : !1;
};
h.clear = function() {
  this.bb = this.oc = null;
  this.rb = 0;
};
h.qe = function(b) {
  PE(this);
  b = QE(this, b);
  return this.bb.qe(b);
};
h.zd = function() {
  PE(this);
  for (var b = this.bb.zc(), a = this.bb.zd(), c = [], d = 0;d < a.length;d++) {
    for (var e = b[d], f = 0;f < e.length;f++) {
      c.push(a[d]);
    }
  }
  return c;
};
h.zc = function(b) {
  PE(this);
  var a = [];
  if (da(b)) {
    this.qe(b) && (a = Ta(a, this.bb.get(QE(this, b))));
  } else {
    b = this.bb.zc();
    for (var c = 0;c < b.length;c++) {
      a = Ta(a, b[c]);
    }
  }
  return a;
};
h.set = function(b, a) {
  PE(this);
  this.oc = null;
  b = QE(this, b);
  this.qe(b) && (this.rb -= this.bb.get(b).length);
  this.bb.set(b, [a]);
  this.rb += 1;
  return this;
};
h.get = function(b, a) {
  var c = b ? this.zc(b) : [];
  return 0 < c.length ? String(c[0]) : a;
};
h.toString = function() {
  if (this.oc) {
    return this.oc;
  }
  if (!this.bb) {
    return "";
  }
  for (var b = [], a = this.bb.zd(), c = 0;c < a.length;c++) {
    for (var d = a[c], e = encodeURIComponent(String(d)), d = this.zc(d), f = 0;f < d.length;f++) {
      var g = e;
      "" !== d[f] && (g += "\x3d" + encodeURIComponent(String(d[f])));
      b.push(g);
    }
  }
  return this.oc = b.join("\x26");
};
h.clone = function() {
  var b = new HE;
  b.oc = this.oc;
  this.bb && (b.bb = this.bb.clone(), b.rb = this.rb);
  return b;
};
function QE(b, a) {
  var c = String(a);
  b.tc && (c = c.toLowerCase());
  return c;
}
h.Af = function(b) {
  b && !this.tc && (PE(this), this.oc = null, this.bb.forEach(function(a, b) {
    var c = b.toLowerCase();
    b != c && (this.remove(b), this.remove(c), 0 < a.length && (this.oc = null, this.bb.set(QE(this, c), Wa(a)), this.rb += a.length));
  }, this));
  this.tc = b;
};
h.extend = function(b) {
  for (var a = 0;a < arguments.length;a++) {
    aE(arguments[a], function(a, b) {
      this.add(b, a);
    }, this);
  }
};
var RE, SE, TE, UE, VE, WE, XE = function XE(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return XE.j(0 < c.length ? new rd(c.slice(0), 0, null) : null);
};
XE.j = function(b) {
  return Ac(ab, P(Vi, b));
};
XE.N = 0;
XE.P = function(b) {
  return XE.j(w(b));
};
var YE = function YE(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return YE.j(0 < c.length ? new rd(c.slice(0), 0, null) : null);
};
YE.j = function(b) {
  return Ac(ab, P(Ti, b));
};
YE.N = 0;
YE.P = function(b) {
  return YE.j(w(b));
};
function ZE(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  P(YE, 0 < a.length ? new rd(a.slice(0), 0, null) : null);
  Ac(ab, "\n");
}
function $E(b) {
  if ("number" === typeof b) {
    return b;
  }
  if ("string" === typeof b && 1 === b.length) {
    return b.charCodeAt(0);
  }
  throw Error("Argument to char must be a character or number");
}
function aF(b, a, c) {
  var d = c;
  for (c = E;;) {
    if (le(d)) {
      return new Q(null, 2, 5, R, [c, a], null);
    }
    var e = x(d), d = z(d), e = P(b, new Q(null, 2, 5, R, [e, a], null));
    a = F(e, 0, null);
    e = F(e, 1, null);
    c = ce.a(c, a);
    a = e;
  }
}
function bF(b, a) {
  for (var c = a, d = E;;) {
    var e = P(b, new Q(null, 1, 5, R, [c], null)), c = F(e, 0, null), e = F(e, 1, null);
    if (rb(c)) {
      return new Q(null, 2, 5, R, [d, e], null);
    }
    d = ce.a(d, c);
    c = e;
  }
}
function cF(b) {
  return new Q(null, 2, 5, R, [gg.a(S, function() {
    return function c(b) {
      return new ff(null, function() {
        for (;;) {
          var d = w(b);
          if (d) {
            if (se(d)) {
              var f = Tc(d), g = B(f), n = kf(g);
              a: {
                for (var r = 0;;) {
                  if (r < g) {
                    var u = Kb.a(f, r), y = F(u, 0, null), u = F(u, 1, null), D = F(u, 0, null);
                    F(u, 1, null);
                    nf(n, new Q(null, 2, 5, R, [y, D], null));
                    r += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? mf(n.ta(), c(Uc(d))) : mf(n.ta(), null);
            }
            f = x(d);
            n = F(f, 0, null);
            f = F(f, 1, null);
            g = F(f, 0, null);
            F(f, 1, null);
            return Ud(new Q(null, 2, 5, R, [n, g], null), c(sd(d)));
          }
          return null;
        }
      }, null, null);
    }(b);
  }()), gg.a(S, function() {
    return function c(b) {
      return new ff(null, function() {
        for (;;) {
          var d = w(b);
          if (d) {
            if (se(d)) {
              var f = Tc(d), g = B(f), n = kf(g);
              a: {
                for (var r = 0;;) {
                  if (r < g) {
                    var u = Kb.a(f, r), y = F(u, 0, null), u = F(u, 1, null);
                    F(u, 0, null);
                    u = F(u, 1, null);
                    nf(n, new Q(null, 2, 5, R, [y, u], null));
                    r += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? mf(n.ta(), c(Uc(d))) : mf(n.ta(), null);
            }
            f = x(d);
            n = F(f, 0, null);
            f = F(f, 1, null);
            F(f, 0, null);
            f = F(f, 1, null);
            return Ud(new Q(null, 2, 5, R, [n, f], null), c(sd(d)));
          }
          return null;
        }
      }, null, null);
    }(b);
  }())], null);
}
function dF(b, a) {
  return gg.a(S, function() {
    return function d(b) {
      return new ff(null, function() {
        for (;;) {
          var e = w(b);
          if (e) {
            if (se(e)) {
              var g = Tc(e), n = B(g), r = kf(n);
              a: {
                for (var u = 0;;) {
                  if (u < n) {
                    var y = Kb.a(g, u), D = F(y, 0, null), y = F(y, 1, null);
                    nf(r, new Q(null, 2, 5, R, [D, new Q(null, 2, 5, R, [y, a], null)], null));
                    u += 1;
                  } else {
                    g = !0;
                    break a;
                  }
                }
              }
              return g ? mf(r.ta(), d(Uc(e))) : mf(r.ta(), null);
            }
            g = x(e);
            r = F(g, 0, null);
            g = F(g, 1, null);
            return Ud(new Q(null, 2, 5, R, [r, new Q(null, 2, 5, R, [g, a], null)], null), d(sd(e)));
          }
          return null;
        }
      }, null, null);
    }(b);
  }());
}
var eF = function eF(a) {
  if (null != a && null != a.rg) {
    return a.rg(a);
  }
  var c = eF[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = eF._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("IPrettyFlush.-ppflush", a);
};
function fF(b, a) {
  var c;
  c = A.b ? A.b(b) : A.call(null, b);
  c = A.b ? A.b(c) : A.call(null, c);
  return a.b ? a.b(c) : a.call(null, c);
}
function gF(b, a, c) {
  Rf.K(A.b ? A.b(b) : A.call(null, b), I, a, c);
}
function hF(b, a) {
  v.a(a, "\n") ? (gF(b, lm, 0), gF(b, jr, fF(b, jr) + 1)) : gF(b, lm, fF(b, lm) + 1);
  return Ac(fF(b, Au), a);
}
function iF(b, a) {
  var c = function() {
    var c = new l(null, 4, [Kr, a, lm, 0, jr, 0, Au, b], null);
    return U ? U(c) : Nf.call(null, c);
  }();
  "undefined" === typeof RE && (RE = function(a, b, c, g) {
    this.Qa = a;
    this.xf = b;
    this.Ld = c;
    this.Fh = g;
    this.l = 1074167808;
    this.M = 0;
  }, RE.prototype.U = function() {
    return function(a, b) {
      return new RE(this.Qa, this.xf, this.Ld, b);
    };
  }(c), RE.prototype.S = function() {
    return function() {
      return this.Fh;
    };
  }(c), RE.prototype.cd = function() {
    return function() {
      return this.Ld;
    };
  }(c), RE.prototype.Nc = function() {
    return function() {
      return Bc(this.Qa);
    };
  }(c), RE.prototype.xd = function(a) {
    return function(b, c) {
      var d = tb(c);
      if (m(v.a ? v.a(String, d) : v.call(null, String, d))) {
        var e = c.lastIndexOf("\n");
        0 > e ? gF(this, lm, fF(this, lm) + B(c)) : (gF(this, lm, B(c) - e - 1), gF(this, jr, fF(this, jr) + B(cg(function() {
          return function(a) {
            return v.a(a, "\n");
          };
        }(c, e, v, d, this, a), c))));
        return Ac(fF(this, Au), c);
      }
      if (m(v.a ? v.a(Number, d) : v.call(null, Number, d))) {
        return hF(this, c);
      }
      throw Error([q("No matching clause: "), q(d)].join(""));
    };
  }(c), RE.yc = function() {
    return function() {
      return new Q(null, 4, 5, R, [Yu, ml, iq, Fp], null);
    };
  }(c), RE.nc = !0, RE.Xb = "cljs.pprint/t_cljs$pprint45569", RE.rc = function() {
    return function(a, b) {
      return Ac(b, "cljs.pprint/t_cljs$pprint45569");
    };
  }(c));
  return new RE(b, a, c, S);
}
function jF(b, a, c, d, e, f, g, n, r, u, y, D, G) {
  this.parent = b;
  this.fc = a;
  this.gc = c;
  this.bc = d;
  this.Yb = e;
  this.cc = f;
  this.prefix = g;
  this.ec = n;
  this.hc = r;
  this.dc = u;
  this.h = y;
  this.g = D;
  this.m = G;
  this.l = 2229667594;
  this.M = 8192;
}
h = jF.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "suffix":
      return this.hc;
    case "indent":
      return this.bc;
    case "parent":
      return this.parent;
    case "section":
      return this.fc;
    case "done-nl":
      return this.Yb;
    case "start-col":
      return this.gc;
    case "prefix":
      return this.prefix;
    case "per-line-prefix":
      return this.ec;
    case "logical-block-callback":
      return this.dc;
    case "intra-block-nl":
      return this.cc;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#cljs.pprint.logical-block{", ", ", "}", c, N.a(new Q(null, 10, 5, R, [new Q(null, 2, 5, R, [Fl, this.parent], null), new Q(null, 2, 5, R, [sn, this.fc], null), new Q(null, 2, 5, R, [mp, this.gc], null), new Q(null, 2, 5, R, [Mk, this.bc], null), new Q(null, 2, 5, R, [Fo, this.Yb], null), new Q(null, 2, 5, R, [Su, this.cc], null), new Q(null, 2, 5, R, [Bp, this.prefix], null), new Q(null, 2, 5, R, [qs, this.ec], null), new Q(null, 2, 5, R, [ik, this.hc], null), new Q(null, 2, 5, R, [yu, 
  this.dc], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 10, new Q(null, 10, 5, R, [Fl, sn, mp, Mk, Fo, Su, Bp, qs, ik, yu], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 10 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 10, [ik, null, Mk, null, Fl, null, sn, null, Fo, null, mp, null, Bp, null, qs, null, yu, null, Su, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new jF(this.parent, this.fc, this.gc, this.bc, this.Yb, this.cc, this.prefix, this.ec, this.hc, this.dc, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Fl, a) : L.call(null, Fl, a)) ? new jF(c, this.fc, this.gc, this.bc, this.Yb, this.cc, this.prefix, this.ec, this.hc, this.dc, this.h, this.g, null) : m(L.a ? L.a(sn, a) : L.call(null, sn, a)) ? new jF(this.parent, c, this.gc, this.bc, this.Yb, this.cc, this.prefix, this.ec, this.hc, this.dc, this.h, this.g, null) : m(L.a ? L.a(mp, a) : L.call(null, mp, a)) ? new jF(this.parent, this.fc, c, this.bc, this.Yb, this.cc, this.prefix, this.ec, this.hc, this.dc, this.h, this.g, null) : 
  m(L.a ? L.a(Mk, a) : L.call(null, Mk, a)) ? new jF(this.parent, this.fc, this.gc, c, this.Yb, this.cc, this.prefix, this.ec, this.hc, this.dc, this.h, this.g, null) : m(L.a ? L.a(Fo, a) : L.call(null, Fo, a)) ? new jF(this.parent, this.fc, this.gc, this.bc, c, this.cc, this.prefix, this.ec, this.hc, this.dc, this.h, this.g, null) : m(L.a ? L.a(Su, a) : L.call(null, Su, a)) ? new jF(this.parent, this.fc, this.gc, this.bc, this.Yb, c, this.prefix, this.ec, this.hc, this.dc, this.h, this.g, null) : 
  m(L.a ? L.a(Bp, a) : L.call(null, Bp, a)) ? new jF(this.parent, this.fc, this.gc, this.bc, this.Yb, this.cc, c, this.ec, this.hc, this.dc, this.h, this.g, null) : m(L.a ? L.a(qs, a) : L.call(null, qs, a)) ? new jF(this.parent, this.fc, this.gc, this.bc, this.Yb, this.cc, this.prefix, c, this.hc, this.dc, this.h, this.g, null) : m(L.a ? L.a(ik, a) : L.call(null, ik, a)) ? new jF(this.parent, this.fc, this.gc, this.bc, this.Yb, this.cc, this.prefix, this.ec, c, this.dc, this.h, this.g, null) : m(L.a ? 
  L.a(yu, a) : L.call(null, yu, a)) ? new jF(this.parent, this.fc, this.gc, this.bc, this.Yb, this.cc, this.prefix, this.ec, this.hc, c, this.h, this.g, null) : new jF(this.parent, this.fc, this.gc, this.bc, this.Yb, this.cc, this.prefix, this.ec, this.hc, this.dc, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 10, 5, R, [new Q(null, 2, 5, R, [Fl, this.parent], null), new Q(null, 2, 5, R, [sn, this.fc], null), new Q(null, 2, 5, R, [mp, this.gc], null), new Q(null, 2, 5, R, [Mk, this.bc], null), new Q(null, 2, 5, R, [Fo, this.Yb], null), new Q(null, 2, 5, R, [Su, this.cc], null), new Q(null, 2, 5, R, [Bp, this.prefix], null), new Q(null, 2, 5, R, [qs, this.ec], null), new Q(null, 2, 5, R, [ik, this.hc], null), new Q(null, 2, 5, R, [yu, this.dc], null)], null), this.g));
};
h.U = function(b, a) {
  return new jF(this.parent, this.fc, this.gc, this.bc, this.Yb, this.cc, this.prefix, this.ec, this.hc, this.dc, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
function kF(b, a) {
  for (var c = Fl.b(a);;) {
    if (null == c) {
      return !1;
    }
    if (b === c) {
      return !0;
    }
    c = Fl.b(c);
  }
}
function lF(b) {
  return (b = w(b)) ? Kn.b(be(b)) - Qv.b(x(b)) : 0;
}
function mF(b, a, c, d, e, f, g, n) {
  this.ma = b;
  this.data = a;
  this.Yc = c;
  this.la = d;
  this.ka = e;
  this.h = f;
  this.g = g;
  this.m = n;
  this.l = 2229667594;
  this.M = 8192;
}
h = mF.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "type-tag":
      return this.ma;
    case "data":
      return this.data;
    case "trailing-white-space":
      return this.Yc;
    case "start-pos":
      return this.la;
    case "end-pos":
      return this.ka;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#cljs.pprint.buffer-blob{", ", ", "}", c, N.a(new Q(null, 5, 5, R, [new Q(null, 2, 5, R, [xv, this.ma], null), new Q(null, 2, 5, R, [ow, this.data], null), new Q(null, 2, 5, R, [Mr, this.Yc], null), new Q(null, 2, 5, R, [Qv, this.la], null), new Q(null, 2, 5, R, [Kn, this.ka], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 5, new Q(null, 5, 5, R, [xv, ow, Mr, Qv, Kn], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 5 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 5, [Kn, null, Mr, null, xv, null, Qv, null, ow, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new mF(this.ma, this.data, this.Yc, this.la, this.ka, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(xv, a) : L.call(null, xv, a)) ? new mF(c, this.data, this.Yc, this.la, this.ka, this.h, this.g, null) : m(L.a ? L.a(ow, a) : L.call(null, ow, a)) ? new mF(this.ma, c, this.Yc, this.la, this.ka, this.h, this.g, null) : m(L.a ? L.a(Mr, a) : L.call(null, Mr, a)) ? new mF(this.ma, this.data, c, this.la, this.ka, this.h, this.g, null) : m(L.a ? L.a(Qv, a) : L.call(null, Qv, a)) ? new mF(this.ma, this.data, this.Yc, c, this.ka, this.h, this.g, null) : m(L.a ? L.a(Kn, a) : L.call(null, 
  Kn, a)) ? new mF(this.ma, this.data, this.Yc, this.la, c, this.h, this.g, null) : new mF(this.ma, this.data, this.Yc, this.la, this.ka, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 5, 5, R, [new Q(null, 2, 5, R, [xv, this.ma], null), new Q(null, 2, 5, R, [ow, this.data], null), new Q(null, 2, 5, R, [Mr, this.Yc], null), new Q(null, 2, 5, R, [Qv, this.la], null), new Q(null, 2, 5, R, [Kn, this.ka], null)], null), this.g));
};
h.U = function(b, a) {
  return new mF(this.ma, this.data, this.Yc, this.la, this.ka, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
function nF(b, a, c, d) {
  return new mF(ar, b, a, c, d, null, null, null);
}
function oF(b, a, c, d, e, f, g, n) {
  this.ma = b;
  this.type = a;
  this.qa = c;
  this.la = d;
  this.ka = e;
  this.h = f;
  this.g = g;
  this.m = n;
  this.l = 2229667594;
  this.M = 8192;
}
h = oF.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "type-tag":
      return this.ma;
    case "type":
      return this.type;
    case "logical-block":
      return this.qa;
    case "start-pos":
      return this.la;
    case "end-pos":
      return this.ka;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#cljs.pprint.nl-t{", ", ", "}", c, N.a(new Q(null, 5, 5, R, [new Q(null, 2, 5, R, [xv, this.ma], null), new Q(null, 2, 5, R, [uo, this.type], null), new Q(null, 2, 5, R, [cv, this.qa], null), new Q(null, 2, 5, R, [Qv, this.la], null), new Q(null, 2, 5, R, [Kn, this.ka], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 5, new Q(null, 5, 5, R, [xv, uo, cv, Qv, Kn], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 5 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 5, [Kn, null, uo, null, cv, null, xv, null, Qv, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new oF(this.ma, this.type, this.qa, this.la, this.ka, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(xv, a) : L.call(null, xv, a)) ? new oF(c, this.type, this.qa, this.la, this.ka, this.h, this.g, null) : m(L.a ? L.a(uo, a) : L.call(null, uo, a)) ? new oF(this.ma, c, this.qa, this.la, this.ka, this.h, this.g, null) : m(L.a ? L.a(cv, a) : L.call(null, cv, a)) ? new oF(this.ma, this.type, c, this.la, this.ka, this.h, this.g, null) : m(L.a ? L.a(Qv, a) : L.call(null, Qv, a)) ? new oF(this.ma, this.type, this.qa, c, this.ka, this.h, this.g, null) : m(L.a ? L.a(Kn, a) : L.call(null, 
  Kn, a)) ? new oF(this.ma, this.type, this.qa, this.la, c, this.h, this.g, null) : new oF(this.ma, this.type, this.qa, this.la, this.ka, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 5, 5, R, [new Q(null, 2, 5, R, [xv, this.ma], null), new Q(null, 2, 5, R, [uo, this.type], null), new Q(null, 2, 5, R, [cv, this.qa], null), new Q(null, 2, 5, R, [Qv, this.la], null), new Q(null, 2, 5, R, [Kn, this.ka], null)], null), this.g));
};
h.U = function(b, a) {
  return new oF(this.ma, this.type, this.qa, this.la, this.ka, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
function pF(b, a, c, d) {
  return new oF(Ov, b, a, c, d, null, null, null);
}
function qF(b, a, c, d, e, f, g) {
  this.ma = b;
  this.qa = a;
  this.la = c;
  this.ka = d;
  this.h = e;
  this.g = f;
  this.m = g;
  this.l = 2229667594;
  this.M = 8192;
}
h = qF.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "type-tag":
      return this.ma;
    case "logical-block":
      return this.qa;
    case "start-pos":
      return this.la;
    case "end-pos":
      return this.ka;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#cljs.pprint.start-block-t{", ", ", "}", c, N.a(new Q(null, 4, 5, R, [new Q(null, 2, 5, R, [xv, this.ma], null), new Q(null, 2, 5, R, [cv, this.qa], null), new Q(null, 2, 5, R, [Qv, this.la], null), new Q(null, 2, 5, R, [Kn, this.ka], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 4, new Q(null, 4, 5, R, [xv, cv, Qv, Kn], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 4 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 4, [Kn, null, cv, null, xv, null, Qv, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new qF(this.ma, this.qa, this.la, this.ka, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(xv, a) : L.call(null, xv, a)) ? new qF(c, this.qa, this.la, this.ka, this.h, this.g, null) : m(L.a ? L.a(cv, a) : L.call(null, cv, a)) ? new qF(this.ma, c, this.la, this.ka, this.h, this.g, null) : m(L.a ? L.a(Qv, a) : L.call(null, Qv, a)) ? new qF(this.ma, this.qa, c, this.ka, this.h, this.g, null) : m(L.a ? L.a(Kn, a) : L.call(null, Kn, a)) ? new qF(this.ma, this.qa, this.la, c, this.h, this.g, null) : new qF(this.ma, this.qa, this.la, this.ka, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 4, 5, R, [new Q(null, 2, 5, R, [xv, this.ma], null), new Q(null, 2, 5, R, [cv, this.qa], null), new Q(null, 2, 5, R, [Qv, this.la], null), new Q(null, 2, 5, R, [Kn, this.ka], null)], null), this.g));
};
h.U = function(b, a) {
  return new qF(this.ma, this.qa, this.la, this.ka, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
function rF(b, a, c, d, e, f, g) {
  this.ma = b;
  this.qa = a;
  this.la = c;
  this.ka = d;
  this.h = e;
  this.g = f;
  this.m = g;
  this.l = 2229667594;
  this.M = 8192;
}
h = rF.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "type-tag":
      return this.ma;
    case "logical-block":
      return this.qa;
    case "start-pos":
      return this.la;
    case "end-pos":
      return this.ka;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#cljs.pprint.end-block-t{", ", ", "}", c, N.a(new Q(null, 4, 5, R, [new Q(null, 2, 5, R, [xv, this.ma], null), new Q(null, 2, 5, R, [cv, this.qa], null), new Q(null, 2, 5, R, [Qv, this.la], null), new Q(null, 2, 5, R, [Kn, this.ka], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 4, new Q(null, 4, 5, R, [xv, cv, Qv, Kn], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 4 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 4, [Kn, null, cv, null, xv, null, Qv, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new rF(this.ma, this.qa, this.la, this.ka, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(xv, a) : L.call(null, xv, a)) ? new rF(c, this.qa, this.la, this.ka, this.h, this.g, null) : m(L.a ? L.a(cv, a) : L.call(null, cv, a)) ? new rF(this.ma, c, this.la, this.ka, this.h, this.g, null) : m(L.a ? L.a(Qv, a) : L.call(null, Qv, a)) ? new rF(this.ma, this.qa, c, this.ka, this.h, this.g, null) : m(L.a ? L.a(Kn, a) : L.call(null, Kn, a)) ? new rF(this.ma, this.qa, this.la, c, this.h, this.g, null) : new rF(this.ma, this.qa, this.la, this.ka, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 4, 5, R, [new Q(null, 2, 5, R, [xv, this.ma], null), new Q(null, 2, 5, R, [cv, this.qa], null), new Q(null, 2, 5, R, [Qv, this.la], null), new Q(null, 2, 5, R, [Kn, this.ka], null)], null), this.g));
};
h.U = function(b, a) {
  return new rF(this.ma, this.qa, this.la, this.ka, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
function sF(b, a, c, d, e, f, g, n, r) {
  this.ma = b;
  this.qa = a;
  this.Gc = c;
  this.offset = d;
  this.la = e;
  this.ka = f;
  this.h = g;
  this.g = n;
  this.m = r;
  this.l = 2229667594;
  this.M = 8192;
}
h = sF.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "type-tag":
      return this.ma;
    case "logical-block":
      return this.qa;
    case "relative-to":
      return this.Gc;
    case "offset":
      return this.offset;
    case "start-pos":
      return this.la;
    case "end-pos":
      return this.ka;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#cljs.pprint.indent-t{", ", ", "}", c, N.a(new Q(null, 6, 5, R, [new Q(null, 2, 5, R, [xv, this.ma], null), new Q(null, 2, 5, R, [cv, this.qa], null), new Q(null, 2, 5, R, [So, this.Gc], null), new Q(null, 2, 5, R, [em, this.offset], null), new Q(null, 2, 5, R, [Qv, this.la], null), new Q(null, 2, 5, R, [Kn, this.ka], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 6, new Q(null, 6, 5, R, [xv, cv, So, em, Qv, Kn], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 6 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 6, [em, null, Kn, null, So, null, cv, null, xv, null, Qv, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new sF(this.ma, this.qa, this.Gc, this.offset, this.la, this.ka, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(xv, a) : L.call(null, xv, a)) ? new sF(c, this.qa, this.Gc, this.offset, this.la, this.ka, this.h, this.g, null) : m(L.a ? L.a(cv, a) : L.call(null, cv, a)) ? new sF(this.ma, c, this.Gc, this.offset, this.la, this.ka, this.h, this.g, null) : m(L.a ? L.a(So, a) : L.call(null, So, a)) ? new sF(this.ma, this.qa, c, this.offset, this.la, this.ka, this.h, this.g, null) : m(L.a ? L.a(em, a) : L.call(null, em, a)) ? new sF(this.ma, this.qa, this.Gc, c, this.la, this.ka, this.h, this.g, 
  null) : m(L.a ? L.a(Qv, a) : L.call(null, Qv, a)) ? new sF(this.ma, this.qa, this.Gc, this.offset, c, this.ka, this.h, this.g, null) : m(L.a ? L.a(Kn, a) : L.call(null, Kn, a)) ? new sF(this.ma, this.qa, this.Gc, this.offset, this.la, c, this.h, this.g, null) : new sF(this.ma, this.qa, this.Gc, this.offset, this.la, this.ka, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 6, 5, R, [new Q(null, 2, 5, R, [xv, this.ma], null), new Q(null, 2, 5, R, [cv, this.qa], null), new Q(null, 2, 5, R, [So, this.Gc], null), new Q(null, 2, 5, R, [em, this.offset], null), new Q(null, 2, 5, R, [Qv, this.la], null), new Q(null, 2, 5, R, [Kn, this.ka], null)], null), this.g));
};
h.U = function(b, a) {
  return new sF(this.ma, this.qa, this.Gc, this.offset, this.la, this.ka, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
if ("undefined" === typeof tF) {
  var tF = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("cljs.pprint", "write-token"), function() {
      return function(a, b) {
        return xv.b(b);
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
tF.D(0, Yv, function(b, a) {
  var c = yu.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }());
  m(c) && (c.b ? c.b(Xn) : c.call(null, Xn));
  var c = cv.b(a), d = Bp.b(c);
  m(d) && Ac(Au.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), d);
  var d = fF(Au.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), lm), e = mp.b(c);
  Qf.a ? Qf.a(e, d) : Qf.call(null, e, d);
  c = Mk.b(c);
  return Qf.a ? Qf.a(c, d) : Qf.call(null, c, d);
});
tF.D(0, ew, function(b, a) {
  var c = yu.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }());
  m(c) && (c.b ? c.b(xu) : c.call(null, xu));
  c = ik.b(cv.b(a));
  return m(c) ? Ac(Au.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), c) : null;
});
tF.D(0, Vt, function(b, a) {
  var c = cv.b(a), d = Mk.b(c), e = em.b(a) + function() {
    var d = So.b(a);
    if (m(v.a ? v.a(zk, d) : v.call(null, zk, d))) {
      return d = mp.b(c), A.b ? A.b(d) : A.call(null, d);
    }
    if (m(v.a ? v.a(js, d) : v.call(null, js, d))) {
      return fF(Au.b(function() {
        var a = A.b ? A.b(b) : A.call(null, b);
        return A.b ? A.b(a) : A.call(null, a);
      }()), lm);
    }
    throw Error([q("No matching clause: "), q(d)].join(""));
  }();
  return Qf.a ? Qf.a(d, e) : Qf.call(null, d, e);
});
tF.D(0, ar, function(b, a) {
  return Ac(Au.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), ow.b(a));
});
tF.D(0, Ov, function(b, a) {
  if (m(function() {
    var b = v.a(uo.b(a), Ij);
    return b ? b : (b = !v.a(uo.b(a), ln)) ? (b = Fo.b(cv.b(a)), A.b ? A.b(b) : A.call(null, b)) : b;
  }())) {
    uF.a ? uF.a(b, a) : uF.call(null, b, a);
  } else {
    var c = Mr.b(function() {
      var a = A.b ? A.b(b) : A.call(null, b);
      return A.b ? A.b(a) : A.call(null, a);
    }());
    m(c) && Ac(Au.b(function() {
      var a = A.b ? A.b(b) : A.call(null, b);
      return A.b ? A.b(a) : A.call(null, a);
    }()), c);
  }
  return Rf.K(A.b ? A.b(b) : A.call(null, b), I, Mr, null);
});
function vF(b, a, c) {
  a = w(a);
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.ra(null, f);
      if (!v.a(xv.b(g), Ov)) {
        var n = Mr.b(function() {
          var a = A.b ? A.b(b) : A.call(null, b);
          return A.b ? A.b(a) : A.call(null, a);
        }());
        m(n) && Ac(Au.b(function() {
          var a = A.b ? A.b(b) : A.call(null, b);
          return A.b ? A.b(a) : A.call(null, a);
        }()), n);
      }
      tF.a ? tF.a(b, g) : tF.call(null, b, g);
      Rf.K(A.b ? A.b(b) : A.call(null, b), I, Mr, Mr.b(g));
      g = Mr.b(function() {
        var a = A.b ? A.b(b) : A.call(null, b);
        return A.b ? A.b(a) : A.call(null, a);
      }());
      m(m(c) ? g : c) && (Ac(Au.b(function() {
        var a = A.b ? A.b(b) : A.call(null, b);
        return A.b ? A.b(a) : A.call(null, a);
      }()), g), Rf.K(A.b ? A.b(b) : A.call(null, b), I, Mr, null));
      f += 1;
    } else {
      if (a = w(a)) {
        se(a) ? (d = Tc(a), a = Uc(a), g = d, e = B(d), d = g) : (g = x(a), v.a(xv.b(g), Ov) || (d = Mr.b(function() {
          var a = A.b ? A.b(b) : A.call(null, b);
          return A.b ? A.b(a) : A.call(null, a);
        }()), m(d) && Ac(Au.b(function() {
          var a = A.b ? A.b(b) : A.call(null, b);
          return A.b ? A.b(a) : A.call(null, a);
        }()), d)), tF.a ? tF.a(b, g) : tF.call(null, b, g), Rf.K(A.b ? A.b(b) : A.call(null, b), I, Mr, Mr.b(g)), g = Mr.b(function() {
          var a = A.b ? A.b(b) : A.call(null, b);
          return A.b ? A.b(a) : A.call(null, a);
        }()), m(m(c) ? g : c) && (Ac(Au.b(function() {
          var a = A.b ? A.b(b) : A.call(null, b);
          return A.b ? A.b(a) : A.call(null, a);
        }()), g), Rf.K(A.b ? A.b(b) : A.call(null, b), I, Mr, null)), a = z(a), d = null, e = 0), f = 0;
      } else {
        break;
      }
    }
  }
}
function wF(b, a) {
  var c = fF(Au.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), Kr);
  return null == c || fF(Au.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), lm) + lF(a) < c;
}
function xF(b, a, c) {
  a = Fo.b(a);
  a = A.b ? A.b(a) : A.call(null, a);
  return m(a) ? a : rb(wF(b, c));
}
function yF(b, a, c) {
  var d = zF.b ? zF.b(b) : zF.call(null, b), e = fF(Au.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), Kr);
  return m(d) ? m(e) ? (d = function() {
    var b = mp.b(a);
    return A.b ? A.b(b) : A.call(null, b);
  }() >= e - d) ? xF(b, a, c) : d : e : d;
}
if ("undefined" === typeof AF) {
  var AF = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("cljs.pprint", "emit-nl?"), function() {
      return function(a) {
        return uo.b(a);
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
AF.D(0, eu, function(b, a, c) {
  b = cv.b(b);
  return xF(a, b, c);
});
AF.D(0, Pl, function(b, a, c) {
  b = cv.b(b);
  return yF(a, b, c);
});
AF.D(0, ln, function(b, a, c, d) {
  b = cv.b(b);
  var e;
  e = Su.b(b);
  e = A.b ? A.b(e) : A.call(null, e);
  return m(e) ? e : (d = rb(wF(a, d))) ? d : yF(a, b, c);
});
AF.D(0, Ij, function() {
  return !0;
});
function BF(b) {
  var a = x(b), c = cv.b(a), a = w(vi(function(a, b) {
    return function(a) {
      var c = v.a(xv.b(a), Ov);
      a = m(c) ? kF(cv.b(a), b) : c;
      return rb(a);
    };
  }(a, c), z(b)));
  return new Q(null, 2, 5, R, [a, w(Vf(B(a) + 1, b))], null);
}
function CF(b) {
  var a = x(b), c = cv.b(a);
  return w(vi(function(a, b) {
    return function(a) {
      var c = cv.b(a);
      a = v.a(xv.b(a), Ov);
      c = m(a) ? (a = v.a(c, b)) ? a : kF(c, b) : a;
      return rb(c);
    };
  }(a, c), z(b)));
}
function DF(b) {
  var a = Su.b(b);
  Qf.a ? Qf.a(a, !0) : Qf.call(null, a, !0);
  a = Fo.b(b);
  Qf.a ? Qf.a(a, !0) : Qf.call(null, a, !0);
  for (b = Fl.b(b);;) {
    if (m(b)) {
      a = Fo.b(b), Qf.a ? Qf.a(a, !0) : Qf.call(null, a, !0), a = Su.b(b), Qf.a ? Qf.a(a, !0) : Qf.call(null, a, !0), b = Fl.b(b);
    } else {
      return null;
    }
  }
}
function uF(b, a) {
  Ac(Au.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), "\n");
  Rf.K(A.b ? A.b(b) : A.call(null, b), I, Mr, null);
  var c = cv.b(a), d = qs.b(c);
  m(d) && Ac(Au.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), d);
  d = P(q, Yf(function() {
    var a = Mk.b(c);
    return A.b ? A.b(a) : A.call(null, a);
  }() - B(d), " "));
  Ac(Au.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), d);
  return DF(c);
}
function EF(b) {
  var a = w(vi(function(a) {
    return rb(v.a(xv.b(a), Ov));
  }, b));
  return new Q(null, 2, 5, R, [a, w(Vf(B(a), b))], null);
}
var FF = function FF(a, c) {
  var d = EF(c), e = F(d, 0, null), f = F(d, 1, null);
  m(e) && vF(a, e, !1);
  if (m(f)) {
    var d = BF(f), g = F(d, 0, null), n = F(d, 1, null), r = x(f), d = function() {
      var c = CF(f);
      return AF.K ? AF.K(r, a, g, c) : AF.call(null, r, a, g, c);
    }();
    m(d) ? (uF(a, r), d = z(f)) : d = f;
    return rb(wF(a, d)) ? function() {
      var c = FF.a ? FF.a(a, g) : FF.call(null, a, g);
      return v.a(c, g) ? (vF(a, g, !1), n) : gg.a(E, N.a(c, n));
    }() : d;
  }
  return null;
};
function GF(b) {
  for (var a = Pv.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }());;) {
    if (Rf.K(A.b ? A.b(b) : A.call(null, b), I, Pv, gg.a(E, a)), rb(wF(b, a))) {
      var c = FF(b, a);
      if (a !== c) {
        a = c;
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
}
function HF(b, a) {
  Rf.K(A.b ? A.b(b) : A.call(null, b), I, Pv, ce.a(Pv.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), a));
  return rb(wF(b, Pv.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()))) ? GF(b) : null;
}
function IF(b) {
  GF(b);
  var a = Pv.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }());
  m(a) && (vF(b, a, !0), Rf.K(A.b ? A.b(b) : A.call(null, b), I, Pv, E));
}
function JF(b) {
  var a = Mr.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }());
  return m(a) ? (Ac(Au.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), a), Rf.K(A.b ? A.b(b) : A.call(null, b), I, Mr, null)) : null;
}
function KF(b, a) {
  var c = Az(a, "\n", -1);
  if (v.a(B(c), 1)) {
    return a;
  }
  var d = qs.b(x(Mj.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()))), e = x(c);
  if (v.a(ir, Vn.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()))) {
    var f = lo.b(function() {
      var a = A.b ? A.b(b) : A.call(null, b);
      return A.b ? A.b(a) : A.call(null, a);
    }()), g = f + B(e);
    Rf.K(A.b ? A.b(b) : A.call(null, b), I, lo, g);
    HF(b, nF(e, null, f, g));
    IF(b);
  } else {
    JF(b), Ac(Au.b(function() {
      var a = A.b ? A.b(b) : A.call(null, b);
      return A.b ? A.b(a) : A.call(null, a);
    }()), e);
  }
  Ac(Au.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), "\n");
  for (var e = w(z(si(c))), f = null, n = g = 0;;) {
    if (n < g) {
      var r = f.ra(null, n);
      Ac(Au.b(function() {
        var a = A.b ? A.b(b) : A.call(null, b);
        return A.b ? A.b(a) : A.call(null, a);
      }()), r);
      Ac(Au.b(function() {
        var a = A.b ? A.b(b) : A.call(null, b);
        return A.b ? A.b(a) : A.call(null, a);
      }()), "\n");
      m(d) && Ac(Au.b(function() {
        var a = A.b ? A.b(b) : A.call(null, b);
        return A.b ? A.b(a) : A.call(null, a);
      }()), d);
      n += 1;
    } else {
      if (e = w(e)) {
        f = e, se(f) ? (e = Tc(f), n = Uc(f), f = e, g = B(e), e = n) : (e = x(f), Ac(Au.b(function() {
          var a = A.b ? A.b(b) : A.call(null, b);
          return A.b ? A.b(a) : A.call(null, a);
        }()), e), Ac(Au.b(function() {
          var a = A.b ? A.b(b) : A.call(null, b);
          return A.b ? A.b(a) : A.call(null, a);
        }()), "\n"), m(d) && Ac(Au.b(function() {
          var a = A.b ? A.b(b) : A.call(null, b);
          return A.b ? A.b(a) : A.call(null, a);
        }()), d), e = z(f), f = null, g = 0), n = 0;
      } else {
        break;
      }
    }
  }
  Rf.K(A.b ? A.b(b) : A.call(null, b), I, ir, so);
  return be(c);
}
function LF(b, a) {
  if (v.a(Vn.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), so)) {
    return JF(b), Ac(Au.b(function() {
      var a = A.b ? A.b(b) : A.call(null, b);
      return A.b ? A.b(a) : A.call(null, a);
    }()), a);
  }
  if (v.a(a, "\n")) {
    return KF(b, "\n");
  }
  var c = lo.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), d = c + 1;
  Rf.K(A.b ? A.b(b) : A.call(null, b), I, lo, d);
  return HF(b, nF(Ke(a), null, c, d));
}
function MF(b) {
  var a = NF, c = OF, d = new jF(null, null, U ? U(0) : Nf.call(null, 0), U ? U(0) : Nf.call(null, 0), U ? U(!1) : Nf.call(null, !1), U ? U(!1) : Nf.call(null, !1), null, null, null, null, null, null, null), e = function() {
    var e = fe([Mj, Tk, ll, Dl, Jl, Vn, lo, Mr, Au, Ru, Pv], [d, c, d, !0, null, so, 0, null, iF(b, a), 1, E]);
    return U ? U(e) : Nf.call(null, e);
  }();
  "undefined" === typeof SE && (SE = function(a, b, c, d, e, y) {
    this.Qa = a;
    this.xf = b;
    this.Nh = c;
    this.Ah = d;
    this.Ld = e;
    this.Gh = y;
    this.l = 1074167808;
    this.M = 0;
  }, SE.prototype.U = function() {
    return function(a, b) {
      return new SE(this.Qa, this.xf, this.Nh, this.Ah, this.Ld, b);
    };
  }(d, e), SE.prototype.S = function() {
    return function() {
      return this.Gh;
    };
  }(d, e), SE.prototype.cd = function() {
    return function() {
      return this.Ld;
    };
  }(d, e), SE.prototype.xd = function() {
    return function(a, b) {
      var c = this, d = tb(b);
      if (m(v.a ? v.a(String, d) : v.call(null, String, d))) {
        var e = KF(c, b), d = vz(e, /\s+$/, ""), f = Re(e, B(d)), g = Vn.b(function() {
          var a = A.b ? A.b(c) : A.call(null, c);
          return A.b ? A.b(a) : A.call(null, a);
        }());
        if (v.a(g, so)) {
          return JF(c), Ac(Au.b(function() {
            var a = A.b ? A.b(c) : A.call(null, c);
            return A.b ? A.b(a) : A.call(null, a);
          }()), d), Rf.K(A.b ? A.b(c) : A.call(null, c), I, Mr, f);
        }
        g = lo.b(function() {
          var a = A.b ? A.b(c) : A.call(null, c);
          return A.b ? A.b(a) : A.call(null, a);
        }());
        e = g + B(e);
        Rf.K(A.b ? A.b(c) : A.call(null, c), I, lo, e);
        return HF(c, nF(d, f, g, e));
      }
      if (m(v.a ? v.a(Number, d) : v.call(null, Number, d))) {
        return LF(c, b);
      }
      throw Error([q("No matching clause: "), q(d)].join(""));
    };
  }(d, e), SE.prototype.Nc = function() {
    return function() {
      var a = this;
      eF(a);
      return Bc(Au.b(function() {
        var b = A.b ? A.b(a) : A.call(null, a);
        return A.b ? A.b(b) : A.call(null, b);
      }()));
    };
  }(d, e), SE.prototype.rg = function() {
    return function() {
      var a = this;
      return v.a(Vn.b(function() {
        var b = A.b ? A.b(a) : A.call(null, a);
        return A.b ? A.b(b) : A.call(null, b);
      }()), ir) ? (vF(a, Pv.b(function() {
        var b = A.b ? A.b(a) : A.call(null, a);
        return A.b ? A.b(b) : A.call(null, b);
      }()), !0), Rf.K(A.b ? A.b(a) : A.call(null, a), I, Pv, E)) : JF(a);
    };
  }(d, e), SE.yc = function() {
    return function() {
      return new Q(null, 6, 5, R, [Yu, ml, Dn, wu, iq, zv], null);
    };
  }(d, e), SE.nc = !0, SE.Xb = "cljs.pprint/t_cljs$pprint45950", SE.rc = function() {
    return function(a, b) {
      return Ac(b, "cljs.pprint/t_cljs$pprint45950");
    };
  }(d, e));
  return new SE(b, a, c, d, e, S);
}
function PF(b, a) {
  var c = ab, d = new jF(Mj.b(function() {
    var a = A.b ? A.b(c) : A.call(null, c);
    return A.b ? A.b(a) : A.call(null, a);
  }()), null, U ? U(0) : Nf.call(null, 0), U ? U(0) : Nf.call(null, 0), U ? U(!1) : Nf.call(null, !1), U ? U(!1) : Nf.call(null, !1), b, null, a, null, null, null, null);
  Rf.K(A.b ? A.b(c) : A.call(null, c), I, Mj, d);
  if (v.a(Vn.b(function() {
    var a = A.b ? A.b(c) : A.call(null, c);
    return A.b ? A.b(a) : A.call(null, a);
  }()), so)) {
    JF(c);
    var e = yu.b(function() {
      var a = A.b ? A.b(c) : A.call(null, c);
      return A.b ? A.b(a) : A.call(null, a);
    }());
    m(e) && (e.b ? e.b(Xn) : e.call(null, Xn));
    m(b) && Ac(Au.b(function() {
      var a = A.b ? A.b(c) : A.call(null, c);
      return A.b ? A.b(a) : A.call(null, a);
    }()), b);
    var e = fF(Au.b(function() {
      var a = A.b ? A.b(c) : A.call(null, c);
      return A.b ? A.b(a) : A.call(null, a);
    }()), lm), f = mp.b(d);
    Qf.a ? Qf.a(f, e) : Qf.call(null, f, e);
    d = Mk.b(d);
    Qf.a ? Qf.a(d, e) : Qf.call(null, d, e);
  } else {
    e = lo.b(function() {
      var a = A.b ? A.b(c) : A.call(null, c);
      return A.b ? A.b(a) : A.call(null, a);
    }()), f = e + (m(b) ? B(b) : 0), Rf.K(A.b ? A.b(c) : A.call(null, c), I, lo, f), HF(c, new qF(Yv, d, e, f, null, null, null));
  }
}
function QF() {
  var b = ab, a = Mj.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), c = ik.b(a);
  if (v.a(Vn.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()), so)) {
    JF(b);
    m(c) && Ac(Au.b(function() {
      var a = A.b ? A.b(b) : A.call(null, b);
      return A.b ? A.b(a) : A.call(null, a);
    }()), c);
    var d = yu.b(function() {
      var a = A.b ? A.b(b) : A.call(null, b);
      return A.b ? A.b(a) : A.call(null, a);
    }());
    m(d) && (d.b ? d.b(xu) : d.call(null, xu));
  } else {
    d = lo.b(function() {
      var a = A.b ? A.b(b) : A.call(null, b);
      return A.b ? A.b(a) : A.call(null, a);
    }()), c = d + (m(c) ? B(c) : 0), Rf.K(A.b ? A.b(b) : A.call(null, b), I, lo, c), HF(b, new rF(ew, a, d, c, null, null, null));
  }
  Rf.K(A.b ? A.b(b) : A.call(null, b), I, Mj, Fl.b(a));
}
function RF(b) {
  var a = ab;
  Rf.K(A.b ? A.b(a) : A.call(null, a), I, Vn, ir);
  var c = lo.b(function() {
    var b = A.b ? A.b(a) : A.call(null, a);
    return A.b ? A.b(b) : A.call(null, b);
  }());
  HF(a, pF(b, Mj.b(function() {
    var b = A.b ? A.b(a) : A.call(null, a);
    return A.b ? A.b(b) : A.call(null, b);
  }()), c, c));
}
function SF(b, a) {
  var c = ab, d = Mj.b(function() {
    var a = A.b ? A.b(c) : A.call(null, c);
    return A.b ? A.b(a) : A.call(null, a);
  }());
  if (v.a(Vn.b(function() {
    var a = A.b ? A.b(c) : A.call(null, c);
    return A.b ? A.b(a) : A.call(null, a);
  }()), so)) {
    JF(c);
    var e = Mk.b(d), f = a + function() {
      if (m(v.a ? v.a(zk, b) : v.call(null, zk, b))) {
        var a = mp.b(d);
        return A.b ? A.b(a) : A.call(null, a);
      }
      if (m(v.a ? v.a(js, b) : v.call(null, js, b))) {
        return fF(Au.b(function() {
          var a = A.b ? A.b(c) : A.call(null, c);
          return A.b ? A.b(a) : A.call(null, a);
        }()), lm);
      }
      throw Error([q("No matching clause: "), q(b)].join(""));
    }();
    Qf.a ? Qf.a(e, f) : Qf.call(null, e, f);
  } else {
    e = lo.b(function() {
      var a = A.b ? A.b(c) : A.call(null, c);
      return A.b ? A.b(a) : A.call(null, a);
    }()), HF(c, new sF(Vt, d, b, a, e, e, null, null, null));
  }
}
function zF(b) {
  return Tk.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }());
}
var TF = !0;
if ("undefined" === typeof UF) {
  var UF = null
}
var NF = 72, OF = 40, VF = null, WF = null, XF = null, YF = null, ZF = 10, $F = 0, aG = null;
fe([Tk, Vl, On, Zn, Jo, op, Up, mb, gq, Fs, vu, Au], [new pd(function() {
  return OF;
}, zn, fe([Em, Nm, W, Gn, Qn, Cp, gr, jr, Ys, Cu, av, Fv], ["1.2", wq, Ar, "/Users/antoniogarrote/Development/api-modelling-framework/target/cljsbuild-compiler-1/cljs/pprint.cljs", 21, 1, !0, 632, 637, td, "The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.", m(OF) ? OF.xc : null])), new pd(function() {
  return NF;
}, qq, fe([Em, Nm, W, Gn, Qn, Cp, gr, jr, Ys, Cu, av, Fv], ["1.2", wq, ku, "/Users/antoniogarrote/Development/api-modelling-framework/target/cljsbuild-compiler-1/cljs/pprint.cljs", 22, 1, !0, 625, 630, td, "Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.", m(NF) ? NF.xc : null])), new pd(function() {
  return WF;
}, du, fe([Ml, Nm, W, Gn, Qn, Cp, gr, jr, Ys, Cu, av, Fv], [!0, wq, qk, "/Users/antoniogarrote/Development/api-modelling-framework/target/cljsbuild-compiler-1/cljs/pprint.cljs", 15, 1, !0, 646, 649, td, "Mark circular structures (N.B. This is not yet used)", m(WF) ? WF.xc : null])), new pd(function() {
  return VF;
}, nv, fe([Ml, Nm, W, Gn, Qn, Cp, gr, jr, Ys, Cu, av, Fv], [!0, wq, er, "/Users/antoniogarrote/Development/api-modelling-framework/target/cljsbuild-compiler-1/cljs/pprint.cljs", 14, 1, !0, 640, 643, td, "Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)", m(VF) ? VF.xc : null])), new pd(function() {
  return XF;
}, to, fe([Em, Nm, W, Gn, Qn, Cp, gr, jr, Ys, Cu, av, Fv], ["1.2", wq, Sk, "/Users/antoniogarrote/Development/api-modelling-framework/target/cljsbuild-compiler-1/cljs/pprint.cljs", 28, 1, !0, 657, 661, td, "Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions", m(XF) ? XF.xc : null])), new pd(function() {
  return YF;
}, Tm, fe([Em, Nm, W, Gn, Qn, Cp, gr, jr, Ys, Cu, av, Fv], ["1.2", wq, Wp, "/Users/antoniogarrote/Development/api-modelling-framework/target/cljsbuild-compiler-1/cljs/pprint.cljs", 14, 1, !0, 665, 670, td, "Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ", m(YF) ? YF.xc : null])), new pd(function() {
  return hb;
}, ok, fe([Nm, W, Gn, Qn, Cp, gr, jr, Ys, Cu, av, mv, Fv], [Bn, fm, "cljs/core.cljs", 16, 1, !0, 121, 132, td, "*print-level* controls how many levels deep the printer will\n  print nested objects. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  level to print. Each argument to print is at level 0; if an argument is a\n  collection, its items are at level 1; and so on. If an object is a\n  collection and is at a level greater than or equal to the value bound to\n  *print-level*, the printer prints '#' to represent it. The root binding\n  is nil indicating no limit.", 
new Q(null, 1, 5, R, ["@type {null|number}"], null), m(hb) ? hb.xc : null])), new pd(function() {
  return eb;
}, Ds, fe([Nm, W, Gn, Qn, Cp, gr, jr, Ys, Cu, av, Fv], [Bn, Mu, "cljs/core.cljs", 19, 1, !0, 85, 91, td, "When set to logical false, strings and characters will be printed with\n  non-alphanumeric characters converted to the appropriate escape sequences.\n\n  Defaults to true", m(eb) ? eb.xc : null])), new pd(function() {
  return UF;
}, Qk, fe([Em, Nm, W, Gn, Qn, Cp, gr, jr, Ys, Cu, av, Fv], ["1.2", wq, jl, "/Users/antoniogarrote/Development/api-modelling-framework/target/cljsbuild-compiler-1/cljs/pprint.cljs", 25, 1, !0, 619, 623, td, "The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.", m(UF) ? UF.xc : null])), new pd(function() {
  return gb;
}, tq, fe([Nm, W, Gn, Qn, Cp, gr, jr, Ys, Cu, av, mv, Fv], [Bn, vn, "cljs/core.cljs", 17, 1, !0, 109, 119, td, "*print-length* controls how many items of each collection the\n  printer will print. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  number of items of each collection to print. If a collection contains\n  more items, the printer will print items up to the limit followed by\n  '...' to represent the remaining items. The root binding is nil\n  indicating no limit.", 
new Q(null, 1, 5, R, ["@type {null|number}"], null), m(gb) ? gb.xc : null])), new pd(function() {
  return TF;
}, Pk, fe([Nm, W, Gn, Qn, Cp, gr, jr, Ys, Cu, av, Fv], [wq, il, "/Users/antoniogarrote/Development/api-modelling-framework/target/cljsbuild-compiler-1/cljs/pprint.cljs", 16, 1, !0, 615, 617, td, "Bind to true if you want write to use pretty printing", m(TF) ? TF.xc : null])), new pd(function() {
  return ZF;
}, Xl, fe([Em, Nm, W, Gn, Qn, Cp, gr, jr, Ys, Cu, av, Fv], ["1.2", wq, mw, "/Users/antoniogarrote/Development/api-modelling-framework/target/cljsbuild-compiler-1/cljs/pprint.cljs", 13, 1, !0, 672, 675, td, "The base to use for printing integers and rationals.", m(ZF) ? ZF.xc : null]))]);
function bG(b) {
  var a = null != b ? b.l & 32768 || k === b.hg ? !0 : b.l ? !1 : p(gc, b) : p(gc, b);
  return a ? Dl.b(function() {
    var a = A.b ? A.b(b) : A.call(null, b);
    return A.b ? A.b(a) : A.call(null, a);
  }()) : a;
}
function cG(b) {
  var a;
  a = aG;
  m(a) && (a = gb, a = m(a) ? aG >= gb : a);
  rb(TF) ? YE.b ? YE.b(b) : YE.call(null, b) : m(a) ? Ac(ab, "...") : (m(aG) && (aG += 1), UF.b ? UF.b(b) : UF.call(null, b));
  return a;
}
var dG = function dG(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return dG.j(arguments[0], 1 < c.length ? new rd(c.slice(1), 0, null) : null);
};
dG.j = function(b, a) {
  var c = ki.j(C([new l(null, 1, [Tp, !0], null), P(Of, a)], 0)), d = ZF, e = WF, f = gb, g = hb, n = VF, r = OF, u = UF, y = TF, D = YF, G = eb, H = NF, M = XF;
  ZF = Au.a(c, ZF);
  WF = On.a(c, WF);
  gb = Fs.a(c, gb);
  hb = Up.a(c, hb);
  VF = Zn.a(c, VF);
  OF = Tk.a(c, OF);
  UF = gq.a(c, UF);
  TF = vu.a(c, TF);
  YF = op.a(c, YF);
  eb = mb.a(c, eb);
  NF = Vl.a(c, NF);
  XF = Jo.a(c, XF);
  try {
    var O = new Oa, T = ze(c, Tp) ? Tp.b(c) : !0, qa = !0 === T || null == T ? new bd(O) : T;
    if (m(TF)) {
      var la = rb(bG(qa)), c = ab;
      ab = la ? MF(qa) : qa;
      try {
        cG(b), eF(ab);
      } finally {
        ab = c;
      }
    } else {
      la = ab;
      ab = qa;
      try {
        YE.b ? YE.b(b) : YE.call(null, b);
      } finally {
        ab = la;
      }
    }
    !0 === T && (bb.b ? bb.b("" + q(O)) : bb.call(null, "" + q(O)));
    return null == T ? "" + q(O) : null;
  } finally {
    XF = M, NF = H, eb = G, YF = D, TF = y, UF = u, OF = r, VF = n, hb = g, gb = f, WF = e, ZF = d;
  }
};
dG.N = 1;
dG.P = function(b) {
  var a = x(b);
  b = z(b);
  return dG.j(a, b);
};
var eG = function eG(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 1:
      return eG.b(arguments[0]);
    case 2:
      return eG.a(arguments[0], arguments[1]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
eG.b = function(b) {
  var a = new Oa, c = ab;
  ab = new bd(a);
  try {
    return eG.a(b, ab), bb.b ? bb.b("" + q(a)) : bb.call(null, "" + q(a));
  } finally {
    ab = c;
  }
};
eG.a = function(b, a) {
  var c = rb(bG(a)), d = ab;
  ab = c ? MF(a) : a;
  try {
    c = TF;
    TF = !0;
    try {
      cG(b);
    } finally {
      TF = c;
    }
    v.a(0, fF(ab, lm)) || Ac(ab, "\n");
    return eF(ab);
  } finally {
    ab = d;
  }
};
eG.N = 2;
function fG(b, a) {
  if (rb(a.b ? a.b(b) : a.call(null, b))) {
    throw Error([q("Bad argument: "), q(b), q(". It must be one of "), q(a)].join(""));
  }
}
function gG() {
  var b = hb;
  return m(b) ? $F >= hb : b;
}
function hG(b) {
  fG(b, new V(null, new l(null, 4, [Ij, null, Pl, null, ln, null, eu, null], null), null));
  RF(b);
}
function iG(b, a) {
  fG(b, new V(null, new l(null, 2, [zk, null, js, null], null), null));
  SF(b, a);
}
function jG(b, a, c) {
  a = "string" === typeof a ? kG.b ? kG.b(a) : kG.call(null, a) : a;
  c = lG.b ? lG.b(c) : lG.call(null, c);
  return mG ? mG(b, a, c) : nG.call(null, b, a, c);
}
var oG = null;
function pG(b, a) {
  var c = [q(b), q("\n"), q(oG), q("\n"), q(P(q, Yf(a, " "))), q("^"), q("\n")].join("");
  throw Error(c);
}
function qG(b, a, c, d, e, f) {
  this.Fd = b;
  this.Jb = a;
  this.Dd = c;
  this.h = d;
  this.g = e;
  this.m = f;
  this.l = 2229667594;
  this.M = 8192;
}
h = qG.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "seq":
      return this.Fd;
    case "rest":
      return this.Jb;
    case "pos":
      return this.Dd;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#cljs.pprint.arg-navigator{", ", ", "}", c, N.a(new Q(null, 3, 5, R, [new Q(null, 2, 5, R, [gu, this.Fd], null), new Q(null, 2, 5, R, [Gv, this.Jb], null), new Q(null, 2, 5, R, [lo, this.Dd], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 3, new Q(null, 3, 5, R, [gu, Gv, lo], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 3 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 3, [lo, null, gu, null, Gv, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new qG(this.Fd, this.Jb, this.Dd, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(gu, a) : L.call(null, gu, a)) ? new qG(c, this.Jb, this.Dd, this.h, this.g, null) : m(L.a ? L.a(Gv, a) : L.call(null, Gv, a)) ? new qG(this.Fd, c, this.Dd, this.h, this.g, null) : m(L.a ? L.a(lo, a) : L.call(null, lo, a)) ? new qG(this.Fd, this.Jb, c, this.h, this.g, null) : new qG(this.Fd, this.Jb, this.Dd, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 3, 5, R, [new Q(null, 2, 5, R, [gu, this.Fd], null), new Q(null, 2, 5, R, [Gv, this.Jb], null), new Q(null, 2, 5, R, [lo, this.Dd], null)], null), this.g));
};
h.U = function(b, a) {
  return new qG(this.Fd, this.Jb, this.Dd, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
function lG(b) {
  b = w(b);
  return new qG(b, b, 0, null, null, null);
}
function rG(b) {
  var a = Gv.b(b);
  if (m(a)) {
    return new Q(null, 2, 5, R, [x(a), new qG(gu.b(b), z(a), lo.b(b) + 1, null, null, null)], null);
  }
  throw Error("Not enough arguments for format definition");
}
function sG(b) {
  var a = rG(b);
  b = F(a, 0, null);
  a = F(a, 1, null);
  b = "string" === typeof b ? kG.b ? kG.b(b) : kG.call(null, b) : b;
  return new Q(null, 2, 5, R, [b, a], null);
}
function tG(b, a) {
  if (a >= lo.b(b)) {
    var c = lo.b(b) - a;
    return uG.a ? uG.a(b, c) : uG.call(null, b, c);
  }
  return new qG(gu.b(b), Vf(a, gu.b(b)), a, null, null, null);
}
function uG(b, a) {
  var c = lo.b(b) + a;
  return 0 > a ? tG(b, c) : new qG(gu.b(b), Vf(a, Gv.b(b)), c, null, null, null);
}
function vG(b, a, c, d, e, f, g) {
  this.jd = b;
  this.fd = a;
  this.md = c;
  this.offset = d;
  this.h = e;
  this.g = f;
  this.m = g;
  this.l = 2229667594;
  this.M = 8192;
}
h = vG.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "func":
      return this.jd;
    case "def":
      return this.fd;
    case "params":
      return this.md;
    case "offset":
      return this.offset;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#cljs.pprint.compiled-directive{", ", ", "}", c, N.a(new Q(null, 4, 5, R, [new Q(null, 2, 5, R, [Km, this.jd], null), new Q(null, 2, 5, R, [Mt, this.fd], null), new Q(null, 2, 5, R, [co, this.md], null), new Q(null, 2, 5, R, [em, this.offset], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 4, new Q(null, 4, 5, R, [Km, Mt, co, em], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 4 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 4, [em, null, Km, null, co, null, Mt, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new vG(this.jd, this.fd, this.md, this.offset, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Km, a) : L.call(null, Km, a)) ? new vG(c, this.fd, this.md, this.offset, this.h, this.g, null) : m(L.a ? L.a(Mt, a) : L.call(null, Mt, a)) ? new vG(this.jd, c, this.md, this.offset, this.h, this.g, null) : m(L.a ? L.a(co, a) : L.call(null, co, a)) ? new vG(this.jd, this.fd, c, this.offset, this.h, this.g, null) : m(L.a ? L.a(em, a) : L.call(null, em, a)) ? new vG(this.jd, this.fd, this.md, c, this.h, this.g, null) : new vG(this.jd, this.fd, this.md, this.offset, this.h, I.c(this.g, 
  a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 4, 5, R, [new Q(null, 2, 5, R, [Km, this.jd], null), new Q(null, 2, 5, R, [Mt, this.fd], null), new Q(null, 2, 5, R, [co, this.md], null), new Q(null, 2, 5, R, [em, this.offset], null)], null), this.g));
};
h.U = function(b, a) {
  return new vG(this.jd, this.fd, this.md, this.offset, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
function wG(b, a) {
  var c = F(b, 0, null), d = F(b, 1, null), e = F(d, 0, null), d = F(d, 1, null), f = ze(new V(null, new l(null, 2, [Jp, null, ks, null], null), null), c) ? new Q(null, 2, 5, R, [e, a], null) : v.a(e, Do) ? rG(a) : v.a(e, bn) ? new Q(null, 2, 5, R, [B(Gv.b(a)), a], null) : new Q(null, 2, 5, R, [e, a], null), e = F(f, 0, null), f = F(f, 1, null);
  return new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [c, new Q(null, 2, 5, R, [e, d], null)], null), f], null);
}
function xG(b, a) {
  var c = aF(wG, a, b), d = F(c, 0, null), c = F(c, 1, null);
  return new Q(null, 2, 5, R, [gg.a(S, d), c], null);
}
var yG = new l(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
function zG(b) {
  return ye(b) ? v.a(ZF, 10) ? [q(b), q(m(YF) ? "." : null)].join("") : [q(m(YF) ? function() {
    var a = t.a(yG, ZF);
    return m(a) ? a : [q("#"), q(ZF), q("r")].join("");
  }() : null), q(AG.a ? AG.a(ZF, b) : AG.call(null, ZF, b))].join("") : null;
}
function BG(b, a, c) {
  c = rG(c);
  var d = F(c, 0, null);
  c = F(c, 1, null);
  var e = zG(d);
  b = m(e) ? e : b.b ? b.b(d) : b.call(null, d);
  d = b.length;
  e = d + hs.b(a);
  e = e >= cs.b(a) ? e : e + (Me(cs.b(a) - e - 1, jt.b(a)) + 1) * jt.b(a);
  d = P(q, Yf(e - d, Vq.b(a)));
  m(ks.b(a)) ? XE.j(C([[q(d), q(b)].join("")], 0)) : XE.j(C([[q(b), q(d)].join("")], 0));
  return c;
}
function CG(b, a) {
  return Ze(x(bF(function(a) {
    return 0 < a ? new Q(null, 2, 5, R, [Ne(a, b), Me(a, b)], null) : new Q(null, 2, 5, R, [null, null], null);
  }, a)));
}
function DG(b, a) {
  return 0 === a ? "0" : P(q, Tf.a(function() {
    return function(a) {
      return 10 > a ? Ke($E("0") + a) : Ke($E("a") + (a - 10));
    };
  }(a), CG(b, a)));
}
function AG(b, a) {
  return DG(b, a);
}
function EG(b, a) {
  return Ze(x(bF(function(a) {
    return new Q(null, 2, 5, R, [w(Ze(Uf(b, a))), w(Vf(b, a))], null);
  }, Ze(a))));
}
function FG(b, a, c) {
  var d = rG(c), e = F(d, 0, null), f = F(d, 1, null);
  if (m(ye(e) ? !0 : "number" !== typeof e || isNaN(e) || Infinity === e || parseFloat(e) === parseInt(e, 10) ? !1 : v.a(e, Math.floor(e)))) {
    var g = 0 > e, n = g ? -e : e, r = DG(b, n);
    b = m(Jp.b(a)) ? function() {
      var b = Tf.a(function() {
        return function(a) {
          return P(q, a);
        };
      }(g, n, r, d, e, f), EG(vl.b(a), r)), c = Yf(B(b), qw.b(a));
      return P(q, z(Zf.a(c, b)));
    }() : r;
    b = g ? [q("-"), q(b)].join("") : m(ks.b(a)) ? [q("+"), q(b)].join("") : b;
    b = b.length < cs.b(a) ? [q(P(q, Yf(cs.b(a) - b.length, Vq.b(a)))), q(b)].join("") : b;
    XE.j(C([b], 0));
  } else {
    BG(Vi, new l(null, 5, [cs, cs.b(a), jt, 1, hs, 0, Vq, Vq.b(a), ks, !0], null), lG(new Q(null, 1, 5, R, [e], null)));
  }
  return f;
}
var GG = new Q(null, 20, 5, R, "zero one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen".split(" "), null), HG = new Q(null, 20, 5, R, "zeroth first second third fourth fifth sixth seventh eighth ninth tenth eleventh twelfth thirteenth fourteenth fifteenth sixteenth seventeenth eighteenth nineteenth".split(" "), null), IG = new Q(null, 10, 5, R, "  twenty thirty forty fifty sixty seventy eighty ninety".split(" "), null), JG = 
new Q(null, 10, 5, R, "  twentieth thirtieth fortieth fiftieth sixtieth seventieth eightieth ninetieth".split(" "), null), KG = new Q(null, 22, 5, R, " thousand million billion trillion quadrillion quintillion sextillion septillion octillion nonillion decillion undecillion duodecillion tredecillion quattuordecillion quindecillion sexdecillion septendecillion octodecillion novemdecillion vigintillion".split(" "), null);
function LG(b) {
  var a = Me(b, 100), c = Ne(b, 100);
  return [q(0 < a ? [q(Nd(GG, a)), q(" hundred")].join("") : null), q(0 < a && 0 < c ? " " : null), q(0 < c ? 20 > c ? Nd(GG, c) : function() {
    var a = Me(c, 10), b = Ne(c, 10);
    return [q(0 < a ? Nd(IG, a) : null), q(0 < a && 0 < b ? "-" : null), q(0 < b ? Nd(GG, b) : null)].join("");
  }() : null)].join("");
}
function MG(b, a) {
  for (var c = B(b), d = E, c = c - 1, e = x(b), f = z(b);;) {
    if (null == f) {
      return [q(P(q, $f(", ", d))), q(le(e) || le(d) ? null : ", "), q(e), q(!le(e) && 0 < c + a ? [q(" "), q(Nd(KG, c + a))].join("") : null)].join("");
    }
    d = le(e) ? d : ce.a(d, [q(e), q(" "), q(Nd(KG, c + a))].join(""));
    --c;
    e = x(f);
    f = z(f);
  }
}
function NG(b) {
  var a = Me(b, 100), c = Ne(b, 100);
  return [q(0 < a ? [q(Nd(GG, a)), q(" hundred")].join("") : null), q(0 < a && 0 < c ? " " : null), q(0 < c ? 20 > c ? Nd(HG, c) : function() {
    var a = Me(c, 10), b = Ne(c, 10);
    return 0 < a && !(0 < b) ? Nd(JG, a) : [q(0 < a ? Nd(IG, a) : null), q(0 < a && 0 < b ? "-" : null), q(0 < b ? Nd(HG, b) : null)].join("");
  }() : 0 < a ? "th" : null)].join("");
}
var OG = new Q(null, 4, 5, R, [new Q(null, 9, 5, R, "I II III IIII V VI VII VIII VIIII".split(" "), null), new Q(null, 9, 5, R, "X XX XXX XXXX L LX LXX LXXX LXXXX".split(" "), null), new Q(null, 9, 5, R, "C CC CCC CCCC D DC DCC DCCC DCCCC".split(" "), null), new Q(null, 3, 5, R, ["M", "MM", "MMM"], null)], null), PG = new Q(null, 4, 5, R, [new Q(null, 9, 5, R, "I II III IV V VI VII VIII IX".split(" "), null), new Q(null, 9, 5, R, "X XX XXX XL L LX LXX LXXX XC".split(" "), null), new Q(null, 9, 5, 
R, "C CC CCC CD D DC DCC DCCC CM".split(" "), null), new Q(null, 3, 5, R, ["M", "MM", "MMM"], null)], null);
function QG(b, a) {
  var c = rG(a), d = F(c, 0, null), c = F(c, 1, null);
  if ("number" === typeof d && 0 < d && 4E3 > d) {
    for (var e = CG(10, d), d = E, f = B(e) - 1;;) {
      if (le(e)) {
        XE.j(C([P(q, d)], 0));
        break;
      } else {
        var g = x(e), d = v.a(0, g) ? d : ce.a(d, Nd(Nd(b, f), g - 1)), f = f - 1, e = z(e)
      }
    }
  } else {
    FG(10, new l(null, 5, [cs, 0, Vq, " ", qw, ",", vl, 3, Jp, !0], null), lG(new Q(null, 1, 5, R, [d], null)));
  }
  return c;
}
var RG = new l(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
function SG(b, a) {
  var c = rG(a), d = F(c, 0, null), c = F(c, 1, null), e = $E(d), d = e & 127, e = e & 128, f = t.a(RG, d);
  0 < e && XE.j(C(["Meta-"], 0));
  XE.j(C([m(f) ? f : 32 > d ? [q("Control-"), q(Ke(d + 64))].join("") : v.a(d, 127) ? "Control-?" : Ke(d)], 0));
  return c;
}
function TG(b, a) {
  var c = rG(a), d = F(c, 0, null), c = F(c, 1, null), e = kp.b(b);
  if (m(v.a ? v.a("o", e) : v.call(null, "o", e))) {
    jG(!0, "\\o~3, '0o", C([$E(d)], 0));
  } else {
    if (m(v.a ? v.a("u", e) : v.call(null, "u", e))) {
      jG(!0, "\\u~4, '0x", C([$E(d)], 0));
    } else {
      if (m(v.a ? v.a(null, e) : v.call(null, null, e))) {
        Ac(ab, m(v.a ? v.a("\b", d) : v.call(null, "\b", d)) ? "\\backspace" : m(v.a ? v.a("\t", d) : v.call(null, "\t", d)) ? "\\tab" : m(v.a ? v.a("\n", d) : v.call(null, "\n", d)) ? "\\newline" : m(v.a ? v.a("\f", d) : v.call(null, "\f", d)) ? "\\formfeed" : m(v.a ? v.a("\r", d) : v.call(null, "\r", d)) ? "\\return" : m(v.a ? v.a('"', d) : v.call(null, '"', d)) ? '\\"' : m(v.a ? v.a("\\", d) : v.call(null, "\\", d)) ? "\\\\" : [q("\\"), q(d)].join(""));
      } else {
        throw Error([q("No matching clause: "), q(e)].join(""));
      }
    }
  }
  return c;
}
function UG(b, a) {
  var c = rG(a), d = F(c, 0, null), c = F(c, 1, null);
  XE.j(C([d], 0));
  return c;
}
function VG(b) {
  b = x(b);
  return v.a(sv, b) || v.a(sp, b);
}
function WG(b, a, c) {
  return $d(aF(function(a, b) {
    if (m(VG(b))) {
      return new Q(null, 2, 5, R, [null, b], null);
    }
    var d = xG(co.b(a), b), e = F(d, 0, null), d = F(d, 1, null), n = cF(e), e = F(n, 0, null), n = F(n, 1, null), e = I.c(e, tu, c);
    return new Q(null, 2, 5, R, [null, P(Km.b(a), new Q(null, 3, 5, R, [e, d, n], null))], null);
  }, a, b));
}
function XG(b) {
  b = xz("" + q(b));
  var a = b.indexOf("e"), c = b.indexOf(".");
  b = 0 > a ? 0 > c ? new Q(null, 2, 5, R, [b, "" + q(B(b) - 1)], null) : new Q(null, 2, 5, R, [[q(b.substring(0, c)), q(b.substring(c + 1))].join(""), "" + q(c - 1)], null) : 0 > c ? new Q(null, 2, 5, R, [b.substring(0, a), b.substring(a + 1)], null) : new Q(null, 2, 5, R, [[q(b.substring(0, 1)), q(b.substring(2, a))].join(""), b.substring(a + 1)], null);
  a = F(b, 0, null);
  b = F(b, 1, null);
  a: {
    if (c = B(a), 0 < c && v.a(Nd(a, B(a) - 1), "0")) {
      for (--c;;) {
        if (0 > c) {
          a = "";
          break a;
        }
        if (v.a(Nd(a, c), "0")) {
          --c;
        } else {
          a = a.substring(0, c + 1);
          break a;
        }
      }
    }
  }
  a: {
    var c = a, d = B(c);
    if (0 < d && v.a(Nd(c, 0), "0")) {
      for (var e = 0;;) {
        if (v.a(e, d) || !v.a(Nd(c, e), "0")) {
          c = c.substring(e);
          break a;
        }
        e += 1;
      }
    }
  }
  a = B(a) - B(c);
  b = 0 < B(b) && v.a(Nd(b, 0), "+") ? b.substring(1) : b;
  return le(c) ? new Q(null, 2, 5, R, ["0", 0], null) : new Q(null, 2, 5, R, [c, parseInt(b, 10) - a], null);
}
function YG(b, a, c, d) {
  if (m(m(c) ? c : d)) {
    var e = B(b);
    d = m(d) ? 2 > d ? 2 : d : 0;
    m(c) ? c = a + c + 1 : 0 <= a ? (c = a + 1, --d, c = c > d ? c : d) : c = d + a;
    var f = v.a(c, 0) ? new Q(null, 4, 5, R, [[q("0"), q(b)].join(""), a + 1, 1, e + 1], null) : new Q(null, 4, 5, R, [b, a, c, e], null);
    c = F(f, 0, null);
    e = F(f, 1, null);
    d = F(f, 2, null);
    f = F(f, 3, null);
    if (m(d)) {
      if (0 > d) {
        return new Q(null, 3, 5, R, ["0", 0, !1], null);
      }
      if (f > d) {
        a = Nd(c, d);
        b = c.substring(0, d);
        if ($E(a) >= $E("5")) {
          a: {
            for (a = B(b) - 1, c = a | 0;;) {
              if (0 > c) {
                a = tf(q, "1", Yf(a + 1, "0"));
                break a;
              }
              if (v.a("9", b.charAt(c))) {
                --c;
              } else {
                a = uf(q, b.substring(0, c), Ke($E(b.charAt(c)) + 1), Yf(a - c, "0"));
                break a;
              }
            }
          }
          b = B(a) > B(b);
          return new Q(null, 3, 5, R, [b ? Se(a, 0, B(a) - 1) : a, e, b], null);
        }
        return new Q(null, 3, 5, R, [b, e, !1], null);
      }
    }
  }
  return new Q(null, 3, 5, R, [b, a, !1], null);
}
function ZG(b, a, c) {
  var d = 0 > a ? new Q(null, 2, 5, R, [[q(P(q, Yf(-a - 1, "0"))), q(b)].join(""), -1], null) : new Q(null, 2, 5, R, [b, a], null);
  b = F(d, 0, null);
  var e = F(d, 1, null), d = B(b);
  c = m(c) ? e + c + 1 : e + 1;
  c = d < c ? [q(b), q(P(q, Yf(c - d, "0")))].join("") : b;
  0 > a ? a = [q("."), q(c)].join("") : (a += 1, a = [q(c.substring(0, a)), q("."), q(c.substring(a))].join(""));
  return a;
}
function $G(b, a) {
  return 0 > a ? [q("."), q(b)].join("") : [q(b.substring(0, a)), q("."), q(b.substring(a))].join("");
}
function aH(b, a) {
  var c = Xm.b(b), d = At.b(b), e = rG(a), f = F(e, 0, null), e = F(e, 1, null), g = 0 > f ? new Q(null, 2, 5, R, ["-", -f], null) : new Q(null, 2, 5, R, ["+", f], null), n = F(g, 0, null), g = F(g, 1, null), g = XG(g), r = F(g, 0, null), u = F(g, 1, null) + vp.b(b), g = function() {
    var a = ks.b(b);
    return m(a) ? a : 0 > f;
  }(), y = rb(d) && B(r) - 1 <= u, D = YG(r, u, d, m(c) ? c - (m(g) ? 1 : 0) : null), r = F(D, 0, null), u = F(D, 1, null), D = F(D, 2, null), r = ZG(r, m(D) ? u + 1 : u, d), d = m(m(c) ? m(d) ? 1 <= d && v.a(r.charAt(0), "0") && v.a(r.charAt(1), ".") && B(r) > c - (m(g) ? 1 : 0) : d : c) ? r.substring(1) : r, u = v.a(x(d), ".");
  if (m(c)) {
    var r = B(d), r = m(g) ? r + 1 : r, u = u && !(r >= c), y = y && !(r >= c), G = u || y ? r + 1 : r;
    m(function() {
      var a = G > c;
      return a ? Ps.b(b) : a;
    }()) ? XE.j(C([P(q, Yf(c, Ps.b(b)))], 0)) : XE.j(C([[q(P(q, Yf(c - G, Vq.b(b)))), q(m(g) ? n : null), q(u ? "0" : null), q(d), q(y ? "0" : null)].join("")], 0));
  } else {
    XE.j(C([[q(m(g) ? n : null), q(u ? "0" : null), q(d), q(y ? "0" : null)].join("")], 0));
  }
  return e;
}
function bH(b, a) {
  var c = rG(a), d = F(c, 0, null), c = F(c, 1, null), e = XG(0 > d ? -d : d);
  F(e, 0, null);
  for (F(e, 1, null);;) {
    var f = F(e, 0, null), g = F(e, 1, null), n = Xm.b(b), r = At.b(b), u = dp.b(b), y = vp.b(b), D = function() {
      var a = aw.b(b);
      return m(a) ? a : "E";
    }(), e = function() {
      var a = ks.b(b);
      return m(a) ? a : 0 > d;
    }(), G = 0 >= y, H = g - (y - 1), M = "" + q(Math.abs(H)), D = [q(D), q(0 > H ? "-" : "+"), q(m(u) ? P(q, Yf(u - B(M), "0")) : null), q(M)].join(""), O = B(D), H = B(f), f = [q(P(q, Yf(-y, "0"))), q(f), q(m(r) ? P(q, Yf(r - (H - 1) - (0 > y ? -y : 0), "0")) : null)].join(""), H = m(n) ? n - O : null, f = YG(f, 0, v.a(y, 0) ? r - 1 : 0 < y ? r : 0 > y ? r - 1 : null, m(H) ? H - (m(e) ? 1 : 0) : null), H = F(f, 0, null);
    F(f, 1, null);
    M = F(f, 2, null);
    f = $G(H, y);
    r = v.a(y, B(H)) && null == r;
    if (rb(M)) {
      if (m(n)) {
        var g = B(f) + O, g = m(e) ? g + 1 : g, T = (G = G && !v.a(g, n)) ? g + 1 : g, g = r && T < n;
        m(function() {
          var a;
          a = T > n;
          a || (a = u, a = m(a) ? O - 2 > u : a);
          return m(a) ? Ps.b(b) : a;
        }()) ? XE.j(C([P(q, Yf(n, Ps.b(b)))], 0)) : XE.j(C([[q(P(q, Yf(n - T - (g ? 1 : 0), Vq.b(b)))), q(m(e) ? 0 > d ? "-" : "+" : null), q(G ? "0" : null), q(f), q(g ? "0" : null), q(D)].join("")], 0));
      } else {
        XE.j(C([[q(m(e) ? 0 > d ? "-" : "+" : null), q(G ? "0" : null), q(f), q(r ? "0" : null), q(D)].join("")], 0));
      }
      break;
    } else {
      e = new Q(null, 2, 5, R, [H, g + 1], null);
    }
  }
  return c;
}
function cH(b, a) {
  var c = rG(a), d = F(c, 0, null);
  F(c, 1, null);
  var c = XG(0 > d ? -d : d), e = F(c, 0, null), c = F(c, 1, null), f = Xm.b(b), g = At.b(b), n = dp.b(b), c = v.a(d, 0) ? 0 : c + 1, d = m(n) ? n + 2 : 4, f = m(f) ? f - d : null;
  m(g) ? e = g : (e = B(e), g = 7 > c ? c : 7, e = e > g ? e : g);
  c = e - c;
  return 0 <= c && c <= e ? (c = aH(new l(null, 6, [Xm, f, At, c, vp, 0, Ps, Ps.b(b), Vq, Vq.b(b), ks, ks.b(b)], null), a), XE.j(C([P(q, Yf(d, " "))], 0)), c) : bH(b, a);
}
function dH(b, a) {
  var c = rG(a), d = F(c, 0, null), c = F(c, 1, null), e = XG(Math.abs(d)), f = F(e, 0, null), g = F(e, 1, null), n = At.b(b), r = Vm.b(b), e = Xm.b(b), u = function() {
    var a = ks.b(b);
    return m(a) ? a : 0 > d;
  }(), y = YG(f, g, n, null), f = F(y, 0, null), g = F(y, 1, null), y = F(y, 2, null), n = ZG(f, m(y) ? g + 1 : g, n), r = [q(P(q, Yf(r - n.indexOf("."), "0"))), q(n)].join(""), n = B(r) + (m(u) ? 1 : 0);
  XE.j(C([[q(m(function() {
    var a = Jp.b(b);
    return m(a) ? u : a;
  }()) ? 0 > d ? "-" : "+" : null), q(P(q, Yf(e - n, Vq.b(b)))), q(m(function() {
    var a = rb(Jp.b(b));
    return a ? u : a;
  }()) ? 0 > d ? "-" : "+" : null), q(r)].join("")], 0));
  return c;
}
function eH(b, a) {
  var c = nk.b(b), d = m(c) ? new Q(null, 2, 5, R, [c, a], null) : rG(a), c = F(d, 0, null), d = F(d, 1, null), e = Tt.b(b), c = 0 > c || c >= B(e) ? x(Ol.b(b)) : Nd(e, c);
  return m(c) ? WG(c, d, tu.b(b)) : d;
}
function fH(b, a) {
  var c = rG(a), d = F(c, 0, null), c = F(c, 1, null), e = Tt.b(b), d = m(d) ? $d(e) : x(e);
  return m(d) ? WG(d, c, tu.b(b)) : c;
}
function gH(b, a) {
  var c = rG(a), d = F(c, 0, null), c = F(c, 1, null), e = Tt.b(b), e = m(d) ? x(e) : null;
  return m(d) ? m(e) ? WG(e, a, tu.b(b)) : a : c;
}
function hH(b, a) {
  for (var c = io.b(b), d = x(Tt.b(b)), e = le(d) ? sG(a) : new Q(null, 2, 5, R, [d, a], null), d = F(e, 0, null), e = F(e, 1, null), e = rG(e), f = F(e, 0, null), e = F(e, 1, null), g = 0, f = lG(f), n = -1;;) {
    if (rb(c) && v.a(lo.b(f), n) && 1 < g) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    }
    n = le(Gv.b(f)) && (rb(Jp.b(rr.b(b))) || 0 < g);
    if (m(n ? n : m(c) ? g >= c : c)) {
      return e;
    }
    n = WG(d, f, tu.b(b));
    if (v.a(sv, x(n))) {
      return e;
    }
    var g = g + 1, r = lo.b(f), f = n, n = r;
  }
}
function iH(b, a) {
  for (var c = io.b(b), d = x(Tt.b(b)), e = le(d) ? sG(a) : new Q(null, 2, 5, R, [d, a], null), d = F(e, 0, null), e = F(e, 1, null), e = rG(e), f = F(e, 0, null), e = F(e, 1, null), g = 0;;) {
    var n = le(f) && (rb(Jp.b(rr.b(b))) || 0 < g);
    if (m(n ? n : m(c) ? g >= c : c)) {
      return e;
    }
    n = WG(d, lG(x(f)), lG(z(f)));
    if (v.a(sp, x(n))) {
      return e;
    }
    g += 1;
    f = z(f);
  }
}
function jH(b, a) {
  for (var c = io.b(b), d = x(Tt.b(b)), e = le(d) ? sG(a) : new Q(null, 2, 5, R, [d, a], null), d = F(e, 0, null), f = 0, e = F(e, 1, null), g = -1;;) {
    if (rb(c) && v.a(lo.b(e), g) && 1 < f) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    }
    g = le(Gv.b(e)) && (rb(Jp.b(rr.b(b))) || 0 < f);
    if (m(g ? g : m(c) ? f >= c : c)) {
      return e;
    }
    g = WG(d, e, tu.b(b));
    if (v.a(sv, x(g))) {
      return $d(g);
    }
    var f = f + 1, n = lo.b(e), e = g, g = n;
  }
}
function kH(b, a) {
  for (var c = io.b(b), d = x(Tt.b(b)), e = le(d) ? sG(a) : new Q(null, 2, 5, R, [d, a], null), d = F(e, 0, null), f = 0, e = F(e, 1, null);;) {
    var g = le(Gv.b(e)) && (rb(Jp.b(rr.b(b))) || 0 < f);
    if (m(g ? g : m(c) ? f >= c : c)) {
      return e;
    }
    g = Gv.b(e);
    g = m(g) ? new Q(null, 2, 5, R, [x(g), new qG(gu.b(e), z(g), lo.b(e) + 1, null, null, null)], null) : new Q(null, 2, 5, R, [null, e], null);
    e = F(g, 0, null);
    g = F(g, 1, null);
    e = WG(d, lG(e), g);
    if (v.a(sp, x(e))) {
      return g;
    }
    e = g;
    f += 1;
  }
}
function lH(b, a, c) {
  return m(Jp.b(rr.b(b))) ? mH.c ? mH.c(b, a, c) : mH.call(null, b, a) : nH.c ? nH.c(b, a, c) : nH.call(null, b, a);
}
function oH(b, a, c) {
  for (var d = E;;) {
    if (le(b)) {
      return new Q(null, 2, 5, R, [d, a], null);
    }
    var e = x(b), f;
    a: {
      var g = new Oa, n = ab;
      ab = new bd(g);
      try {
        f = new Q(null, 2, 5, R, [WG(e, a, c), "" + q(g)], null);
        break a;
      } finally {
        ab = n;
      }
      f = void 0;
    }
    a = F(f, 0, null);
    e = F(f, 1, null);
    if (v.a(sv, x(a))) {
      return new Q(null, 2, 5, R, [d, $d(a)], null);
    }
    b = z(b);
    d = ce.a(d, e);
  }
}
function nH(b, a) {
  var c = function() {
    var c = Ol.b(b);
    return m(c) ? oH(c, a, tu.b(b)) : null;
  }(), d = F(c, 0, null), e = F(d, 0, null), c = F(c, 1, null), f = m(c) ? c : a, c = function() {
    var a = sk.b(b);
    return m(a) ? xG(a, f) : null;
  }(), g = F(c, 0, null), c = F(c, 1, null), c = m(c) ? c : f, n = function() {
    var a = x(Ev.b(g));
    return m(a) ? a : 0;
  }(), r = function() {
    var a = x(Uv.b(g));
    return m(a) ? a : fF(ab, Kr);
  }(), d = Tt.b(b), c = oH(d, c, tu.b(b)), u = F(c, 0, null), c = F(c, 1, null), y = function() {
    var a = B(u) - 1 + (m(Jp.b(b)) ? 1 : 0) + (m(ks.b(b)) ? 1 : 0);
    return 1 > a ? 1 : a;
  }(), d = Cb.a(Ie, Tf.a(B, u)), D = cs.b(b), G = hs.b(b), H = jt.b(b), M = d + y * G, O = M <= D ? D : D + H * (1 + Me(M - D - 1, H)), T = O - d, d = function() {
    var a = Me(T, y);
    return G > a ? G : a;
  }(), D = T - d * y, d = P(q, Yf(d, Vq.b(b)));
  m(function() {
    return m(e) ? fF(Au.b(function() {
      var a = A.b ? A.b(ab) : A.call(null, ab);
      return A.b ? A.b(a) : A.call(null, a);
    }()), lm) + n + O > r : e;
  }()) && XE.j(C([e], 0));
  for (var H = D, qa = u, la = function() {
    var a = Jp.b(b);
    return m(a) ? a : v.a(B(qa), 1) && rb(ks.b(b));
  }();;) {
    if (w(qa)) {
      XE.j(C([[q(rb(la) ? x(qa) : null), q(m(function() {
        var a = la;
        return m(a) ? a : (a = z(qa)) ? a : ks.b(b);
      }()) ? d : null), q(0 < H ? Vq.b(b) : null)].join("")], 0)), --H, qa = D = m(la) ? qa : z(qa), la = !1;
    } else {
      break;
    }
  }
  return c;
}
function pH(b) {
  "undefined" === typeof TE && (TE = function(a, b) {
    this.Qa = a;
    this.Hh = b;
    this.l = 1074135040;
    this.M = 0;
  }, TE.prototype.U = function(a, b) {
    return new TE(this.Qa, b);
  }, TE.prototype.S = function() {
    return this.Hh;
  }, TE.prototype.Nc = function() {
    return Bc(this.Qa);
  }, TE.prototype.xd = function(a, b) {
    var c = tb(b);
    if (m(v.a ? v.a(String, c) : v.call(null, String, c))) {
      return Ac(this.Qa, xz(b));
    }
    if (m(v.a ? v.a(Number, c) : v.call(null, Number, c))) {
      return Ac(this.Qa, xz(Ke(b)));
    }
    throw Error([q("No matching clause: "), q(c)].join(""));
  }, TE.yc = function() {
    return new Q(null, 2, 5, R, [Yu, ys], null);
  }, TE.nc = !0, TE.Xb = "cljs.pprint/t_cljs$pprint46526", TE.rc = function(a, b) {
    return Ac(b, "cljs.pprint/t_cljs$pprint46526");
  });
  return new TE(b, S);
}
function qH(b) {
  "undefined" === typeof UE && (UE = function(a, b) {
    this.Qa = a;
    this.Ih = b;
    this.l = 1074135040;
    this.M = 0;
  }, UE.prototype.U = function(a, b) {
    return new UE(this.Qa, b);
  }, UE.prototype.S = function() {
    return this.Ih;
  }, UE.prototype.Nc = function() {
    return Bc(this.Qa);
  }, UE.prototype.xd = function(a, b) {
    var c = tb(b);
    if (m(v.a ? v.a(String, c) : v.call(null, String, c))) {
      return Ac(this.Qa, b.toUpperCase());
    }
    if (m(v.a ? v.a(Number, c) : v.call(null, Number, c))) {
      return Ac(this.Qa, Ke(b).toUpperCase());
    }
    throw Error([q("No matching clause: "), q(c)].join(""));
  }, UE.yc = function() {
    return new Q(null, 2, 5, R, [Yu, hk], null);
  }, UE.nc = !0, UE.Xb = "cljs.pprint/t_cljs$pprint46538", UE.rc = function(a, b) {
    return Ac(b, "cljs.pprint/t_cljs$pprint46538");
  });
  return new UE(b, S);
}
function rH(b, a) {
  var c = x(b), d = m(m(a) ? m(c) ? ua(c) : c : a) ? [q(c.toUpperCase()), q(b.substring(1))].join("") : b;
  return P(q, x(bF(function() {
    return function(a) {
      if (le(a)) {
        return new Q(null, 2, 5, R, [null, null], null);
      }
      var b = RegExp("\\W\\w", "g").exec(a), b = m(b) ? b.index + 1 : b;
      return m(b) ? new Q(null, 2, 5, R, [[q(a.substring(0, b)), q(Nd(a, b).toUpperCase())].join(""), a.substring(b + 1)], null) : new Q(null, 2, 5, R, [a, null], null);
    };
  }(c, d), d)));
}
function sH(b) {
  var a = U ? U(!0) : Nf.call(null, !0);
  "undefined" === typeof VE && (VE = function(a, b, e) {
    this.Qa = a;
    this.Pd = b;
    this.Jh = e;
    this.l = 1074135040;
    this.M = 0;
  }, VE.prototype.U = function() {
    return function(a, b) {
      return new VE(this.Qa, this.Pd, b);
    };
  }(a), VE.prototype.S = function() {
    return function() {
      return this.Jh;
    };
  }(a), VE.prototype.Nc = function() {
    return function() {
      return Bc(this.Qa);
    };
  }(a), VE.prototype.xd = function() {
    return function(a, b) {
      var c = tb(b);
      if (m(v.a ? v.a(String, c) : v.call(null, String, c))) {
        Ac(this.Qa, rH(b.toLowerCase(), A.b ? A.b(this.Pd) : A.call(null, this.Pd)));
        if (0 < b.length) {
          var c = this.Pd, d;
          d = Nd(b, B(b) - 1);
          d = ta(d);
          return Qf.a ? Qf.a(c, d) : Qf.call(null, c, d);
        }
        return null;
      }
      if (m(v.a ? v.a(Number, c) : v.call(null, Number, c))) {
        return c = Ke(b), d = m(A.b ? A.b(this.Pd) : A.call(null, this.Pd)) ? c.toUpperCase() : c, Ac(this.Qa, d), d = this.Pd, c = ta(c), Qf.a ? Qf.a(d, c) : Qf.call(null, d, c);
      }
      throw Error([q("No matching clause: "), q(c)].join(""));
    };
  }(a), VE.yc = function() {
    return function() {
      return new Q(null, 3, 5, R, [Yu, Ik, bk], null);
    };
  }(a), VE.nc = !0, VE.Xb = "cljs.pprint/t_cljs$pprint46555", VE.rc = function() {
    return function(a, b) {
      return Ac(b, "cljs.pprint/t_cljs$pprint46555");
    };
  }(a));
  return new VE(b, a, S);
}
function tH(b) {
  var a = U ? U(!1) : Nf.call(null, !1);
  "undefined" === typeof WE && (WE = function(a, b, e) {
    this.Qa = a;
    this.ad = b;
    this.Kh = e;
    this.l = 1074135040;
    this.M = 0;
  }, WE.prototype.U = function() {
    return function(a, b) {
      return new WE(this.Qa, this.ad, b);
    };
  }(a), WE.prototype.S = function() {
    return function() {
      return this.Kh;
    };
  }(a), WE.prototype.Nc = function() {
    return function() {
      return Bc(this.Qa);
    };
  }(a), WE.prototype.xd = function() {
    return function(a, b) {
      var c = tb(b);
      if (m(v.a ? v.a(String, c) : v.call(null, String, c))) {
        c = xz(b);
        if (rb(A.b ? A.b(this.ad) : A.call(null, this.ad))) {
          var d = RegExp("\\S", "g").exec(c), d = m(d) ? d.index : d;
          return m(d) ? (Ac(this.Qa, [q(c.substring(0, d)), q(Nd(c, d).toUpperCase()), q(xz(c.substring(d + 1)))].join("")), Qf.a ? Qf.a(this.ad, !0) : Qf.call(null, this.ad, !0)) : Ac(this.Qa, c);
        }
        return Ac(this.Qa, xz(c));
      }
      if (m(v.a ? v.a(Number, c) : v.call(null, Number, c))) {
        return c = Ke(b), d = rb(A.b ? A.b(this.ad) : A.call(null, this.ad)), m(d ? ua(c) : d) ? (Qf.a ? Qf.a(this.ad, !0) : Qf.call(null, this.ad, !0), Ac(this.Qa, c.toUpperCase())) : Ac(this.Qa, xz(c));
      }
      throw Error([q("No matching clause: "), q(c)].join(""));
    };
  }(a), WE.yc = function() {
    return function() {
      return new Q(null, 3, 5, R, [Yu, cp, tw], null);
    };
  }(a), WE.nc = !0, WE.Xb = "cljs.pprint/t_cljs$pprint46572", WE.rc = function() {
    return function(a, b) {
      return Ac(b, "cljs.pprint/t_cljs$pprint46572");
    };
  }(a));
  return new WE(b, a, S);
}
function uH() {
  (null != ab ? ab.l & 32768 || k === ab.hg || (ab.l ? 0 : p(gc, ab)) : p(gc, ab)) ? v.a(0, fF(Au.b(function() {
    var b = A.b ? A.b(ab) : A.call(null, ab);
    return A.b ? A.b(b) : A.call(null, b);
  }()), lm)) || ZE() : ZE();
}
function vH(b, a) {
  var c = xs.b(b), d = jt.b(b), e = fF(Au.b(function() {
    var a = A.b ? A.b(ab) : A.call(null, ab);
    return A.b ? A.b(a) : A.call(null, a);
  }()), lm), c = e < c ? c - e : v.a(d, 0) ? 0 : d - Ne(e - c, d);
  XE.j(C([P(q, Yf(c, " "))], 0));
  return a;
}
function wH(b, a) {
  var c = xs.b(b), d = jt.b(b), e = c + fF(Au.b(function() {
    var a = A.b ? A.b(ab) : A.call(null, ab);
    return A.b ? A.b(a) : A.call(null, a);
  }()), lm), e = 0 < d ? Ne(e, d) : 0, c = c + (v.a(0, e) ? 0 : d - e);
  XE.j(C([P(q, Yf(c, " "))], 0));
  return a;
}
function mH(b, a) {
  var c = Tt.b(b), d = B(c), e = 1 < d ? Xo.b(co.b(x(x(c)))) : m(Jp.b(b)) ? "(" : null, f = Nd(c, 1 < d ? 1 : 0), c = 2 < d ? Xo.b(co.b(x(Nd(c, 2)))) : m(Jp.b(b)) ? ")" : null, g = rG(a), d = F(g, 0, null), g = F(g, 1, null);
  if (m(gG())) {
    Ac(ab, "#");
  } else {
    var n = $F, r = aG;
    $F += 1;
    aG = 0;
    try {
      PF(e, c), WG(f, lG(d), tu.b(b)), QF();
    } finally {
      aG = r, $F = n;
    }
  }
  return g;
}
function xH(b, a) {
  var c = m(Jp.b(b)) ? js : zk;
  iG(c, Vm.b(b));
  return a;
}
function yH(b, a) {
  var c = m(Jp.b(b)) ? m(ks.b(b)) ? Ij : ln : m(ks.b(b)) ? Pl : eu;
  hG(c);
  return a;
}
var zH = fe("ASDBOXRPCFEG$%\x26|~\nT*?()[;]{}\x3c\x3e^W_I".split(""), [new l(null, 5, [bv, "A", co, new l(null, 4, [cs, new Q(null, 2, 5, R, [0, Number], null), jt, new Q(null, 2, 5, R, [1, Number], null), hs, new Q(null, 2, 5, R, [0, Number], null), Vq, new Q(null, 2, 5, R, [" ", String], null)], null), Wu, new V(null, new l(null, 3, [Jp, null, ks, null, zt, null], null), null), ru, S, Qm, function() {
  return function(b, a) {
    return BG(Vi, b, a);
  };
}], null), new l(null, 5, [bv, "S", co, new l(null, 4, [cs, new Q(null, 2, 5, R, [0, Number], null), jt, new Q(null, 2, 5, R, [1, Number], null), hs, new Q(null, 2, 5, R, [0, Number], null), Vq, new Q(null, 2, 5, R, [" ", String], null)], null), Wu, new V(null, new l(null, 3, [Jp, null, ks, null, zt, null], null), null), ru, S, Qm, function() {
  return function(b, a) {
    return BG(Ti, b, a);
  };
}], null), new l(null, 5, [bv, "D", co, new l(null, 4, [cs, new Q(null, 2, 5, R, [0, Number], null), Vq, new Q(null, 2, 5, R, [" ", String], null), qw, new Q(null, 2, 5, R, [",", String], null), vl, new Q(null, 2, 5, R, [3, Number], null)], null), Wu, new V(null, new l(null, 3, [Jp, null, ks, null, zt, null], null), null), ru, S, Qm, function() {
  return function(b, a) {
    return FG(10, b, a);
  };
}], null), new l(null, 5, [bv, "B", co, new l(null, 4, [cs, new Q(null, 2, 5, R, [0, Number], null), Vq, new Q(null, 2, 5, R, [" ", String], null), qw, new Q(null, 2, 5, R, [",", String], null), vl, new Q(null, 2, 5, R, [3, Number], null)], null), Wu, new V(null, new l(null, 3, [Jp, null, ks, null, zt, null], null), null), ru, S, Qm, function() {
  return function(b, a) {
    return FG(2, b, a);
  };
}], null), new l(null, 5, [bv, "O", co, new l(null, 4, [cs, new Q(null, 2, 5, R, [0, Number], null), Vq, new Q(null, 2, 5, R, [" ", String], null), qw, new Q(null, 2, 5, R, [",", String], null), vl, new Q(null, 2, 5, R, [3, Number], null)], null), Wu, new V(null, new l(null, 3, [Jp, null, ks, null, zt, null], null), null), ru, S, Qm, function() {
  return function(b, a) {
    return FG(8, b, a);
  };
}], null), new l(null, 5, [bv, "X", co, new l(null, 4, [cs, new Q(null, 2, 5, R, [0, Number], null), Vq, new Q(null, 2, 5, R, [" ", String], null), qw, new Q(null, 2, 5, R, [",", String], null), vl, new Q(null, 2, 5, R, [3, Number], null)], null), Wu, new V(null, new l(null, 3, [Jp, null, ks, null, zt, null], null), null), ru, S, Qm, function() {
  return function(b, a) {
    return FG(16, b, a);
  };
}], null), new l(null, 5, [bv, "R", co, new l(null, 5, [Au, new Q(null, 2, 5, R, [null, Number], null), cs, new Q(null, 2, 5, R, [0, Number], null), Vq, new Q(null, 2, 5, R, [" ", String], null), qw, new Q(null, 2, 5, R, [",", String], null), vl, new Q(null, 2, 5, R, [3, Number], null)], null), Wu, new V(null, new l(null, 3, [Jp, null, ks, null, zt, null], null), null), ru, S, Qm, function(b) {
  return m(x(Au.b(b))) ? function(a, b) {
    return FG(Au.b(a), a, b);
  } : m(function() {
    var a = ks.b(b);
    return m(a) ? Jp.b(b) : a;
  }()) ? function(a, b) {
    return QG(OG, b);
  } : m(ks.b(b)) ? function(a, b) {
    return QG(PG, b);
  } : m(Jp.b(b)) ? function(a, b) {
    var c = rG(b), e = F(c, 0, null), c = F(c, 1, null);
    if (v.a(0, e)) {
      XE.j(C(["zeroth"], 0));
    } else {
      var f = CG(1E3, 0 > e ? -e : e);
      if (B(f) <= B(KG)) {
        var g = Tf.a(LG, Wf(1, f)), g = MG(g, 1), f = NG(be(f));
        XE.j(C([[q(0 > e ? "minus " : null), q(le(g) || le(f) ? le(g) ? f : [q(g), q("th")].join("") : [q(g), q(", "), q(f)].join(""))].join("")], 0));
      } else {
        FG(10, new l(null, 5, [cs, 0, Vq, " ", qw, ",", vl, 3, Jp, !0], null), lG(new Q(null, 1, 5, R, [e], null))), f = Ne(e, 100), e = 11 < f || 19 > f, f = Ne(f, 10), XE.j(C([1 === f && e ? "st" : 2 === f && e ? "nd" : 3 === f && e ? "rd" : "th"], 0));
      }
    }
    return c;
  } : function(a, b) {
    var c = rG(b), e = F(c, 0, null), c = F(c, 1, null);
    if (v.a(0, e)) {
      XE.j(C(["zero"], 0));
    } else {
      var f = CG(1E3, 0 > e ? -e : e);
      B(f) <= B(KG) ? (f = Tf.a(LG, f), f = MG(f, 0), XE.j(C([[q(0 > e ? "minus " : null), q(f)].join("")], 0))) : FG(10, new l(null, 5, [cs, 0, Vq, " ", qw, ",", vl, 3, Jp, !0], null), lG(new Q(null, 1, 5, R, [e], null)));
    }
    return c;
  };
}], null), new l(null, 5, [bv, "P", co, S, Wu, new V(null, new l(null, 3, [Jp, null, ks, null, zt, null], null), null), ru, S, Qm, function() {
  return function(b, a) {
    var c = m(Jp.b(b)) ? uG(a, -1) : a, d = m(ks.b(b)) ? new Q(null, 2, 5, R, ["y", "ies"], null) : new Q(null, 2, 5, R, ["", "s"], null), e = rG(c), c = F(e, 0, null), e = F(e, 1, null);
    XE.j(C([v.a(c, 1) ? x(d) : $d(d)], 0));
    return e;
  };
}], null), new l(null, 5, [bv, "C", co, new l(null, 1, [kp, new Q(null, 2, 5, R, [null, String], null)], null), Wu, new V(null, new l(null, 3, [Jp, null, ks, null, zt, null], null), null), ru, S, Qm, function(b) {
  return m(Jp.b(b)) ? SG : m(ks.b(b)) ? TG : UG;
}], null), new l(null, 5, [bv, "F", co, new l(null, 5, [Xm, new Q(null, 2, 5, R, [null, Number], null), At, new Q(null, 2, 5, R, [null, Number], null), vp, new Q(null, 2, 5, R, [0, Number], null), Ps, new Q(null, 2, 5, R, [null, String], null), Vq, new Q(null, 2, 5, R, [" ", String], null)], null), Wu, new V(null, new l(null, 1, [ks, null], null), null), ru, S, Qm, function() {
  return aH;
}], null), new l(null, 5, [bv, "E", co, new l(null, 7, [Xm, new Q(null, 2, 5, R, [null, Number], null), At, new Q(null, 2, 5, R, [null, Number], null), dp, new Q(null, 2, 5, R, [null, Number], null), vp, new Q(null, 2, 5, R, [1, Number], null), Ps, new Q(null, 2, 5, R, [null, String], null), Vq, new Q(null, 2, 5, R, [" ", String], null), aw, new Q(null, 2, 5, R, [null, String], null)], null), Wu, new V(null, new l(null, 1, [ks, null], null), null), ru, S, Qm, function() {
  return bH;
}], null), new l(null, 5, [bv, "G", co, new l(null, 7, [Xm, new Q(null, 2, 5, R, [null, Number], null), At, new Q(null, 2, 5, R, [null, Number], null), dp, new Q(null, 2, 5, R, [null, Number], null), vp, new Q(null, 2, 5, R, [1, Number], null), Ps, new Q(null, 2, 5, R, [null, String], null), Vq, new Q(null, 2, 5, R, [" ", String], null), aw, new Q(null, 2, 5, R, [null, String], null)], null), Wu, new V(null, new l(null, 1, [ks, null], null), null), ru, S, Qm, function() {
  return cH;
}], null), new l(null, 5, [bv, "$", co, new l(null, 4, [At, new Q(null, 2, 5, R, [2, Number], null), Vm, new Q(null, 2, 5, R, [1, Number], null), Xm, new Q(null, 2, 5, R, [0, Number], null), Vq, new Q(null, 2, 5, R, [" ", String], null)], null), Wu, new V(null, new l(null, 3, [Jp, null, ks, null, zt, null], null), null), ru, S, Qm, function() {
  return dH;
}], null), new l(null, 5, [bv, "%", co, new l(null, 1, [ps, new Q(null, 2, 5, R, [1, Number], null)], null), Wu, oi, ru, S, Qm, function() {
  return function(b, a) {
    for (var c = ps.b(b), d = 0;;) {
      if (d < c) {
        ZE(), d += 1;
      } else {
        break;
      }
    }
    return a;
  };
}], null), new l(null, 5, [bv, "\x26", co, new l(null, 1, [ps, new Q(null, 2, 5, R, [1, Number], null)], null), Wu, new V(null, new l(null, 1, [vu, null], null), null), ru, S, Qm, function() {
  return function(b, a) {
    var c = ps.b(b);
    0 < c && uH();
    for (var c = c - 1, d = 0;;) {
      if (d < c) {
        ZE(), d += 1;
      } else {
        break;
      }
    }
    return a;
  };
}], null), new l(null, 5, [bv, "|", co, new l(null, 1, [ps, new Q(null, 2, 5, R, [1, Number], null)], null), Wu, oi, ru, S, Qm, function() {
  return function(b, a) {
    for (var c = ps.b(b), d = 0;;) {
      if (d < c) {
        XE.j(C(["\f"], 0)), d += 1;
      } else {
        break;
      }
    }
    return a;
  };
}], null), new l(null, 5, [bv, "~", co, new l(null, 1, [Vm, new Q(null, 2, 5, R, [1, Number], null)], null), Wu, oi, ru, S, Qm, function() {
  return function(b, a) {
    var c = Vm.b(b);
    XE.j(C([P(q, Yf(c, "~"))], 0));
    return a;
  };
}], null), new l(null, 5, [bv, "\n", co, S, Wu, new V(null, new l(null, 2, [Jp, null, ks, null], null), null), ru, S, Qm, function() {
  return function(b, a) {
    m(ks.b(b)) && ZE();
    return a;
  };
}], null), new l(null, 5, [bv, "T", co, new l(null, 2, [xs, new Q(null, 2, 5, R, [1, Number], null), jt, new Q(null, 2, 5, R, [1, Number], null)], null), Wu, new V(null, new l(null, 2, [ks, null, vu, null], null), null), ru, S, Qm, function(b) {
  return m(ks.b(b)) ? function(a, b) {
    return wH(a, b);
  } : function(a, b) {
    return vH(a, b);
  };
}], null), new l(null, 5, [bv, "*", co, new l(null, 1, [Vm, new Q(null, 2, 5, R, [1, Number], null)], null), Wu, new V(null, new l(null, 2, [Jp, null, ks, null], null), null), ru, S, Qm, function() {
  return function(b, a) {
    var c = Vm.b(b);
    return m(ks.b(b)) ? tG(a, c) : uG(a, m(Jp.b(b)) ? -c : c);
  };
}], null), new l(null, 5, [bv, "?", co, S, Wu, new V(null, new l(null, 1, [ks, null], null), null), ru, S, Qm, function(b) {
  return m(ks.b(b)) ? function(a, b) {
    var c = sG(b), e = F(c, 0, null), c = F(c, 1, null);
    return WG(e, c, tu.b(a));
  } : function(a, b) {
    var c = sG(b), e = F(c, 0, null), c = F(c, 1, null), f = rG(c), c = F(f, 0, null), f = F(f, 1, null), c = lG(c);
    WG(e, c, tu.b(a));
    return f;
  };
}], null), new l(null, 5, [bv, "(", co, S, Wu, new V(null, new l(null, 3, [Jp, null, ks, null, zt, null], null), null), ru, new l(null, 3, [gt, ")", Dk, null, Ol, null], null), Qm, function(b) {
  return function(a) {
    return function(b, d) {
      var c;
      a: {
        var f = x(Tt.b(b)), g = ab;
        ab = a.b ? a.b(ab) : a.call(null, ab);
        try {
          c = WG(f, d, tu.b(b));
          break a;
        } finally {
          ab = g;
        }
        c = void 0;
      }
      return c;
    };
  }(m(function() {
    var a = ks.b(b);
    return m(a) ? Jp.b(b) : a;
  }()) ? qH : m(Jp.b(b)) ? sH : m(ks.b(b)) ? tH : pH);
}], null), new l(null, 5, [bv, ")", co, S, Wu, oi, ru, S, Qm, function() {
  return null;
}], null), new l(null, 5, [bv, "[", co, new l(null, 1, [nk, new Q(null, 2, 5, R, [null, Number], null)], null), Wu, new V(null, new l(null, 2, [Jp, null, ks, null], null), null), ru, new l(null, 3, [gt, "]", Dk, !0, Ol, hv], null), Qm, function(b) {
  return m(Jp.b(b)) ? fH : m(ks.b(b)) ? gH : eH;
}], null), new l(null, 5, [bv, ";", co, new l(null, 2, [Ev, new Q(null, 2, 5, R, [null, Number], null), Uv, new Q(null, 2, 5, R, [null, Number], null)], null), Wu, new V(null, new l(null, 1, [Jp, null], null), null), ru, new l(null, 1, [Vu, !0], null), Qm, function() {
  return null;
}], null), new l(null, 5, [bv, "]", co, S, Wu, oi, ru, S, Qm, function() {
  return null;
}], null), new l(null, 5, [bv, "{", co, new l(null, 1, [io, new Q(null, 2, 5, R, [null, Number], null)], null), Wu, new V(null, new l(null, 3, [Jp, null, ks, null, zt, null], null), null), ru, new l(null, 2, [gt, "}", Dk, !1], null), Qm, function(b) {
  var a;
  a = ks.b(b);
  a = m(a) ? Jp.b(b) : a;
  return m(a) ? kH : m(Jp.b(b)) ? iH : m(ks.b(b)) ? jH : hH;
}], null), new l(null, 5, [bv, "}", co, S, Wu, new V(null, new l(null, 1, [Jp, null], null), null), ru, S, Qm, function() {
  return null;
}], null), new l(null, 5, [bv, "\x3c", co, new l(null, 4, [cs, new Q(null, 2, 5, R, [0, Number], null), jt, new Q(null, 2, 5, R, [1, Number], null), hs, new Q(null, 2, 5, R, [0, Number], null), Vq, new Q(null, 2, 5, R, [" ", String], null)], null), Wu, new V(null, new l(null, 4, [Jp, null, ks, null, zt, null, vu, null], null), null), ru, new l(null, 3, [gt, "\x3e", Dk, !0, Ol, lu], null), Qm, function() {
  return lH;
}], null), new l(null, 5, [bv, "\x3e", co, S, Wu, new V(null, new l(null, 1, [Jp, null], null), null), ru, S, Qm, function() {
  return null;
}], null), new l(null, 5, [bv, "^", co, new l(null, 3, [Lv, new Q(null, 2, 5, R, [null, Number], null), ul, new Q(null, 2, 5, R, [null, Number], null), Vj, new Q(null, 2, 5, R, [null, Number], null)], null), Wu, new V(null, new l(null, 1, [Jp, null], null), null), ru, S, Qm, function() {
  return function(b, a) {
    var c = Lv.b(b), d = ul.b(b), e = Vj.b(b), f = m(Jp.b(b)) ? sp : sv;
    return m(m(c) ? m(d) ? e : d : c) ? c <= d && d <= e ? new Q(null, 2, 5, R, [f, a], null) : a : m(m(c) ? d : c) ? v.a(c, d) ? new Q(null, 2, 5, R, [f, a], null) : a : m(c) ? v.a(c, 0) ? new Q(null, 2, 5, R, [f, a], null) : a : (m(Jp.b(b)) ? le(Gv.b(tu.b(b))) : le(Gv.b(a))) ? new Q(null, 2, 5, R, [f, a], null) : a;
  };
}], null), new l(null, 5, [bv, "W", co, S, Wu, new V(null, new l(null, 4, [Jp, null, ks, null, zt, null, vu, null], null), null), ru, S, Qm, function(b) {
  return m(function() {
    var a = ks.b(b);
    return m(a) ? a : Jp.b(b);
  }()) ? function(a) {
    return function(b, d) {
      var c = rG(d), f = F(c, 0, null), c = F(c, 1, null);
      return m(tf(dG, f, a)) ? new Q(null, 2, 5, R, [sv, c], null) : c;
    };
  }(N.a(m(ks.b(b)) ? new Q(null, 4, 5, R, [Up, null, Fs, null], null) : E, m(Jp.b(b)) ? new Q(null, 2, 5, R, [vu, !0], null) : E)) : function(a, b) {
    var c = rG(b), e = F(c, 0, null), c = F(c, 1, null);
    return m(cG(e)) ? new Q(null, 2, 5, R, [sv, c], null) : c;
  };
}], null), new l(null, 5, [bv, "_", co, S, Wu, new V(null, new l(null, 3, [Jp, null, ks, null, zt, null], null), null), ru, S, Qm, function() {
  return yH;
}], null), new l(null, 5, [bv, "I", co, new l(null, 1, [Vm, new Q(null, 2, 5, R, [0, Number], null)], null), Wu, new V(null, new l(null, 1, [Jp, null], null), null), ru, S, Qm, function() {
  return xH;
}], null)]), AH = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/, BH = new V(null, new l(null, 2, [bn, null, Do, null], null), null);
function CH(b) {
  var a = F(b, 0, null), c = F(b, 1, null), d = F(b, 2, null);
  b = new RegExp(AH.source, "g");
  var e = b.exec(a);
  return m(e) ? (d = x(e), a = a.substring(b.lastIndex), b = c + b.lastIndex, v.a(",", Nd(a, 0)) ? new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [d, c], null), new Q(null, 3, 5, R, [a.substring(1), b + 1, !0], null)], null) : new Q(null, 2, 5, R, [new Q(null, 2, 5, R, [d, c], null), new Q(null, 3, 5, R, [a, b, !1], null)], null)) : m(d) ? pG("Badly formed parameters in format directive", c) : new Q(null, 2, 5, R, [null, new Q(null, 2, 5, R, [a, c], null)], null);
}
function DH(b) {
  var a = F(b, 0, null);
  b = F(b, 1, null);
  return new Q(null, 2, 5, R, [v.a(a.length, 0) ? null : v.a(a.length, 1) && ze(new V(null, new l(null, 2, ["V", null, "v", null], null), null), Nd(a, 0)) ? Do : v.a(a.length, 1) && v.a("#", Nd(a, 0)) ? bn : v.a(a.length, 2) && v.a("'", Nd(a, 0)) ? Nd(a, 1) : parseInt(a, 10), b], null);
}
var EH = new l(null, 2, [":", Jp, "@", ks], null);
function FH(b, a) {
  return bF(function(a) {
    var b = F(a, 0, null), c = F(a, 1, null);
    a = F(a, 2, null);
    if (le(b)) {
      return new Q(null, 2, 5, R, [null, new Q(null, 3, 5, R, [b, c, a], null)], null);
    }
    var f = t.a(EH, x(b));
    return m(f) ? ze(a, f) ? pG([q('Flag "'), q(x(b)), q('" appears more than once in a directive')].join(""), c) : new Q(null, 2, 5, R, [!0, new Q(null, 3, 5, R, [b.substring(1), c + 1, I.c(a, f, new Q(null, 2, 5, R, [!0, c], null))], null)], null) : new Q(null, 2, 5, R, [null, new Q(null, 3, 5, R, [b, c, a], null)], null);
  }, new Q(null, 3, 5, R, [b, a, S], null));
}
function GH(b, a) {
  var c = Wu.b(b);
  m(function() {
    var b = rb(ks.b(c));
    return b ? ks.b(a) : b;
  }()) && pG([q('"@" is an illegal flag for format directive "'), q(bv.b(b)), q('"')].join(""), Nd(ks.b(a), 1));
  m(function() {
    var b = rb(Jp.b(c));
    return b ? Jp.b(a) : b;
  }()) && pG([q('":" is an illegal flag for format directive "'), q(bv.b(b)), q('"')].join(""), Nd(Jp.b(a), 1));
  m(function() {
    var b = rb(zt.b(c));
    return b ? (b = ks.b(a), m(b) ? Jp.b(a) : b) : b;
  }()) && pG([q('Cannot combine "@" and ":" flags for format directive "'), q(bv.b(b)), q('"')].join(""), function() {
    var b = Nd(Jp.b(a), 1), c = Nd(ks.b(a), 1);
    return b < c ? b : c;
  }());
}
function HH(b, a, c, d) {
  GH(b, c);
  B(a) > B(co.b(b)) && pG(jG(null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', C([bv.b(b), B(a), B(co.b(b))], 0)), $d(x(a)));
  zi(Tf.c(function(a, c) {
    var d = x(a);
    return null == d || ze(BH, d) || v.a($d($d(c)), tb(d)) ? null : pG([q("Parameter "), q(ef(x(c))), q(' has bad type in directive "'), q(bv.b(b)), q('": '), q(tb(d))].join(""), $d(a));
  }, a, co.b(b)));
  return ki.j(C([gg.a(S, Ze(function() {
    return function f(a) {
      return new ff(null, function() {
        for (;;) {
          var b = w(a);
          if (b) {
            if (se(b)) {
              var c = Tc(b), g = B(c), y = kf(g);
              a: {
                for (var D = 0;;) {
                  if (D < g) {
                    var G = Kb.a(c, D), H = F(G, 0, null), G = F(G, 1, null), G = F(G, 0, null);
                    nf(y, new Q(null, 2, 5, R, [H, new Q(null, 2, 5, R, [G, d], null)], null));
                    D += 1;
                  } else {
                    c = !0;
                    break a;
                  }
                }
              }
              return c ? mf(y.ta(), f(Uc(b))) : mf(y.ta(), null);
            }
            c = x(b);
            y = F(c, 0, null);
            c = F(c, 1, null);
            c = F(c, 0, null);
            return Ud(new Q(null, 2, 5, R, [y, new Q(null, 2, 5, R, [c, d], null)], null), f(sd(b)));
          }
          return null;
        }
      }, null, null);
    }(co.b(b));
  }())), Cb.c(function(a, b) {
    return tf(I, a, b);
  }, S, cg(function(a) {
    return x(Nd(a, 1));
  }, ti(eh(co.b(b)), a))), c], 0));
}
function IH(b, a) {
  return new vG(function(a, d) {
    XE.j(C([b], 0));
    return d;
  }, null, new l(null, 1, [Xo, b], null), a, null, null, null);
}
function JH(b, a) {
  var c, d = ru.b(Mt.b(b));
  c = em.b(b);
  c = KH.c ? KH.c(d, c, a) : KH.call(null, d, c, a);
  d = F(c, 0, null);
  c = F(c, 1, null);
  return new Q(null, 2, 5, R, [new vG(Km.b(b), Mt.b(b), ki.j(C([co.b(b), dF(d, em.b(b))], 0)), em.b(b), null, null, null), c], null);
}
function LH(b, a, c) {
  return bF(function(c) {
    if (le(c)) {
      return pG("No closing bracket found.", a);
    }
    var d = x(c);
    c = z(c);
    if (m(gt.b(ru.b(Mt.b(d))))) {
      d = JH(d, c);
    } else {
      if (v.a(gt.b(b), bv.b(Mt.b(d)))) {
        d = new Q(null, 2, 5, R, [null, new Q(null, 4, 5, R, [dq, co.b(d), null, c], null)], null);
      } else {
        var f;
        f = Vu.b(ru.b(Mt.b(d)));
        f = m(f) ? Jp.b(co.b(d)) : f;
        d = m(f) ? new Q(null, 2, 5, R, [null, new Q(null, 4, 5, R, [Ol, null, co.b(d), c], null)], null) : m(Vu.b(ru.b(Mt.b(d)))) ? new Q(null, 2, 5, R, [null, new Q(null, 4, 5, R, [Vu, null, null, c], null)], null) : new Q(null, 2, 5, R, [d, c], null);
      }
    }
    return d;
  }, c);
}
function KH(b, a, c) {
  return $d(bF(function(c) {
    var d = F(c, 0, null), f = F(c, 1, null);
    c = F(c, 2, null);
    var g = LH(b, a, c);
    c = F(g, 0, null);
    var n = F(g, 1, null), g = F(n, 0, null), r = F(n, 1, null), u = F(n, 2, null), n = F(n, 3, null);
    return v.a(g, dq) ? new Q(null, 2, 5, R, [null, new Q(null, 2, 5, R, [li.j(N, C([d, jh([m(f) ? Ol : Tt, new Q(null, 1, 5, R, [c], null), rr, r])], 0)), n], null)], null) : v.a(g, Ol) ? m(Ol.b(d)) ? pG('Two else clauses ("~:;") inside bracket construction.', a) : rb(Ol.b(b)) ? pG('An else clause ("~:;") is in a bracket type that doesn\'t support it.', a) : v.a(lu, Ol.b(b)) && w(Tt.b(d)) ? pG('The else clause ("~:;") is only allowed in the first position for this directive.', a) : v.a(lu, Ol.b(b)) ? 
    new Q(null, 2, 5, R, [!0, new Q(null, 3, 5, R, [li.j(N, C([d, new l(null, 2, [Ol, new Q(null, 1, 5, R, [c], null), sk, u], null)], 0)), !1, n], null)], null) : new Q(null, 2, 5, R, [!0, new Q(null, 3, 5, R, [li.j(N, C([d, new l(null, 1, [Tt, new Q(null, 1, 5, R, [c], null)], null)], 0)), !0, n], null)], null) : v.a(g, Vu) ? m(f) ? pG('A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', a) : rb(Dk.b(b)) ? pG('A separator ("~;") is in a bracket type that doesn\'t support it.', 
    a) : new Q(null, 2, 5, R, [!0, new Q(null, 3, 5, R, [li.j(N, C([d, new l(null, 1, [Tt, new Q(null, 1, 5, R, [c], null)], null)], 0)), !1, n], null)], null) : null;
  }, new Q(null, 3, 5, R, [new l(null, 1, [Tt, E], null), !1, c], null)));
}
function MH(b) {
  return x(bF(function(a) {
    var b = x(a);
    a = z(a);
    var d = ru.b(Mt.b(b));
    return m(gt.b(d)) ? JH(b, a) : new Q(null, 2, 5, R, [b, a], null);
  }, b));
}
function kG(b) {
  var a = oG;
  oG = b;
  try {
    return MH(x(bF(function() {
      return function(a) {
        var b = F(a, 0, null);
        a = F(a, 1, null);
        if (le(b)) {
          return new Q(null, 2, 5, R, [null, b], null);
        }
        var c = b.indexOf("~");
        if (0 > c) {
          b = new Q(null, 2, 5, R, [IH(b, a), new Q(null, 2, 5, R, ["", a + b.length], null)], null);
        } else {
          if (0 === c) {
            a = bF(CH, new Q(null, 3, 5, R, [b.substring(1), a + 1, !1], null));
            b = F(a, 0, null);
            c = F(a, 1, null);
            a = F(c, 0, null);
            c = F(c, 1, null);
            a = FH(a, c);
            F(a, 0, null);
            a = F(a, 1, null);
            var c = F(a, 0, null), f = F(a, 1, null), g = F(a, 2, null);
            a = x(c);
            var n = t.a(zH, a.toUpperCase()), g = m(n) ? HH(n, Tf.a(DH, b), g, f) : null;
            rb(a) && pG("Format string ended in the middle of a directive", f);
            rb(n) && pG([q('Directive "'), q(a), q('" is undefined')].join(""), f);
            b = R;
            a = new vG(Qm.b(n).call(null, g, f), n, g, f, null, null, null);
            c = c.substring(1);
            f += 1;
            if (v.a("\n", bv.b(n)) && rb(Jp.b(g))) {
              a: {
                for (n = new Q(null, 2, 5, R, [" ", "\t"], null), n = me(n) ? qi(n) : pi([n]), g = 0;;) {
                  var r;
                  (r = v.a(g, B(c))) || (r = Nd(c, g), r = n.b ? n.b(r) : n.call(null, r), r = rb(r));
                  if (r) {
                    n = g;
                    break a;
                  }
                  g += 1;
                }
              }
            } else {
              n = 0;
            }
            b = new Q(null, 2, 5, b, [a, new Q(null, 2, 5, R, [c.substring(n), f + n], null)], null);
          } else {
            b = new Q(null, 2, 5, R, [IH(b.substring(0, c), a), new Q(null, 2, 5, R, [b.substring(c), c + a], null)], null);
          }
        }
        return b;
      };
    }(a), new Q(null, 2, 5, R, [b, 0], null))));
  } finally {
    oG = a;
  }
}
var NH = function NH(a) {
  for (;;) {
    if (le(a)) {
      return !1;
    }
    var c;
    c = vu.b(Wu.b(Mt.b(x(a))));
    m(c) || (c = Df(NH, x(Tt.b(co.b(x(a))))), c = m(c) ? c : Df(NH, x(Ol.b(co.b(x(a))))));
    if (m(c)) {
      return !0;
    }
    a = z(a);
  }
};
function nG(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 3:
      return mG(arguments[0], arguments[1], arguments[2]);
    case 2:
      return OH(arguments[0], arguments[1]);
    default:
      throw Error([q("Invalid arity: "), q(a.length)].join(""));;
  }
}
function mG(b, a, c) {
  var d = new Oa, e = rb(b) || !0 === b ? new bd(d) : b, f;
  f = NH(a);
  f = m(f) ? rb(bG(e)) : f;
  f = m(f) ? m(bG(e)) ? e : MF(e) : e;
  var g = ab;
  ab = f;
  try {
    try {
      OH(a, c);
    } finally {
      e !== f && Bc(f);
    }
    return rb(b) ? "" + q(d) : !0 === b ? bb.b ? bb.b("" + q(d)) : bb.call(null, "" + q(d)) : null;
  } finally {
    ab = g;
  }
}
function OH(b, a) {
  aF(function(a, b) {
    if (m(VG(b))) {
      return new Q(null, 2, 5, R, [null, b], null);
    }
    var c = xG(co.b(a), b), d = F(c, 0, null), c = F(c, 1, null), g = cF(d), d = F(g, 0, null), g = F(g, 1, null), d = I.c(d, tu, c);
    return new Q(null, 2, 5, R, [null, P(Km.b(a), new Q(null, 3, 5, R, [d, c, g], null))], null);
  }, a, b);
  return null;
}
var PH = function(b) {
  return function(a) {
    return function() {
      function c(a) {
        var b = null;
        if (0 < arguments.length) {
          for (var b = 0, c = Array(arguments.length - 0);b < c.length;) {
            c[b] = arguments[b + 0], ++b;
          }
          b = new rd(c, 0);
        }
        return d.call(this, b);
      }
      function d(c) {
        var d = t.c(A.b ? A.b(a) : A.call(null, a), c, ve);
        d === ve && (d = P(b, c), Rf.K(a, I, c, d));
        return d;
      }
      c.N = 0;
      c.P = function(a) {
        a = w(a);
        return d(a);
      };
      c.j = d;
      return c;
    }();
  }(U ? U(S) : Nf.call(null, S));
}(kG);
function QH(b, a, c) {
  wj(b, a, c);
}
var RH = new l(null, 6, [qu, "'", nu, "#'", ds, "@", Os, "~", am, "@", Nj, "~"], null);
function SH(b) {
  var a;
  a = x(b);
  a = RH.b ? RH.b(a) : RH.call(null, a);
  return m(m(a) ? v.a(2, B(b)) : a) ? (Ac(ab, a), cG($d(b)), !0) : null;
}
function TH(b) {
  if (m(gG())) {
    Ac(ab, "#");
  } else {
    var a = $F, c = aG;
    $F += 1;
    aG = 0;
    try {
      PF("[", "]");
      for (var d = 0, e = w(b);;) {
        if (rb(gb) || d < gb) {
          if (e && (cG(x(e)), z(e))) {
            Ac(ab, " ");
            hG(eu);
            b = d + 1;
            var f = z(e), d = b, e = f;
            continue;
          }
        } else {
          Ac(ab, "...");
        }
        break;
      }
      QF();
    } finally {
      aG = c, $F = a;
    }
  }
  return null;
}
PH.b ? PH.b("~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e") : PH.call(null, "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e");
function UH(b) {
  if (m(gG())) {
    Ac(ab, "#");
  } else {
    var a = $F, c = aG;
    $F += 1;
    aG = 0;
    try {
      PF("{", "}");
      for (var d = 0, e = w(b);;) {
        if (rb(gb) || d < gb) {
          if (e) {
            if (m(gG())) {
              Ac(ab, "#");
            } else {
              b = $F;
              var f = aG;
              $F += 1;
              aG = 0;
              try {
                PF(null, null), cG(x(x(e))), Ac(ab, " "), hG(eu), aG = 0, cG(ae(x(e))), QF();
              } finally {
                aG = f, $F = b;
              }
            }
            if (z(e)) {
              Ac(ab, ", ");
              hG(eu);
              b = d + 1;
              var g = z(e), d = b, e = g;
              continue;
            }
          }
        } else {
          Ac(ab, "...");
        }
        break;
      }
      QF();
    } finally {
      aG = c, $F = a;
    }
  }
  return null;
}
function VH(b) {
  return Ac(ab, Ti.j(C([b], 0)));
}
var WH = function(b, a) {
  return function() {
    function b(a) {
      var b = null;
      if (0 < arguments.length) {
        for (var b = 0, c = Array(arguments.length - 0);b < c.length;) {
          c[b] = arguments[b + 0], ++b;
        }
        b = new rd(c, 0);
      }
      return d.call(this, b);
    }
    function d(b) {
      b = lG(b);
      return OH(a, b);
    }
    b.N = 0;
    b.P = function(a) {
      a = w(a);
      return d(a);
    };
    b.j = d;
    return b;
  }();
}("~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e", PH.b ? PH.b("~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e") : PH.call(null, "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e")), XH = new l(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
function YH(b) {
  var a;
  a = Bi(/^[^$]+\$[^$]+/, b);
  a = m(a) ? XH.b ? XH.b(a) : XH.call(null, a) : null;
  return m(a) ? a : b;
}
var ZH = function(b, a) {
  return function() {
    function b(a) {
      var b = null;
      if (0 < arguments.length) {
        for (var b = 0, c = Array(arguments.length - 0);b < c.length;) {
          c[b] = arguments[b + 0], ++b;
        }
        b = new rd(c, 0);
      }
      return d.call(this, b);
    }
    function d(b) {
      b = lG(b);
      return OH(a, b);
    }
    b.N = 0;
    b.P = function(a) {
      a = w(a);
      return d(a);
    };
    b.j = d;
    return b;
  }();
}("~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e", PH.b ? PH.b("~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e") : PH.call(null, "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e"));
function $H(b) {
  return b instanceof Ug ? nm : (null != b ? b.l & 32768 || k === b.hg || (b.l ? 0 : p(gc, b)) : p(gc, b)) ? ms : b instanceof nd ? Om : we(b) ? nr : pe(b) ? Av : re(b) ? Yo : ne(b) ? su : null == b ? null : Cm;
}
if ("undefined" === typeof aI) {
  var aI, bI = U ? U(S) : Nf.call(null, S), cI = U ? U(S) : Nf.call(null, S), dI = U ? U(S) : Nf.call(null, S), eI = U ? U(S) : Nf.call(null, S), fI = t.c(S, Ou, mj());
  aI = new yj(od.a("cljs.pprint", "simple-dispatch"), $H, Cm, fI, bI, cI, dI, eI);
}
QH(aI, nr, function(b) {
  if (rb(SH(b))) {
    if (m(gG())) {
      Ac(ab, "#");
    } else {
      var a = $F, c = aG;
      $F += 1;
      aG = 0;
      try {
        PF("(", ")");
        for (var d = 0, e = w(b);;) {
          if (rb(gb) || d < gb) {
            if (e && (cG(x(e)), z(e))) {
              Ac(ab, " ");
              hG(eu);
              b = d + 1;
              var f = z(e), d = b, e = f;
              continue;
            }
          } else {
            Ac(ab, "...");
          }
          break;
        }
        QF();
      } finally {
        aG = c, $F = a;
      }
    }
  }
  return null;
});
wj(aI, Yo, TH);
wj(aI, Av, UH);
wj(aI, su, WH);
QH(aI, null, function() {
  return Ac(ab, Ti.j(C([null], 0)));
});
wj(aI, Cm, VH);
UF = aI;
function gI(b) {
  return re(b) ? new Q(null, 2, 5, R, ["[", "]"], null) : new Q(null, 2, 5, R, ["(", ")"], null);
}
function hI(b) {
  if (oe(b)) {
    var a = gI(b), c = F(a, 0, null), d = F(a, 1, null), e = w(b), f = x(e), g = z(e);
    if (m(gG())) {
      Ac(ab, "#");
    } else {
      var n = $F, r = aG;
      $F += 1;
      aG = 0;
      try {
        PF(c, d);
        (function() {
          return function(a, b) {
            return function() {
              function a(a) {
                var b = null;
                if (0 < arguments.length) {
                  for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
                    d[b] = arguments[b + 0], ++b;
                  }
                  b = new rd(d, 0);
                }
                return c.call(this, b);
              }
              function c(a) {
                a = lG(a);
                return OH(b, a);
              }
              a.N = 0;
              a.P = function(a) {
                a = w(a);
                return c(a);
              };
              a.j = c;
              return a;
            }();
          }("~w~:i", PH.b ? PH.b("~w~:i") : PH.call(null, "~w~:i"), n, r, a, c, d, b, e, f, g, f, g);
        })().call(null, f);
        for (var u = g;;) {
          if (w(u)) {
            (function() {
              var y = PH.b ? PH.b(" ") : PH.call(null, " ");
              return function(a, b, c) {
                return function() {
                  function a(a) {
                    var c = null;
                    if (0 < arguments.length) {
                      for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                        d[c] = arguments[c + 0], ++c;
                      }
                      c = new rd(d, 0);
                    }
                    return b.call(this, c);
                  }
                  function b(a) {
                    a = lG(a);
                    return OH(c, a);
                  }
                  a.N = 0;
                  a.P = function(a) {
                    a = w(a);
                    return b(a);
                  };
                  a.j = b;
                  return a;
                }();
              }(u, " ", y, n, r, a, c, d, b, e, f, g, f, g);
            })().call(null);
            var y = x(u);
            if (oe(y)) {
              var D = gI(y), G = F(D, 0, null), H = F(D, 1, null);
              if (m(gG())) {
                Ac(ab, "#");
              } else {
                var M = $F, O = aG;
                $F += 1;
                aG = 0;
                try {
                  PF(G, H);
                  if (v.a(B(y), 3) && $d(y) instanceof K) {
                    var T = y, qa = F(T, 0, null), la = F(T, 1, null), ya = F(T, 2, null);
                    (function() {
                      var ib = PH.b ? PH.b("~w ~w ") : PH.call(null, "~w ~w ");
                      return function(a, b, c) {
                        return function() {
                          function a(a) {
                            var c = null;
                            if (0 < arguments.length) {
                              for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                                d[c] = arguments[c + 0], ++c;
                              }
                              c = new rd(d, 0);
                            }
                            return b.call(this, c);
                          }
                          function b(a) {
                            a = lG(a);
                            return OH(c, a);
                          }
                          a.N = 0;
                          a.P = function(a) {
                            a = w(a);
                            return b(a);
                          };
                          a.j = b;
                          return a;
                        }();
                      }(u, "~w ~w ", ib, T, qa, la, ya, M, O, D, G, H, y, n, r, a, c, d, b, e, f, g, f, g);
                    })().call(null, qa, la);
                    oe(ya) ? function() {
                      var ib = re(ya) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e", Sc = "string" === typeof ib ? PH.b ? PH.b(ib) : PH.call(null, ib) : ib;
                      return function(a, b, c) {
                        return function() {
                          function a(a) {
                            var c = null;
                            if (0 < arguments.length) {
                              for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                                d[c] = arguments[c + 0], ++c;
                              }
                              c = new rd(d, 0);
                            }
                            return b.call(this, c);
                          }
                          function b(a) {
                            a = lG(a);
                            return OH(c, a);
                          }
                          a.N = 0;
                          a.P = function(a) {
                            a = w(a);
                            return b(a);
                          };
                          a.j = b;
                          return a;
                        }();
                      }(u, ib, Sc, T, qa, la, ya, M, O, D, G, H, y, n, r, a, c, d, b, e, f, g, f, g);
                    }().call(null, ya) : cG(ya);
                  } else {
                    P(function() {
                      var T = PH.b ? PH.b("~w ~:i~@{~w~^ ~:_~}") : PH.call(null, "~w ~:i~@{~w~^ ~:_~}");
                      return function(a, b, c) {
                        return function() {
                          function a(a) {
                            var c = null;
                            if (0 < arguments.length) {
                              for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                                d[c] = arguments[c + 0], ++c;
                              }
                              c = new rd(d, 0);
                            }
                            return b.call(this, c);
                          }
                          function b(a) {
                            a = lG(a);
                            return OH(c, a);
                          }
                          a.N = 0;
                          a.P = function(a) {
                            a = w(a);
                            return b(a);
                          };
                          a.j = b;
                          return a;
                        }();
                      }(u, "~w ~:i~@{~w~^ ~:_~}", T, M, O, D, G, H, y, n, r, a, c, d, b, e, f, g, f, g);
                    }(), y);
                  }
                  QF();
                } finally {
                  aG = O, $F = M;
                }
              }
              z(u) && function() {
                var M = PH.b ? PH.b("~_") : PH.call(null, "~_");
                return function(a, b, c) {
                  return function() {
                    function a(a) {
                      var c = null;
                      if (0 < arguments.length) {
                        for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                          d[c] = arguments[c + 0], ++c;
                        }
                        c = new rd(d, 0);
                      }
                      return b.call(this, c);
                    }
                    function b(a) {
                      a = lG(a);
                      return OH(c, a);
                    }
                    a.N = 0;
                    a.P = function(a) {
                      a = w(a);
                      return b(a);
                    };
                    a.j = b;
                    return a;
                  }();
                }(u, "~_", M, D, G, H, y, n, r, a, c, d, b, e, f, g, f, g);
              }().call(null);
            } else {
              cG(y), z(u) && function() {
                var D = PH.b ? PH.b("~:_") : PH.call(null, "~:_");
                return function(a, b, c) {
                  return function() {
                    function a(a) {
                      var c = null;
                      if (0 < arguments.length) {
                        for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                          d[c] = arguments[c + 0], ++c;
                        }
                        c = new rd(d, 0);
                      }
                      return b.call(this, c);
                    }
                    function b(a) {
                      a = lG(a);
                      return OH(c, a);
                    }
                    a.N = 0;
                    a.P = function(a) {
                      a = w(a);
                      return b(a);
                    };
                    a.j = b;
                    return a;
                  }();
                }(u, "~:_", D, y, n, r, a, c, d, b, e, f, g, f, g);
              }().call(null);
            }
            u = z(u);
          } else {
            break;
          }
        }
        QF();
      } finally {
        aG = r, $F = n;
      }
    }
  } else {
    cG(b);
  }
}
var iI = function(b, a) {
  return function() {
    function b(a) {
      var b = null;
      if (0 < arguments.length) {
        for (var b = 0, c = Array(arguments.length - 0);b < c.length;) {
          c[b] = arguments[b + 0], ++b;
        }
        b = new rd(c, 0);
      }
      return d.call(this, b);
    }
    function d(b) {
      b = lG(b);
      return OH(a, b);
    }
    b.N = 0;
    b.P = function(a) {
      a = w(a);
      return d(a);
    };
    b.j = d;
    return b;
  }();
}("~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e", PH.b ? PH.b("~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e") : PH.call(null, "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e"));
function jI(b, a) {
  w(b) && (m(a) ? function() {
    return function(a, b) {
      return function() {
        function a(a) {
          var b = null;
          if (0 < arguments.length) {
            for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
              d[b] = arguments[b + 0], ++b;
            }
            b = new rd(d, 0);
          }
          return c.call(this, b);
        }
        function c(a) {
          a = lG(a);
          return OH(b, a);
        }
        a.N = 0;
        a.P = function(a) {
          a = w(a);
          return c(a);
        };
        a.j = c;
        return a;
      }();
    }(" ~_", PH.b ? PH.b(" ~_") : PH.call(null, " ~_"));
  }().call(null) : function() {
    return function(a, b) {
      return function() {
        function a(a) {
          var b = null;
          if (0 < arguments.length) {
            for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
              d[b] = arguments[b + 0], ++b;
            }
            b = new rd(d, 0);
          }
          return c.call(this, b);
        }
        function c(a) {
          a = lG(a);
          return OH(b, a);
        }
        a.N = 0;
        a.P = function(a) {
          a = w(a);
          return c(a);
        };
        a.j = c;
        return a;
      }();
    }(" ~@_", PH.b ? PH.b(" ~@_") : PH.call(null, " ~@_"));
  }().call(null), function() {
    return function(a, b) {
      return function() {
        function a(a) {
          var b = null;
          if (0 < arguments.length) {
            for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
              d[b] = arguments[b + 0], ++b;
            }
            b = new rd(d, 0);
          }
          return c.call(this, b);
        }
        function c(a) {
          a = lG(a);
          return OH(b, a);
        }
        a.N = 0;
        a.P = function(a) {
          a = w(a);
          return c(a);
        };
        a.j = c;
        return a;
      }();
    }("~{~w~^ ~_~}", PH.b ? PH.b("~{~w~^ ~_~}") : PH.call(null, "~{~w~^ ~_~}"));
  }().call(null, b));
}
function kI(b) {
  w(b) && function() {
    return function(a, b) {
      return function() {
        function a(a) {
          var b = null;
          if (0 < arguments.length) {
            for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
              d[b] = arguments[b + 0], ++b;
            }
            b = new rd(d, 0);
          }
          return c.call(this, b);
        }
        function c(a) {
          a = lG(a);
          return OH(b, a);
        }
        a.N = 0;
        a.P = function(a) {
          a = w(a);
          return c(a);
        };
        a.j = c;
        return a;
      }();
    }(" ~_~{~w~^ ~_~}", PH.b ? PH.b(" ~_~{~w~^ ~_~}") : PH.call(null, " ~_~{~w~^ ~_~}"));
  }().call(null, b);
}
function lI(b) {
  if (z(b)) {
    var a = w(b), c = x(a), d = z(a), e = x(d), f = z(d), g = "string" === typeof x(f) ? new Q(null, 2, 5, R, [x(f), z(f)], null) : new Q(null, 2, 5, R, [null, f], null), n = F(g, 0, null), r = F(g, 1, null), u = pe(x(r)) ? new Q(null, 2, 5, R, [x(r), z(r)], null) : new Q(null, 2, 5, R, [null, r], null), y = F(u, 0, null), D = F(u, 1, null);
    if (m(gG())) {
      Ac(ab, "#");
    } else {
      var G = $F, H = aG;
      $F += 1;
      aG = 0;
      try {
        PF("(", ")"), function() {
          return function(a, b) {
            return function() {
              function a(a) {
                var b = null;
                if (0 < arguments.length) {
                  for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
                    d[b] = arguments[b + 0], ++b;
                  }
                  b = new rd(d, 0);
                }
                return c.call(this, b);
              }
              function c(a) {
                a = lG(a);
                return OH(b, a);
              }
              a.N = 0;
              a.P = function(a) {
                a = w(a);
                return c(a);
              };
              a.j = c;
              return a;
            }();
          }("~w ~1I~@_~w", PH.b ? PH.b("~w ~1I~@_~w") : PH.call(null, "~w ~1I~@_~w"), G, H, b, a, c, d, c, e, f, e, f, g, n, r, u, y, D);
        }().call(null, c, e), m(n) && function() {
          return function(a, b) {
            return function() {
              function a(a) {
                var b = null;
                if (0 < arguments.length) {
                  for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
                    d[b] = arguments[b + 0], ++b;
                  }
                  b = new rd(d, 0);
                }
                return c.call(this, b);
              }
              function c(a) {
                a = lG(a);
                return OH(b, a);
              }
              a.N = 0;
              a.P = function(a) {
                a = w(a);
                return c(a);
              };
              a.j = c;
              return a;
            }();
          }(" ~_~w", PH.b ? PH.b(" ~_~w") : PH.call(null, " ~_~w"), G, H, b, a, c, d, c, e, f, e, f, g, n, r, u, y, D);
        }().call(null, n), m(y) && function() {
          return function(a, b) {
            return function() {
              function a(a) {
                var b = null;
                if (0 < arguments.length) {
                  for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
                    d[b] = arguments[b + 0], ++b;
                  }
                  b = new rd(d, 0);
                }
                return c.call(this, b);
              }
              function c(a) {
                a = lG(a);
                return OH(b, a);
              }
              a.N = 0;
              a.P = function(a) {
                a = w(a);
                return c(a);
              };
              a.j = c;
              return a;
            }();
          }(" ~_~w", PH.b ? PH.b(" ~_~w") : PH.call(null, " ~_~w"), G, H, b, a, c, d, c, e, f, e, f, g, n, r, u, y, D);
        }().call(null, y), re(x(D)) ? jI(D, m(n) ? n : y) : kI(D), QF();
      } finally {
        aG = H, $F = G;
      }
    }
    return null;
  }
  return mI.b ? mI.b(b) : mI.call(null, b);
}
function nI(b) {
  if (m(gG())) {
    Ac(ab, "#");
  } else {
    var a = $F, c = aG;
    $F += 1;
    aG = 0;
    try {
      PF("[", "]");
      for (var d = 0;;) {
        if (rb(gb) || d < gb) {
          if (w(b)) {
            if (m(gG())) {
              Ac(ab, "#");
            } else {
              var e = $F, f = aG;
              $F += 1;
              aG = 0;
              try {
                PF(null, null), cG(x(b)), z(b) && (Ac(ab, " "), hG(Pl), cG($d(b))), QF();
              } finally {
                aG = f, $F = e;
              }
            }
            if (z(sd(b))) {
              Ac(ab, " ");
              hG(eu);
              var e = d + 1, g = z(sd(b)), d = e;
              b = g;
              continue;
            }
          }
        } else {
          Ac(ab, "...");
        }
        break;
      }
      QF();
    } finally {
      aG = c, $F = a;
    }
  }
}
function oI(b) {
  var a = x(b);
  if (m(gG())) {
    Ac(ab, "#");
  } else {
    var c = $F, d = aG;
    $F += 1;
    aG = 0;
    try {
      PF("(", ")"), z(b) && re($d(b)) ? (function() {
        return function(a, b) {
          return function() {
            function a(a) {
              var b = null;
              if (0 < arguments.length) {
                for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
                  d[b] = arguments[b + 0], ++b;
                }
                b = new rd(d, 0);
              }
              return c.call(this, b);
            }
            function c(a) {
              a = lG(a);
              return OH(b, a);
            }
            a.N = 0;
            a.P = function(a) {
              a = w(a);
              return c(a);
            };
            a.j = c;
            return a;
          }();
        }("~w ~1I~@_", PH.b ? PH.b("~w ~1I~@_") : PH.call(null, "~w ~1I~@_"), c, d, a);
      }().call(null, a), nI($d(b)), function() {
        return function(a, b) {
          return function() {
            function a(a) {
              var b = null;
              if (0 < arguments.length) {
                for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
                  d[b] = arguments[b + 0], ++b;
                }
                b = new rd(d, 0);
              }
              return c.call(this, b);
            }
            function c(a) {
              a = lG(a);
              return OH(b, a);
            }
            a.N = 0;
            a.P = function(a) {
              a = w(a);
              return c(a);
            };
            a.j = c;
            return a;
          }();
        }(" ~_~{~w~^ ~_~}", PH.b ? PH.b(" ~_~{~w~^ ~_~}") : PH.call(null, " ~_~{~w~^ ~_~}"), c, d, a);
      }().call(null, z(sd(b)))) : mI.b ? mI.b(b) : mI.call(null, b), QF();
    } finally {
      aG = d, $F = c;
    }
  }
  return null;
}
var pI = function(b, a) {
  return function() {
    function b(a) {
      var b = null;
      if (0 < arguments.length) {
        for (var b = 0, c = Array(arguments.length - 0);b < c.length;) {
          c[b] = arguments[b + 0], ++b;
        }
        b = new rd(c, 0);
      }
      return d.call(this, b);
    }
    function d(b) {
      b = lG(b);
      return OH(a, b);
    }
    b.N = 0;
    b.P = function(a) {
      a = w(a);
      return d(a);
    };
    b.j = d;
    return b;
  }();
}("~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e", PH.b ? PH.b("~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e") : PH.call(null, "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e")), qI = S;
function mI(b) {
  if (m(gG())) {
    Ac(ab, "#");
  } else {
    var a = $F, c = aG;
    $F += 1;
    aG = 0;
    try {
      PF("(", ")");
      iG(zk, 1);
      for (var d = 0, e = w(b);;) {
        if (rb(gb) || d < gb) {
          if (e && (cG(x(e)), z(e))) {
            Ac(ab, " ");
            hG(eu);
            b = d + 1;
            var f = z(e), d = b, e = f;
            continue;
          }
        } else {
          Ac(ab, "...");
        }
        break;
      }
      QF();
    } finally {
      aG = c, $F = a;
    }
  }
  return null;
}
var rI = function(b) {
  return gg.a(S, ag(Ge, C([function() {
    return function c(b) {
      return new ff(null, function() {
        for (;;) {
          var d = w(b);
          if (d) {
            if (se(d)) {
              var f = Tc(d), g = B(f), n = kf(g);
              a: {
                for (var r = 0;;) {
                  if (r < g) {
                    var u = Kb.a(f, r);
                    nf(n, new Q(null, 2, 5, R, [u, new Q(null, 2, 5, R, [od.b(ef(x(u))), $d(u)], null)], null));
                    r += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? mf(n.ta(), c(Uc(d))) : mf(n.ta(), null);
            }
            n = x(d);
            return Ud(new Q(null, 2, 5, R, [n, new Q(null, 2, 5, R, [od.b(ef(x(n))), $d(n)], null)], null), c(sd(d)));
          }
          return null;
        }
      }, null, null);
    }(b);
  }()], 0)));
}(function(b) {
  return gg.a(S, Tf.a(function(a) {
    return function(b) {
      var c = F(b, 0, null), e = F(b, 1, null), f;
      f = cf(c);
      f = m(f) ? f : ze(new V(null, new l(null, 23, [Jj, null, ek, null, kk, null, cm, null, vm, null, Lm, null, Eo, null, bp, null, fp, null, qp, null, up, null, Kq, null, Lq, null, Wq, null, or, null, xr, null, St, null, ju, null, nu, null, qu, null, Qu, null, Kv, null, iw, null], null), null), c);
      return rb(f) ? new Q(null, 2, 5, R, [od.a(a, ef(c)), e], null) : b;
    };
  }("clojure.core"), b));
}(fe([ju, or, Oj, fp, bt, gl, Nt, ap, Gs, Vk, im, $l, Go, iw, Ko, mr, Lt, sr, Im, up, $q, st, Fn, go, Ir, iu, Hn, Gu, Dt, Mq], [iI, function(b) {
  var a = $d(b), c = x(sd(sd(b)));
  if (re(a)) {
    var d = qI;
    qI = v.a(1, B(a)) ? jh([x(a), "%"]) : gg.a(S, Tf.c(function() {
      return function(a, b) {
        return new Q(null, 2, 5, R, [a, [q("%"), q(b)].join("")], null);
      };
    }(d, a, c), a, yi(1, B(a) + 1)));
    try {
      return function() {
        return function(a, b) {
          return function() {
            function a(a) {
              var b = null;
              if (0 < arguments.length) {
                for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
                  d[b] = arguments[b + 0], ++b;
                }
                b = new rd(d, 0);
              }
              return c.call(this, b);
            }
            function c(a) {
              a = lG(a);
              return OH(b, a);
            }
            a.N = 0;
            a.P = function(a) {
              a = w(a);
              return c(a);
            };
            a.j = c;
            return a;
          }();
        }("~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e", PH.b ? PH.b("~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e") : PH.call(null, "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e"), d, a, c);
      }().call(null, c);
    } finally {
      qI = d;
    }
  } else {
    return mI.b ? mI.b(b) : mI.call(null, b);
  }
}, oI, pI, function(b) {
  if (3 < B(b)) {
    if (m(gG())) {
      Ac(ab, "#");
    } else {
      var a = $F, c = aG;
      $F += 1;
      aG = 0;
      try {
        PF("(", ")");
        iG(zk, 1);
        P(function() {
          return function(a, b) {
            return function() {
              function a(a) {
                var b = null;
                if (0 < arguments.length) {
                  for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
                    d[b] = arguments[b + 0], ++b;
                  }
                  b = new rd(d, 0);
                }
                return c.call(this, b);
              }
              function c(a) {
                a = lG(a);
                return OH(b, a);
              }
              a.N = 0;
              a.P = function(a) {
                a = w(a);
                return c(a);
              };
              a.j = c;
              return a;
            }();
          }("~w ~@_~w ~@_~w ~_", PH.b ? PH.b("~w ~@_~w ~@_~w ~_") : PH.call(null, "~w ~@_~w ~@_~w ~_"), a, c);
        }(), b);
        for (var d = 0, e = w(Vf(3, b));;) {
          if (rb(gb) || d < gb) {
            if (e) {
              if (m(gG())) {
                Ac(ab, "#");
              } else {
                b = $F;
                var f = aG;
                $F += 1;
                aG = 0;
                try {
                  PF(null, null), cG(x(e)), z(e) && (Ac(ab, " "), hG(Pl), cG($d(e))), QF();
                } finally {
                  aG = f, $F = b;
                }
              }
              if (z(sd(e))) {
                Ac(ab, " ");
                hG(eu);
                b = d + 1;
                var g = z(sd(e)), d = b, e = g;
                continue;
              }
            }
          } else {
            Ac(ab, "...");
          }
          break;
        }
        QF();
      } finally {
        aG = c, $F = a;
      }
    }
    return null;
  }
  return mI.b ? mI.b(b) : mI.call(null, b);
}, iI, lI, lI, oI, iI, oI, pI, pI, iI, pI, oI, oI, iI, oI, function(b) {
  if (z(b)) {
    var a = w(b), c = x(a), d = z(a), e = x(d), f = z(d), g = "string" === typeof x(f) ? new Q(null, 2, 5, R, [x(f), z(f)], null) : new Q(null, 2, 5, R, [null, f], null), n = F(g, 0, null), r = F(g, 1, null), u = pe(x(r)) ? new Q(null, 2, 5, R, [x(r), z(r)], null) : new Q(null, 2, 5, R, [null, r], null), y = F(u, 0, null), D = F(u, 1, null);
    if (m(gG())) {
      Ac(ab, "#");
    } else {
      var G = $F, H = aG;
      $F += 1;
      aG = 0;
      try {
        PF("(", ")");
        (function() {
          return function(a, b) {
            return function() {
              function a(a) {
                var b = null;
                if (0 < arguments.length) {
                  for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
                    d[b] = arguments[b + 0], ++b;
                  }
                  b = new rd(d, 0);
                }
                return c.call(this, b);
              }
              function c(a) {
                a = lG(a);
                return OH(b, a);
              }
              a.N = 0;
              a.P = function(a) {
                a = w(a);
                return c(a);
              };
              a.j = c;
              return a;
            }();
          }("~w ~1I~@_~w", PH.b ? PH.b("~w ~1I~@_~w") : PH.call(null, "~w ~1I~@_~w"), G, H, b, a, c, d, c, e, f, e, f, g, n, r, u, y, D);
        })().call(null, c, e);
        m(m(n) ? n : m(y) ? y : w(D)) && function() {
          return function(a, b) {
            return function() {
              function a(a) {
                var b = null;
                if (0 < arguments.length) {
                  for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
                    d[b] = arguments[b + 0], ++b;
                  }
                  b = new rd(d, 0);
                }
                return c.call(this, b);
              }
              function c(a) {
                a = lG(a);
                return OH(b, a);
              }
              a.N = 0;
              a.P = function(a) {
                a = w(a);
                return c(a);
              };
              a.j = c;
              return a;
            }();
          }("~@:_", PH.b ? PH.b("~@:_") : PH.call(null, "~@:_"), G, H, b, a, c, d, c, e, f, e, f, g, n, r, u, y, D);
        }().call(null);
        m(n) && jG(!0, '"~a"~:[~;~:@_~]', C([n, m(y) ? y : w(D)], 0));
        m(y) && function() {
          return function(a, b) {
            return function() {
              function a(a) {
                var b = null;
                if (0 < arguments.length) {
                  for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
                    d[b] = arguments[b + 0], ++b;
                  }
                  b = new rd(d, 0);
                }
                return c.call(this, b);
              }
              function c(a) {
                a = lG(a);
                return OH(b, a);
              }
              a.N = 0;
              a.P = function(a) {
                a = w(a);
                return c(a);
              };
              a.j = c;
              return a;
            }();
          }("~w~:[~;~:@_~]", PH.b ? PH.b("~w~:[~;~:@_~]") : PH.call(null, "~w~:[~;~:@_~]"), G, H, b, a, c, d, c, e, f, e, f, g, n, r, u, y, D);
        }().call(null, y, w(D));
        for (var M = D;;) {
          hI(x(M));
          var O = z(M);
          if (O) {
            var T = O;
            hG(eu);
            M = T;
          } else {
            break;
          }
        }
        QF();
      } finally {
        aG = H, $F = G;
      }
    }
    return null;
  }
  return cG(b);
}, oI, function(b) {
  if (m(gG())) {
    Ac(ab, "#");
  } else {
    var a = $F, c = aG;
    $F += 1;
    aG = 0;
    try {
      PF("(", ")");
      iG(zk, 1);
      cG(x(b));
      if (z(b)) {
        Ac(ab, " ");
        hG(eu);
        for (var d = 0, e = z(b);;) {
          if (rb(gb) || d < gb) {
            if (e) {
              if (m(gG())) {
                Ac(ab, "#");
              } else {
                b = $F;
                var f = aG;
                $F += 1;
                aG = 0;
                try {
                  PF(null, null), cG(x(e)), z(e) && (Ac(ab, " "), hG(Pl), cG($d(e))), QF();
                } finally {
                  aG = f, $F = b;
                }
              }
              if (z(sd(e))) {
                Ac(ab, " ");
                hG(eu);
                b = d + 1;
                var g = z(sd(e)), d = b, e = g;
                continue;
              }
            }
          } else {
            Ac(ab, "...");
          }
          break;
        }
      }
      QF();
    } finally {
      aG = c, $F = a;
    }
  }
  return null;
}, oI, lI, lI, iI, iI, oI, oI, iI])));
if ("undefined" === typeof sI) {
  var sI, tI = U ? U(S) : Nf.call(null, S), uI = U ? U(S) : Nf.call(null, S), vI = U ? U(S) : Nf.call(null, S), wI = U ? U(S) : Nf.call(null, S), xI = t.c(S, Ou, mj());
  sI = new yj(od.a("cljs.pprint", "code-dispatch"), $H, Cm, xI, tI, uI, vI, wI);
}
QH(sI, nr, function(b) {
  if (rb(SH(b))) {
    var a;
    a = x(b);
    a = rI.b ? rI.b(a) : rI.call(null, a);
    return m(a) ? a.b ? a.b(b) : a.call(null, b) : mI(b);
  }
  return null;
});
QH(sI, Om, function(b) {
  var a = b.b ? b.b(qI) : b.call(null, qI);
  return m(a) ? XE.j(C([a], 0)) : m(XF) ? XE.j(C([ef(b)], 0)) : YE.b ? YE.b(b) : YE.call(null, b);
});
wj(sI, Yo, TH);
wj(sI, Av, UH);
wj(sI, su, WH);
wj(sI, nm, ZH);
QH(sI, ms, function(b) {
  var a = [q("#\x3c"), q(YH(tb(b).name)), q("@"), q(fa(b)), q(": ")].join("");
  if (m(gG())) {
    Ac(ab, "#");
  } else {
    var c = $F, d = aG;
    $F += 1;
    aG = 0;
    try {
      PF(a, "\x3e");
      iG(zk, -(B(a) - 2));
      hG(eu);
      var e, f = null != b ? b.M & 1 || k === b.bi ? !0 : b.M ? !1 : p(Ec, b) : p(Ec, b);
      e = f ? !Fc(b) : f;
      cG(e ? $m : A.b ? A.b(b) : A.call(null, b));
      QF();
    } finally {
      aG = d, $F = c;
    }
  }
  return null;
});
wj(sI, null, YE);
wj(sI, Cm, VH);
UF = aI;
var yI = null;
function zI() {
  var b = yI;
  m(b) || (b = new l(null, 5, [Tl, new l(null, 4, [Fv, 0, Yt, 0, Jq, 0, Gt, 0], null), Bk, td, sl, td, kn, Ti, Xq, Ts], null), b = v.a(gn, Ts) ? I.j(b, Xq, Ts, C([kn, eG], 0)) : b);
  return b;
}
function AI(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  c = arguments[0];
  d = arguments[1];
  a = 2 < a.length ? new rd(a.slice(2), 0, null) : null;
  return yI = vf(mg, zI(), c, d, a);
}
function BI(b) {
  var a = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, c = t.a(a, Gn), d = t.a(a, jr), e = t.a(a, Cp);
  return [q(Ze(Tf.a(function() {
    return function(a) {
      return W.b(he(a));
    };
  }(b, a, c, d, e), Bk.b(zI())))), q(" ("), q(c), q(":"), q(d), q(m(e) ? [q(":"), q(e)].join("") : null), q(")")].join("");
}
function CI(b) {
  return m(Tl.b(zI())) ? AI(new Q(null, 2, 5, R, [Tl, b], null), Lf()) : null;
}
if ("undefined" === typeof DI) {
  var DI = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("cljs.test", "report"), function() {
      return function(a) {
        return new Q(null, 2, 5, R, [Xq.b(zI()), uo.b(a)], null);
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
DI.D(0, Cm, function() {
  return null;
});
DI.D(0, new Q(null, 2, 5, R, [Ts, Yt], null), function() {
  return CI(Yt);
});
function EI(b) {
  var a = function() {
    var a = kn.b(zI());
    return m(a) ? a : Ti;
  }();
  Xi(C(["expected:", function() {
    var c = ts.b(b);
    return a.b ? a.b(c) : a.call(null, c);
  }()], 0));
  return Xi(C(["  actual:", function() {
    var c = Pu.b(b);
    return a.b ? a.b(c) : a.call(null, c);
  }()], 0));
}
DI.D(0, new Q(null, 2, 5, R, [Ts, Jq], null), function(b) {
  CI(Jq);
  Xi(C(["\nFAIL in", BI(b)], 0));
  w(sl.b(zI())) && Xi(C([P(q, $f(" ", Ze(sl.b(zI()))))], 0));
  var a = bw.b(b);
  m(a) && Xi(C([a], 0));
  return EI(b);
});
DI.D(0, new Q(null, 2, 5, R, [Ts, Gt], null), function(b) {
  CI(Gt);
  Xi(C(["\nERROR in", BI(b)], 0));
  w(sl.b(zI())) && Xi(C([P(q, $f(" ", Ze(sl.b(zI()))))], 0));
  var a = bw.b(b);
  m(a) && Xi(C([a], 0));
  return EI(b);
});
DI.D(0, new Q(null, 2, 5, R, [Ts, $p], null), function(b) {
  Xi(C(["\nRan", Fv.b(b), "tests containing", Yt.b(b) + Jq.b(b) + Gt.b(b), "assertions."], 0));
  return Xi(C([Jq.b(b), "failures,", Gt.b(b), "errors."], 0));
});
DI.D(0, new Q(null, 2, 5, R, [Ts, nt], null), function(b) {
  return Xi(C(["\nTesting", ef(Nm.b(b))], 0));
});
DI.D(0, new Q(null, 2, 5, R, [Ts, qv], null), function() {
  return null;
});
DI.D(0, new Q(null, 2, 5, R, [Ts, cl], null), function() {
  return null;
});
DI.D(0, new Q(null, 2, 5, R, [Ts, nq], null), function() {
  return null;
});
DI.D(0, new Q(null, 2, 5, R, [Ts, pr], null), function() {
  return null;
});
DI.D(0, new Q(null, 2, 5, R, [Ts, fs], null), function() {
  return null;
});
DI.D(0, new Q(null, 2, 5, R, [Ts, uw], null), function() {
  return null;
});
var FI = new Q(null, 3, 5, R, [2, 88, 0], null);
function GI(b) {
  return "number" === typeof b && !isNaN(b) && Infinity !== b && parseFloat(b) === parseInt(b, 10);
}
function HI(b) {
  return "string" === typeof b ? v.a(b, "") ? null : b : null;
}
function II(b) {
  return "number" === typeof b ? Le(b) : "string" === typeof b ? (b = parseInt(b, 10), m(isNaN(b)) ? null : b) : null;
}
v.a("default", "nodejs");
function JI(b) {
  b = Az("" + q(b), /-/, 2);
  var a = F(b, 0, null);
  b = F(b, 1, null);
  a = Ci(/\d+/, a);
  a = m(a) ? hg(II, a) : null;
  return new l(null, 2, [Du, a, An, m(b) ? xz(b) : null], null);
}
function KI(b) {
  var a = F(FI, 0, null), c = F(FI, 1, null), d = F(FI, 2, null);
  b = re(b) ? b : Du.b(JI(b));
  var e = F(b, 0, null), f = F(b, 1, null), g = F(b, 2, null), f = hg(function() {
    return function(a) {
      return m(a) ? a : 0;
    };
  }(FI, a, c, d, b, e, f, g), new Q(null, 3, 5, R, [e, f, g], null));
  b = F(f, 0, null);
  e = F(f, 1, null);
  f = F(f, 2, null);
  if (!(a > b || v.a(a, b) && (c > e || v.a(c, e) && d >= f))) {
    throw Cj("Insufficient `com.taoensso/encore` version, you may have a dependency conflict: see http://goo.gl/qBbLvC for solutions.", new l(null, 2, [Eu, wz(".", new Q(null, 3, 5, R, [b, e, f], null)), Ju, wz(".", new Q(null, 3, 5, R, [a, c, d], null))], null));
  }
}
var LI = function LI(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return LI.a(arguments[0], arguments[1]);
    case 3:
      return LI.c(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
LI.a = function(b, a) {
  var c = 0 > a ? 0 : a, d = B(b);
  return c >= d ? E : Lg(b, c, d);
};
LI.c = function(b, a, c) {
  a = 0 > a ? 0 : a;
  var d = Le(B(b));
  c = c > d ? d : c;
  return a >= c ? E : Lg(b, a, c);
};
LI.N = 3;
var MI = function MI(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return MI.a(arguments[0], arguments[1]);
    case 3:
      return MI.c(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
MI.a = function(b, a) {
  var c = B(b);
  if (0 > a) {
    var d = a + c;
    return Lg(b, 0 > d ? 0 : d, c);
  }
  return a >= c ? E : Lg(b, a, c);
};
MI.c = function(b, a, c) {
  if (0 >= c) {
    return E;
  }
  var d = Le(B(b));
  if (0 > a) {
    return a += d, a = 0 > a ? 0 : a, c = a + c, Lg(b, a, c > d ? d : c);
  }
  c = a + c;
  d = c > d ? d : c;
  return a >= d ? E : Lg(b, a, d);
};
MI.N = 3;
function NI(b) {
  return function(a, c) {
    return function() {
      function d(a) {
        var b = null;
        if (0 < arguments.length) {
          for (var b = 0, c = Array(arguments.length - 0);b < c.length;) {
            c[b] = arguments[b + 0], ++b;
          }
          b = new rd(c, 0);
        }
        return e.call(this, b);
      }
      function e(d) {
        var e = x(d);
        if (m(L.a ? L.a(e, Wn) : L.call(null, e, Wn))) {
          return d = z(d), e = x(d), m(L.a ? L.a(e, Jk) : L.call(null, e, Jk)) ? $c(a, S) : $c(a, J.a(hc(a), d)), null;
        }
        if (m(L.a ? L.a(e, wr) : L.call(null, e, wr))) {
          return d = z(d), e = P(b, d), $c(a, I.c(hc(a), d, e)), e;
        }
        e = t.c(A.b ? A.b(a) : A.call(null, a), d, c);
        e === c && (e = P(b, d), $c(a, I.c(hc(a), d, e)));
        return e;
      }
      d.N = 0;
      d.P = function(a) {
        a = w(a);
        return e(a);
      };
      d.j = e;
      return d;
    }();
  }(new Sf(S), {});
}
function OI(b, a) {
  this.n = b;
  this.yf = a;
}
function PI(b, a) {
  this.n = b;
  this.Cf = a;
}
function QI(b, a, c) {
  this.xe = b;
  this.Fg = a;
  this.Df = c;
}
var RI = function(b) {
  return function(a) {
    if (pe(a)) {
      return Fe(function(a) {
        return function(b, c, f) {
          var d = F(f, 0, null);
          f = F(f, 1, null);
          return I.c(b, c, a(d, f));
        };
      }(b), S, a);
    }
    if (re(a)) {
      return Cb.c(function(a, b) {
        return function(c, d) {
          var e = F(d, 0, null), f = F(d, 1, null), r = F(d, 2, null);
          return I.c(c, function() {
            return m(r) ? r : $c(a, function() {
              return function(a) {
                return a + 1;
              };
            }(r, d, e, f, r, a, b).call(null, hc(a)));
          }(), b(e, f));
        };
      }(new Sf(-1), b), S, a);
    }
    throw new Bj("No matching `encore/cond!` clause", S, null);
  };
}(function(b, a) {
  (function() {
    var a;
    try {
      a = GI(b) && 0 < b ? null : zE;
    } catch (d) {
      if (d instanceof Error) {
        a = d;
      } else {
        throw d;
      }
    }
    return null == a ? !0 : AE(1868, "(pos-int? n)", b, a);
  })();
  (function() {
    var b;
    try {
      b = GI(a) && 0 < a ? null : zE;
    } catch (d) {
      if (d instanceof Error) {
        b = d;
      } else {
        throw d;
      }
    }
    return null == b ? !0 : AE(1868, "(pos-int? ms)", a, b);
  })();
  return new OI(b, a);
});
function SI(b) {
  if (le(b)) {
    return new Q(null, 2, 5, R, [null, Ff(null)], null);
  }
  var a = U ? U(null) : Nf.call(null, null), c = U ? U(null) : Nf.call(null, null);
  b = RI(b);
  return new Q(null, 2, 5, R, [c, function(a, b, c, g) {
    return function() {
      function a(a, c) {
        if (m(L.a ? L.a(a, dl) : L.call(null, a, dl))) {
          return m(L.a ? L.a(c, wm) : L.call(null, c, wm)) ? Qf.a ? Qf.a(b, null) : Qf.call(null, b, null) : Rf.c(b, J, c), null;
        }
        if (m(L.a ? L.a(a, Al) : L.call(null, a, Al))) {
          return g(c, !0);
        }
        throw Cj("Unrecognized rate limiter command", new l(null, 2, [uk, a, qn, c], null));
      }
      function c(a) {
        return g(a, !1);
      }
      function d() {
        return g(null, !1);
      }
      var e = null, e = function(b, e) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return c.call(this, b);
          case 2:
            return a.call(this, b, e);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      e.o = d;
      e.b = c;
      e.a = a;
      return e;
    }();
  }(a, c, b, function(a, b, c) {
    return function(d, e) {
      var f = (new Date).getTime();
      rb(e) && 6.25E-5 >= Math.random() && (Qf.a ? Qf.a(a, null) : Qf.call(null, a, null), Rf.a(b, function(a, b, c, d, e) {
        return function(f) {
          return Jc(Fe(function(a, b, c, d, e) {
            return function(f, g, n) {
              n = Fe(function(a, b, c, d, e) {
                return function(a, c, d) {
                  var f = t.a(e, c);
                  return m(f) ? b >= d.Cf + f.yf ? J.a(a, c) : a : J.a(a, c);
                };
              }(a, b, c, d, e), n, n);
              return le(n) ? Lc(f, g) : Kc(f, g, n);
            };
          }(a, b, c, d, e), Hc(m(f) ? f : S), f));
        };
      }(null, f, a, b, c)));
      for (;;) {
        var g = A.b ? A.b(b) : A.call(null, b), n = t.a(g, d), D = null == n ? null : Fe(function(a, b, c, d, e, f) {
          return function(a, b, d) {
            var e = t.a(f, b);
            if (m(e)) {
              if (d.n < e.n) {
                return a;
              }
              d = d.Cf + e.yf - c;
              return 0 >= d ? a : null == a ? new QI(jh([b, d]), b, d) : d > a.Df ? new QI(I.c(a.xe, b, d), b, d) : new QI(I.c(a.xe, b, d), a.Fg, a.Df);
            }
            return a;
          };
        }(g, n, f, a, b, c), null, n);
        if (m(m(e) ? e : D)) {
          var G = D;
          return m(G) ? (f = G, new Q(null, 3, 5, R, [f.Fg, f.Df, f.xe], null)) : null;
        }
        G = A.b ? A.b(a) : A.call(null, a);
        if (m(G)) {
          return null;
        }
        var H = Fe(function(a, b, c, d, e) {
          return function(a, b, d) {
            return I.c(a, b, function() {
              var a = t.a(c, b);
              if (m(a)) {
                var f = a.Cf;
                return e >= f + d.yf ? new PI(1, e) : new PI(a.n + 1, f);
              }
              return new PI(1, e);
            }());
          };
        }(G, g, n, D, f, a, b, c), n, c);
        if (function() {
          var a = I.c(g, d, H);
          Qf.a ? Qf.a(b, a) : Qf.call(null, b, a);
          return !0;
        }()) {
          return null;
        }
      }
    };
  }(a, c, b))], null);
}
var TI = function TI(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return TI.a(arguments[0], arguments[1]);
    case 3:
      return TI.c(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
TI.a = function(b, a) {
  return b.substring(a);
};
TI.c = function(b, a, c) {
  return a >= c ? "" : b.substring(a, c);
};
TI.N = 3;
var UI = function UI(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return UI.a(arguments[0], arguments[1]);
    case 3:
      return UI.c(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
UI.a = function(b, a) {
  return HI(b.substr(a));
};
UI.c = function(b, a, c) {
  return HI(b.substr(a, c));
};
UI.N = 3;
var VI = function VI(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return VI.j(0 < c.length ? new rd(c.slice(0), 0, null) : null);
};
VI.j = function(b) {
  var a = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, c = t.a(a, pt), d = t.a(a, ao), e = t.a(a, yv), f = t.a(a, mo), g = t.a(a, ht), n = t.a(a, Ao), r = t.a(a, Tn), u = t.a(a, Sm), y = t.a(a, Zu);
  wE(function() {
    return function(a) {
      return m((new V(null, new l(null, 9, [Sm, null, Tn, null, ao, null, mo, null, Ao, null, ht, null, pt, null, Zu, null, yv, null], null), null)).call(null, a)) ? !0 : AE(2371, "(#{:msecs :secs :months :days :mins :hours :years :ms :weeks} __in)", a, null);
    };
  }(b, a, a, c, d, e, f, g, n, r, u, y), eh(a));
  return Math.round((m(c) ? 31536E6 * c : 0) + (m(d) ? 2551392E3 * d : 0) + (m(e) ? 6048E5 * e : 0) + (m(f) ? 864E5 * f : 0) + (m(g) ? 36E5 * g : 0) + (m(n) ? 6E4 * n : 0) + (m(r) ? 1E3 * r : 0) + (m(u) ? u : 0) + (m(y) ? y : 0));
};
VI.N = 0;
VI.P = function(b) {
  return VI.j(w(b));
};
Gf.a(function(b) {
  return Me(Le(b), 1E3);
}, VI);
function WI() {
}
if ("undefined" === typeof XI) {
  var XI = new aj(function() {
    return new WI;
  }, null)
}
Gf.a(zf, LI);
Gf.a(zf, MI);
Gf.a(HI, TI);
Gf.a(HI, UI);
U || Nf.call(null, Ho);
if ("undefined" === typeof YI) {
  var YI = Ho
}
;function ZI(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  return $I(0 < a.length ? new rd(a.slice(0), 0, null) : null);
}
function $I(b) {
  var a = F(b, 0, null);
  return new l(null, 6, [Ap, !0, Iv, !1, ut, null, Ll, null, cr, Ak, Yk, "undefined" !== typeof console ? function() {
    return function(a) {
      return function(b) {
        var c = a(Up.b(b));
        if (m(c)) {
          var d;
          d = Iu.b(b);
          d = m(d) ? d : kg(b, new Q(null, 2, 5, R, [Nu, Iu], null));
          return m(d) ? (d = cr.b(b).call(null, I.j(b, Jm, "", C([tr, null], 0))), b = Ud(d, Ud(tr.b(b), gm.b(b))), c.apply(console, Ab(b))) : c.call(console, bj(Hm.b(b)));
        }
        return null;
      };
    }(function() {
      return function(a) {
        var b = function() {
          switch(a instanceof K ? a.ca : null) {
            case "trace":
              return console.trace;
            case "debug":
              return console.debug;
            case "info":
              return console.info;
            case "warn":
              return console.warn;
            case "error":
              return console.error;
            case "fatal":
              return console.error;
            case "report":
              return console.info;
            default:
              throw Error([q("No matching clause: "), q(a)].join(""));;
          }
        }();
        return m(b) ? b : console.log;
      };
    }(b, a), b, a);
  }() : function() {
    return function() {
      return null;
    };
  }(b, a)], null);
}
;re(FI) ? KI(new Q(null, 3, 5, R, [2, 87, 0], null)) : KI(2.87);
var aJ = function aJ(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 1:
      return aJ.b(arguments[0]);
    case 2:
      return aJ.a(arguments[0], arguments[1]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
aJ.b = function(b) {
  return aJ.a(null, b);
};
aJ.a = function(b, a) {
  var c = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, d = t.a(c, Rs);
  t.a(c, Ks);
  var e = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, c = t.a(e, Up), f = t.a(e, tr), g = t.a(e, Jm), n = t.a(e, $o), r = t.a(e, jo);
  t.a(e, Qo);
  t.a(e, ct);
  e = t.a(e, mt);
  return [q(ef(c).toUpperCase()), q(" "), q("["), q(m(n) ? n : m(r) ? r : "?"), q(":"), q(m(e) ? e : "?"), q("] - "), q(bj(g)), q(m(d) ? null : m(f) ? [q("\n"), q(bJ ? bJ(f) : cJ.call(null, f, b))].join("") : null)].join("");
};
aJ.N = 2;
var dJ = new l(null, 6, [Up, Ho, vk, E, Hl, E, Rp, E, cr, aJ, Wv, new l(null, 1, [Qt, ZI.b ? ZI.b(S) : ZI.call(null, S)], null)], null);
if ("undefined" === typeof eJ) {
  var eJ = dJ
}
var fJ = new Q(null, 7, 5, R, [an, Ho, Cs, Pm, Gt, Sp, Ek], null);
qi(fJ);
ti(fJ, z(new xi(null, 0, Number.MAX_VALUE, 1, null)));
if ("undefined" === typeof gJ) {
  var gJ = NI(function(b, a) {
    var c = SI(a);
    F(c, 0, null);
    return F(c, 1, null);
  })
}
function cJ(b) {
  for (var a = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      a.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(a.length) {
    case 1:
      return bJ(arguments[0]);
    case 2:
      return bJ(arguments[0]);
    default:
      throw Error([q("Invalid arity: "), q(a.length)].join(""));;
  }
}
function bJ(b) {
  return "" + q(b);
}
;function hJ(b) {
  return "string" === typeof b ? b : b instanceof K ? m(Bz("" + q(b), "/")) ? vz("" + q(b), ":", "") : ef(b) : "" + q(b);
}
function iJ(b) {
  return null == b ? !1 : v.a("true", "" + q(b)) || v.a("false", "" + q(b)) ? v.a("true", "" + q(b)) ? !0 : !1 : "string" === typeof b ? v.a(xz(b), "true") ? !0 : !1 : !0;
}
var jJ = new l(null, 5, ["swagger", 0, "host", 1, "info", 2, "x-traits", 3, "paths", 4], null), kJ = function kJ(a) {
  return "string" === typeof a ? a : a instanceof K ? hJ(a) : pe(a) ? Cb.c(function(a, d) {
    var c = F(d, 0, null), f = F(d, 1, null);
    return I.c(a, c, f);
  }, gi(), De(function(a, d) {
    var c = F(a, 0, null);
    F(a, 1, null);
    var f = F(d, 0, null);
    F(d, 1, null);
    c = t.c(jJ, c, 100);
    f = t.c(jJ, f, 100);
    return Ae(c, f);
  }, hg(function(a) {
    var c = F(a, 0, null);
    a = F(a, 1, null);
    return new Q(null, 2, 5, R, [kJ.b ? kJ.b(c) : kJ.call(null, c), kJ.b ? kJ.b(a) : kJ.call(null, a)], null);
  }, a))) : me(a) ? hg(function(a) {
    return kJ.b ? kJ.b(a) : kJ.call(null, a);
  }, a) : a;
}, lJ = function lJ(a) {
  return "string" === typeof a ? a : a instanceof K ? hJ(a) : pe(a) ? Cb.c(function(a, d) {
    var c = F(d, 0, null), f = F(d, 1, null);
    return I.c(a, c, f);
  }, gi(), De(function(a, d) {
    var c = F(a, 0, null);
    F(a, 1, null);
    var f = F(d, 0, null);
    F(d, 1, null);
    if (pa(c, "/") && pa(f, "/")) {
      return 0;
    }
    if (pa(c, "/")) {
      return 1;
    }
    v.a(c, "title") || v.a(c, "version") && yf(f, "title") || v.a(c, "baseUri") && (yf(f, "title") || yf(f, "version"));
    return -1;
  }, hg(function(a) {
    var c = F(a, 0, null);
    a = F(a, 1, null);
    return new Q(null, 2, 5, R, [lJ.b ? lJ.b(c) : lJ.call(null, c), lJ.b ? lJ.b(a) : lJ.call(null, a)], null);
  }, a))) : me(a) ? hg(function(a) {
    return lJ.b ? lJ.b(a) : lJ.call(null, a);
  }, a) : a;
};
function mJ(b) {
  return "string" === typeof b || b instanceof K ? hJ(b) : b;
}
function nJ(b, a) {
  var c = fg(new Q(null, 1, 5, R, [t.a(b, "@type")], null));
  return Df(function() {
    return function(b) {
      return v.a(b, a);
    };
  }(c), c);
}
function oJ(b) {
  return null != b ? x(cg(function(a) {
    return v.a("document-type", Px(a));
  }, Lx(b))) : null;
}
function pJ(b, a) {
  return t.a(x(fg(new Q(null, 1, 5, R, [t.a(b, a)], null))), "@value");
}
function qJ(b) {
  return t.a(x(fg(new Q(null, 1, 5, R, [t.a(b, KC)], null))), "@id");
}
function rJ(b, a) {
  return Tf.a(function(a) {
    return t.a(a, "@value");
  }, cg(sb, fg(new Q(null, 1, 5, R, [t.a(b, a)], null))));
}
function sJ(b) {
  return Tf.a(function(a) {
    return t.a(a, "@id");
  }, cg(sb, fg(new Q(null, 1, 5, R, [t.a(b, "http://www.w3.org/ns/shacl#result")], null))));
}
function tJ(b, a) {
  return cg(sb, fg(new Q(null, 1, 5, R, [t.a(b, a)], null)));
}
function uJ(b) {
  return gg.a(S, cg(sb, Tf.a(function(a) {
    var b = F(a, 0, null);
    a = F(a, 1, null);
    a = !pe(a) && me(a) ? cg(sb, a) : a;
    return m((new V(null, new l(null, 8, [Kk, null, yl, null, Bo, null, mq, null, kt, null, Rt, null, mu, null, su, null], null), null)).call(null, b)) ? new Q(null, 2, 5, R, [b, a], null) : null == a ? null : me(a) && le(a) ? null : pe(a) && v.a(a, S) ? null : new Q(null, 2, 5, R, [b, a], null);
  }, b)));
}
function vJ(b, a, c, d) {
  return null != (d.b ? d.b(a) : d.call(null, a)) ? I.c(b, c, new Q(null, 1, 5, R, [new l(null, 1, ["@value", mJ(d.b ? d.b(a) : d.call(null, a))], null)], null)) : b;
}
function wJ(b, a) {
  return null != (Cx.b ? Cx.b(a) : Cx.call(null, a)) ? I.c(b, KC, new Q(null, 1, 5, R, [new l(null, 1, ["@id", Cx.b ? Cx.b(a) : Cx.call(null, a)], null)], null)) : b;
}
function xJ(b, a, c, d) {
  return null != (d.b ? d.b(a) : d.call(null, a)) ? I.c(b, c, Tf.a(function(a) {
    return new l(null, 1, ["@value", mJ(a)], null);
  }, d.b ? d.b(a) : d.call(null, a))) : b;
}
function yJ(b, a) {
  var c = cg(sb, fg(new Q(null, 1, 5, R, [a.b ? a.b(b) : a.call(null, b)], null)));
  return le(c) ? E : Tf.a(function() {
    return function(a) {
      return new l(null, 1, ["@value", mJ(a)], null);
    };
  }(c), c);
}
function zJ(b, a) {
  return hg(AJ, tJ(b, a));
}
function BJ(b, a, c, d, e) {
  a = x(cg(sb, fg(new Q(null, 1, 5, R, [d.b ? d.b(a) : d.call(null, a)], null))));
  return null != a ? (e = e.b ? e.b(a) : e.call(null, a), m(e) ? I.c(b, c, new Q(null, 1, 5, R, [e], null)) : b) : b;
}
function CJ(b, a, c, d, e) {
  return null != (d.b ? d.b(a) : d.call(null, a)) ? I.c(b, c, Tf.a(function(a) {
    return e.b ? e.b(a) : e.call(null, a);
  }, d.b ? d.b(a) : d.call(null, a))) : b;
}
function DJ(b) {
  return Tf.a(function(a) {
    var b = F(a, 0, null);
    a = F(a, 1, null);
    return new l(null, 2, [Lj, vz("" + q(b), ":/", "/"), $r, a], null);
  }, cg(function(a) {
    var b = F(a, 0, null);
    F(a, 1, null);
    return Cz("" + q(b), ":/");
  }, b));
}
function EJ(b, a, c) {
  b = t.a(x(t.c(b, a, E)), "@value");
  return null != b ? c.b ? c.b(b) : c.call(null, b) : null;
}
function FJ(b, a) {
  return EJ(b, a, Ge);
}
function GJ(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, c = t.a(c, Nn);
  return null != c ? [q(hJ(c)), q("."), q(hJ(b))].join("") : hJ(b);
}
var HJ = function HJ(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  return HJ.j(arguments[0], 1 < c.length ? new rd(c.slice(1), 0, null) : null);
};
HJ.j = function(b, a) {
  var c = x(a);
  if (m(c)) {
    var d = hJ(b), c = hJ(c), d = v.a(be(d), "/") ? P(q, Wf(1, d)) : d, c = v.a(x(gg.a(E, c)), "/") ? c : [q("/"), q(c)].join(""), d = P(HJ, N.a(new Q(null, 1, 5, R, [[q(d), q(c)].join("")], null), sd(a)));
    return uz(d, "##", "#");
  }
  return b;
};
HJ.N = 1;
HJ.P = function(b) {
  var a = x(b);
  b = z(b);
  return HJ.j(a, b);
};
function IJ(b) {
  b = be(zz(hJ(b), /\//));
  return be(zz(b, /#/));
}
var JJ = function JJ(a) {
  return pe(a) ? uJ(gg.a(S, Tf.a(function(a) {
    var c = F(a, 0, null);
    a = F(a, 1, null);
    return new Q(null, 2, 5, R, [rC(hJ(c)), JJ.b ? JJ.b(a) : JJ.call(null, a)], null);
  }, a))) : me(a) ? hg(function(a) {
    return JJ.b ? JJ.b(a) : JJ.call(null, a);
  }, a) : null == a ? null : new l(null, 1, ["@value", a], null);
}, KJ = function KJ(a) {
  return pe(a) && v.a(new Q(null, 1, 5, R, ["@value"], null), eh(a)) ? t.a(a, "@value") : pe(a) ? gg.a(S, Tf.a(function(a) {
    var c = F(a, 0, null);
    a = F(a, 1, null);
    return new Q(null, 2, 5, R, [IJ(c), KJ.b ? KJ.b(a) : KJ.call(null, a)], null);
  }, a)) : me(a) ? hg(function(a) {
    return KJ.b ? KJ.b(a) : KJ.call(null, a);
  }, a) : a;
};
function LJ(b, a, c) {
  return null != t.a(b, a) ? b : I.c(b, a, c);
}
function MJ(b) {
  return "string" === typeof b && v.a(b, "") ? null : b;
}
function NJ(b) {
  return [q("#"), q(be(zz(b, /#/)))].join("");
}
function OJ(b) {
  return null != t.a(b, nC("or"));
}
function PJ(b) {
  return nJ(b, mC("Scalar"));
}
function QJ(b) {
  return nJ(b, mC("Array"));
}
function RJ(b) {
  return (null == uo.b(b) || v.a("object", uo.b(b))) && null == Pj.b(b);
}
function SJ(b) {
  return I.c(b, "@type", new Q(null, 1, 5, R, [mC("Scalar")], null));
}
function TJ(b) {
  return v.a(new l(null, 1, ["@value", !0], null), x(t.c(b, mC("ordered"), E)));
}
function UJ(b) {
  return v.a(new l(null, 1, ["@value", !0], null), x(t.c(b, mC("nilValue"), E)));
}
function VJ() {
  return jh([nC("maxCount"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", 1], null)], null), mC("nilValue"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", !0], null)], null), nC("in"), new Q(null, 1, 5, R, [new l(null, 1, ["@list", new Q(null, 1, 5, R, [mC("NilValue")], null)], null)], null)]);
}
function WJ(b) {
  b = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b;
  b = t.a(b, Xu);
  return new l(null, 2, ["@id", b, "@type", new Q(null, 2, 5, R, [mC("NilValueShape"), nC("Shape")], null)], null);
}
function XJ(b) {
  b = t.c(b, nC("or"), E);
  b = pe(b) ? b : x(b);
  return t.c(b, "@list", E);
}
function YJ(b) {
  return jh([nC("or"), new l(null, 1, ["@list", b], null)]);
}
function ZJ(b) {
  var a = null != t.a(b, mC("is-number")) ? new Q(null, 1, 5, R, [I.c(b, "@type", new Q(null, 1, 5, R, [mC("Scalar")], null))], null) : null != t.a(b, nC("or")) ? t.a(t.a(b, nC("or")), "@list") : null != t.a(b, nC("node")) ? new Q(null, 1, 5, R, [t.a(b, nC("node"))], null) : null != t.a(b, nC("datatype")) ? new Q(null, 1, 5, R, [jh(["@type", new Q(null, 1, 5, R, [mC("Scalar")], null), nC("datatype"), t.a(b, nC("datatype"))])], null) : E;
  return jh(["@type", new Q(null, 1, 5, R, [mC("Array")], null), nC("in"), t.a(b, nC("in")), mC("item"), a]);
}
function $J(b) {
  return null != t.a(b, mC("is-number")) ? I.c(b, "@type", new Q(null, 1, 5, R, [mC("Scalar")], null)) : b;
}
function aK(b) {
  return m(v.a ? v.a("Swagger", b) : v.call(null, "Swagger", b)) ? PC : m(v.a ? v.a("Info", b) : v.call(null, "Info", b)) ? PC : m(v.a ? v.a("Paths", b) : v.call(null, "Paths", b)) ? PC : m(v.a ? v.a("PathItem", b) : v.call(null, "PathItem", b)) ? bD : m(v.a ? v.a("Schema", b) : v.call(null, "Schema", b)) ? nC("Shape") : m(v.a ? v.a("Operation", b) : v.call(null, "Operation", b)) ? eD : m(v.a ? v.a("API", b) : v.call(null, "API", b)) ? PC : m(v.a ? v.a("DocumentationItem", b) : v.call(null, "DocumentationItem", 
  b)) ? lC("DocumentationItem") : m(v.a ? v.a("Resource", b) : v.call(null, "Resource", b)) ? bD : m(v.a ? v.a("Method", b) : v.call(null, "Method", b)) ? eD : m(v.a ? v.a("Response", b) : v.call(null, "Response", b)) ? iD : m(v.a ? v.a("RequestBody", b) : v.call(null, "RequestBody", b)) ? pD : m(v.a ? v.a("ResponseBody", b) : v.call(null, "ResponseBody", b)) ? lD : m(v.a ? v.a("TypeDeclaration", b) : v.call(null, "TypeDeclaration", b)) ? nC("Shape") : m(v.a ? v.a("Example", b) : v.call(null, "Example", 
  b)) ? lC("Example") : m(v.a ? v.a("ResourceType", b) : v.call(null, "ResourceType", b)) ? lC("AbstractEndPoint") : m(v.a ? v.a("Trait", b) : v.call(null, "Trait", b)) ? lC("AbstractResponse") : m(v.a ? v.a("SecurityScheme", b) : v.call(null, "SecurityScheme", b)) ? lC("SecurityScheme") : m(v.a ? v.a("SecuritySchemeSettings", b) : v.call(null, "SecuritySchemeSettings", b)) ? lC("SecuritySettings") : m(v.a ? v.a("AnnotationType", b) : v.call(null, "AnnotationType", b)) ? uD : m(v.a ? v.a("Library", 
  b) : v.call(null, "Library", b)) ? uC : m(v.a ? v.a("Overlay", b) : v.call(null, "Overlay", b)) ? lC("AbstractAPIDocumentation") : m(v.a ? v.a("Extension", b) : v.call(null, "Extension", b)) ? lC("PartialAPIDocumentation") : null;
}
function bK(b) {
  return m(v.a ? v.a(PC, b) : v.call(null, PC, b)) ? "API" : m(function() {
    var a = lC("DocumentationItem");
    return v.a ? v.a(a, b) : v.call(null, a, b);
  }()) ? "DocumentationItem" : m(v.a ? v.a(bD, b) : v.call(null, bD, b)) ? "Resource" : m(v.a ? v.a(eD, b) : v.call(null, eD, b)) ? "Method" : m(v.a ? v.a(iD, b) : v.call(null, iD, b)) ? "Response" : m(v.a ? v.a(pD, b) : v.call(null, pD, b)) ? "RequestBody" : m(v.a ? v.a(lD, b) : v.call(null, lD, b)) ? "ResponseBody" : m(function() {
    var a = nC("Shape");
    return v.a ? v.a(a, b) : v.call(null, a, b);
  }()) ? "TypeDeclaration" : m(function() {
    var a = lC("Example");
    return v.a ? v.a(a, b) : v.call(null, a, b);
  }()) ? "Example" : m(function() {
    var a = lC("AbstractEndPoint");
    return v.a ? v.a(a, b) : v.call(null, a, b);
  }()) ? "ResourceType" : m(function() {
    var a = lC("AbstractResponse");
    return v.a ? v.a(a, b) : v.call(null, a, b);
  }()) ? "Trait" : m(function() {
    var a = lC("SecurityScheme");
    return v.a ? v.a(a, b) : v.call(null, a, b);
  }()) ? "SecurityScheme" : m(function() {
    var a = lC("SecuritySettings");
    return v.a ? v.a(a, b) : v.call(null, a, b);
  }()) ? "SecuritySchemeSettings" : m(v.a ? v.a(uD, b) : v.call(null, uD, b)) ? "AnnotationType" : m(v.a ? v.a(uC, b) : v.call(null, uC, b)) ? "Library" : m(function() {
    var a = lC("AbstractAPIDocumentation");
    return v.a ? v.a(a, b) : v.call(null, a, b);
  }()) ? "Overlay" : m(function() {
    var a = lC("PartialAPIDocumentation");
    return v.a ? v.a(a, b) : v.call(null, a, b);
  }()) ? "Extension" : null;
}
function cK(b) {
  if (m(v.a ? v.a(PC, b) : v.call(null, PC, b))) {
    b = "Swagger";
  } else {
    if (m(v.a ? v.a(bD, b) : v.call(null, bD, b))) {
      b = "PathItem";
    } else {
      if (m(v.a ? v.a(eD, b) : v.call(null, eD, b))) {
        b = "Operation";
      } else {
        if (m(v.a ? v.a(iD, b) : v.call(null, iD, b))) {
          b = "Response";
        } else {
          var a;
          a = nC("Shape");
          a = v.a ? v.a(a, b) : v.call(null, a, b);
          b = m(a) ? "Schema" : bK(b);
        }
      }
    }
  }
  return b;
}
;function dK() {
}
function eK(b) {
  if (null != b && null != b.td) {
    return b.F;
  }
  var a = eK[ba(null == b ? null : b)];
  if (null != a) {
    return a.b ? a.b(b) : a.call(null, b);
  }
  a = eK._;
  if (null != a) {
    return a.b ? a.b(b) : a.call(null, b);
  }
  throw ub("DomainElement.abstract", b);
}
var fK = function fK(a) {
  if (null != a && null != a.Pg) {
    return a.host;
  }
  var c = fK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = fK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("CommonAPIProperties.host", a);
}, gK = function gK(a) {
  if (null != a && null != a.Yf) {
    return a.scheme;
  }
  var c = gK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = gK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("CommonAPIProperties.scheme", a);
}, hK = function hK(a) {
  if (null != a && null != a.hf) {
    return a.hf(a);
  }
  var c = hK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = hK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("CommonAPIProperties.accepts", a);
}, iK = function iK(a) {
  if (null != a && null != a.jf) {
    return a.jf(a);
  }
  var c = iK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = iK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("CommonAPIProperties.content-type", a);
};
function jK() {
}
var kK = function kK(a) {
  if (null != a && null != a.Qe) {
    return a.Qe(a);
  }
  var c = kK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = kK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("HeadersHolder.headers", a);
};
function lK() {
}
var mK = function mK(a) {
  if (null != a && null != a.Re) {
    return a.Re(a);
  }
  var c = mK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = mK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("ParametersHolder.parameters", a);
};
function nK() {
}
var oK = function oK(a) {
  if (null != a && null != a.Mg) {
    return a.Va;
  }
  var c = oK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = oK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("APIDocumentation.provider", a);
}, pK = function pK(a) {
  if (null != a && null != a.Ng) {
    return a.Wa;
  }
  var c = pK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = pK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("APIDocumentation.terms-of-service", a);
}, qK = function qK(a) {
  if (null != a && null != a.Og) {
    return a.version;
  }
  var c = qK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = qK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("APIDocumentation.version", a);
}, rK = function rK(a) {
  if (null != a && null != a.Lg) {
    return a.Ta;
  }
  var c = rK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = rK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("APIDocumentation.license", a);
}, sK = function sK(a) {
  if (null != a && null != a.Jg) {
    return a.Ra;
  }
  var c = sK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = sK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("APIDocumentation.base-path", a);
}, tK = function tK(a) {
  if (null != a && null != a.Kg) {
    return a.Sa;
  }
  var c = tK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = tK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("APIDocumentation.endpoints", a);
};
function uK(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T, qa, la, ya, ib, Sc) {
  this.id = b;
  this.F = a;
  this.B = c;
  this.name = d;
  this.description = e;
  this.C = f;
  this.ga = g;
  this.v = n;
  this.host = r;
  this.scheme = u;
  this.Ra = y;
  this.da = D;
  this.na = G;
  this.headers = H;
  this.Va = M;
  this.Wa = O;
  this.version = T;
  this.Ta = qa;
  this.Sa = la;
  this.h = ya;
  this.g = ib;
  this.m = Sc;
  this.l = 2229667594;
  this.M = 8192;
}
h = uK.prototype;
h.ge = k;
h.Qe = function() {
  var b = this.headers;
  return m(b) ? b : E;
};
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "description":
      return this.description;
    case "extends":
      return this.C;
    case "license":
      return this.Ta;
    case "sources":
      return this.B;
    case "name":
      return this.name;
    case "abstract":
      return this.F;
    case "terms-of-service":
      return this.Wa;
    case "headers":
      return this.headers;
    case "endpoints":
      return this.Sa;
    case "host":
      return this.host;
    case "additional-properties":
      return this.v;
    case "id":
      return this.id;
    case "base-path":
      return this.Ra;
    case "content-type":
      return this.na;
    case "accepts":
      return this.da;
    case "version":
      return this.version;
    case "parameters":
      return this.ga;
    case "provider":
      return this.Va;
    case "scheme":
      return this.scheme;
    default:
      return t.c(this.g, a, c);
  }
};
h.Pg = function() {
  return this.host;
};
h.Yf = function() {
  return this.scheme;
};
h.hf = function() {
  var b = this.da;
  return m(b) ? b : E;
};
h.jf = function() {
  var b = this.na;
  return m(b) ? b : E;
};
h.Oe = k;
h.Mg = function() {
  return this.Va;
};
h.Ng = function() {
  return this.Wa;
};
h.Og = function() {
  return this.version;
};
h.Lg = function() {
  return this.Ta;
};
h.Jg = function() {
  return this.Ra;
};
h.Kg = function() {
  return this.Sa;
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.domain.ParsedAPIDocumentation{", ", ", "}", c, N.a(new Q(null, 19, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [iv, this.ga], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [xq, this.host], 
  null), new Q(null, 2, 5, R, [Cv, this.scheme], null), new Q(null, 2, 5, R, [Wr, this.Ra], null), new Q(null, 2, 5, R, [wt, this.da], null), new Q(null, 2, 5, R, [Ss, this.na], null), new Q(null, 2, 5, R, [Hp, this.headers], null), new Q(null, 2, 5, R, [kv, this.Va], null), new Q(null, 2, 5, R, [wp, this.Wa], null), new Q(null, 2, 5, R, [Du, this.version], null), new Q(null, 2, 5, R, [Kl, this.Ta], null), new Q(null, 2, 5, R, [kq, this.Sa], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 19, new Q(null, 19, 5, R, [Z, ho, Rm, W, Hj, ql, iv, Ur, xq, Cv, Wr, wt, Ss, Hp, kv, wp, Du, Kl, kq], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 19 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.he = k;
h.Re = function() {
  var b = this.ga;
  return m(b) ? b : E;
};
h.wc = k;
h.td = function() {
  return this.F;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 19, [Hj, null, ql, null, Kl, null, Rm, null, W, null, ho, null, wp, null, Hp, null, kq, null, xq, null, Ur, null, Z, null, Wr, null, Ss, null, wt, null, Du, null, iv, null, kv, null, Cv, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new uK(this.id, this.F, this.B, this.name, this.description, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, zf(J.a(this.g, 
  a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new uK(c, this.F, this.B, this.name, this.description, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(ho, a) : L.call(null, ho, a)) ? new uK(this.id, c, this.B, this.name, this.description, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, 
  this.Sa, this.h, this.g, null) : m(L.a ? L.a(Rm, a) : L.call(null, Rm, a)) ? new uK(this.id, this.F, c, this.name, this.description, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(W, a) : L.call(null, W, a)) ? new uK(this.id, this.F, this.B, c, this.description, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, 
  this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(Hj, a) : L.call(null, Hj, a)) ? new uK(this.id, this.F, this.B, this.name, c, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(ql, a) : L.call(null, ql, a)) ? new uK(this.id, this.F, this.B, this.name, this.description, c, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, 
  this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(iv, a) : L.call(null, iv, a)) ? new uK(this.id, this.F, this.B, this.name, this.description, this.C, c, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new uK(this.id, this.F, this.B, this.name, this.description, this.C, this.ga, c, this.host, this.scheme, this.Ra, this.da, 
  this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(xq, a) : L.call(null, xq, a)) ? new uK(this.id, this.F, this.B, this.name, this.description, this.C, this.ga, this.v, c, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(Cv, a) : L.call(null, Cv, a)) ? new uK(this.id, this.F, this.B, this.name, this.description, this.C, this.ga, this.v, this.host, 
  c, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(Wr, a) : L.call(null, Wr, a)) ? new uK(this.id, this.F, this.B, this.name, this.description, this.C, this.ga, this.v, this.host, this.scheme, c, this.da, this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(wt, a) : L.call(null, wt, a)) ? new uK(this.id, this.F, this.B, this.name, this.description, this.C, this.ga, 
  this.v, this.host, this.scheme, this.Ra, c, this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(Ss, a) : L.call(null, Ss, a)) ? new uK(this.id, this.F, this.B, this.name, this.description, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, c, this.headers, this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(Hp, a) : L.call(null, Hp, a)) ? new uK(this.id, this.F, this.B, this.name, this.description, 
  this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, c, this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(kv, a) : L.call(null, kv, a)) ? new uK(this.id, this.F, this.B, this.name, this.description, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, c, this.Wa, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(wp, a) : L.call(null, wp, a)) ? new uK(this.id, this.F, this.B, this.name, 
  this.description, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, c, this.version, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(Du, a) : L.call(null, Du, a)) ? new uK(this.id, this.F, this.B, this.name, this.description, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, c, this.Ta, this.Sa, this.h, this.g, null) : m(L.a ? L.a(Kl, a) : L.call(null, Kl, a)) ? new uK(this.id, this.F, 
  this.B, this.name, this.description, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, this.version, c, this.Sa, this.h, this.g, null) : m(L.a ? L.a(kq, a) : L.call(null, kq, a)) ? new uK(this.id, this.F, this.B, this.name, this.description, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, c, this.h, this.g, null) : new uK(this.id, this.F, this.B, this.name, 
  this.description, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, this.Sa, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 19, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [iv, this.ga], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [xq, this.host], null), new Q(null, 2, 5, R, [Cv, this.scheme], null), new Q(null, 2, 5, R, [Wr, 
  this.Ra], null), new Q(null, 2, 5, R, [wt, this.da], null), new Q(null, 2, 5, R, [Ss, this.na], null), new Q(null, 2, 5, R, [Hp, this.headers], null), new Q(null, 2, 5, R, [kv, this.Va], null), new Q(null, 2, 5, R, [wp, this.Wa], null), new Q(null, 2, 5, R, [Du, this.version], null), new Q(null, 2, 5, R, [Kl, this.Ta], null), new Q(null, 2, 5, R, [kq, this.Sa], null)], null), this.g));
};
h.U = function(b, a) {
  return new uK(this.id, this.F, this.B, this.name, this.description, this.C, this.ga, this.v, this.host, this.scheme, this.Ra, this.da, this.na, this.headers, this.Va, this.Wa, this.version, this.Ta, this.Sa, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return this.name;
};
h.Ca = function() {
  return this.description;
};
h.Ja = function() {
  return this.B;
};
h.Ia = function() {
  var b = this.C;
  return m(b) ? b : E;
};
h.Ha = function() {
  var b = this.v;
  return m(b) ? b : E;
};
function vK(b) {
  return new uK(Z.b(b), ho.b(b), Rm.b(b), W.b(b), Hj.b(b), ql.b(b), iv.b(b), Ur.b(b), xq.b(b), Cv.b(b), Wr.b(b), wt.b(b), Ss.b(b), Hp.b(b), kv.b(b), wp.b(b), Du.b(b), Kl.b(b), kq.b(b), null, J.j(b, Z, C([ho, Rm, W, Hj, ql, iv, Ur, xq, Cv, Wr, wt, Ss, Hp, kv, wp, Du, Kl, kq], 0)), null);
}
function wK() {
}
var xK = function xK(a) {
  if (null != a && null != a.Sg) {
    return a.domain;
  }
  var c = xK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = xK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("DomainPropertySchema.domain", a);
}, yK = function yK(a) {
  if (null != a && null != a.Zf) {
    return a.Zf();
  }
  var c = yK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = yK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("DomainPropertySchema.range", a);
};
function zK(b, a, c, d, e, f, g, n, r, u, y) {
  this.id = b;
  this.name = a;
  this.description = c;
  this.B = d;
  this.v = e;
  this.C = f;
  this.domain = g;
  this.kc = n;
  this.h = r;
  this.g = u;
  this.m = y;
  this.l = 2229667594;
  this.M = 8192;
}
h = zK.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "name":
      return this.name;
    case "description":
      return this.description;
    case "sources":
      return this.B;
    case "additional-properties":
      return this.v;
    case "extends":
      return this.C;
    case "domain":
      return this.domain;
    case "range":
      return this.kc;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.domain.ParsedDomainPropertySchema{", ", ", "}", c, N.a(new Q(null, 8, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [cu, this.domain], null), new Q(null, 2, 5, R, [dw, this.kc], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 8, new Q(null, 8, 5, R, [Z, W, Hj, Rm, Ur, ql, cu, dw], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 8 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 8, [Hj, null, ql, null, Rm, null, W, null, Ur, null, Z, null, cu, null, dw, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new zK(this.id, this.name, this.description, this.B, this.v, this.C, this.domain, this.kc, this.h, zf(J.a(this.g, a)), null);
};
h.Pe = k;
h.Sg = function() {
  return this.domain;
};
h.Zf = function() {
  var b = this.kc;
  return m(b) ? b : E;
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new zK(c, this.name, this.description, this.B, this.v, this.C, this.domain, this.kc, this.h, this.g, null) : m(L.a ? L.a(W, a) : L.call(null, W, a)) ? new zK(this.id, c, this.description, this.B, this.v, this.C, this.domain, this.kc, this.h, this.g, null) : m(L.a ? L.a(Hj, a) : L.call(null, Hj, a)) ? new zK(this.id, this.name, c, this.B, this.v, this.C, this.domain, this.kc, this.h, this.g, null) : m(L.a ? L.a(Rm, a) : L.call(null, Rm, a)) ? new zK(this.id, 
  this.name, this.description, c, this.v, this.C, this.domain, this.kc, this.h, this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new zK(this.id, this.name, this.description, this.B, c, this.C, this.domain, this.kc, this.h, this.g, null) : m(L.a ? L.a(ql, a) : L.call(null, ql, a)) ? new zK(this.id, this.name, this.description, this.B, this.v, c, this.domain, this.kc, this.h, this.g, null) : m(L.a ? L.a(cu, a) : L.call(null, cu, a)) ? new zK(this.id, this.name, this.description, this.B, 
  this.v, this.C, c, this.kc, this.h, this.g, null) : m(L.a ? L.a(dw, a) : L.call(null, dw, a)) ? new zK(this.id, this.name, this.description, this.B, this.v, this.C, this.domain, c, this.h, this.g, null) : new zK(this.id, this.name, this.description, this.B, this.v, this.C, this.domain, this.kc, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 8, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [cu, this.domain], null), new Q(null, 2, 5, R, [dw, this.kc], null)], null), this.g));
};
h.U = function(b, a) {
  return new zK(this.id, this.name, this.description, this.B, this.v, this.C, this.domain, this.kc, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return this.name;
};
h.Ca = function() {
  return this.description;
};
h.Ja = function() {
  return this.B;
};
h.Ia = function() {
  var b = this.C;
  return m(b) ? b : E;
};
h.Ha = function() {
  var b = this.v;
  return m(b) ? b : E;
};
function AK(b) {
  return new zK(Z.b(b), W.b(b), Hj.b(b), Rm.b(b), Ur.b(b), ql.b(b), cu.b(b), dw.b(b), null, J.j(b, Z, C([W, Hj, Rm, Ur, ql, cu, dw], 0)), null);
}
function BK() {
}
var CK = function CK(a) {
  if (null != a && null != a.Rg) {
    return a.object;
  }
  var c = CK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = CK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("DomainProperty.object", a);
};
function DK(b, a, c, d, e, f, g, n, r) {
  this.id = b;
  this.name = a;
  this.description = c;
  this.B = d;
  this.C = e;
  this.object = f;
  this.h = g;
  this.g = n;
  this.m = r;
  this.l = 2229667594;
  this.M = 8192;
}
h = DK.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "name":
      return this.name;
    case "description":
      return this.description;
    case "sources":
      return this.B;
    case "extends":
      return this.C;
    case "object":
      return this.object;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.domain.ParsedDomainProperty{", ", ", "}", c, N.a(new Q(null, 6, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Dv, this.object], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 6, new Q(null, 6, 5, R, [Z, W, Hj, Rm, ql, Dv], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 6 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.Qg = k;
h.Rg = function() {
  return this.object;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 6, [Hj, null, ql, null, Rm, null, W, null, Z, null, Dv, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new DK(this.id, this.name, this.description, this.B, this.C, this.object, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new DK(c, this.name, this.description, this.B, this.C, this.object, this.h, this.g, null) : m(L.a ? L.a(W, a) : L.call(null, W, a)) ? new DK(this.id, c, this.description, this.B, this.C, this.object, this.h, this.g, null) : m(L.a ? L.a(Hj, a) : L.call(null, Hj, a)) ? new DK(this.id, this.name, c, this.B, this.C, this.object, this.h, this.g, null) : m(L.a ? L.a(Rm, a) : L.call(null, Rm, a)) ? new DK(this.id, this.name, this.description, c, this.C, 
  this.object, this.h, this.g, null) : m(L.a ? L.a(ql, a) : L.call(null, ql, a)) ? new DK(this.id, this.name, this.description, this.B, c, this.object, this.h, this.g, null) : m(L.a ? L.a(Dv, a) : L.call(null, Dv, a)) ? new DK(this.id, this.name, this.description, this.B, this.C, c, this.h, this.g, null) : new DK(this.id, this.name, this.description, this.B, this.C, this.object, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 6, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Dv, this.object], null)], null), this.g));
};
h.U = function(b, a) {
  return new DK(this.id, this.name, this.description, this.B, this.C, this.object, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return this.name;
};
h.Ca = function() {
  return this.description;
};
h.Ja = function() {
  return this.B;
};
h.Ia = function() {
  var b = this.C;
  return m(b) ? b : E;
};
h.Ha = function() {
  return E;
};
function EK(b) {
  return new DK(Z.b(b), W.b(b), Hj.b(b), Rm.b(b), ql.b(b), Dv.b(b), null, J.j(b, Z, C([W, Hj, Rm, ql, Dv], 0)), null);
}
function FK() {
}
var GK = function GK(a) {
  if (null != a && null != a.Ug) {
    return a.Nb;
  }
  var c = GK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = GK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("EndPoint.supported-operations", a);
}, HK = function HK(a) {
  if (null != a && null != a.Tg) {
    return a.path;
  }
  var c = HK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = HK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("EndPoint.path", a);
};
function IK(b, a, c, d, e, f, g, n, r, u, y, D, G) {
  this.id = b;
  this.F = a;
  this.B = c;
  this.name = d;
  this.description = e;
  this.C = f;
  this.v = g;
  this.path = n;
  this.Nb = r;
  this.ga = u;
  this.h = y;
  this.g = D;
  this.m = G;
  this.l = 2229667594;
  this.M = 8192;
}
h = IK.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "description":
      return this.description;
    case "path":
      return this.path;
    case "extends":
      return this.C;
    case "sources":
      return this.B;
    case "name":
      return this.name;
    case "abstract":
      return this.F;
    case "additional-properties":
      return this.v;
    case "id":
      return this.id;
    case "supported-operations":
      return this.Nb;
    case "parameters":
      return this.ga;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.domain.ParsedEndPoint{", ", ", "}", c, N.a(new Q(null, 10, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [Lj, this.path], null), new Q(null, 2, 5, R, [ot, this.Nb], null), 
  new Q(null, 2, 5, R, [iv, this.ga], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 10, new Q(null, 10, 5, R, [Z, ho, Rm, W, Hj, ql, Ur, Lj, ot, iv], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 10 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.he = k;
h.Re = function() {
  var b = this.ga;
  return m(b) ? b : E;
};
h.Wd = k;
h.Ug = function() {
  return this.Nb;
};
h.Tg = function() {
  return this.path;
};
h.wc = k;
h.td = function() {
  return this.F;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 10, [Hj, null, Lj, null, ql, null, Rm, null, W, null, ho, null, Ur, null, Z, null, ot, null, iv, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new IK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.path, this.Nb, this.ga, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new IK(c, this.F, this.B, this.name, this.description, this.C, this.v, this.path, this.Nb, this.ga, this.h, this.g, null) : m(L.a ? L.a(ho, a) : L.call(null, ho, a)) ? new IK(this.id, c, this.B, this.name, this.description, this.C, this.v, this.path, this.Nb, this.ga, this.h, this.g, null) : m(L.a ? L.a(Rm, a) : L.call(null, Rm, a)) ? new IK(this.id, this.F, c, this.name, this.description, this.C, this.v, this.path, this.Nb, this.ga, this.h, this.g, 
  null) : m(L.a ? L.a(W, a) : L.call(null, W, a)) ? new IK(this.id, this.F, this.B, c, this.description, this.C, this.v, this.path, this.Nb, this.ga, this.h, this.g, null) : m(L.a ? L.a(Hj, a) : L.call(null, Hj, a)) ? new IK(this.id, this.F, this.B, this.name, c, this.C, this.v, this.path, this.Nb, this.ga, this.h, this.g, null) : m(L.a ? L.a(ql, a) : L.call(null, ql, a)) ? new IK(this.id, this.F, this.B, this.name, this.description, c, this.v, this.path, this.Nb, this.ga, this.h, this.g, null) : 
  m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new IK(this.id, this.F, this.B, this.name, this.description, this.C, c, this.path, this.Nb, this.ga, this.h, this.g, null) : m(L.a ? L.a(Lj, a) : L.call(null, Lj, a)) ? new IK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, c, this.Nb, this.ga, this.h, this.g, null) : m(L.a ? L.a(ot, a) : L.call(null, ot, a)) ? new IK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.path, c, this.ga, this.h, this.g, null) : 
  m(L.a ? L.a(iv, a) : L.call(null, iv, a)) ? new IK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.path, this.Nb, c, this.h, this.g, null) : new IK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.path, this.Nb, this.ga, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 10, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [Lj, this.path], null), new Q(null, 2, 5, R, [ot, this.Nb], null), new Q(null, 2, 5, R, [iv, this.ga], null)], null), this.g));
};
h.U = function(b, a) {
  return new IK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.path, this.Nb, this.ga, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return this.name;
};
h.Ca = function() {
  return this.description;
};
h.Ja = function() {
  return this.B;
};
h.Ia = function() {
  var b = this.C;
  return m(b) ? b : E;
};
h.Ha = function() {
  var b = this.v;
  return m(b) ? b : E;
};
function JK(b) {
  return new IK(Z.b(b), ho.b(b), Rm.b(b), W.b(b), Hj.b(b), ql.b(b), Ur.b(b), Lj.b(b), ot.b(b), iv.b(b), null, J.j(b, Z, C([ho, Rm, W, Hj, ql, Ur, Lj, ot, iv], 0)), null);
}
function KK() {
}
var LK = function LK(a) {
  if (null != a && null != a.ah) {
    return a.Tb;
  }
  var c = LK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = LK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Payload.schema", a);
}, MK = function MK(a) {
  if (null != a && null != a.$g) {
    return a.Rb;
  }
  var c = MK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = MK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Payload.media-type", a);
};
function NK(b, a, c, d, e, f, g, n, r, u, y, D) {
  this.id = b;
  this.F = a;
  this.B = c;
  this.name = d;
  this.description = e;
  this.C = f;
  this.v = g;
  this.Tb = n;
  this.Rb = r;
  this.h = u;
  this.g = y;
  this.m = D;
  this.l = 2229667594;
  this.M = 8192;
}
h = NK.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "abstract":
      return this.F;
    case "sources":
      return this.B;
    case "name":
      return this.name;
    case "description":
      return this.description;
    case "extends":
      return this.C;
    case "additional-properties":
      return this.v;
    case "schema":
      return this.Tb;
    case "media-type":
      return this.Rb;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.domain.ParsedPayload{", ", ", "}", c, N.a(new Q(null, 9, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [dk, this.Tb], null), new Q(null, 2, 5, R, [gw, this.Rb], null)], null), 
  this.g));
};
h.ea = function() {
  return new Zg(0, this, 9, new Q(null, 9, 5, R, [Z, ho, Rm, W, Hj, ql, Ur, dk, gw], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 9 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.wc = k;
h.td = function() {
  return this.F;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 9, [Hj, null, dk, null, ql, null, Rm, null, W, null, ho, null, Ur, null, Z, null, gw, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new NK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Tb, this.Rb, this.h, zf(J.a(this.g, a)), null);
};
h.lf = k;
h.ah = function() {
  return this.Tb;
};
h.$g = function() {
  return this.Rb;
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new NK(c, this.F, this.B, this.name, this.description, this.C, this.v, this.Tb, this.Rb, this.h, this.g, null) : m(L.a ? L.a(ho, a) : L.call(null, ho, a)) ? new NK(this.id, c, this.B, this.name, this.description, this.C, this.v, this.Tb, this.Rb, this.h, this.g, null) : m(L.a ? L.a(Rm, a) : L.call(null, Rm, a)) ? new NK(this.id, this.F, c, this.name, this.description, this.C, this.v, this.Tb, this.Rb, this.h, this.g, null) : m(L.a ? L.a(W, a) : L.call(null, 
  W, a)) ? new NK(this.id, this.F, this.B, c, this.description, this.C, this.v, this.Tb, this.Rb, this.h, this.g, null) : m(L.a ? L.a(Hj, a) : L.call(null, Hj, a)) ? new NK(this.id, this.F, this.B, this.name, c, this.C, this.v, this.Tb, this.Rb, this.h, this.g, null) : m(L.a ? L.a(ql, a) : L.call(null, ql, a)) ? new NK(this.id, this.F, this.B, this.name, this.description, c, this.v, this.Tb, this.Rb, this.h, this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new NK(this.id, this.F, this.B, 
  this.name, this.description, this.C, c, this.Tb, this.Rb, this.h, this.g, null) : m(L.a ? L.a(dk, a) : L.call(null, dk, a)) ? new NK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, c, this.Rb, this.h, this.g, null) : m(L.a ? L.a(gw, a) : L.call(null, gw, a)) ? new NK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Tb, c, this.h, this.g, null) : new NK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Tb, this.Rb, this.h, 
  I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 9, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [dk, this.Tb], null), new Q(null, 2, 5, R, [gw, this.Rb], null)], null), this.g));
};
h.U = function(b, a) {
  return new NK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Tb, this.Rb, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return this.name;
};
h.Ca = function() {
  return this.description;
};
h.Ja = function() {
  return this.B;
};
h.Ia = function() {
  var b = this.C;
  return m(b) ? b : E;
};
h.Ha = function() {
  var b = this.v;
  return m(b) ? b : E;
};
function OK(b) {
  return new NK(Z.b(b), ho.b(b), Rm.b(b), W.b(b), Hj.b(b), ql.b(b), Ur.b(b), dk.b(b), gw.b(b), null, J.j(b, Z, C([ho, Rm, W, Hj, ql, Ur, dk, gw], 0)), null);
}
function PK() {
}
var QK = function QK(a) {
  if (null != a && null != a.mf) {
    return a.mf(a);
  }
  var c = QK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = QK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("PayloadHolder.payloads", a);
};
function RK() {
}
var SK = function SK(a) {
  if (null != a && null != a.Vg) {
    return a.method;
  }
  var c = SK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = SK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Operation.method", a);
}, TK = function TK(a) {
  if (null != a && null != a.Wg) {
    return a.request;
  }
  var c = TK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = TK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Operation.request", a);
}, UK = function UK(a) {
  if (null != a && null != a.Xg) {
    return a.wb;
  }
  var c = UK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = UK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Operation.responses", a);
};
function VK(b, a, c, d, e, f, g, n, r, u, y, D, G, H, M, O, T) {
  this.id = b;
  this.F = a;
  this.B = c;
  this.name = d;
  this.description = e;
  this.C = f;
  this.v = g;
  this.method = n;
  this.host = r;
  this.scheme = u;
  this.da = y;
  this.na = D;
  this.wb = G;
  this.request = H;
  this.h = M;
  this.g = O;
  this.m = T;
  this.l = 2229667594;
  this.M = 8192;
}
h = VK.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "description":
      return this.description;
    case "request":
      return this.request;
    case "extends":
      return this.C;
    case "method":
      return this.method;
    case "sources":
      return this.B;
    case "name":
      return this.name;
    case "abstract":
      return this.F;
    case "host":
      return this.host;
    case "additional-properties":
      return this.v;
    case "id":
      return this.id;
    case "responses":
      return this.wb;
    case "content-type":
      return this.na;
    case "accepts":
      return this.da;
    case "scheme":
      return this.scheme;
    default:
      return t.c(this.g, a, c);
  }
};
h.Yf = function() {
  return this.scheme;
};
h.hf = function() {
  return this.da;
};
h.jf = function() {
  return this.na;
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.domain.ParsedOperation{", ", ", "}", c, N.a(new Q(null, 14, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [xm, this.method], null), new Q(null, 2, 5, R, [xq, this.host], null), 
  new Q(null, 2, 5, R, [Cv, this.scheme], null), new Q(null, 2, 5, R, [wt, this.da], null), new Q(null, 2, 5, R, [Ss, this.na], null), new Q(null, 2, 5, R, [ss, this.wb], null), new Q(null, 2, 5, R, [Hk, this.request], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 14, new Q(null, 14, 5, R, [Z, ho, Rm, W, Hj, ql, Ur, xm, xq, Cv, wt, Ss, ss, Hk], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 14 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.Zc = k;
h.Vg = function() {
  return this.method;
};
h.Wg = function() {
  return this.request;
};
h.Xg = function() {
  return this.wb;
};
h.wc = k;
h.td = function() {
  return this.F;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 14, [Hj, null, Hk, null, ql, null, xm, null, Rm, null, W, null, ho, null, xq, null, Ur, null, Z, null, ss, null, Ss, null, wt, null, Cv, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new VK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.method, this.host, this.scheme, this.da, this.na, this.wb, this.request, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new VK(c, this.F, this.B, this.name, this.description, this.C, this.v, this.method, this.host, this.scheme, this.da, this.na, this.wb, this.request, this.h, this.g, null) : m(L.a ? L.a(ho, a) : L.call(null, ho, a)) ? new VK(this.id, c, this.B, this.name, this.description, this.C, this.v, this.method, this.host, this.scheme, this.da, this.na, this.wb, this.request, this.h, this.g, null) : m(L.a ? L.a(Rm, a) : L.call(null, Rm, a)) ? new VK(this.id, 
  this.F, c, this.name, this.description, this.C, this.v, this.method, this.host, this.scheme, this.da, this.na, this.wb, this.request, this.h, this.g, null) : m(L.a ? L.a(W, a) : L.call(null, W, a)) ? new VK(this.id, this.F, this.B, c, this.description, this.C, this.v, this.method, this.host, this.scheme, this.da, this.na, this.wb, this.request, this.h, this.g, null) : m(L.a ? L.a(Hj, a) : L.call(null, Hj, a)) ? new VK(this.id, this.F, this.B, this.name, c, this.C, this.v, this.method, this.host, 
  this.scheme, this.da, this.na, this.wb, this.request, this.h, this.g, null) : m(L.a ? L.a(ql, a) : L.call(null, ql, a)) ? new VK(this.id, this.F, this.B, this.name, this.description, c, this.v, this.method, this.host, this.scheme, this.da, this.na, this.wb, this.request, this.h, this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new VK(this.id, this.F, this.B, this.name, this.description, this.C, c, this.method, this.host, this.scheme, this.da, this.na, this.wb, this.request, this.h, this.g, 
  null) : m(L.a ? L.a(xm, a) : L.call(null, xm, a)) ? new VK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, c, this.host, this.scheme, this.da, this.na, this.wb, this.request, this.h, this.g, null) : m(L.a ? L.a(xq, a) : L.call(null, xq, a)) ? new VK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.method, c, this.scheme, this.da, this.na, this.wb, this.request, this.h, this.g, null) : m(L.a ? L.a(Cv, a) : L.call(null, Cv, a)) ? new VK(this.id, this.F, 
  this.B, this.name, this.description, this.C, this.v, this.method, this.host, c, this.da, this.na, this.wb, this.request, this.h, this.g, null) : m(L.a ? L.a(wt, a) : L.call(null, wt, a)) ? new VK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.method, this.host, this.scheme, c, this.na, this.wb, this.request, this.h, this.g, null) : m(L.a ? L.a(Ss, a) : L.call(null, Ss, a)) ? new VK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.method, this.host, 
  this.scheme, this.da, c, this.wb, this.request, this.h, this.g, null) : m(L.a ? L.a(ss, a) : L.call(null, ss, a)) ? new VK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.method, this.host, this.scheme, this.da, this.na, c, this.request, this.h, this.g, null) : m(L.a ? L.a(Hk, a) : L.call(null, Hk, a)) ? new VK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.method, this.host, this.scheme, this.da, this.na, this.wb, c, this.h, this.g, null) : 
  new VK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.method, this.host, this.scheme, this.da, this.na, this.wb, this.request, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 14, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [xm, this.method], null), new Q(null, 2, 5, R, [xq, this.host], null), new Q(null, 2, 5, R, [Cv, this.scheme], null), new Q(null, 2, 5, 
  R, [wt, this.da], null), new Q(null, 2, 5, R, [Ss, this.na], null), new Q(null, 2, 5, R, [ss, this.wb], null), new Q(null, 2, 5, R, [Hk, this.request], null)], null), this.g));
};
h.U = function(b, a) {
  return new VK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.method, this.host, this.scheme, this.da, this.na, this.wb, this.request, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return this.name;
};
h.Ca = function() {
  return this.description;
};
h.Ja = function() {
  return this.B;
};
h.Ia = function() {
  var b = this.C;
  return m(b) ? b : E;
};
h.Ha = function() {
  var b = this.v;
  return m(b) ? b : E;
};
function WK(b) {
  return new VK(Z.b(b), ho.b(b), Rm.b(b), W.b(b), Hj.b(b), ql.b(b), Ur.b(b), xm.b(b), xq.b(b), Cv.b(b), wt.b(b), Ss.b(b), ss.b(b), Hk.b(b), null, J.j(b, Z, C([ho, Rm, W, Hj, ql, Ur, xm, xq, Cv, wt, Ss, ss, Hk], 0)), null);
}
function XK() {
}
var YK = function YK(a) {
  if (null != a && null != a.bh) {
    return a.Mb;
  }
  var c = YK[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = YK._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Response.status-code", a);
};
function ZK(b, a, c, d, e, f, g, n, r, u, y, D, G) {
  this.id = b;
  this.F = a;
  this.B = c;
  this.name = d;
  this.description = e;
  this.C = f;
  this.v = g;
  this.Mb = n;
  this.headers = r;
  this.ya = u;
  this.h = y;
  this.g = D;
  this.m = G;
  this.l = 2229667594;
  this.M = 8192;
}
h = ZK.prototype;
h.ge = k;
h.Qe = function() {
  var b = this.headers;
  return m(b) ? b : E;
};
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "description":
      return this.description;
    case "payloads":
      return this.ya;
    case "extends":
      return this.C;
    case "sources":
      return this.B;
    case "name":
      return this.name;
    case "abstract":
      return this.F;
    case "status-code":
      return this.Mb;
    case "headers":
      return this.headers;
    case "additional-properties":
      return this.v;
    case "id":
      return this.id;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.domain.ParsedResponse{", ", ", "}", c, N.a(new Q(null, 10, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [Wo, this.Mb], null), new Q(null, 2, 5, R, [Hp, this.headers], null), 
  new Q(null, 2, 5, R, [hl, this.ya], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 10, new Q(null, 10, 5, R, [Z, ho, Rm, W, Hj, ql, Ur, Wo, Hp, hl], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 10 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.wc = k;
h.td = function() {
  return this.F;
};
h.Se = k;
h.mf = function() {
  return this.ya;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 10, [Hj, null, hl, null, ql, null, Rm, null, W, null, ho, null, Wo, null, Hp, null, Ur, null, Z, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new ZK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Mb, this.headers, this.ya, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new ZK(c, this.F, this.B, this.name, this.description, this.C, this.v, this.Mb, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(ho, a) : L.call(null, ho, a)) ? new ZK(this.id, c, this.B, this.name, this.description, this.C, this.v, this.Mb, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(Rm, a) : L.call(null, Rm, a)) ? new ZK(this.id, this.F, c, this.name, this.description, this.C, this.v, this.Mb, this.headers, this.ya, this.h, 
  this.g, null) : m(L.a ? L.a(W, a) : L.call(null, W, a)) ? new ZK(this.id, this.F, this.B, c, this.description, this.C, this.v, this.Mb, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(Hj, a) : L.call(null, Hj, a)) ? new ZK(this.id, this.F, this.B, this.name, c, this.C, this.v, this.Mb, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(ql, a) : L.call(null, ql, a)) ? new ZK(this.id, this.F, this.B, this.name, this.description, c, this.v, this.Mb, this.headers, this.ya, this.h, 
  this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new ZK(this.id, this.F, this.B, this.name, this.description, this.C, c, this.Mb, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(Wo, a) : L.call(null, Wo, a)) ? new ZK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, c, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(Hp, a) : L.call(null, Hp, a)) ? new ZK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Mb, c, this.ya, 
  this.h, this.g, null) : m(L.a ? L.a(hl, a) : L.call(null, hl, a)) ? new ZK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Mb, this.headers, c, this.h, this.g, null) : new ZK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Mb, this.headers, this.ya, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 10, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [Wo, this.Mb], null), new Q(null, 2, 5, R, [Hp, this.headers], null), new Q(null, 2, 5, R, [hl, this.ya], null)], null), this.g));
};
h.U = function(b, a) {
  return new ZK(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Mb, this.headers, this.ya, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return this.name;
};
h.Ca = function() {
  return this.description;
};
h.Ja = function() {
  return this.B;
};
h.Ia = function() {
  var b = this.C;
  return m(b) ? b : E;
};
h.Ha = function() {
  var b = this.v;
  return m(b) ? b : E;
};
h.Xd = k;
h.bh = function() {
  return this.Mb;
};
function $K(b) {
  return new ZK(Z.b(b), ho.b(b), Rm.b(b), W.b(b), Hj.b(b), ql.b(b), Ur.b(b), Wo.b(b), Hp.b(b), hl.b(b), null, J.j(b, Z, C([ho, Rm, W, Hj, ql, Ur, Wo, Hp, hl], 0)), null);
}
function aL() {
}
var bL = function bL(a) {
  if (null != a && null != a.$f) {
    return a.shape;
  }
  var c = bL[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = bL._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Type.shape", a);
};
function cL(b, a, c, d, e, f, g, n, r, u, y) {
  this.id = b;
  this.F = a;
  this.B = c;
  this.name = d;
  this.C = e;
  this.description = f;
  this.shape = g;
  this.v = n;
  this.h = r;
  this.g = u;
  this.m = y;
  this.l = 2229667594;
  this.M = 8192;
}
h = cL.prototype;
h.Wb = k;
h.$f = function() {
  return this.shape;
};
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "id":
      return this.id;
    case "abstract":
      return this.F;
    case "sources":
      return this.B;
    case "name":
      return this.name;
    case "extends":
      return this.C;
    case "description":
      return this.description;
    case "shape":
      return this.shape;
    case "additional-properties":
      return this.v;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.domain.ParsedType{", ", ", "}", c, N.a(new Q(null, 8, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ws, this.shape], null), new Q(null, 2, 5, R, [Ur, this.v], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 8, new Q(null, 8, 5, R, [Z, ho, Rm, W, ql, Hj, ws, Ur], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 8 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.wc = k;
h.td = function() {
  return this.F;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 8, [Hj, null, ql, null, Rm, null, W, null, ho, null, Ur, null, Z, null, ws, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new cL(this.id, this.F, this.B, this.name, this.C, this.description, this.shape, this.v, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new cL(c, this.F, this.B, this.name, this.C, this.description, this.shape, this.v, this.h, this.g, null) : m(L.a ? L.a(ho, a) : L.call(null, ho, a)) ? new cL(this.id, c, this.B, this.name, this.C, this.description, this.shape, this.v, this.h, this.g, null) : m(L.a ? L.a(Rm, a) : L.call(null, Rm, a)) ? new cL(this.id, this.F, c, this.name, this.C, this.description, this.shape, this.v, this.h, this.g, null) : m(L.a ? L.a(W, a) : L.call(null, W, a)) ? 
  new cL(this.id, this.F, this.B, c, this.C, this.description, this.shape, this.v, this.h, this.g, null) : m(L.a ? L.a(ql, a) : L.call(null, ql, a)) ? new cL(this.id, this.F, this.B, this.name, c, this.description, this.shape, this.v, this.h, this.g, null) : m(L.a ? L.a(Hj, a) : L.call(null, Hj, a)) ? new cL(this.id, this.F, this.B, this.name, this.C, c, this.shape, this.v, this.h, this.g, null) : m(L.a ? L.a(ws, a) : L.call(null, ws, a)) ? new cL(this.id, this.F, this.B, this.name, this.C, this.description, 
  c, this.v, this.h, this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new cL(this.id, this.F, this.B, this.name, this.C, this.description, this.shape, c, this.h, this.g, null) : new cL(this.id, this.F, this.B, this.name, this.C, this.description, this.shape, this.v, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 8, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ws, this.shape], null), new Q(null, 2, 5, R, [Ur, this.v], null)], null), this.g));
};
h.U = function(b, a) {
  return new cL(this.id, this.F, this.B, this.name, this.C, this.description, this.shape, this.v, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return this.name;
};
h.Ca = function() {
  return this.description;
};
h.Ja = function() {
  return this.B;
};
h.Ia = function() {
  var b = this.C;
  return m(b) ? b : E;
};
h.Ha = function() {
  var b = this.v;
  return m(b) ? b : E;
};
function dL(b) {
  return new cL(Z.b(b), ho.b(b), Rm.b(b), W.b(b), ql.b(b), Hj.b(b), ws.b(b), Ur.b(b), null, J.j(b, Z, C([ho, Rm, W, ql, Hj, ws, Ur], 0)), null);
}
function eL() {
}
var fL = function fL(a) {
  if (null != a && null != a.Yg) {
    return a.Lb;
  }
  var c = fL[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = fL._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Parameter.parameter-kind", a);
}, gL = function gL(a) {
  if (null != a && null != a.Zg) {
    return a.required;
  }
  var c = gL[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = gL._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Parameter.required", a);
};
function hL(b, a, c, d, e, f, g, n, r, u, y, D, G) {
  this.id = b;
  this.F = a;
  this.B = c;
  this.name = d;
  this.description = e;
  this.C = f;
  this.v = g;
  this.Lb = n;
  this.shape = r;
  this.required = u;
  this.h = y;
  this.g = D;
  this.m = G;
  this.l = 2229667594;
  this.M = 8192;
}
h = hL.prototype;
h.Wb = k;
h.$f = function() {
  return this.shape;
};
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "description":
      return this.description;
    case "extends":
      return this.C;
    case "sources":
      return this.B;
    case "name":
      return this.name;
    case "abstract":
      return this.F;
    case "parameter-kind":
      return this.Lb;
    case "additional-properties":
      return this.v;
    case "id":
      return this.id;
    case "shape":
      return this.shape;
    case "required":
      return this.required;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.domain.ParsedParameter{", ", ", "}", c, N.a(new Q(null, 10, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [Dp, this.Lb], null), new Q(null, 2, 5, R, [ws, this.shape], null), 
  new Q(null, 2, 5, R, [Mv, this.required], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 10, new Q(null, 10, 5, R, [Z, ho, Rm, W, Hj, ql, Ur, Dp, ws, Mv], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 10 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.wc = k;
h.td = function() {
  return this.F;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 10, [Hj, null, ql, null, Rm, null, W, null, ho, null, Dp, null, Ur, null, Z, null, ws, null, Mv, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new hL(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Lb, this.shape, this.required, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new hL(c, this.F, this.B, this.name, this.description, this.C, this.v, this.Lb, this.shape, this.required, this.h, this.g, null) : m(L.a ? L.a(ho, a) : L.call(null, ho, a)) ? new hL(this.id, c, this.B, this.name, this.description, this.C, this.v, this.Lb, this.shape, this.required, this.h, this.g, null) : m(L.a ? L.a(Rm, a) : L.call(null, Rm, a)) ? new hL(this.id, this.F, c, this.name, this.description, this.C, this.v, this.Lb, this.shape, this.required, 
  this.h, this.g, null) : m(L.a ? L.a(W, a) : L.call(null, W, a)) ? new hL(this.id, this.F, this.B, c, this.description, this.C, this.v, this.Lb, this.shape, this.required, this.h, this.g, null) : m(L.a ? L.a(Hj, a) : L.call(null, Hj, a)) ? new hL(this.id, this.F, this.B, this.name, c, this.C, this.v, this.Lb, this.shape, this.required, this.h, this.g, null) : m(L.a ? L.a(ql, a) : L.call(null, ql, a)) ? new hL(this.id, this.F, this.B, this.name, this.description, c, this.v, this.Lb, this.shape, this.required, 
  this.h, this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new hL(this.id, this.F, this.B, this.name, this.description, this.C, c, this.Lb, this.shape, this.required, this.h, this.g, null) : m(L.a ? L.a(Dp, a) : L.call(null, Dp, a)) ? new hL(this.id, this.F, this.B, this.name, this.description, this.C, this.v, c, this.shape, this.required, this.h, this.g, null) : m(L.a ? L.a(ws, a) : L.call(null, ws, a)) ? new hL(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Lb, 
  c, this.required, this.h, this.g, null) : m(L.a ? L.a(Mv, a) : L.call(null, Mv, a)) ? new hL(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Lb, this.shape, c, this.h, this.g, null) : new hL(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Lb, this.shape, this.required, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 10, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [Dp, this.Lb], null), new Q(null, 2, 5, R, [ws, this.shape], null), new Q(null, 2, 5, R, [Mv, this.required], null)], null), this.g));
};
h.U = function(b, a) {
  return new hL(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.Lb, this.shape, this.required, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return this.name;
};
h.Ca = function() {
  return this.description;
};
h.Ja = function() {
  return this.B;
};
h.Ia = function() {
  var b = this.C;
  return m(b) ? b : E;
};
h.Ha = function() {
  var b = this.v;
  return m(b) ? b : E;
};
h.kf = k;
h.Yg = function() {
  return this.Lb;
};
h.Zg = function() {
  return this.required;
};
function iL(b) {
  return new hL(Z.b(b), ho.b(b), Rm.b(b), W.b(b), Hj.b(b), ql.b(b), Ur.b(b), Dp.b(b), ws.b(b), Mv.b(b), null, J.j(b, Z, C([ho, Rm, W, Hj, ql, Ur, Dp, ws, Mv], 0)), null);
}
function jL(b, a, c, d, e, f, g, n, r, u, y, D, G, H) {
  this.id = b;
  this.F = a;
  this.B = c;
  this.name = d;
  this.description = e;
  this.C = f;
  this.v = g;
  this.ga = n;
  this.da = r;
  this.headers = u;
  this.ya = y;
  this.h = D;
  this.g = G;
  this.m = H;
  this.l = 2229667594;
  this.M = 8192;
}
h = jL.prototype;
h.ge = k;
h.Qe = function() {
  var b = this.headers;
  return m(b) ? b : E;
};
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "description":
      return this.description;
    case "payloads":
      return this.ya;
    case "extends":
      return this.C;
    case "sources":
      return this.B;
    case "name":
      return this.name;
    case "abstract":
      return this.F;
    case "headers":
      return this.headers;
    case "additional-properties":
      return this.v;
    case "id":
      return this.id;
    case "accepts":
      return this.da;
    case "parameters":
      return this.ga;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.model.domain.ParsedRequest{", ", ", "}", c, N.a(new Q(null, 11, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [iv, this.ga], null), new Q(null, 2, 5, R, [wt, this.da], null), new Q(null, 
  2, 5, R, [Hp, this.headers], null), new Q(null, 2, 5, R, [hl, this.ya], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 11, new Q(null, 11, 5, R, [Z, ho, Rm, W, Hj, ql, Ur, iv, wt, Hp, hl], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 11 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.he = k;
h.Re = function() {
  var b = this.ga;
  return m(b) ? b : E;
};
h.wc = k;
h.td = function() {
  return this.F;
};
h.Se = k;
h.mf = function() {
  var b = this.ya;
  return m(b) ? b : E;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 11, [Hj, null, hl, null, ql, null, Rm, null, W, null, ho, null, Hp, null, Ur, null, Z, null, wt, null, iv, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new jL(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.ga, this.da, this.headers, this.ya, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Z, a) : L.call(null, Z, a)) ? new jL(c, this.F, this.B, this.name, this.description, this.C, this.v, this.ga, this.da, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(ho, a) : L.call(null, ho, a)) ? new jL(this.id, c, this.B, this.name, this.description, this.C, this.v, this.ga, this.da, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(Rm, a) : L.call(null, Rm, a)) ? new jL(this.id, this.F, c, this.name, this.description, this.C, this.v, this.ga, this.da, 
  this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(W, a) : L.call(null, W, a)) ? new jL(this.id, this.F, this.B, c, this.description, this.C, this.v, this.ga, this.da, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(Hj, a) : L.call(null, Hj, a)) ? new jL(this.id, this.F, this.B, this.name, c, this.C, this.v, this.ga, this.da, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(ql, a) : L.call(null, ql, a)) ? new jL(this.id, this.F, this.B, this.name, this.description, 
  c, this.v, this.ga, this.da, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(Ur, a) : L.call(null, Ur, a)) ? new jL(this.id, this.F, this.B, this.name, this.description, this.C, c, this.ga, this.da, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(iv, a) : L.call(null, iv, a)) ? new jL(this.id, this.F, this.B, this.name, this.description, this.C, this.v, c, this.da, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(wt, a) : L.call(null, wt, a)) ? new jL(this.id, this.F, 
  this.B, this.name, this.description, this.C, this.v, this.ga, c, this.headers, this.ya, this.h, this.g, null) : m(L.a ? L.a(Hp, a) : L.call(null, Hp, a)) ? new jL(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.ga, this.da, c, this.ya, this.h, this.g, null) : m(L.a ? L.a(hl, a) : L.call(null, hl, a)) ? new jL(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.ga, this.da, this.headers, c, this.h, this.g, null) : new jL(this.id, this.F, this.B, 
  this.name, this.description, this.C, this.v, this.ga, this.da, this.headers, this.ya, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 11, 5, R, [new Q(null, 2, 5, R, [Z, this.id], null), new Q(null, 2, 5, R, [ho, this.F], null), new Q(null, 2, 5, R, [Rm, this.B], null), new Q(null, 2, 5, R, [W, this.name], null), new Q(null, 2, 5, R, [Hj, this.description], null), new Q(null, 2, 5, R, [ql, this.C], null), new Q(null, 2, 5, R, [Ur, this.v], null), new Q(null, 2, 5, R, [iv, this.ga], null), new Q(null, 2, 5, R, [wt, this.da], null), new Q(null, 2, 5, R, [Hp, this.headers], null), new Q(null, 2, 5, R, [hl, 
  this.ya], null)], null), this.g));
};
h.U = function(b, a) {
  return new jL(this.id, this.F, this.B, this.name, this.description, this.C, this.v, this.ga, this.da, this.headers, this.ya, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
h.ha = k;
h.Da = function() {
  return this.id;
};
h.Ea = function() {
  return this.name;
};
h.Ca = function() {
  return this.description;
};
h.Ja = function() {
  return this.B;
};
h.Ia = function() {
  var b = this.C;
  return m(b) ? b : E;
};
h.Ha = function() {
  var b = this.v;
  return m(b) ? b : E;
};
function kL(b) {
  return new jL(Z.b(b), ho.b(b), Rm.b(b), W.b(b), Hj.b(b), ql.b(b), Ur.b(b), iv.b(b), wt.b(b), Hp.b(b), hl.b(b), null, J.j(b, Z, C([ho, Rm, W, Hj, ql, Ur, iv, wt, Hp, hl], 0)), null);
}
;var lL = hC("TYPE_EXPRESSION \x3d TYPE_NAME | SCALAR_TYPE | \x3c'('\x3e \x3cBS\x3e  TYPE_EXPRESSION \x3cBS\x3e \x3c')'\x3e | ARRAY_TYPE | UNION_TYPE\n                   SCALAR_TYPE \x3d 'string' | 'number' | 'integer' | 'boolean' | 'date-only' | 'time-only' | 'datetime-only' | 'datetime' | 'file' | 'nil'\n                   ARRAY_TYPE \x3d TYPE_EXPRESSION \x3c'[]'\x3e\n                   TYPE_NAME \x3d #\"(\\w[\\w\\d]+\\.)*\\w[\\w\\d]+\"\n                   UNION_TYPE \x3d TYPE_EXPRESSION \x3cBS\x3e (\x3c'|'\x3e \x3cBS\x3e TYPE_EXPRESSION)+\n                   BS \x3d #\"\\s*\"\n                   "), 
mL = function mL(a) {
  for (;;) {
    var c = jg(function() {
      return function(a) {
        return yf(a, xt);
      };
    }(a), a);
    if (v.a(1, B(c)) && re(x(c))) {
      a = x(c);
    } else {
      var d = v, e = x(c);
      if (m(function() {
        var a = e;
        return d.a ? d.a(vo, a) : d.call(null, vo, a);
      }())) {
        return new l(null, 2, [uo, "union", wl, hg(function() {
          return function(a) {
            return mL.b ? mL.b(a) : mL.call(null, a);
          };
        }(a, d, e, c), sd(c))], null);
      }
      if (m(function() {
        var a = e;
        return d.a ? d.a(Ns, a) : d.call(null, Ns, a);
      }())) {
        return new l(null, 1, [uo, be(c)], null);
      }
      if (m(function() {
        var a = e;
        return d.a ? d.a(rm, a) : d.call(null, rm, a);
      }())) {
        return new l(null, 2, [uo, "array", uu, function() {
          var a = be(c);
          return mL.b ? mL.b(a) : mL.call(null, a);
        }()], null);
      }
      if (m(function() {
        var a = e;
        return d.a ? d.a(Io, a) : d.call(null, Io, a);
      }())) {
        return be(c);
      }
      throw Error([q("Cannot parse type expression AST "), q(hg(Ge, c))].join(""));
    }
  }
};
function nL(b, a) {
  return Cb.c(function(a, b) {
    return b.b ? b.b(a) : b.call(null, a);
  }, a, hg(function(a) {
    var b = F(a, 0, null), c = F(a, 1, null);
    return m(v.a ? v.a(om, b) : v.call(null, om, b)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, QC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", e], null)], null));
      };
    }(v, b, a, b, c) : m(v.a ? v.a(Hj, b) : v.call(null, Hj, b)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, RC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", e], null)], null));
      };
    }(v, b, a, b, c) : Ge;
  }, b));
}
function oL(b, a) {
  return pe(b) ? nL(b, Cb.c(function(a, b) {
    return b.b ? b.b(a) : b.call(null, a);
  }, a, hg(function(b) {
    var c = F(b, 0, null), e = F(b, 1, null);
    return m(v.a ? v.a(To, c) : v.call(null, To, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("minLength"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", ED(e)], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(rt, c) : v.call(null, rt, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("maxLength"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", ED(e)], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(ls, c) : v.call(null, ls, c)) ? m(QJ(a)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("minCount"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", ED(e)], null)], null));
      };
    }(v, c, b, c, e) : Ge : m(v.a ? v.a(Tv, c) : v.call(null, Tv, c)) ? m(QJ(a)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("maxCount"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", ED(e)], null)], null));
      };
    }(v, c, b, c, e) : Ge : m(v.a ? v.a(hw, c) : v.call(null, hw, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("pattern"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", e], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(rk, c) : v.call(null, rk, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, mC("format"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", e], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(Xk, c) : v.call(null, Xk, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, mC("uniqueItems"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", e], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(wk, c) : v.call(null, wk, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, mC("multipleOf"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", ED(e)], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(is, c) : v.call(null, is, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("minExclusive"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", ED(e)], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(Kj, c) : v.call(null, Kj, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("in"), new l(null, 1, ["@list", hg(JJ, e)], null));
      };
    }(v, c, b, c, e) : Ge;
  }, b))) : a;
}
function pL(b, a) {
  return null != Mv.b(a) ? Mv.b(a) : ra(b, "?") ? !1 : !0;
}
function qL(b, a) {
  return null != Mv.b(a) ? hJ(b) : uz(hJ(b), /\?$/, "");
}
function rL(b) {
  var a = XJ(b), a = Tf.a(function() {
    return function(a) {
      return J.a(a, "@type");
    };
  }(a), a);
  return I.c(J.a(ki.j(C([b, YJ(a)], 0)), "@type"), nC("maxCount"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", 1], null)], null));
}
function sL(b) {
  var a = t.a(b, mC("item")), c = pJ(b, nC("minCount"));
  b = pJ(b, nC("maxCount"));
  a = Tf.a(function() {
    return function(a) {
      return m(OJ(a)) ? a : m(PJ(a)) ? jh([nC("datatype"), t.a(a, nC("datatype"))]) : jh([nC("node"), new Q(null, 1, 5, R, [I.c(a, "@id", HJ.j(t.a(a, "@id"), C(["/node-property"], 0)))], null)]);
    };
  }(a, c, b), a);
  a = v.a(1, B(a)) ? x(a) : jh([nC("or"), new l(null, 1, ["@list", a], null)]);
  return ki.j(C([uJ(jh([mC("ordered"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", !0], null)], null), nC("minCount"), null != c ? new Q(null, 1, 5, R, [new l(null, 1, ["@value", c], null)], null) : null, nC("maxCount"), null != b ? new Q(null, 1, 5, R, [new l(null, 1, ["@value", b], null)], null) : null])), a], 0));
}
function tL(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Xu), c = hg(function(a, b, c, d) {
    return function(a) {
      var b = F(a, 0, null);
      a = F(a, 1, null);
      var e = hJ(b), b = pL(e, a), e = qL(e, a), f = HJ.j(d, C([[q("/property/"), q(e)].join("")], 0)), g;
      g = I.c(c, Xu, f);
      g = uL.a ? uL.a(a, g) : uL.call(null, a, g);
      g = m(OJ(g)) ? rL(g) : m(PJ(g)) ? jh([nC("maxCount"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", 1], null)], null), nC("datatype"), t.a(g, nC("datatype"))]) : m(QJ(g)) ? sL(g) : m(nJ(g, mC("NilValueShape"))) ? VJ() : jh([nC("maxCount"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", 1], null)], null), nC("node"), new Q(null, 1, 5, R, [I.c(g, "@id", HJ.j(t.a(g, "@id"), C(["/node-property"], 0)))], null)]);
      b = null == pJ(g, nC("minCount")) ? I.c(g, nC("minCount"), new Q(null, 1, 5, R, [m(b) ? new l(null, 1, ["@value", 1], null) : new l(null, 1, ["@value", 0], null)], null)) : g;
      b = uJ(I.c(I.c(I.c(I.c(b, "@id", f), "@type", new Q(null, 2, 5, R, [nC("PropertyShape"), nC("Shape")], null)), nC("path"), new Q(null, 1, 5, R, [new l(null, 1, ["@id", rC(e)], null)], null)), mC("propertyLabel"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", e], null)], null)));
      return oL(a, b);
    };
  }(a, c, c, d), Pj.a(b, E)), e = Wj.b(b);
  return oL(b, uJ(jh(["@type", new Q(null, 2, 5, R, [nC("NodeShape"), nC("Shape")], null), "@id", d, nC("property"), c, nC("closed"), null != e ? new Q(null, 1, 5, R, [new l(null, 1, ["@value", rb(e)], null)], null) : null])));
}
function vL(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Xu), e = null != t.a(b, df.b("(is-tuple)")), f = e ? fv.b(uu.b(b)) : new Q(null, 1, 5, R, [uu.a(b, new l(null, 1, [uo, "any"], null))], null), c = ig(function(a, b, c, d, e, f) {
    return function(a, b) {
      var c = I.c(e, Xu, [q(f), q("/items/"), q(a)].join(""));
      return uL.a ? uL.a(b, c) : uL.call(null, b, c);
    };
  }(e, f, a, c, c, d), yi(0, B(f)), f);
  return oL(b, uJ(jh(["@type", new Q(null, 2, 5, R, [mC("Array"), nC("Shape")], null), "@id", d, mC("item"), c])));
}
var wL = function wL(a, c) {
  return v.a(c, "number") ? jh([nC("or"), new l(null, 1, ["@list", new Q(null, 2, 5, R, [function() {
    var a = HJ.j(wL, C(["or/integer"], 0));
    return wL.a ? wL.a(a, "integer") : wL.call(null, a, "integer");
  }(), function() {
    var a = HJ.j(wL, C(["or/float"], 0));
    return wL.a ? wL.a(a, "float") : wL.call(null, a, "float");
  }()], null)], null), "@type", new Q(null, 2, 5, R, [mC("Scalar"), nC("Shape")], null), mC("is-number"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", !0], null)], null)]) : uJ(jh(["@id", a, "@type", new Q(null, 2, 5, R, [mC("Scalar"), nC("Shape")], null), nC("datatype"), v.a("shapes:any", c) ? null : new Q(null, 1, 5, R, [new l(null, 1, ["@id", c], null)], null)]));
};
function xL(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Xu), e = t.a(c, Xj), f = wl.b(b), c = hg(function(a, b, c, d) {
    return function(a) {
      return uL.a ? uL.a(a, d) : uL.call(null, a, d);
    };
  }(f, a, c, c, d, e), f);
  return jh(["@id", d, "@type", new Q(null, 2, 5, R, [mC("NodeShape"), nC("Shape")], null), mC("inherits"), c]);
}
function yL(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = HJ.j(d, C(["type"], 0)), d = null != Pj.b(b) ? function() {
    var a = I.c(b, uo, "object");
    return uL.a ? uL.a(a, c) : uL.call(null, a, c);
  }() : null != uu.b(b) ? function() {
    var a = I.c(b, uo, "array");
    return uL.a ? uL.a(a, c) : uL.call(null, a, c);
  }() : new l(null, 2, ["@id", e, "@type", new Q(null, 2, 5, R, [mC("NodeShape"), nC("Shape")], null)], null), g = function() {
    var a = uo.b(b), d = I.c(I.c(c, Xu, HJ.j(e, C(["type"], 0))), ev, f);
    return uL.a ? uL.a(a, d) : uL.call(null, a, d);
  }();
  return I.c(d, mC("inherits"), new Q(null, 1, 5, R, [g], null));
}
function zL(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, rq), e = t.a(c, Xu);
  d.a ? d.a(b, c) : d.call(null, b, c);
  c = yy(b);
  return jh(["@id", e, "@type", new Q(null, 2, 5, R, [mC("NodeShape"), nC("Shape")], null), mC("inherits"), new Q(null, 1, 5, R, [new l(null, 1, ["@id", c], null)], null)]);
}
function AL(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Po), e = t.a(c, Xu), c = t.a(c, It), f = t.a(d, df.b(b));
  if (m(f)) {
    d = function() {
      var a = W.b(f);
      if (m(a)) {
        return a;
      }
      a = (null != f ? k === f.Wb || (f.L ? 0 : p(aL, f)) : p(aL, f)) ? W.b(bL(f)) : null;
      return m(a) ? a : b;
    }();
    if (null != Lk.b(f)) {
      return jh(["@id", e, "@type", new Q(null, 2, 5, R, [mC("NodeShape"), nC("Shape")], null), QC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", d], null)], null), mC("inherits"), new Q(null, 1, 5, R, [new l(null, 1, ["@id", Lk.b(f)], null)], null)]);
    }
    if (null != f ? k === f.sd || (f.L ? 0 : p(Bx, f)) : p(Bx, f)) {
      return jh(["@id", e, "@type", new Q(null, 2, 5, R, [mC("NodeShape"), nC("Shape")], null), mC("inherits"), new Q(null, 1, 5, R, [new l(null, 1, ["@id", Cx(f)], null)], null)]);
    }
    var g = t.a(bL(f), "@id"), d = function() {
      var a = W.b(f);
      if (m(a)) {
        return a;
      }
      a = W.b(bL(f));
      return m(a) ? a : be(zz(g, /#/));
    }();
    return jh(["@id", e, QC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", d], null)], null), "@type", new Q(null, 2, 5, R, [mC("NodeShape"), nC("Shape")], null), mC("inherits"), new Q(null, 1, 5, R, [new l(null, 1, ["@id", g], null)], null)]);
  }
  return jh(["@id", e, "@type", new Q(null, 2, 5, R, [mC("NodeShape"), nC("Shape")], null), QC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", NJ(b)], null)], null), mC("inherits"), new Q(null, 1, 5, R, [new l(null, 1, ["@id", v.a(0, Bz(b, "#")) ? [q(c), q(b)].join("") : b], null)], null)]);
}
function BL(b, a) {
  return null != (A.b ? A.b(a) : A.call(null, a)) ? I.c(b, mC("ramlTypeExpression"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", A.b ? A.b(a) : A.call(null, a)], null)], null)) : b;
}
function CL(b, a, c) {
  c = null != c && (c.l & 64 || k === c.I) ? P(Of, c) : c;
  var d = t.a(c, Xu);
  v.a(b, "string") ? a = oL(a, wL(d, qC("string"))) : v.a(b, "number") ? a = oL(a, I.c(YJ(new Q(null, 2, 5, R, [wL(HJ.j(d, C(["or/float"], 0)), qC("float")), wL(HJ.j(d, C(["or/integer"], 0)), qC("integer"))], null)), mC("is-number"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", !0], null)], null))) : v.a(b, "integer") ? a = oL(a, wL(d, qC("integer"))) : v.a(b, "float") ? a = oL(a, wL(d, qC("float"))) : v.a(b, "boolean") ? a = oL(a, wL(d, qC("boolean"))) : v.a(b, "null") ? a = oL(a, wL(d, mC("null"))) : 
  v.a(b, "time-only") ? a = oL(a, wL(d, qC("time"))) : v.a(b, "datetime") ? a = oL(a, wL(d, qC("dateTime"))) : v.a(b, "datetime-only") ? a = oL(a, wL(d, mC("datetime-only"))) : v.a(b, "date-only") ? a = oL(a, wL(d, qC("date"))) : v.a(b, "any") ? a = oL(a, wL(d, mC("any"))) : v.a(b, "file") ? (b = oL(a, uJ(jh(["@type", new Q(null, 2, 5, R, [mC("FileUpload"), nC("Shape")], null), mC("fileType"), yJ(a, Sr)]))), a = oL(a, b)) : a = v.a(b, "nil") ? oL(a, WJ(c)) : v.a(b, "object") ? tL(a, c) : v.a(b, "array") ? 
  vL(a, c) : v.a(b, "union") ? xL(a, c) : "string" === typeof b && pa(b, "{") ? jh(["@id", d, "@type", new Q(null, 2, 5, R, [mC("JSONSchema"), nC("Shape")], null), mC("schemaRaw"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", b], null)], null)]) : "string" === typeof b && pa(b, "\x3c") ? jh(["@id", d, "@type", new Q(null, 2, 5, R, [mC("XMLSchema"), nC("Shape")], null), mC("schemaRaw"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", b], null)], null)]) : null;
  return a;
}
function DL(b, a, c) {
  c = null != c && (c.l & 64 || k === c.I) ? P(Of, c) : c;
  t.a(c, Xu);
  var d = t.a(c, Po), e = new l(null, 1, [uo, b], null), f;
  if (f = v.a(new Q(null, 1, 5, R, [uo], null), eh(e)) || v.a(new Q(null, 1, 5, R, [dk], null), eh(e)) || v.a(new Q(null, 1, 5, R, [$u], null), eh(e))) {
    e = x(fh(e)), f = null != t.a(d, df.b(e));
  }
  if (m(f)) {
    return AL(b, c);
  }
  if (null != xy(b)) {
    return zL(b, c);
  }
  var g;
  try {
    g = mL(lL.b ? lL.b(b) : lL.call(null, b));
  } catch (n) {
    if (n instanceof Error) {
      g = null;
    } else {
      throw n;
    }
  }
  if (null == g || v.a(g, b)) {
    return null;
  }
  Qf.a ? Qf.a(a, b) : Qf.call(null, a, b);
  return uL.a ? uL.a(g, c) : uL.call(null, g, c);
}
function uL(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a;
  t.a(c, Xu);
  var d = t.a(c, Xj);
  t.a(c, Po);
  var e = U ? U(null) : Nf.call(null, null);
  return BL(null == b ? null : null != xy(b) ? zL(b, c) : "string" === typeof b ? function() {
    var a = CL(b, new l(null, 1, [uo, b], null), c);
    return m(a) ? a : DL(b, e, c);
  }() : pe(b) ? function() {
    var a;
    a = uo.b(b);
    m(a) || (a = dk.b(b), a = m(a) ? a : m(d) ? d : "object");
    var g;
    g = a;
    g = v.a(g, "string") || v.a(g, "number") || v.a(g, "integer") || v.a(g, "float") || v.a(g, "boolean") || v.a(g, "null") || v.a(g, "time-only") || v.a(g, "datetime") || v.a(g, "datetime-only") || v.a(g, "date-only") || v.a(g, "any") || v.a(g, "file") || v.a(g, "nil") || v.a(g, "object") || v.a(g, "array") || v.a(g, "union") || "string" === typeof g && pa(g, "{") || "string" === typeof g && pa(g, "\x3c");
    m(g) ? a = CL(a, b, c) : (g = pe(b) && (v.a(new Q(null, 1, 5, R, [uo], null), eh(b)) || v.a(new Q(null, 1, 5, R, [dk], null), eh(b)) || v.a(new Q(null, 1, 5, R, [$u], null), eh(b))), m(g) ? a = DL(a, e, c) : (a = uo.a(b, dk.b(b)), a = I.c(J.a(J.a(b, uo), dk), uo, a), a = yL(a, c)));
    return a;
  }() : null, e);
}
;var EL = Di("/");
function FL(b) {
  if (le("" + q(b))) {
    return null;
  }
  b = v.a(b, "/") ? E : zz("" + q(b), EL);
  if (v.a(0, B(b))) {
    return new Q(null, 1, 5, R, [zr], null);
  }
  switch(x(b)) {
    case "":
      return tf(Jg, zr, sd(b));
    case ".":
      return tf(Jg, Sn, sd(b));
    default:
      return tf(Jg, Sn, b);
  }
}
function GL(b) {
  switch(x(b) instanceof K ? x(b).ca : null) {
    case "root":
      return [q("/"), q(wz("/", sd(b)))].join("");
    case "cwd":
      return z(b) ? wz("/", sd(b)) : ".";
    default:
      return wz("/", b);
  }
}
function HL(b) {
  var a = new Q(null, 1, 5, R, [x(b)], null);
  for (b = sd(b);;) {
    var c = w(b);
    b = x(c);
    var d = z(c), c = b;
    b = d;
    var d = v, e = c;
    if (m(d.a ? d.a(null, e) : d.call(null, null, e))) {
      return a;
    }
    m(d.a ? d.a("", e) : d.call(null, "", e)) || m(d.a ? d.a(".", e) : d.call(null, ".", e)) || (m(d.a ? d.a("..", e) : d.call(null, "..", e)) ? (c = be(a), a = v.a(Sn, c) ? ce.a(a, "..") : v.a("..", c) ? ce.a(a, "..") : v.a(zr, c) ? a : je(a)) : a = ce.a(a, c));
  }
}
;function IL(b) {
  b = null == b ? null : "" + q(b);
  b = null == b ? null : encodeURIComponent(b);
  return null == b ? null : b.replace("+", "%20");
}
function JL(b) {
  b = null == b ? null : "" + q(b);
  return null == b ? null : decodeURIComponent(b);
}
function KL(b) {
  b = w(b);
  var a = null == b ? null : De(Ae, b);
  b = null == a ? null : Tf.a(function() {
    return function(a) {
      var b = F(a, 0, null);
      a = F(a, 1, null);
      return new Q(null, 3, 5, R, [IL(ef(b)), "\x3d", IL("" + q(a))], null);
    };
  }(b, a), a);
  b = null == b ? null : $f("\x26", b);
  b = null == b ? null : fg(b);
  return null == b ? null : P(q, b);
}
function LL(b) {
  return Uf(2, N.a(zz(b, /=/), Xf("")));
}
function ML(b) {
  if (ta(null == b ? "" : String(b))) {
    return null;
  }
  b = zz(b, /&/);
  b = null == b ? null : w(b);
  b = null == b ? null : ag(LL, C([b], 0));
  b = null == b ? null : Tf.a(JL, b);
  return null == b ? null : P(Of, b);
}
function NL(b, a) {
  return !yf(null, a) || !yf(-1, a) || 80 === a && v.a(b, "http") || 443 === a && v.a(b, "https") ? null : [q(":"), q(a)].join("");
}
function OL(b, a, c, d, e, f, g, n, r, u, y) {
  this.protocol = b;
  this.username = a;
  this.password = c;
  this.host = d;
  this.port = e;
  this.path = f;
  this.query = g;
  this.anchor = n;
  this.h = r;
  this.g = u;
  this.m = y;
  this.l = 2229667594;
  this.M = 8192;
}
h = OL.prototype;
h.toString = function() {
  var b;
  b = this.username;
  var a = this.password;
  b = m(b) ? [q(b), q(":"), q(a)].join("") : null;
  return [q(this.protocol), q("://"), q(b), q(m(b) ? "@" : null), q(this.host), q(NL(this.protocol, this.port)), q(this.path), q(w(this.query) ? [q("?"), q("string" === typeof this.query ? this.query : KL(this.query))].join("") : null), q(m(this.anchor) ? [q("#"), q(this.anchor)].join("") : null)].join("");
};
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  switch(a instanceof K ? a.ca : null) {
    case "protocol":
      return this.protocol;
    case "username":
      return this.username;
    case "password":
      return this.password;
    case "host":
      return this.host;
    case "port":
      return this.port;
    case "path":
      return this.path;
    case "query":
      return this.query;
    case "anchor":
      return this.anchor;
    default:
      return t.c(this.g, a, c);
  }
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#cemerick.url.URL{", ", ", "}", c, N.a(new Q(null, 8, 5, R, [new Q(null, 2, 5, R, [Wl, this.protocol], null), new Q(null, 2, 5, R, [Jn, this.username], null), new Q(null, 2, 5, R, [hm, this.password], null), new Q(null, 2, 5, R, [xq, this.host], null), new Q(null, 2, 5, R, [Vo, this.port], null), new Q(null, 2, 5, R, [Lj, this.path], null), new Q(null, 2, 5, R, [Fu, this.query], null), new Q(null, 2, 5, R, [bu, this.anchor], null)], null), this.g));
};
h.ea = function() {
  return new Zg(0, this, 8, new Q(null, 8, 5, R, [Wl, Jn, hm, xq, Vo, Lj, Fu, bu], null), m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 8 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(new V(null, new l(null, 8, [Lj, null, Wl, null, hm, null, Jn, null, Vo, null, xq, null, bu, null, Fu, null], null), null), a) ? J.a(Wd(gg.a(S, this), this.h), a) : new OL(this.protocol, this.username, this.password, this.host, this.port, this.path, this.query, this.anchor, this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return m(L.a ? L.a(Wl, a) : L.call(null, Wl, a)) ? new OL(c, this.username, this.password, this.host, this.port, this.path, this.query, this.anchor, this.h, this.g, null) : m(L.a ? L.a(Jn, a) : L.call(null, Jn, a)) ? new OL(this.protocol, c, this.password, this.host, this.port, this.path, this.query, this.anchor, this.h, this.g, null) : m(L.a ? L.a(hm, a) : L.call(null, hm, a)) ? new OL(this.protocol, this.username, c, this.host, this.port, this.path, this.query, this.anchor, this.h, this.g, null) : 
  m(L.a ? L.a(xq, a) : L.call(null, xq, a)) ? new OL(this.protocol, this.username, this.password, c, this.port, this.path, this.query, this.anchor, this.h, this.g, null) : m(L.a ? L.a(Vo, a) : L.call(null, Vo, a)) ? new OL(this.protocol, this.username, this.password, this.host, c, this.path, this.query, this.anchor, this.h, this.g, null) : m(L.a ? L.a(Lj, a) : L.call(null, Lj, a)) ? new OL(this.protocol, this.username, this.password, this.host, this.port, c, this.query, this.anchor, this.h, this.g, 
  null) : m(L.a ? L.a(Fu, a) : L.call(null, Fu, a)) ? new OL(this.protocol, this.username, this.password, this.host, this.port, this.path, c, this.anchor, this.h, this.g, null) : m(L.a ? L.a(bu, a) : L.call(null, bu, a)) ? new OL(this.protocol, this.username, this.password, this.host, this.port, this.path, this.query, c, this.h, this.g, null) : new OL(this.protocol, this.username, this.password, this.host, this.port, this.path, this.query, this.anchor, this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(new Q(null, 8, 5, R, [new Q(null, 2, 5, R, [Wl, this.protocol], null), new Q(null, 2, 5, R, [Jn, this.username], null), new Q(null, 2, 5, R, [hm, this.password], null), new Q(null, 2, 5, R, [xq, this.host], null), new Q(null, 2, 5, R, [Vo, this.port], null), new Q(null, 2, 5, R, [Lj, this.path], null), new Q(null, 2, 5, R, [Fu, this.query], null), new Q(null, 2, 5, R, [bu, this.anchor], null)], null), this.g));
};
h.U = function(b, a) {
  return new OL(this.protocol, this.username, this.password, this.host, this.port, this.path, this.query, this.anchor, a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
function PL(b, a, c) {
  return v.a(b, a) ? c : b;
}
function QL(b) {
  var a = new BE(b);
  b = Az(function() {
    var b = a.Hd;
    return m(b) ? b : "";
  }(), /:/, 2);
  var c = F(b, 0, null), d = F(b, 1, null);
  return new OL(a.od, function() {
    var a = w(c);
    return a ? c : a;
  }(), function() {
    var a = w(d);
    return a ? d : a;
  }(), a.Pc, PL(a.Qd, null, -1), GL(HL(FL(a.Ec))), ML(PL(a.Wc.toString(), "", null)), PL(a.yd, "", null), null, null, null);
}
function RL(b) {
  return b instanceof OL ? b : QL(b);
}
;var SL = function SL(a) {
  if (pe(a)) {
    var c = t.a(a, df.b("__location__")), d = t.a(a, "__location__");
    return null != (m(c) ? c : d) ? Wd(gg.a(S, hg(function() {
      return function(a) {
        var c = F(a, 0, null);
        a = F(a, 1, null);
        return new Q(null, 2, 5, R, [c, SL.b ? SL.b(a) : SL.call(null, a)], null);
      };
    }(c, d), J.a(J.a(a, df.b("__location__")), "__location__"))), m(d) ? d : c) : gg.a(S, hg(function() {
      return function(a) {
        var c = F(a, 0, null);
        a = F(a, 1, null);
        return new Q(null, 2, 5, R, [c, SL.b ? SL.b(a) : SL.call(null, a)], null);
      };
    }(c, d), J.a(J.a(a, df.b("__location__")), "__location__")));
  }
  return me(a) ? hg(SL, a) : a;
};
function TL(b) {
  b = t.c(b, "swagger", t.a(b, Ct));
  return m(v.a ? v.a("2.0", b) : v.call(null, "2.0", b)) ? "Swagger" : m(v.a ? v.a("Swagger Library", b) : v.call(null, "Swagger Library", b)) ? "Swagger Library" : "Swagger Fragment";
}
function UL(b) {
  b = x(b);
  b = uz(b, "~1", "/");
  return uz(b, "~0", "~");
}
function VL(b, a) {
  for (;;) {
    if (null == a || le(b)) {
      return a;
    }
    if (pe(a)) {
      var c = UL(b), c = t.a(a, c), d = sd(b);
      b = d;
      a = c;
    } else {
      if (me(a)) {
        c = UL(b), c = ED(c), c = Nd(a, c), b = d = sd(b), a = c;
      } else {
        return null;
      }
    }
  }
}
function WL(b) {
  return null != Bz(b, "://") ? b : pa(b, "/") ? [q("file://"), q(b)].join("") : pa(b, ".") ? [q("file://"), q(b)].join("") : pa(b, "..") ? [q("file://"), q(b)].join("") : pa(b, "#") ? [q("file://."), q(b)].join("") : [q("file://./"), q(b)].join("");
}
function XL(b, a) {
  var c = RL(b), d = RL(WL(a));
  if (null != Bz(a, "://") && yf(Wl.b(d), Wl.b(c)) || yf(xq.b(d), "") && yf(xq.b(d), ".") && yf(xq.b(d), "..") && yf(xq.b(d), ".#")) {
    return a;
  }
  if (v.a(".#", xq.b(d)) || v.a("", Lj.b(d)) && null != bu.b(d)) {
    return [q(x(zz(b, /#/))), q("#"), q(bu.b(d))].join("");
  }
  if (v.a(".", xq.b(d)) && null != Lj.b(d)) {
    var e = wz("/", Wf(1, zz(Lj.b(c), /\//)));
    return [q(uz(x(zz(b, /#/)), Lj.b(c), "")), q(e), q(Lj.b(d)), q(m(bu.b(d)) ? [q("#"), q(bu.b(d))].join("") : "")].join("");
  }
  return v.a("..", xq.b(d)) && null != Lj.b(d) ? (e = wz("/", Wf(2, zz(Lj.b(c), /\//))), [q(uz(x(zz(b, /#/)), Lj.b(c), "")), q(e), q(Lj.b(d)), q(m(bu.b(d)) ? [q("#"), q(bu.b(d))].join("") : "")].join("")) : v.a("", xq.b(d)) ? [q(uz(b, Lj.b(c), "")), q(Lj.b(d)), q(m(bu.b(d)) ? [q("#"), q(bu.b(d))].join("") : "")].join("") : null;
}
function YL(b) {
  return null != t.a(b, "$ref") && "string" === typeof t.a(b, "$ref") && !Cz(t.a(b, "$ref"), "#");
}
function ZL(b, a) {
  var c = E, d = U ? U(c) : Nf.call(null, c);
  return new Q(null, 2, 5, R, [d, m(YL(a)) ? function() {
    var c = XL(b, t.a(a, "$ref"));
    Rf.a(d, function(a) {
      return function(b) {
        return ce.a(b, a);
      };
    }(c, d));
    return a;
  }() : pe(a) ? function() {
    for (var c = null != t.a(a, "id") && "string" === typeof t.a(a, "id") ? XL(b, t.a(a, "id")) : b, f = a, g = S;;) {
      if (le(f)) {
        if (m(null != t.a(a, "x-uses"))) {
          var n = cg(function() {
            return function(a) {
              return null != a && "string" === typeof a;
            };
          }(f, g, c, d), fg(new Q(null, 1, 5, R, [t.c(a, "x-uses", E)], null)));
          Rf.a(d, function(a, c, d, e, f) {
            return function(g) {
              return N.a(g, hg(function() {
                return function(a) {
                  return XL(b, a);
                };
              }(a, c, d, e, f), d));
            };
          }(f, g, n, c, d));
        }
        return g;
      }
      var r = x(f), n = F(r, 0, null), u = F(r, 1, null), y = ZL(c, u), D = F(y, 0, null), G = F(y, 1, null);
      Rf.a(d, function(a, b, c, d, e, f, g) {
        return function(a) {
          return N.a(a, A.b ? A.b(g) : A.call(null, g));
        };
      }(f, g, r, n, u, y, D, G, c, d));
      f = sd(f);
      g = I.c(g, n, G);
    }
  }() : me(a) ? hg(function(a) {
    return function(b) {
      var c = F(b, 0, null), d = F(b, 1, null);
      Rf.a(a, function(a, b) {
        return function(a) {
          return N.a(a, A.b ? A.b(b) : A.call(null, b));
        };
      }(b, c, d, a));
      return d;
    };
  }(d), hg(function() {
    return function(a) {
      return ZL(b, a);
    };
  }(d), a)) : a], null);
}
var $L = function $L(a, c, d) {
  if (m(YL(c))) {
    var e = XL(a, t.a(c, "$ref"));
    return t.a(d, e);
  }
  if (pe(c)) {
    for (var e = m(t.a(c, "id")) ? XL(a, t.a(c, "id")) : a, f = S;;) {
      if (le(c)) {
        return f;
      }
      var g = x(c), n = F(g, 0, null), r = F(g, 1, null);
      if (v.a(n, "x-uses")) {
        var u = sd(c), f = I.c(f, n, hg(function() {
          return function(c) {
            return t.a(d, XL(a, c));
          };
        }(c, f, g, n, r, e), fg(new Q(null, 1, 5, R, [r], null))));
        c = u;
      } else {
        c = sd(c), f = I.c(f, n, $L.c ? $L.c(e, r, d) : $L.call(null, e, r, d));
      }
    }
  } else {
    return me(c) ? hg(function(c) {
      return $L.c ? $L.c(a, c, d) : $L.call(null, a, c, d);
    }, c) : c;
  }
};
function aM(b) {
  var a = rx(1);
  Vw(function(a) {
    return function() {
      var c = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (G) {
                    if (G instanceof Object) {
                      b[5] = G, ox(b), c = X;
                    } else {
                      throw G;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(a) {
            var c = a[1];
            if (7 === c) {
              var d = a[7];
              a[2] = d;
              a[1] = 9;
              return X;
            }
            if (20 === c) {
              throw c = a[8], a = [q("Cannot find pointed reference "), q(c), q(" inside document")].join(""), Error(a);
            }
            if (1 === c) {
              return a[2] = null, a[1] = 4, X;
            }
            if (24 === c) {
              var e = a[9], c = a[8], d = a[10], f = TL(d), c = fe(["@location", "@fragment", "@data", "@raw"], [c, f, d, e]);
              a[2] = c;
              a[1] = 25;
              return X;
            }
            if (4 === c) {
              return nx(a, 3, 2), e = b, d = ih, a[7] = d, a[11] = e, a[2] = null, a[1] = 5, X;
            }
            if (15 === c) {
              return a[2] = null, a[1] = 16, X;
            }
            if (21 === c) {
              return a[2] = null, a[1] = 22, X;
            }
            if (13 === c) {
              return c = a[2], e = Gt.b(c), a[9] = c, a[1] = m(e) ? 14 : 15, X;
            }
            if (22 === c) {
              return e = a[11], c = a[8], d = a[2], e = sd(e), c = !Cz(be(zz(c, /:\/\//)), "."), a[12] = e, a[13] = d, a[1] = m(c) ? 23 : 24, X;
            }
            if (6 === c) {
              return c = a[2], a[2] = c, ox(a), X;
            }
            if (25 === c) {
              return d = a[7], e = a[12], c = a[8], c = I.c(d, c, a[2]), a[7] = c, a[11] = e, a[2] = null, a[1] = 5, X;
            }
            if (17 === c) {
              return e = a[14], c = a[8], c = zz(c, /#/), c = be(c), d = [q("#"), q(c)].join(""), c = e, v.a(d, "") || (v.a(d, "/") ? c = VL(new Q(null, 1, 5, R, [""], null), c) : (e = pa(d, "#") ? d.replace("#", "") : d, d = zz(e, /\//), e = ra(e, "/") ? N.a(d, new Q(null, 1, 5, R, [""], null)) : d, e = Vf(1, e), c = VL(e, c))), a[2] = c, a[1] = 19, X;
            }
            if (3 === c) {
              return c = a[2], a[2] = c, ox(a), X;
            }
            if (12 === c) {
              return c = a[8], e = a[2], c = FD(c), a[15] = e, jx(a, 13, c);
            }
            if (2 === c) {
              return lx(a, a[2]);
            }
            if (23 === c) {
              return c = a[8], d = a[10], e = TL(d), c = fe(["@location", "id", "@fragment", "@data"], [c, c, e, d]), a[2] = c, a[1] = 25, X;
            }
            if (19 === c) {
              return c = a[2], a[10] = c, a[1] = m(null == c) ? 20 : 21, X;
            }
            if (11 === c) {
              return a[2] = null, a[1] = 12, X;
            }
            if (9 === c) {
              return a[2] = a[2], a[1] = 6, X;
            }
            if (5 === c) {
              return e = a[11], c = le(e), a[1] = c ? 7 : 8, X;
            }
            if (14 === c) {
              throw e = a[9], a = Gt.b(e), Error(a);
            }
            if (16 === c) {
              return e = a[9], c = a[8], d = a[2], e = HD(e), c = Bz(c, "#"), a[16] = d, a[14] = e, a[1] = m(c) ? 17 : 18, X;
            }
            if (10 === c) {
              throw Error("Cannot load null reference");
            }
            return 18 === c ? (e = a[14], a[2] = e, a[1] = 19, X) : 8 === c ? (e = a[11], c = x(e), a[8] = c, a[1] = m(null == c) ? 10 : 11, X) : null;
          };
        }(a), a);
      }(), e = function() {
        var b = c.o ? c.o() : c.call(null);
        b[6] = a;
        return b;
      }();
      return ix(e);
    };
  }(a));
  return a;
}
function bM(b) {
  var a = rx(1);
  Vw(function(a) {
    return function() {
      var c = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (G) {
                    if (G instanceof Object) {
                      b[5] = G, ox(b), c = X;
                    } else {
                      throw G;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(a) {
            var c = a[1];
            if (7 === c) {
              var d = Gf.a(SL, a[2]), c = WL(b), e = FD(c);
              a[8] = d;
              a[7] = c;
              return jx(a, 8, e);
            }
            if (1 === c) {
              return a[2] = null, a[1] = 4, X;
            }
            if (4 === c) {
              return nx(a, 3, 2), a[1] = m(!0) ? 5 : 6, X;
            }
            if (13 === c) {
              return a[2] = a[2], a[1] = 10, X;
            }
            if (6 === c) {
              return a[2] = Ge, a[1] = 7, X;
            }
            if (3 === c) {
              return c = a[2], a[2] = c, ox(a), X;
            }
            if (12 === c) {
              return c = a[9], c = aM(c), jx(a, 14, c);
            }
            if (2 === c) {
              return lx(a, a[2]);
            }
            if (11 === c) {
              var d = a[8], e = a[10], f = a[11], c = a[7], y = TL(f), c = fe(["@location", "@fragment", "@data", "@raw"], [c, y, f, e]), c = d.b ? d.b(c) : d.call(null, c);
              a[2] = c;
              a[1] = 13;
              return X;
            }
            return 9 === c ? (c = a[9], c = le(c), a[1] = c ? 11 : 12, X) : 5 === c ? (a[2] = BD, a[1] = 7, X) : 14 === c ? (f = a[11], c = a[7], d = $L(c, f, a[2]), d = ZL(c, d), c = F(d, 0, null), d = F(d, 1, null), c = A.b ? A.b(c) : A.call(null, c), a[11] = d, a[9] = c, a[2] = null, a[1] = 9, X) : 10 === c ? (c = a[2], a[2] = c, ox(a), X) : 8 === c ? (c = a[7], d = a[2], e = HD(d), e = ZL(c, e), c = F(e, 0, null), e = F(e, 1, null), c = A.b ? A.b(c) : A.call(null, c), a[10] = d, a[11] = e, a[9] = 
            c, a[2] = null, a[1] = 9, X) : null;
          };
        }(a), a);
      }(), e = function() {
        var b = c.o ? c.o() : c.call(null);
        b[6] = a;
        return b;
      }();
      return ix(e);
    };
  }(a));
  return a;
}
function cM(b, a) {
  var c = rx(1);
  Vw(function(c) {
    return function() {
      var d = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (H) {
                    if (H instanceof Object) {
                      b[5] = H, ox(b), c = X;
                    } else {
                      throw H;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(c) {
            var d = c[1];
            if (7 === d) {
              var e = c[7], d = Gf.a(SL, c[2]), f = HD(a), f = ZL(e, f), e = F(f, 0, null), f = F(f, 1, null), e = A.b ? A.b(e) : A.call(null, e);
              c[8] = f;
              c[9] = d;
              c[10] = e;
              c[2] = null;
              c[1] = 8;
              return X;
            }
            if (1 === d) {
              return c[2] = null, c[1] = 4, X;
            }
            if (4 === d) {
              return nx(c, 3, 2), e = WL(b), c[7] = e, c[1] = m(!0) ? 5 : 6, X;
            }
            if (13 === d) {
              return f = c[8], e = c[7], d = $L(e, f, c[2]), e = ZL(e, d), d = F(e, 0, null), e = F(e, 1, null), d = A.b ? A.b(d) : A.call(null, d), c[8] = e, c[10] = d, c[2] = null, c[1] = 8, X;
            }
            if (6 === d) {
              return c[2] = Ge, c[1] = 7, X;
            }
            if (3 === d) {
              return d = c[2], c[2] = d, ox(c), X;
            }
            if (12 === d) {
              return c[2] = c[2], c[1] = 9, X;
            }
            if (2 === d) {
              return lx(c, c[2]);
            }
            if (11 === d) {
              return d = c[10], d = aM(d), jx(c, 13, d);
            }
            if (9 === d) {
              return d = c[2], c[2] = d, ox(c), X;
            }
            if (5 === d) {
              return c[2] = BD, c[1] = 7, X;
            }
            if (10 === d) {
              var f = c[8], d = c[9], e = c[7], g = TL(f), e = fe(["@location", "@fragment", "@data", "@raw"], [e, g, f, a]), d = d.b ? d.b(e) : d.call(null, e);
              c[2] = d;
              c[1] = 12;
              return X;
            }
            return 8 === d ? (d = c[10], d = le(d), c[1] = d ? 10 : 11, X) : null;
          };
        }(c), c);
      }(), f = function() {
        var a = d.o ? d.o() : d.call(null);
        a[6] = c;
        return a;
      }();
      return ix(f);
    };
  }(c));
  return c;
}
;function dM(b, a) {
  var c = rx(null), d = fj(a), e = function(a, b, c) {
    return function(d, e) {
      var f = rx(1);
      Vw(function(a, b, c, f) {
        return function() {
          var g = function() {
            return function(a) {
              return function() {
                function b(b) {
                  for (;;) {
                    var c;
                    a: {
                      try {
                        for (;;) {
                          var d = a(b);
                          if (!L(d, X)) {
                            c = d;
                            break a;
                          }
                        }
                      } catch (Fa) {
                        if (Fa instanceof Object) {
                          b[5] = Fa, ox(b), c = X;
                        } else {
                          throw Fa;
                        }
                      }
                    }
                    if (!L(c, X)) {
                      return c;
                    }
                  }
                }
                function c() {
                  var a = [null, null, null, null, null, null, null];
                  a[0] = d;
                  a[1] = 1;
                  return a;
                }
                var d = null, d = function(a) {
                  switch(arguments.length) {
                    case 0:
                      return c.call(this);
                    case 1:
                      return b.call(this, a);
                  }
                  throw Error("Invalid arity: " + arguments.length);
                };
                d.o = c;
                d.b = b;
                return d;
              }();
            }(function(a, b, c, f) {
              return function(a) {
                var b = a[1];
                return 1 === b ? (a[2] = null, a[1] = 4, X) : 2 === b ? lx(a, a[2]) : 3 === b ? (b = a[2], a[2] = b, ox(a), X) : 4 === b ? (nx(a, 3, 2), a[1] = m(d) ? 5 : 6, X) : 5 === b ? (b = "" + q(d), b = new Bj(b, d, null), kx(a, 8, f, b)) : 6 === b ? (b = ij(e), b = BD(b), b = SL(b), kx(a, 9, f, b)) : 7 === b ? (b = a[2], a[2] = b, ox(a), X) : 8 === b || 9 === b ? (a[2] = a[2], a[1] = 7, X) : null;
              };
            }(a, b, c, f), a, b, c, f);
          }(), n = function() {
            var b = g.o ? g.o() : g.call(null);
            b[6] = a;
            return b;
          }();
          return ix(n);
        };
      }(f, a, b, c));
      return f;
    };
  }(b, d, c);
  JS_YAML.parseYamlFile.c ? JS_YAML.parseYamlFile.c(b, d, e) : JS_YAML.parseYamlFile.call(null, b, d, e);
  return c;
}
function eM(b, a, c) {
  var d = rx(null);
  c = fj(c);
  var e = function(a, b, c, d) {
    return function(e, f) {
      var g = rx(1);
      Vw(function(a, b, c, d, g) {
        return function() {
          var n = function() {
            return function(a) {
              return function() {
                function b(b) {
                  for (;;) {
                    var c;
                    a: {
                      try {
                        for (;;) {
                          var d = a(b);
                          if (!L(d, X)) {
                            c = d;
                            break a;
                          }
                        }
                      } catch (Mb) {
                        if (Mb instanceof Object) {
                          b[5] = Mb, ox(b), c = X;
                        } else {
                          throw Mb;
                        }
                      }
                    }
                    if (!L(c, X)) {
                      return c;
                    }
                  }
                }
                function c() {
                  var a = [null, null, null, null, null, null, null];
                  a[0] = d;
                  a[1] = 1;
                  return a;
                }
                var d = null, d = function(a) {
                  switch(arguments.length) {
                    case 0:
                      return c.call(this);
                    case 1:
                      return b.call(this, a);
                  }
                  throw Error("Invalid arity: " + arguments.length);
                };
                d.o = c;
                d.b = b;
                return d;
              }();
            }(function(a, b, c, d, g) {
              return function(a) {
                var b = a[1];
                return 1 === b ? (a[2] = null, a[1] = 4, X) : 2 === b ? lx(a, a[2]) : 3 === b ? (b = a[2], a[2] = b, ox(a), X) : 4 === b ? (nx(a, 3, 2), a[1] = m(e) ? 5 : 6, X) : 5 === b ? (b = "" + q(e), b = new Bj(b, e, null), kx(a, 8, g, b)) : 6 === b ? (b = ij(f), b = BD(b), b = SL(b), kx(a, 9, g, b)) : 7 === b ? (b = a[2], a[2] = b, ox(a), X) : 8 === b || 9 === b ? (a[2] = a[2], a[1] = 7, X) : null;
              };
            }(a, b, c, d, g), a, b, c, d, g);
          }(), u = function() {
            var b = n.o ? n.o() : n.call(null);
            b[6] = a;
            return b;
          }();
          return ix(u);
        };
      }(g, a, b, c, d));
      return g;
    };
  }(b, a, c, d);
  JS_YAML.parseYamlString.K ? JS_YAML.parseYamlString.K(b, a, c, e) : JS_YAML.parseYamlString.call(null, b, a, c, e);
  return d;
}
;function fM(b, a, c) {
  var d = HJ.j(c, C(["/source-map/is-type"], 0));
  b = new dy(d, b, null, null, null);
  return new Q(null, 1, 5, R, [Nx(HJ.j(c, C(["/source-map"], 0)), a, new Q(null, 1, 5, R, [b], null))], null);
}
function gM(b, a) {
  var c = ra(b, "#") ? "/definitions" : "#/definitions";
  return [q(b), q(HJ.j(c, C([a], 0)))].join("");
}
function hM(b, a) {
  return m(he(b)) ? I.c(a, Wk, he(b)) : a;
}
function iM(b, a, c) {
  var d = HJ.j(c, C(["/source-map/is-annotation"], 0));
  b = new fy(d, b, null, null, null);
  return new Q(null, 1, 5, R, [Nx(HJ.j(c, C(["/source-map"], 0)), a, new Q(null, 1, 5, R, [b], null))], null);
}
function jM(b) {
  return null != x(Rx(b, "is-annotation-tag"));
}
function kM(b) {
  return m(yf($k, Qs.a(b, $k))) ? Qs.b(b) : b;
}
var lM = function lM(a) {
  return m(function() {
    var c = pe(a);
    return c ? yf($k, Qs.a(a, $k)) : c;
  }()) ? kM(a) : pe(a) ? gg.a(S, hg(function(a) {
    var c = F(a, 0, null), e = F(a, 1, null);
    a = R;
    e = kM(e);
    e = lM.b ? lM.b(e) : lM.call(null, e);
    return new Q(null, 2, 5, a, [c, e], null);
  }, a)) : me(a) ? hg(lM, a) : kM(a);
};
function mM(b, a) {
  return Cb.c(function(a, b) {
    return b.b ? b.b(a) : b.call(null, a);
  }, a, hg(function(a) {
    var b = F(a, 0, null), c = F(a, 1, null);
    return m(v.a ? v.a(yp, b) : v.call(null, yp, b)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, QC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", e], null)], null));
      };
    }(v, b, a, b, c) : m(v.a ? v.a(Hj, b) : v.call(null, Hj, b)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, RC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", e], null)], null));
      };
    }(v, b, a, b, c) : Ge;
  }, b));
}
function nM(b, a) {
  return mM(b, Cb.c(function(a, b) {
    return b.b ? b.b(a) : b.call(null, a);
  }, a, hg(function(b) {
    var c = F(b, 0, null), e = F(b, 1, null);
    return m(v.a ? v.a(To, c) : v.call(null, To, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("minLength"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", ED(e)], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(rt, c) : v.call(null, rt, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("maxLength"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", ED(e)], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(ls, c) : v.call(null, ls, c)) ? m(QJ(a)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("minCount"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", ED(e)], null)], null));
      };
    }(v, c, b, c, e) : Ge : m(v.a ? v.a(Tv, c) : v.call(null, Tv, c)) ? m(QJ(a)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("maxCount"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", ED(e)], null)], null));
      };
    }(v, c, b, c, e) : Ge : m(v.a ? v.a(hw, c) : v.call(null, hw, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("pattern"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", e], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(rk, c) : v.call(null, rk, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, mC("format"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", e], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(fu, c) : v.call(null, fu, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, mC("uniqueItems"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", e], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(wk, c) : v.call(null, wk, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, mC("multipleOf"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", ED(e)], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(is, c) : v.call(null, is, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("minExclusive"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", ED(e)], null)], null));
      };
    }(v, c, b, c, e) : m(v.a ? v.a(Kj, c) : v.call(null, Kj, c)) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, nC("in"), new l(null, 1, ["@list", hg(JJ, e)], null));
      };
    }(v, c, b, c, e) : Ge;
  }, b)));
}
function oM(b) {
  return jh([nC("maxCount"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", 1], null)], null), nC("datatype"), t.a(b, nC("datatype"))]);
}
function pM(b) {
  var a = XJ(b), a = Tf.a(function() {
    return function(a) {
      return J.a(a, "@type");
    };
  }(a), a);
  return I.c(J.a(ki.j(C([b, YJ(a)], 0)), "@type"), nC("maxCount"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", 1], null)], null));
}
function qM(b) {
  var a = t.a(b, mC("item")), c = pJ(b, nC("minCount"));
  b = pJ(b, nC("maxCount"));
  a = Tf.a(function() {
    return function(a) {
      return m(OJ(a)) ? a : m(PJ(a)) ? jh([nC("datatype"), t.a(a, nC("datatype"))]) : jh([nC("node"), new Q(null, 1, 5, R, [a], null)]);
    };
  }(a, c, b), a);
  a = v.a(1, B(a)) ? x(a) : jh([nC("or"), new l(null, 1, ["@list", a], null)]);
  return ki.j(C([uJ(jh([mC("ordered"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", !0], null)], null), nC("minCount"), null != c ? new Q(null, 1, 5, R, [new l(null, 1, ["@value", c], null)], null) : null, nC("maxCount"), null != b ? new Q(null, 1, 5, R, [new l(null, 1, ["@value", b], null)], null) : null])), a], 0));
}
function rM(b) {
  return jh([nC("maxCount"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", 1], null)], null), nC("node"), new Q(null, 1, 5, R, [b], null)]);
}
function sM(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Xu), e = qi(Mv.a(b, E)), c = hg(function(a, b, c, d, e) {
    return function(b) {
      var c = F(b, 0, null), f = F(b, 1, null), g = [q(e), q("/property/"), q(hJ(c))].join("");
      b = function() {
        var a = I.c(d, Xu, g);
        return tM.a ? tM.a(f, a) : tM.call(null, f, a);
      }();
      b = m(OJ(b)) ? pM(b) : m(PJ(b)) ? oM(b) : m(QJ(b)) ? qM(b) : m(nJ(b, mC("NilValueShape"))) ? VJ() : rM(b);
      b = null == pJ(b, nC("minCount")) ? I.c(b, nC("minCount"), new Q(null, 1, 5, R, [m(function() {
        var b = hJ(c);
        return a.b ? a.b(b) : a.call(null, b);
      }()) ? new l(null, 1, ["@value", 1], null) : new l(null, 1, ["@value", 0], null)], null)) : b;
      b = uJ(I.c(I.c(I.c(I.c(b, "@id", g), "@type", new Q(null, 2, 5, R, [nC("PropertyShape"), nC("Shape")], null)), nC("path"), new Q(null, 1, 5, R, [new l(null, 1, ["@id", rC(hJ(c))], null)], null)), mC("propertyLabel"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", hJ(c)], null)], null)));
      return nM(f, b);
    };
  }(e, a, c, c, d), Pj.a(b, E)), e = Wj.b(b);
  return nM(b, uJ(jh(["@type", new Q(null, 2, 5, R, [nC("NodeShape"), nC("Shape")], null), "@id", d, nC("property"), c, nC("closed"), null != e ? new Q(null, 1, 5, R, [new l(null, 1, ["@value", rb(e)], null)], null) : null])));
}
function uM(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Xu), e = qi(Mv.a(b, E)), f = fg(new Q(null, 1, 5, R, [uu.a(b, E)], null)), c = ig(function(a, b, c, d, e, f) {
    return function(a, b) {
      var c = I.c(e, Xu, [q(f), q("/items/"), q(a)].join(""));
      return tM.a ? tM.a(b, c) : tM.call(null, b, c);
    };
  }(e, f, a, c, c, d), yi(0, B(f)), f);
  return nM(b, uJ(jh(["@type", new Q(null, 2, 5, R, [mC("Array"), nC("Shape")], null), "@id", d, mC("item"), c])));
}
function vM(b, a) {
  return uJ(jh(["@id", b, "@type", new Q(null, 2, 5, R, [mC("Scalar"), nC("Shape")], null), nC("datatype"), v.a("shapes:any", a) ? null : new Q(null, 1, 5, R, [new l(null, 1, ["@id", a], null)], null)]));
}
function wM(b, a) {
  if (null != b) {
    var c = W.b(b);
    if (m(c)) {
      return c;
    }
    c = W.b(bL(b));
    return m(c) ? c : NJ(a);
  }
  return null;
}
function xM(b, a, c) {
  c = HJ.j(It.b(c), C([hJ(a)], 0));
  var d = df.b(c), e = df.b(a), f = x(cg(sb, hg(function() {
    return function(a) {
      return t.a(b, a);
    };
  }(c, d, e), new Q(null, 4, 5, R, [a, e, c, d], null))));
  return null != f ? f : x(hg(function() {
    return function(a) {
      F(a, 0, null);
      return F(a, 1, null);
    };
  }(c, d, e, f), cg(function() {
    return function(b) {
      var c = F(b, 0, null);
      F(b, 1, null);
      b = hJ(c);
      c = hJ(a);
      return ra(b, c);
    };
  }(c, d, e, f), b)));
}
function yM(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Po), e = t.a(c, Xu), f = t.a(c, It), c = xM(d, b, c);
  if (m(c)) {
    f = W.b(c);
    m(f) || (f = (null != c ? k === c.Wb || (c.L ? 0 : p(aL, c)) : p(aL, c)) ? W.b(bL(c)) : null, f = m(f) ? f : IJ(b));
    if (null != Lk.b(c)) {
      return jh(["@id", e, "@type", new Q(null, 2, 5, R, [mC("NodeShape"), nC("Shape")], null), QC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", f], null)], null), mC("inherits"), new Q(null, 1, 5, R, [new l(null, 1, ["@id", Lk.b(c)], null)], null)]);
    }
    if (null != c ? k === c.sd || (c.L ? 0 : p(Bx, c)) : p(Bx, c)) {
      return jh(["@id", e, "@type", new Q(null, 2, 5, R, [mC("NodeShape"), nC("Shape")], null), QC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", f], null)], null), mC("inherits"), new Q(null, 1, 5, R, [new l(null, 1, ["@id", Cx(c)], null)], null)]);
    }
    f = t.a(bL(c), "@id");
    c = wM(c, f);
    return jh(["@id", e, QC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", c], null)], null), "@type", new Q(null, 2, 5, R, [mC("NodeShape"), nC("Shape")], null), mC("inherits"), new Q(null, 1, 5, R, [new l(null, 1, ["@id", f], null)], null)]);
  }
  return jh(["@id", e, "@type", new Q(null, 2, 5, R, [mC("NodeShape"), nC("Shape")], null), QC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", IJ(b)], null)], null), mC("inherits"), new Q(null, 1, 5, R, [new l(null, 1, ["@id", v.a(0, Bz(b, "#")) ? [q(f), q(b)].join("") : b], null)], null)]);
}
function zM(b, a) {
  var c = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, d = t.a(c, Ro), e = t.a(c, Fr), f = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, g = t.a(f, Xu), n = t.a(f, ev), r = tM.a ? tM.a(d, f) : tM.call(null, d, f), u = fg(new Q(null, 1, 5, R, [e], null)), c = ig(function(a, b, c, d, e, f, g, n, u, r, ib) {
    return function(a, b) {
      var c = I.c(I.c(u, Xu, HJ.j(r, C([[q("with/"), q(a)].join("")], 0))), ev, HJ.j(ib, C([[q("with/"), q(a)].join("")], 0)));
      return tM.a ? tM.a(b, c) : tM.call(null, b, c);
    };
  }(r, u, b, c, d, e, a, f, f, g, n), yi(0, B(u)), u), d = t.c(r, mC("inherits"), E);
  return I.c(r, mC("inherits"), N.a(d, c));
}
function tM(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Xu), e = "string" === typeof b ? b : uo.b(b);
  if (null != xy(b)) {
    e = null != c && (c.l & 64 || k === c.I) ? P(Of, c) : c;
    c = t.a(e, rq);
    d = t.a(e, Xu);
    c.a ? c.a(b, e) : c.call(null, b, e);
    var c = yy(b), e = t.a(t.c(e, Po, S), c), f = wM(e, c), d = jh(["@id", d, "@type", new Q(null, 2, 5, R, [mC("NodeShape"), nC("Shape")], null), mC("inherits"), new Q(null, 1, 5, R, [new l(null, 1, ["@id", c], null)], null)]);
    return null != e && null != f ? I.c(d, QC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", f], null)], null)) : d;
  }
  if (null != $u.b(b)) {
    return yM($u.b(b), c);
  }
  if (null != Ws.b(b)) {
    return zM(Ws.b(b), c);
  }
  if ("string" === typeof e) {
    if (m(v.a ? v.a("string", e) : v.call(null, "string", e))) {
      c = wn.b(b);
      if (m(v.a ? v.a("xsd:time", c) : v.call(null, "xsd:time", c))) {
        return nM(b, vM(d, qC("time")));
      }
      if (m(v.a ? v.a("xsd:dateTime", c) : v.call(null, "xsd:dateTime", c))) {
        return nM(b, vM(d, qC("dateTime")));
      }
      if (m(v.a ? v.a("shapes:datetime-only", c) : v.call(null, "shapes:datetime-only", c))) {
        return nM(b, vM(d, mC("datetime-only")));
      }
      if (m(v.a ? v.a("xsd:date", c) : v.call(null, "xsd:date", c))) {
        return nM(b, vM(d, qC("date")));
      }
      if (m(v.a ? v.a("shapes:any", c) : v.call(null, "shapes:any", c))) {
        return nM(b, vM(d, mC("any")));
      }
      if (m(v.a ? v.a(null, c) : v.call(null, null, c))) {
        return nM(b, vM(d, qC("string")));
      }
      throw Error([q("No matching clause: "), q(c)].join(""));
    }
    if (m(v.a ? v.a("float", e) : v.call(null, "float", e))) {
      return nM(b, vM(d, qC("float")));
    }
    if (m(v.a ? v.a("integer", e) : v.call(null, "integer", e))) {
      return nM(b, vM(d, qC("integer")));
    }
    if (m(v.a ? v.a("number", e) : v.call(null, "number", e))) {
      c = wn.b(b);
      if (m(v.a ? v.a("xsd:float", c) : v.call(null, "xsd:float", c))) {
        return nM(b, vM(d, qC("float")));
      }
      if (m(v.a ? v.a("xsd:integer", c) : v.call(null, "xsd:integer", c))) {
        return nM(b, vM(d, qC("integer")));
      }
      if (m(v.a ? v.a(null, c) : v.call(null, null, c))) {
        return nM(b, jh([nC("or"), new l(null, 1, ["@list", new Q(null, 2, 5, R, [vM(HJ.j(d, C(["or/integer"], 0)), qC("integer")), vM(HJ.j(d, C(["or/float"], 0)), qC("float"))], null)], null), "@type", new Q(null, 2, 5, R, [mC("Scalar"), nC("Shape")], null), mC("is-number"), new Q(null, 1, 5, R, [new l(null, 1, ["@value", !0], null)], null)]));
      }
      throw Error([q("No matching clause: "), q(c)].join(""));
    }
    m(v.a ? v.a("file", e) : v.call(null, "file", e)) ? (d = nM(b, uJ(jh(["@type", new Q(null, 2, 5, R, [mC("FileUpload"), nC("Shape")], null), mC("fileType"), yJ(b, Wt)]))), d = nM(b, d)) : d = m(v.a ? v.a("boolean", e) : v.call(null, "boolean", e)) ? nM(b, vM(d, qC("boolean"))) : m(v.a ? v.a("null", e) : v.call(null, "null", e)) ? WJ(c) : m(v.a ? v.a("object", e) : v.call(null, "object", e)) ? sM(b, c) : m(v.a ? v.a("array", e) : v.call(null, "array", e)) ? uM(b, c) : null;
    return d;
  }
  return null != t.a(b, Pj) ? sM(b, c) : null != t.a(b, uu) ? uM(b, c) : null;
}
;function AM(b, a) {
  var c = rx(1);
  Vw(function(c) {
    return function() {
      var d = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (H) {
                    if (H instanceof Object) {
                      b[5] = H, ox(b), c = X;
                    } else {
                      throw H;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(c) {
            var d = c[1];
            if (1 === d) {
              return d = v.a("json", a), c[1] = d ? 2 : 3, X;
            }
            if (2 === d) {
              return d = cM("http://raml.org/vocabularies/data#AnonShape", b), jx(c, 5, d);
            }
            if (3 === d) {
              return d = v.a("raml", a), c[1] = d ? 6 : 7, X;
            }
            if (4 === d) {
              return lx(c, c[2]);
            }
            if (5 === d) {
              var d = c[2], e = df.b("@data"), d = t.a(d, e), d = lM(d), e = fe([Xu, ev, Po], ["http://raml.org/vocabularies/data#AnonShape", "http://raml.org/vocabularies/data#AnonShape", ih]), d = tM(d, e);
              c[2] = d;
              c[1] = 4;
              return X;
            }
            if (6 === d) {
              return d = fe([Rl], [!0]), d = eM("http://raml.org/vocabularies/data#AnonShape", b, d), jx(c, 9, d);
            }
            if (7 === d) {
              throw c = [q("Unknown type of schema "), q(a)].join(""), Error(c);
            }
            return 8 === d ? (c[2] = c[2], c[1] = 4, X) : 9 === d ? (d = c[2], e = df.b("@data"), d = t.a(d, e), d = J.a(d, Vr), d = lM(d), e = fe([Xu, ev, Xj, Po], ["http://raml.org/vocabularies/data#AnonShape", "http://raml.org/vocabularies/data#AnonShape", "object", ih]), d = uL(d, e), c[2] = d, c[1] = 8, X) : null;
          };
        }(c), c);
      }(), f = function() {
        var a = d.o ? d.o() : d.call(null);
        a[6] = c;
        return a;
      }();
      return ix(f);
    };
  }(c));
  return c;
}
function BM(b) {
  b = t.c(b, "@type", E);
  return null != x(cg(function() {
    return function(a) {
      return v.a(a, "http://www.w3.org/ns/shacl#ValidationReport");
    };
  }(b), b));
}
function CM(b) {
  return x(cg(function(a) {
    return BM(a);
  }, b));
}
function DM(b) {
  return v.a("true", "" + q(pJ(function() {
    var a = CM(b);
    return m(a) ? a : S;
  }(), "http://www.w3.org/ns/shacl#conforms")));
}
function EM(b) {
  return new l(null, 6, [rn, t.a(x(t.c(b, "http://www.w3.org/ns/shacl#resultPath", S)), "@id"), bw, t.a(x(t.c(b, "http://www.w3.org/ns/shacl#resultMessage", S)), "@value"), lt, t.a(x(t.c(b, "http://www.w3.org/ns/shacl#focusNode", S)), "@id"), ws, t.a(x(t.c(b, "http://www.w3.org/ns/shacl#sourceShape", S)), "@id"), Bs, t.a(x(t.c(b, "http://www.w3.org/ns/shacl#resultSeverity", S)), "@id"), Gj, t.a(x(t.c(b, "http://www.w3.org/ns/shacl#sourceConstraintComponent", S)), "@id")], null);
}
function FM(b) {
  var a = function() {
    var a = CM(b);
    return m(a) ? a : S;
  }(), c = sJ(a), d = Cb.c(function() {
    return function(a, b) {
      return I.c(a, b, !0);
    };
  }(a, c), S, c);
  return Tf.a(EM, cg(function(a, b, c) {
    return function(a) {
      return null != t.a(c, t.a(a, "@id"));
    };
  }(a, c, d), b));
}
function GM(b, a, c) {
  var d = rx(1);
  Vw(function(d) {
    return function() {
      var e = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (M) {
                    if (M instanceof Object) {
                      b[5] = M, ox(b), c = X;
                    } else {
                      throw M;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(d) {
            var e = d[1];
            if (1 === e) {
              return e = AM(b, a), jx(d, 2, e);
            }
            if (2 === e) {
              var e = d[2], f = fe(["@id"], ["http://raml.org/vocabularies/shapes#toValidate"]), e = I.c(e, "http://www.w3.org/ns/shacl#targetObjectsOf", f), f = JJ(lM(ij(JSON.parse(c)))), f = fe(["http://raml.org/vocabularies/shapes#toValidate"], [f]), e = KD(e, f);
              return jx(d, 3, e);
            }
            if (3 === e) {
              var g = d[2], e = [Vv, yq], f = DM(g), g = FM(g), e = fe(e, [f, g]);
              return lx(d, e);
            }
            return null;
          };
        }(d), d);
      }(), g = function() {
        var a = e.o ? e.o() : e.call(null);
        a[6] = d;
        return a;
      }();
      return ix(g);
    };
  }(d));
  return d;
}
;function HM(b) {
  return null == b ? null : (null != b ? k === b.Pe || (b.L ? 0 : p(wK, b)) : p(wK, b)) ? hp : (null != b ? k === b.Qg || (b.L ? 0 : p(BK, b)) : p(BK, b)) ? xn : (null != b ? k === b.Tf || (b.L ? 0 : p(zx, b)) : p(zx, b)) ? lr : (null != b ? k === b.sd || (b.L ? 0 : p(Bx, b)) : p(Bx, b)) ? uq : (null != b ? k === b.lf || (b.L ? 0 : p(KK, b)) : p(KK, b)) ? Uo : function() {
    var a = null != b ? k === b.Oe ? !0 : b.L ? !1 : p(nK, b) : p(nK, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? Nv : function() {
    var a = null != b ? k === b.Gg ? !0 : b.L ? !1 : p(Jx, b) : p(Jx, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? $s : function() {
    var a = null != b ? k === b.Vb ? !0 : b.L ? !1 : p(Ox, b) : p(Ox, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? Fk : function() {
    var a = null != b ? k === b.Wd ? !0 : b.L ? !1 : p(FK, b) : p(FK, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? tm : function() {
    var a = null != b ? k === b.Zc ? !0 : b.L ? !1 : p(RK, b) : p(RK, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? Bl : function() {
    var a = null != b ? k === b.Xd ? !0 : b.L ? !1 : p(XK, b) : p(XK, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? Ot : function() {
    var a = null != b ? k === b.Se ? !0 : b.L ? !1 : p(PK, b) : p(PK, b);
    return a && (a = null != b ? k === b.ge ? !0 : b.L ? !1 : p(jK, b) : p(jK, b)) ? (a = null != b ? k === b.he ? !0 : b.L ? !1 : p(lK, b) : p(lK, b)) ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a : a;
  }() ? Fm : function() {
    var a = null != b ? k === b.kf ? !0 : b.L ? !1 : p(eL, b) : p(eL, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? ft : function() {
    var a = null != b ? k === b.Wb ? !0 : b.L ? !1 : p(aL, b) : p(aL, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? Ut : tb(b);
}
if ("undefined" === typeof IM) {
  var IM = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.generators.domain.jsonld", "to-jsonld"), function() {
      return function(a) {
        return HM(a);
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
function JM(b, a, c) {
  var d = null != c && (c.l & 64 || k === c.I) ? P(Of, c) : c, e = t.a(d, Gk);
  return m(e) ? CJ(b, a, BC, wx, function(a, b, c) {
    return function(a) {
      return IM.a ? IM.a(a, c) : IM.call(null, a, c);
    };
  }(c, d, d, e)) : b;
}
function KM(b, a, c) {
  b = CJ(vJ(vJ(I.c(JM(b, a, c), "@id", tx(a)), a, QC, ux), a, RC, vx), a, NC, yx, function(a) {
    return IM.a ? IM.a(a, c) : IM.call(null, a, c);
  });
  return (null != a ? k === a.wc || (a.L ? 0 : p(dK, a)) : p(dK, a)) ? vJ(b, a, OC, eK) : b;
}
IM.D(0, Nv, function(b, a) {
  return uJ(CJ(BJ(vJ(vJ(BJ(xJ(xJ(vJ(CJ(xJ(vJ(KM(new l(null, 1, ["@type", new Q(null, 2, 5, R, [PC, yC], null)], null), b, a), b, SC, fK), b, TC, gK), b, qD, mK, function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }), b, UC, sK), b, VC, hK), b, WC, iK), b, XC, oK, function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }), b, YC, pK), b, ZC, qK), b, $C, rK, function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }), b, aD, tK, function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }));
});
IM.D(0, tm, function(b, a) {
  return uJ(CJ(CJ(CJ(vJ(KM(new l(null, 1, ["@type", new Q(null, 2, 5, R, [bD, yC], null)], null), b, a), b, dD, HK), b, cD, GK, function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }), b, JC, xx, function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }), b, qD, mK, function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }));
});
IM.D(0, Bl, function(b, a) {
  return uJ(CJ(BJ(CJ(xJ(xJ(xJ(vJ(KM(new l(null, 1, ["@type", new Q(null, 2, 5, R, [eD, yC], null)], null), b, a), b, fD, SK), b, VC, hK), b, WC, iK), b, TC, gK), b, gD, UK, function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }), b, hD, TK, function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }), b, JC, xx, function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }));
});
IM.D(0, Ot, function(b, a) {
  return uJ(CJ(vJ(KM(new l(null, 1, ["@type", new Q(null, 2, 5, R, [iD, yC], null)], null), b, a), b, jD, YK), b, kD, QK, function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }));
});
IM.D(0, Fm, function(b, a) {
  var c = Tf.a(function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }, function() {
    var a = kK(b);
    return m(a) ? a : E;
  }()), d = uJ(CJ(CJ(KM(new l(null, 1, ["@type", new Q(null, 2, 5, R, [pD, yC], null)], null), b, a), b, qD, mK, function() {
    return function(b) {
      return IM.a ? IM.a(b, a) : IM.call(null, b, a);
    };
  }(c)), b, kD, QK, function() {
    return function(b) {
      return IM.a ? IM.a(b, a) : IM.call(null, b, a);
    };
  }(c))), e = t.c(d, qD, E), c = N.a(e, c);
  return le(c) ? d : I.c(d, qD, c);
});
IM.D(0, ft, function(b, a) {
  return uJ(BJ(vJ(vJ(KM(new l(null, 1, ["@type", new Q(null, 2, 5, R, [rD, yC], null)], null), b, a), b, sD, gL), b, tD, fL), b, nD, bL, Ge));
});
IM.D(0, Uo, function(b, a) {
  return uJ(vJ(BJ(KM(new l(null, 1, ["@type", new Q(null, 2, 5, R, [lD, yC], null)], null), b, a), b, nD, LK, function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }), b, mD, MK));
});
IM.D(0, Ut, function(b) {
  var a = bL(b);
  return null == t.a(a, QC) ? vJ(a, b, QC, ux) : a;
});
IM.D(0, lr, function(b, a) {
  return I.c(vJ(wJ(KM(new l(null, 2, ["@id", tx(b), "@type", new Q(null, 1, 5, R, [zC], null)], null), b, a), b), b, LC, Dx), MC, Tf.a(function(a) {
    return new l(null, 1, ["@value", ID(a)], null);
  }, Ax(b)));
});
IM.D(0, uq, function(b, a) {
  return vJ(wJ(KM(new l(null, 2, ["@id", tx(b), "@type", new Q(null, 1, 5, R, [AC], null)], null), b, a), b), b, LC, Dx);
});
IM.D(0, $s, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Gk);
  return uJ(jh(["@id", tx(b), "@type", new Q(null, 1, 5, R, [wC], null), CC, new Q(null, 1, 5, R, [new l(null, 1, ["@id", Kx(b)], null)], null), GC, Tf.a(function(a, b, c) {
    return function(a) {
      return IM.a ? IM.a(a, c) : IM.call(null, a, c);
    };
  }(a, c, d), Lx(b))]));
});
IM.D(0, Fk, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a;
  t.a(c, Gk);
  return uJ(jh(["@id", tx(b), "@type", new Q(null, 1, 5, R, [xC], null), HC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", Px(b)], null)], null), IC, new Q(null, 1, 5, R, [new l(null, 1, ["@value", Qx(b)], null)], null)]));
});
IM.D(0, hp, function(b, a) {
  return uJ(BJ(CJ(KM(new l(null, 2, ["@id", tx(b), "@type", new Q(null, 1, 5, R, [uD], null)], null), b, a), b, vD, xK, function(a) {
    return new l(null, 1, ["@id", a], null);
  }), b, wD, yK, function(b) {
    return IM.a ? IM.a(b, a) : IM.call(null, b, a);
  }));
});
IM.D(0, xn, function(b, a) {
  return uJ(BJ(KM(new l(null, 2, ["@id", tx(b), "@type", new Q(null, 1, 5, R, [xD], null)], null), b, a), b, yD, CK, Ge));
});
IM.D(0, null, function() {
  return null;
});
if ("undefined" === typeof LM) {
  var LM = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.generators.document.jsonld", "to-jsonld"), function() {
      return function(a) {
        if (null != a) {
          var b = null != a ? k === a.vc ? !0 : a.L ? !1 : p(iy, a) : p(iy, a);
          a = (b ? null != a ? k === a.Ub || (a.L ? 0 : p(ky, a)) : p(ky, a) : b) ? jq : (null != a ? k === a.vc || (a.L ? 0 : p(iy, a)) : p(iy, a)) ? zm : (null != a ? k === a.Ub || (a.L ? 0 : p(ky, a)) : p(ky, a)) ? Op : bm;
        }
        return a;
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
function MM(b, a, c) {
  return m(b) ? (a = wx(a), I.c(c, BC, Tf.a(function() {
    return function(a) {
      var c = new l(null, 1, [Gk, b], null);
      return IM.a ? IM.a(a, c) : IM.call(null, a, c);
    };
  }(a), a))) : c;
}
LM.D(0, jq, function(b, a) {
  return uJ(MM(a, b, jh(["@id", tx(b), "@type", new Q(null, 4, 5, R, [sC, tC, uC, vC], null), DC, hg(function(b) {
    return LM.a ? LM.a(b, a) : LM.call(null, b, a);
  }, ly(b)), FC, new Q(null, 1, 5, R, [function() {
    var c = jy(b), d = new l(null, 1, [Gk, a], null);
    return IM.a ? IM.a(c, d) : IM.call(null, c, d);
  }()], null), EC, hg(function(b) {
    return LM.a ? LM.a(b, a) : LM.call(null, b, a);
  }, oy(b))])));
});
LM.D(0, zm, function(b, a) {
  return uJ(MM(a, b, jh(["@id", tx(b), "@type", new Q(null, 2, 5, R, [tC, vC], null), FC, new Q(null, 1, 5, R, [function() {
    var c = jy(b), d = new l(null, 1, [Gk, a], null);
    return IM.a ? IM.a(c, d) : IM.call(null, c, d);
  }()], null), EC, hg(function(b) {
    return LM.a ? LM.a(b, a) : LM.call(null, b, a);
  }, oy(b))])));
});
LM.D(0, Op, function(b, a) {
  return uJ(MM(a, b, jh(["@id", tx(b), "@type", new Q(null, 2, 5, R, [uC, vC], null), DC, hg(function(b) {
    return LM.a ? LM.a(b, a) : LM.call(null, b, a);
  }, ly(b)), EC, hg(function(b) {
    return LM.a ? LM.a(b, a) : LM.call(null, b, a);
  }, oy(b))])));
});
LM.D(0, null, function() {
  return null;
});
LM.D(0, bm, function(b, a) {
  var c = new l(null, 1, [Gk, a], null);
  return IM.a ? IM.a(b, c) : IM.call(null, b, c);
});
function NM(b) {
  var a = t.a(b, En);
  return m(a) ? (a = hg(function() {
    return function(a) {
      return yy(a);
    };
  }(a, a), a), I.c(b, "x-uses", a)) : b;
}
function OM(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, fn);
  return pe(b) ? gg.a(S, hg(function(a, b, c, d, e) {
    return function(a) {
      var b = F(a, 0, null), f = F(a, 1, null);
      if (m(wy(f))) {
        a = R;
        var g;
        if (m(e)) {
          g = xy(f), f = yy(f), g = OM(g, new l(null, 1, [ev, f], null));
        } else {
          g = yy(f);
          if (f = pa(g, d)) {
            f = -1 != g.indexOf("#");
          }
          g = f ? "$ref".call(null, be(zz(g, /#/))) : new l(null, 1, ["$ref", g], null);
        }
        b = new Q(null, 2, 5, a, [b, g], null);
      } else {
        b = new Q(null, 2, 5, R, [b, OM(f, c)], null);
      }
      return b;
    };
  }(a, c, c, d, e), NM(b))) : me(b) ? hg(function(a, b, c) {
    return function(a) {
      return OM(a, c);
    };
  }(a, c, c, d, e), b) : b;
}
;function PM(b) {
  return null != Bz(b, "://") ? b : pa(b, "/") ? [q("file://"), q(b)].join("") : pa(b, ".") ? [q("file://"), q(b)].join("") : pa(b, "..") ? [q("file://"), q(b)].join("") : pa(b, "#") ? [q("file://."), q(b)].join("") : [q("file://./"), q(b)].join("");
}
function QM(b, a) {
  var c = cg(function(a) {
    return null != t.a(a, "@id");
  }, Tf.a(function(b) {
    var c = t.a(b, "@id");
    return null != c ? t.c(a, c, b) : b;
  }, t.c(b, EC, E)));
  return 0 < B(c) ? I.c(b, EC, c) : J.a(b, EC);
}
function RM(b) {
  b = eh(b);
  return Cf(function() {
    return function(a) {
      return v.a(0, Bz(a, "@"));
    };
  }(b), b);
}
function SM(b) {
  var a = rx(1);
  Vw(function(a) {
    return function() {
      var c = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (G) {
                    if (G instanceof Object) {
                      b[5] = G, ox(b), c = X;
                    } else {
                      throw G;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(a) {
            var c = a[1];
            if (7 === c) {
              return c = a[7], a[2] = c, a[1] = 9, X;
            }
            if (1 === c) {
              return a[2] = null, a[1] = 4, X;
            }
            if (4 === c) {
              nx(a, 3, 2);
              var d = b, c = ih;
              a[7] = c;
              a[8] = d;
              a[2] = null;
              a[1] = 5;
              return X;
            }
            if (13 === c) {
              return a[2] = a[2], a[1] = 12, X;
            }
            if (6 === c || 3 === c) {
              return c = a[2], a[2] = c, ox(a), X;
            }
            if (12 === c) {
              var c = a[7], e = a[9], d = a[8], f = a[2], d = sd(d), e = t.a(e, "@id"), c = I.c(c, e, f);
              a[7] = c;
              a[8] = d;
              a[2] = null;
              a[1] = 5;
              return X;
            }
            return 2 === c ? lx(a, a[2]) : 11 === c ? (e = a[9], a[2] = e, a[1] = 12, X) : 9 === c ? (a[2] = a[2], a[1] = 6, X) : 5 === c ? (d = a[8], c = le(d), a[1] = c ? 7 : 8, X) : 10 === c ? (e = a[9], c = t.a(e, "@id"), c = TM.b ? TM.b(c) : TM.call(null, c), jx(a, 13, c)) : 8 === c ? (d = a[8], c = x(d), f = RM(c), a[9] = c, a[1] = m(f) ? 10 : 11, X) : null;
          };
        }(a), a);
      }(), e = function() {
        var b = c.o ? c.o() : c.call(null);
        b[6] = a;
        return b;
      }();
      return ix(e);
    };
  }(a));
  return a;
}
function TM(b) {
  var a = rx(1);
  Vw(function(a) {
    return function() {
      var c = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (G) {
                    if (G instanceof Object) {
                      b[5] = G, ox(b), c = X;
                    } else {
                      throw G;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(a) {
            var c = a[1];
            if (1 === c) {
              return a[2] = null, a[1] = 4, X;
            }
            if (2 === c) {
              return lx(a, a[2]);
            }
            if (3 === c) {
              return c = a[2], a[2] = c, ox(a), X;
            }
            if (4 === c) {
              return nx(a, 3, 2), c = PM(b), c = FD(c), jx(a, 5, c);
            }
            if (5 === c) {
              var c = ij(JSON.parse(a[2])), d = t.c(c, EC, E), d = SM(d);
              a[7] = c;
              return jx(a, 6, d);
            }
            return 6 === c ? (c = a[7], c = QM(c, a[2]), a[2] = c, ox(a), X) : null;
          };
        }(a), a);
      }(), e = function() {
        var b = c.o ? c.o() : c.call(null);
        b[6] = a;
        return b;
      }();
      return ix(e);
    };
  }(a));
  return a;
}
function UM(b, a) {
  var c = rx(1);
  Vw(function(c) {
    return function() {
      var d = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (H) {
                    if (H instanceof Object) {
                      b[5] = H, ox(b), c = X;
                    } else {
                      throw H;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(c) {
            var d = c[1];
            if (1 === d) {
              return c[2] = null, c[1] = 4, X;
            }
            if (2 === d) {
              return lx(c, c[2]);
            }
            if (3 === d) {
              return d = c[2], c[2] = d, ox(c), X;
            }
            if (4 === d) {
              nx(c, 3, 2);
              var d = PM(b), e = ij(JSON.parse(a)), f = t.c(e, EC, E), f = SM(f);
              c[7] = e;
              c[8] = d;
              return jx(c, 5, f);
            }
            return 5 === d ? (d = c[7], d = QM(d, c[2]), c[2] = d, ox(c), X) : null;
          };
        }(c), c);
      }(), f = function() {
        var a = d.o ? d.o() : d.call(null);
        a[6] = c;
        return a;
      }();
      return ix(f);
    };
  }(c));
  return c;
}
;function VM(b, a) {
  var c = xx(b);
  if (m(v.a ? v.a(Hu, a) : v.call(null, Hu, a))) {
    return Tf.a(function() {
      return function(a) {
        a = Cx(a);
        var c;
        c = tx(b);
        c = x(zz(c, /#/));
        var d = x(zz(a, /#/));
        c = v.a(c, d);
        a = m(c) ? NJ(a) : a;
        return new l(null, 1, [$u, a], null);
      };
    }(v, a, c), cg(function() {
      return function(a) {
        return v.a("trait", ef(Dx(a)));
      };
    }(v, a, c), c));
  }
  if (m(v.a ? v.a(nn, a) : v.call(null, nn, a))) {
    return Tf.a(function() {
      return function(a) {
        var b = x(Rx(a, "is-trait-tag"));
        return null != b ? Qx(b) : be(zz(Cx(a), /\//));
      };
    }(v, a, c), cg(function() {
      return function(a) {
        return v.a("trait", ef(Dx(a)));
      };
    }(v, a, c), c));
  }
  throw Error([q("No matching clause: "), q(a)].join(""));
}
function WM(b) {
  return null != b ? k === b.Zc ? !0 : b.L ? !1 : p(RK, b) : p(RK, b);
}
function XM(b) {
  var a = null != x(Rx(b, "is-annotation-tag"));
  return a ? a : null != b ? k === b.Pe ? !0 : b.L ? !1 : p(wK, b) : p(wK, b);
}
function YM(b, a, c) {
  return gg.a(S, hg(function(b) {
    var d = R, f;
    f = x(Rx(b, "is-annotation-tag"));
    null != f ? f = Qx(f) : (f = ux(b), f = m(f) ? f : IJ(tx(b)));
    return new Q(null, 2, 5, d, [f, c.a ? c.a(b, a) : c.call(null, b, a)], null);
  }, cg(XM, b)));
}
function ZM(b, a) {
  var c = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, d = t.a(c, Po);
  return gg.a(S, Tf.a(function(b, c, d) {
    return function(b) {
      var c;
      c = I.c(d, Mn, Mn.b(b));
      c = a.a ? a.a(b, c) : a.call(null, b, c);
      return new Q(null, 2, 5, R, [df.b(ux(b)), c], null);
    };
  }(b, c, c, d), cg(sb, cg(WM, cg(function() {
    return function(a) {
      return null == Mn.b(a);
    };
  }(b, c, c, d), d)))));
}
function $M(b) {
  b = x(Rx(b, "is-type-tag"));
  return Qx(b);
}
function aN(b, a) {
  var c = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, d = t.a(c, Po);
  return uJ(gg.a(S, Tf.a(function(b, c, d) {
    return function(b) {
      var c;
      c = I.c(d, Mn, Mn.b(b));
      c = a.a ? a.a(b, c) : a.call(null, b, c);
      if (null != b ? k === b.Wb || (b.L ? 0 : p(aL, b)) : p(aL, b)) {
        return new Q(null, 2, 5, R, [df.b(ux(b)), c], null);
      }
      b = $M(b);
      return new Q(null, 2, 5, R, [df.b(b), c], null);
    };
  }(b, c, c, d), cg(function() {
    return function(a) {
      var b = x(Rx(a, "is-type-tag"));
      return null != (m(b) ? b : (null != a ? k === a.Wb || (a.L ? 0 : p(aL, a)) : p(aL, a)) ? a : null);
    };
  }(b, c, c, d), cg(function() {
    return function(a) {
      return null == Mn.b(a);
    };
  }(b, c, c, d), d)))));
}
function bN(b) {
  return m(Bz(b, ".")) ? x(zz(b, /\./)) : b;
}
function cN(b) {
  return gg.a(S, Tf.a(function(a) {
    return new Q(null, 2, 5, R, [bN(ux(a)), Qx(a)], null);
  }, Rx(b, "uses-library-tag")));
}
function dN(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Po);
  return x(cg(function() {
    return function(a) {
      return v.a(t.a(bL(a), "@id"), b);
    };
  }(a, c, d), cg(function() {
    return function(a) {
      return null != a ? k === a.Wb ? !0 : a.L ? !1 : p(aL, a) : p(aL, a);
    };
  }(a, c, d), d)));
}
function eN(b, a, c) {
  var d = null != c && (c.l & 64 || k === c.I) ? P(Of, c) : c, e = t.a(d, $t), f = jy(a);
  c = Cb.c(function() {
    return function(a, c) {
      var d = t.a(b, c);
      return null == d ? a : I.c(a, c, d);
    };
  }(f, c, d, d, e), f, eh(b));
  c = I.c(c, ql, E);
  a = I.c(a, Tj, c);
  return e.a ? e.a(a, d) : e.call(null, a, d);
}
function fN(b, a, c) {
  var d = function() {
    var a = Cb.c(function(a, b) {
      return I.c(a, b, !0);
    }, S, eh(b));
    return U ? U(a) : Nf.call(null, a);
  }();
  return Tf.a(function(b) {
    return function(c) {
      var d = F(c, 0, null), e = F(c, 1, null);
      if (null == t.a(A.b ? A.b(b) : A.call(null, b), d)) {
        return Rf.a(b, function(a, b) {
          return function(a) {
            return I.c(a, b, !0);
          };
        }(c, d, e, b)), new Q(null, 2, 5, R, [d, e], null);
      }
      var f = [q(d), q("_"), q(Rf.a(a, Cd))].join("");
      Rf.a(b, function(a) {
        return function(b) {
          return I.c(b, a, !0);
        };
      }(f, c, d, e, b));
      return new Q(null, 2, 5, R, [f, e], null);
    };
  }(d), c);
}
function gN(b, a) {
  var c = gg.a(S, Tf.a(function(a) {
    F(a, 0, null);
    a = F(a, 1, null);
    return new Q(null, 2, 5, R, [tx(a), !0], null);
  }, b)), d = oy(a), e = cg(function() {
    return function(a) {
      return null != a ? k === a.Ub ? !0 : a.L ? !1 : p(ky, a) : p(ky, a);
    };
  }(c, d), d), f = cg(function(a) {
    return function(b) {
      return null == t.a(a, tx(b));
    };
  }(c, d, e), e), g = U ? U(0) : Nf.call(null, 0), c = gg.a(S, fN(b, g, Tf.a(function(a, b, c, d, e) {
    return function(a) {
      var b = R, c;
      try {
        var d = bN(be(zz(tx(a), /\//)));
        c = null == d ? [q("lib"), q(Rf.a(e, Cd))].join("") : d;
      } catch (T) {
        if (T instanceof Error) {
          c = [q("lib"), q(Rf.a(e, Cd))].join("");
        } else {
          throw T;
        }
      }
      return new Q(null, 2, 5, b, [c, a], null);
    };
  }(c, d, e, f, g), f)));
  return ki.j(C([b, c], 0));
}
function hN(b, a) {
  var c = gg.a(S, Tf.a(function(a) {
    return new Q(null, 2, 5, R, [tx(a), !0], null);
  }, b)), d = oy(a), e = cg(function() {
    return function(a) {
      return null != a ? k === a.Ub ? !0 : a.L ? !1 : p(ky, a) : p(ky, a);
    };
  }(c, d), d);
  return N.a(b, cg(function(a) {
    return function(b) {
      return null == t.a(a, tx(b));
    };
  }(c, d, e), e));
}
function iN(b) {
  if (null != b && (null != b ? k === b.ha || (b.L ? 0 : p(sx, b)) : p(sx, b))) {
    if (null != ux(b)) {
      return ux(b);
    }
    b = tx(b);
    b = m(b) ? b : [q($i), q("label")].join("");
    b = be(zz(b, /\//));
    return bN(b);
  }
  return "" + q($i.b("label"));
}
function jN(b, a) {
  var c = x(Rx(b, "is-type-tag")), d = x(Rx(b, "is-trait-tag"));
  if (m(m(d) ? d : c)) {
    var e = function() {
      var a = null != c ? hJ(Qx(c)) : null;
      return m(a) ? a : null != d ? hJ(Qx(d)) : null;
    }(), f = m(c) ? c : m(d) ? d : ey(new l(null, 2, [Z, tx(b), pn, e], null)), e = I.c(f, pn, [q(hJ(a)), q("."), q(e)].join(""));
    return Sx(b, f, e);
  }
  e = iN(b);
  e = ey(new l(null, 2, [Z, tx(b), pn, [q(hJ(a)), q("."), q(e)].join("")], null));
  f = function() {
    var a = wx(b);
    return m(a) ? a : E;
  }();
  e = Nx([q(tx(b)), q("/source-map")].join(""), tx(b), new Q(null, 1, 5, R, [e], null));
  return I.c(b, Rm, N.a(f, new Q(null, 1, 5, R, [e], null)));
}
function kN(b, a, c, d) {
  var e = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a;
  a = t.a(e, jk);
  e = t.a(e, Or);
  return m(a) ? (a = v.a(e, nn) ? df.b("(amf-id)") : df.b("x-amf-id"), e = v.a(e, nn) ? df.b("(amf-class)") : df.b("x-amf-class"), I.c(I.c(d, a, Z.b(b)), e, aK(c))) : d;
}
;function lN(b, a) {
  var c = dN(b, a), d = x(Rx(c, "is-type-tag")), d = null != d ? df.b(Qx(d)) : null != ux(c) ? ux(c) : be(zz(tx(c), /\//)), d = hJ(d);
  return m(Mn.b(c)) ? new l(null, 1, [$u, b], null) : pa(d, "#") ? new l(null, 1, [$u, d], null) : new l(null, 1, [$u, [q("#/definitions/"), q(d)].join("")], null);
}
if ("undefined" === typeof mN) {
  var mN = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.generators.domain.shapes-json-schema", "parse-shape"), function() {
      return function(a) {
        return null == a ? null : m(OJ(a)) ? nC("or") : null != t.a(a, mC("inherits")) ? Kp : m(nJ(a, mC("NilValueShape"))) ? mC("NilValueShape") : m(nJ(a, mC("JSONSchema"))) ? mC("JSONSchema") : m(nJ(a, mC("XMLSchema"))) ? mC("XMLSchema") : m(nJ(a, mC("Scalar"))) ? mC("Scalar") : m(nJ(a, mC("Array"))) ? mC("Array") : m(nJ(a, nC("NodeShape"))) ? nC("NodeShape") : m(nJ(a, mC("FileUpload"))) ? mC("FileUpload") : null != t.a(a, "@id") ? gv : null;
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
function nN(b, a) {
  return uJ(Cb.c(function(a, b) {
    return b.b ? b.b(a) : b.call(null, a);
  }, a, Tf.a(function(a) {
    var c = F(a, 0, null), e = F(a, 1, null);
    return m(v.a ? v.a(QC, c) : v.call(null, QC, c)) ? function() {
      return function(a) {
        return I.c(a, yp, FJ(b, QC));
      };
    }(v, c, a, c, e) : m(v.a ? v.a(RC, c) : v.call(null, RC, c)) ? function() {
      return function(a) {
        return I.c(a, Hj, FJ(b, RC));
      };
    }(v, c, a, c, e) : Ge;
  }, b)));
}
function oN(b, a) {
  return uJ(nN(a, Cb.c(function(a, b) {
    return b.b ? b.b(a) : b.call(null, a);
  }, b, Tf.a(function(b) {
    var c = F(b, 0, null), e = F(b, 1, null);
    return m(function() {
      var a = nC("minLength");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, To, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : m(function() {
      var a = nC("maxLength");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, rt, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : m(function() {
      var a = nC("minCount");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? m(nJ(a, mC("Array"))) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, ls, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : Ge : m(function() {
      var a = nC("maxCount");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? m(nJ(a, mC("Array"))) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, Tv, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : Ge : m(function() {
      var a = nC("pattern");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, hw, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : m(function() {
      var a = nC("closed");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, Wj, rb(iJ(t.a(x(e), "@value"))));
      };
    }(v, c, b, c, e) : m(function() {
      var a = mC("uniqueItems");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, Xk, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : m(function() {
      var a = nC("minExclusive");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, is, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : m(function() {
      var a = mC("multipleOf");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, wk, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : m(function() {
      var a = nC("in");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, Kj, Tf.a(KJ, t.c(e, "@list", E)));
      };
    }(v, c, b, c, e) : Ge;
  }, a))));
}
mN.D(0, nC("NodeShape"), function(b, a) {
  var c = EJ(b, nC("closed"), function(a) {
    return rb(a);
  }), d = U ? U(E) : Nf.call(null, E), e = gg.a(S, Tf.a(function(b, c) {
    return function(d) {
      var e = FJ(d, mC("propertyLabel")), f = EJ(d, nC("minCount"), function() {
        return function(a) {
          return v.a(a, 0) ? !1 : !0;
        };
      }(e, b, c)), g = m(TJ(d)) ? function() {
        var b = ZJ(d);
        return mN.a ? mN.a(b, a) : mN.call(null, b, a);
      }() : m(OJ(d)) ? function() {
        var b = $J(d);
        return mN.a ? mN.a(b, a) : mN.call(null, b, a);
      }() : m(UJ(d)) ? "null" : m(null != t.a(d, nC("datatype"))) ? function() {
        var b = SJ(d);
        return mN.a ? mN.a(b, a) : mN.call(null, b, a);
      }() : function() {
        var b = x(t.c(d, nC("node"), E));
        return mN.a ? mN.a(b, a) : mN.call(null, b, a);
      }(), n = "string" === typeof g ? new l(null, 1, [uo, g], null) : g;
      m(f) && Rf.a(c, function(a) {
        return function(b) {
          return N.a(b, new Q(null, 1, 5, R, [a], null));
        };
      }(e, f, g, n, b, c));
      return new Q(null, 2, 5, R, [e, m(n) ? n : S], null);
    };
  }(c, d), t.c(b, nC("property"), E)));
  return oN(uJ(new l(null, 4, [uo, "object", Pj, e, Mv, le(A.b ? A.b(d) : A.call(null, d)) ? null : A.b ? A.b(d) : A.call(null, d), Wj, c], null)), b);
});
mN.D(0, mC("Array"), function(b, a) {
  var c = Tf.a(function(b) {
    return mN.a ? mN.a(b, a) : mN.call(null, b, a);
  }, t.a(b, mC("item"))), c = v.a(1, B(c)) ? x(c) : c;
  return oN(new l(null, 2, [uo, "array", uu, c], null), b);
});
mN.D(0, mC("Scalar"), function(b) {
  if (null != t.a(b, mC("is-number"))) {
    return new l(null, 1, [uo, "number"], null);
  }
  var a = t.a(x(t.a(b, nC("datatype"))), "@id"), c = function() {
    if (m(function() {
      var b = qC("string");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 1, [uo, "string"], null);
    }
    if (m(function() {
      var b = qC("float");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 2, [uo, "number", wn, "xsd:float"], null);
    }
    if (m(function() {
      var b = qC("integer");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 2, [uo, "number", wn, "xsd:integer"], null);
    }
    if (m(function() {
      var b = qC("boolean");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 1, [uo, "boolean"], null);
    }
    if (m(function() {
      var b = mC("null");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 1, [uo, "null"], null);
    }
    if (m(function() {
      var b = qC("time");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 2, [uo, "string", wn, "xsd:time"], null);
    }
    if (m(function() {
      var b = qC("dateTime");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 2, [uo, "string", wn, "xsd:dateTime"], null);
    }
    if (m(function() {
      var b = mC("datetime-only");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 2, [uo, "string", wn, "shapes:datetime-only"], null);
    }
    if (m(function() {
      var b = qC("date");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 2, [uo, "string", wn, "xsd:date"], null);
    }
    if (m(function() {
      var b = mC("any");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 2, [uo, "string", wn, "shapes:any"], null);
    }
    throw Error([q("Unknown scalar data type "), q(a)].join(""));
  }();
  return oN(c, b);
});
mN.D(0, mC("JSONSchema"), function(b) {
  b = FJ(b, mC("schemaRaw"));
  return new l(null, 2, [uo, "EmbeddedJSONSchema", pn, b], null);
});
mN.D(0, mC("XMLSchema"), function(b) {
  b = FJ(b, mC("schemaRaw"));
  return new l(null, 2, [uo, "EmbeddedXMLSchema", pn, b], null);
});
mN.D(0, mC("NilValueShape"), function() {
  return new l(null, 1, [uo, "null"], null);
});
mN.D(0, mC("FileUpload"), function(b) {
  var a = Tf.a(function(a) {
    return t.a(a, "@value");
  }, t.c(b, mC("fileType"), E)), a = v.a(1, B(a)) ? x(a) : a;
  return oN(uJ(new l(null, 2, [uo, "file", Wt, a], null)), b);
});
function pN(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, c = t.a(c, Cl);
  return t.a(c, b);
}
function qN(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a;
  t.a(c, Cl);
  var d = t.a(c, $t), e = pN(b, c);
  return null != e ? d.a ? d.a(e, c) : d.call(null, e, c) : null;
}
mN.D(0, Kp, function(b, a) {
  var c = function() {
    var c = J.a(b, mC("inherits"));
    return mN.a ? mN.a(c, a) : mN.call(null, c, a);
  }(), d = hg(function() {
    return function(b) {
      var c = t.a(b, "@id");
      return m(dN(c, a)) ? lN(c, a) : m(pN(c, a)) ? qN(c, a) : mN.a ? mN.a(b, a) : mN.call(null, b, a);
    };
  }(c), t.a(b, mC("inherits")));
  return v.a(1, B(d)) ? m(RJ(c)) ? x(d) : new l(null, 1, [Ws, new l(null, 2, [Ro, c, Fr, x(d)], null)], null) : new l(null, 1, [Ws, new l(null, 2, [Ro, c, Fr, d], null)], null);
});
mN.D(0, gv, function(b, a) {
  var c = t.a(b, "@id");
  return m(dN(c, a)) ? lN(c, a) : m(pN(c, a)) ? qN(c, a) : mN.a ? mN.a(tb, a) : mN.call(null, tb, a);
});
mN.D(0, nC("or"), function(b) {
  return oN(new l(null, 1, [uo, "number"], null), b);
});
mN.D(0, cw, function(b) {
  return t.a(x(t.a(b, mC("ramlTypeExpression"))), "@value");
});
mN.D(0, null, function() {
  return S;
});
function rN(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Cl), e = t.a(c, Po);
  if (m(Ex(b))) {
    var f = Cx(b), g = t.a(d, f), c = x(cg(function(a) {
      return function(b) {
        return v.a(tx(b), a);
      };
    }(f, g, a, c, c, d, e), e));
    if (null != g) {
      return jy(g);
    }
    if (null != c) {
      return b;
    }
    throw Error([q("Cannot find fragment "), q(Cx(b))].join(""));
  }
  return b;
}
;function sN(b) {
  return null == b ? b : (null != b ? k === b.Pe || (b.L ? 0 : p(wK, b)) : p(wK, b)) ? wK : function() {
    var a = null != b ? k === b.sd ? !0 : b.L ? !1 : p(Bx, b) : p(Bx, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? Bx : function() {
    var a = null != b ? k === b.Oe ? !0 : b.L ? !1 : p(nK, b) : p(nK, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? nK : function() {
    var a = null != b ? k === b.Wd ? !0 : b.L ? !1 : p(FK, b) : p(FK, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? FK : function() {
    var a = null != b ? k === b.Zc ? !0 : b.L ? !1 : p(RK, b) : p(RK, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? RK : function() {
    var a = null != b ? k === b.Xd ? !0 : b.L ? !1 : p(XK, b) : p(XK, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? XK : function() {
    var a = null != b ? k === b.kf ? !0 : b.L ? !1 : p(eL, b) : p(eL, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? eL : function() {
    var a = null != b ? k === b.Wb ? !0 : b.L ? !1 : p(aL, b) : p(aL, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? aL : tb(b);
}
if ("undefined" === typeof tN) {
  var tN = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.generators.domain.openapi", "to-openapi"), function() {
      return function(a) {
        return sN(a);
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
var uN = function uN(a) {
  return null != lp.b(a) ? null : pe(a) ? (a = uJ(gg.a(S, Tf.a(function(a) {
    var c = F(a, 0, null);
    a = F(a, 1, null);
    return new Q(null, 2, 5, R, [c, uN.b ? uN.b(a) : uN.call(null, a)], null);
  }, a))), v.a(a, S) ? null : a) : me(a) ? (a = cg(sb, Tf.a(uN, a)), le(a) ? null : a) : MJ(a);
};
function vN(b, a) {
  var c;
  if (c = null != a) {
    c = (c = null != a ? k === a.wc ? !0 : a.L ? !1 : p(dK, a) : p(dK, a)) ? eK(a) : c;
  }
  return m(c) ? uN(I.c(b, Ms, !0)) : b;
}
function wN(b, a) {
  if (pe(a)) {
    var c = yx(b), c = gg.a(S, Tf.a(function() {
      return function(a) {
        return new Q(null, 2, 5, R, [df.b([q("x-"), q(ux(a))].join("")), KJ(CK(a))], null);
      };
    }(c), cg(function() {
      return function(a) {
        a = ux(a);
        return yf(a, "traits") && yf(a, "is") && yf(a, "media-type") && yf(a, "requests") && yf(a, "abstract-node") && yf(a, "description") && yf(a, "responses");
      };
    }(c), c)));
    return ki.j(C([a, c], 0));
  }
  return a;
}
function xN(b) {
  return null != b && null != xx(b) && v.a(1, B(xx(b))) ? (b = xx(b), null != x(Rx(x(b), "extend-include-fragment-parsed-tag"))) : !1;
}
function yN(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Cl), e = t.a(c, us), f = t.a(c, $t);
  if (m(xN(b))) {
    var g = Cx(x(xx(b))), n = t.a(d, g);
    if (null == n) {
      throw Error([q("Cannot find fragment "), q(g), q(" for generation")].join(""));
    }
    var r = function() {
      var u = t.a(e, g);
      if (m(u)) {
        var y = u
      } else {
        y = eN(b, n, c), Rf.a(e, function(a, b, c) {
          return function(b) {
            return I.c(b, c, a);
          };
        }(y, u, g, n, a, c, c, d, e, f));
      }
      return y;
    }();
    return wN(jy(n), r);
  }
  return wN(b, tN.a ? tN.a(b, c) : tN.call(null, b, c));
}
function zN(b, a) {
  if (null == b) {
    return E;
  }
  var c = function() {
    var a = mK(b);
    return m(a) ? a : E;
  }();
  return Tf.a(function() {
    return function(b) {
      return yN(b, a);
    };
  }(c), c);
}
tN.D(0, nK, function(b, a) {
  var c = LJ(uJ(new l(null, 4, [yp, ux(b), Hj, vx(b), Du, qK(b), Bu, pK(b)], null)), Du, ""), d = gg.a(S, Tf.a(function() {
    return function(b) {
      return new Q(null, 2, 5, R, [df.b(HK(b)), yN(b, a)], null);
    };
  }(c), tK(b))), e = gg.a(S, Tf.a(function() {
    return function(a) {
      var b = F(a, 0, null);
      a = F(a, 1, null);
      return new Q(null, 2, 5, R, [b, J.a(I.c(uN(a), Ms, !0), Zv)], null);
    };
  }(c, d), ZM(I.c(a, ho, !0), yN))), f = aN(I.c(a, br, !0), yN);
  return LJ(uJ(kN(b, a, "API", wN(b, fe([Uj, yk, dn, oo, tp, xq, Oq, Cs, Ct, Kt, Zt, rw], [gK(b), f, v.a(1, B(iK(b))) ? x(iK(b)) : iK(b), d, v.a(1, B(hK(b))) ? x(hK(b)) : hK(b), fK(b), Bt.b(a), c, "2.0", e, zN(b, a), sK(b)])))), oo, S);
});
tN.D(0, FK, function(b, a) {
  var c = GK(b), d = zN(b, a), c = gg.a(S, Tf.a(function() {
    return function(b) {
      var c = R, d;
      d = SK(b);
      d = null != t.a(new V(null, new l(null, 7, [Kk, null, yl, null, Bo, null, mq, null, kt, null, Rt, null, mu, null], null), null), df.b(d)) ? df.b(d) : df.b([q("x-method-"), q(hJ(d))].join(""));
      return new Q(null, 2, 5, c, [d, yN(b, a)], null);
    };
  }(c, d), c)), e = VM(b, Hu);
  return uJ(kN(b, a, "PathItem", I.c(I.c(I.c(c, Sj, e), dt, vx(b)), iv, d)));
});
function AN(b, a) {
  if (null == b || null == QK(b) || le(QK(b))) {
    return E;
  }
  var c = QK(b);
  return cg(sb, hg(function() {
    return function(b) {
      var c = rN(LK(b), a), d = yN(c, a);
      b = uJ(kN(b, a, "ResponseBody", new l(null, 3, [W, null != c && null != ux(b) ? ux(b) : "", tk, yf("*/*", MK(b)) ? MK(b) : null, dk, d], null)));
      return v.a(S, b) || v.a(new l(null, 1, [W, ""], null), b) ? null : I.c(b, fw, "body");
    };
  }(c), c));
}
tN.D(0, RK, function(b, a) {
  var c = Tf.a(function(a) {
    return Qx(a);
  }, Rx(b, "api-tag-tag")), d = iK(b), e = VM(b, Hu), f = TK(b), g = null != f ? Tf.a(function() {
    return function(b) {
      return yN(b, a);
    };
  }(c, d, e, f), kK(f)) : E, n = null != f ? zN(f, a) : E, r = null != f ? AN(f, a) : E, u = x(Tf.a(function() {
    return function(a) {
      return new Q(null, 2, 5, R, [a, null == dk.b(a) ? I.c(a, dk, new l(null, 2, [uo, "object", lp, !0], null)) : a], null);
    };
  }(c, d, e, f, g, n, r), cg(sb, new Q(null, 3, 5, R, [x(cg(function() {
    return function(a) {
      return v.a("*/*", t.a(a, tk));
    };
  }(c, d, e, f, g, n, r), r)), x(cg(function() {
    return function(a) {
      return v.a("application/json", t.a(a, tk));
    };
  }(c, d, e, f, g, n, r), r)), x(r)], null)))), y = F(u, 0, null), D = F(u, 1, null), G = hg(function() {
    return function(a) {
      return uJ(new l(null, 2, [tk, null, dk, dk.b(a)], null));
    };
  }(c, d, e, f, g, n, r, u, y, D), cg(function(a, b, c, d, e, f, g, n, u) {
    return function(a) {
      return yf(a, u);
    };
  }(c, d, e, f, g, n, r, u, y, D), r)), f = gg.a(S, hg(function() {
    return function(b) {
      return new Q(null, 2, 5, R, [ux(b), yN(b, a)], null);
    };
  }(c, d, e, f, g, n, r, u, y, D, G), UK(b))), f = (null == f || v.a(S, f)) && rb(ho.b(a)) ? new l(null, 1, [Cm, new l(null, 2, [lp, !0, Hj, ""], null)], null) : f;
  return uJ(kN(b, a, "Operation", fe([Hj, Sj, Uj, ck, dn, tp, ss, iv, rv, Zv], [vx(b), e, gK(b), c, d, hK(b), f, cg(sb, N.j(g, n, C([new Q(null, 1, 5, R, [D], null)], 0))), G, ux(b)])));
});
tN.D(0, XK, function(b, a) {
  var c = AN(b, a), d = x(cg(sb, new Q(null, 3, 5, R, [x(cg(function() {
    return function(a) {
      return v.a("*/*", t.a(a, tk));
    };
  }(c), c)), x(cg(function() {
    return function(a) {
      return v.a("application/json", t.a(a, tk));
    };
  }(c), c)), x(c)], null))), e = dk.b(d), c = Tf.a(function() {
    return function(a) {
      var b = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a;
      a = t.a(b, tk);
      b = t.a(b, dk);
      return uJ(new l(null, 2, [tk, a, dk, b], null));
    };
  }(c, d, e), cg(function(a, b) {
    return function(a) {
      return yf(a, b);
    };
  }(c, d, e), c));
  return uJ(kN(b, a, "Response", new l(null, 4, [Hj, null == vx(b) ? "" : vx(b), dk, e, tk, yf("*/*", tk.b(d)) ? tk.b(d) : null, Jt, c], null)));
});
tN.D(0, eL, function(b, a) {
  var c = new l(null, 4, [Hj, vx(b), W, function() {
    var a = ux(b);
    return m(a) ? a : "";
  }(), Mv, gL(b), fw, fL(b)], null), d = ki.j(C([BD(function() {
    var c = bL(b);
    return mN.a ? mN.a(c, a) : mN.call(null, c, a);
  }())], 0));
  return uJ(ki.j(C([c, d], 0)));
});
tN.D(0, aL, function(b, a) {
  var c;
  c = bL(b);
  c = mN.a ? mN.a(c, a) : mN.call(null, c, a);
  return kN(b, a, "TypeDeclaration", BD(c));
});
tN.D(0, Bx, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Cl), e = t.c(c, us, U ? U(S) : Nf.call(null, S)), f = t.a(c, $t), g = t.a(c, Po), n = Cx(b), r = t.a(d, n), u = x(cg(function(a) {
    return function(b) {
      return v.a(tx(b), a);
    };
  }(n, r, a, c, c, d, e, f, g), g));
  if (null != r) {
    var y = t.a(e, n);
    if (m(y)) {
      var D = y
    } else {
      D = f.a ? f.a(r, c) : f.call(null, r, c), Rf.a(e, function(a, b, c) {
        return function(b) {
          return I.c(b, c, a);
        };
      }(D, y, n, r, u, a, c, c, d, e, f, g));
    }
    return D;
  }
  return new l(null, 1, [$u, n], null);
});
tN.D(0, wK, function(b, a) {
  var c = yN(yK(b), a), d = ux(b), e = Tf.a(cK, xK(b)), f = vx(b);
  return uJ(kN(b, a, "DomainPropertySchema", ki.j(C([c, new l(null, 3, [om, d, Hj, f, Um, e], null)], 0))));
});
tN.D(0, null, function() {
  return null;
});
if ("undefined" === typeof BN) {
  var BN = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.generators.document.openapi", "to-openapi"), function() {
      return function(a) {
        if (null == a) {
          a = null;
        } else {
          var b = null != a ? k === a.vc ? !0 : a.L ? !1 : p(iy, a) : p(iy, a);
          a = (b ? null != a ? k === a.Ub || (a.L ? 0 : p(ky, a)) : p(ky, a) : b) ? jq : (null != a ? k === a.vc || (a.L ? 0 : p(iy, a)) : p(iy, a)) ? zm : (null != a ? k === a.Ub || (a.L ? 0 : p(ky, a)) : p(ky, a)) ? Op : bm;
        }
        return a;
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
function CN(b) {
  return gg.a(S, hg(function(a) {
    return new Q(null, 2, 5, R, [Qx(x(Rx(a, "is-annotation-tag"))), tx(a)], null);
  }, cg(function(a) {
    return null != x(Rx(a, "is-annotation-tag"));
  }, b)));
}
BN.D(0, jq, function(b, a) {
  var c = I.c(a, Or, Hu), d = Cb.c(function() {
    return function(a, b) {
      return I.c(a, ny(b), b);
    };
  }(c), S, oy(b)), e = hg(function(a, b) {
    return function(a) {
      F(a, 0, null);
      a = F(a, 1, null);
      return t.a(b, a);
    };
  }(c, d), cN(b)), f = hN(e, b), g = ly(b), n = P(N, hg(function(a, b, c, d, e) {
    return function(f) {
      return hg(function() {
        return function(a) {
          return I.c(a, Mn, !0);
        };
      }(a, b, c, d, e), ly(f));
    };
  }(c, d, e, f, g), f)), e = hg(function(a) {
    return function(b) {
      return BN.a ? BN.a(b, a) : BN.call(null, b, a);
    };
  }(c, d, e, f, g, n), f), f = YM(g, c, yN), r = CN(n), u = I.c(I.c(I.c(I.c(I.c(I.c(c, Yj, ny(b)), Po, N.a(g, n)), Cl, d), us, U ? U(S) : Nf.call(null, S)), $t, BN), Bt, ki.j(C([f, r], 0))), c = function() {
    var a = jy(b);
    return tN.a ? tN.a(a, u) : tN.call(null, a, u);
  }(), c = 0 < B(e) ? I.c(c, En, e) : c;
  return jh([By, ny(b), Ay, c, Cy, "OpenAPI"]);
});
BN.D(0, zm, function(b, a) {
  var c = I.c(a, Or, Hu), d = m(Cl.b(c)) ? Cl.b(c) : Cb.c(function() {
    return function(a, b) {
      return I.c(a, ny(b), b);
    };
  }(c), S, oy(b)), e = hg(function(a, b) {
    return function(a) {
      F(a, 0, null);
      a = F(a, 1, null);
      return t.a(b, a);
    };
  }(c, d), cN(b)), f = hN(e, b), g = P(N, hg(function(a, b, c, d) {
    return function(e) {
      return hg(function() {
        return function(a) {
          return I.c(a, Mn, !0);
        };
      }(a, b, c, d), ly(e));
    };
  }(c, d, e, f), f)), e = hg(function(a) {
    return function(b) {
      return BN.a ? BN.a(b, a) : BN.call(null, b, a);
    };
  }(c, d, e, f, g), f), f = CN(g), n = I.c(I.c(I.c(I.c(I.c(I.c(c, Cl, d), Po, g), Yj, ny(b)), us, function() {
    var a = us.b(c);
    return m(a) ? a : U ? U(S) : Nf.call(null, S);
  }()), $t, BN), Bt, f), d = function() {
    var a = jy(b);
    return tN.a ? tN.a(a, n) : tN.call(null, a, n);
  }(), d = 0 < B(e) ? I.c(d, En, e) : d, d = vN(d, jy(b));
  return jh([By, ny(b), Ay, d]);
});
BN.D(0, bm, function(b, a) {
  return tN.a ? tN.a(b, a) : tN.call(null, b, a);
});
BN.D(0, Op, function(b, a) {
  var c = I.c(a, Or, Hu), d = ly(b), e = Cb.c(function() {
    return function(a, b) {
      return I.c(a, ny(b), b);
    };
  }(c, d), S, oy(b)), f = YM(d, c, yN), g = hg(function(a, b, c) {
    return function(a) {
      F(a, 0, null);
      a = F(a, 1, null);
      return t.a(c, a);
    };
  }(c, d, e, f), cN(b)), n = P(N, hg(function(a, b, c, d, e) {
    return function(f) {
      return hg(function() {
        return function(a) {
          return I.c(a, Mn, !0);
        };
      }(a, b, c, d, e), ly(f));
    };
  }(c, d, e, f, g), g)), r = CN(n), u = I.c(I.c(I.c(I.c(I.c(c, Yj, ny(b)), Po, N.a(d, n)), Cl, e), us, U ? U(S) : Nf.call(null, S)), $t, BN), y = aN(I.c(u, br, !0), yN), D = ZM(u, yN), G = hg(function(a, b, c) {
    return function(a) {
      F(a, 0, null);
      a = F(a, 1, null);
      return t.a(c, a);
    };
  }(c, d, e, f, g, n, r, u, y, D), cN(b)), H = hN(G, b), M = P(N, hg(function(a, b, c, d, e, f, g, n, u, y, r, D) {
    return function(G) {
      return hg(function() {
        return function(a) {
          return I.c(a, Mn, !0);
        };
      }(a, b, c, d, e, f, g, n, u, y, r, D), ly(G));
    };
  }(c, d, e, f, g, n, r, u, y, D, G, H), H)), c = hg(function(a) {
    return function(b) {
      return BN.a ? BN.a(b, a) : BN.call(null, b, a);
    };
  }(c, d, e, f, g, n, r, u, y, D, G, H, M), H);
  return jh([By, ny(b), Ay, uJ(new l(null, 5, [Ct, "Swagger Library", Ep, y, Kt, D, Oq, f, En, c], null)), Cy, "OpenAPI Library"]);
});
function DN(b) {
  try {
    return jy(b);
  } catch (a) {
    if (a instanceof Error) {
      return b;
    }
    throw a;
  }
}
function EN(b) {
  if (null == b || pe(b) || !me(b) || null == x(b)) {
    return null;
  }
  b = x(b);
  return (null != b ? k === b.Wd || (b.L ? 0 : p(FK, b)) : p(FK, b)) ? function() {
    return function(a) {
      return Lj.b(a);
    };
  }(b) : (null != b ? k === b.Zc || (b.L ? 0 : p(RK, b)) : p(RK, b)) ? function() {
    return function(a) {
      return xm.b(a);
    };
  }(b) : (null != b ? k === b.Xd || (b.L ? 0 : p(XK, b)) : p(XK, b)) ? function() {
    return function(a) {
      return Wo.b(a);
    };
  }(b) : (null != b ? k === b.lf || (b.L ? 0 : p(KK, b)) : p(KK, b)) ? function() {
    return function(a) {
      return gw.b(a);
    };
  }(b) : m(nJ(b, nC("PropertyShape"))) ? function() {
    return function(a) {
      return t.a(x(t.c(a, nC("path"), E)), "@id");
    };
  }(b) : null;
}
function FN(b) {
  return Cb.c(function(a, b) {
    return m(OJ(b)) ? ki.j(C([J.a(a, nC("datatype")), b], 0)) : m(OJ(a)) ? ki.j(C([J.a(J.a(a, nC("or")), mC("is-number")), b], 0)) : ki.j(C([a, b], 0));
  }, x(b), sd(b));
}
function GN(b) {
  var a = EN(b);
  return kj(a, b);
}
function HN(b, a) {
  var c = GN(b), d = GN(a);
  return li.j(N, C([c, d], 0));
}
function IN(b) {
  return Cb.c(function(a, b) {
    return JN.a ? JN.a(a, b) : JN.call(null, a, b);
  }, x(b), sd(b));
}
function KN(b, a) {
  if (m(EN(b))) {
    var c = HN(b, a);
    return Tf.a(function() {
      return function(a) {
        F(a, 0, null);
        a = F(a, 1, null);
        var b;
        b = me(a) && 1 < B(a) && null != t.a(x(a), "@type");
        return m(b) ? FN(a) : IN(a);
      };
    }(c), c);
  }
  return gg.a(E, qi(N.a(b, a)));
}
var JN = function JN(a, c) {
  return null == a ? c : null == c ? a : pe(a) && pe(c) ? Cb.c(function(a, e) {
    var d;
    d = (null != c ? k === c.Zc || (c.L ? 0 : p(RK, c)) : p(RK, c)) ? I.c(c, W, null) : c;
    d = t.a(d, e);
    var g = t.a(a, e);
    return I.c(a, e, JN.a ? JN.a(g, d) : JN.call(null, g, d));
  }, a, eh(c)) : me(a) && me(c) ? KN(a, c) : me(a) ? gg.a(E, qi(N.a(a, new Q(null, 1, 5, R, [c], null)))) : me(c) ? gg.a(E, qi(N.a(new Q(null, 1, 5, R, [a], null), c))) : a;
};
function LN(b) {
  return null != t.a(b, "@type") ? Ut : function() {
    var a = null != b ? k === b.vc ? !0 : b.L ? !1 : p(iy, b) : p(iy, b);
    return a ? null != b ? k === b.Ub ? !0 : b.L ? !1 : p(ky, b) : p(ky, b) : a;
  }() ? $v : (null != b ? k === b.vc || (b.L ? 0 : p(iy, b)) : p(iy, b)) ? iy : (null != b ? k === b.Oe || (b.L ? 0 : p(nK, b)) : p(nK, b)) ? nK : (null != b ? k === b.Wd || (b.L ? 0 : p(FK, b)) : p(FK, b)) ? FK : (null != b ? k === b.Zc || (b.L ? 0 : p(RK, b)) : p(RK, b)) ? RK : function() {
    var a = null != b ? k === b.Se ? !0 : b.L ? !1 : p(PK, b) : p(PK, b);
    return a && (a = null != b ? k === b.ge ? !0 : b.L ? !1 : p(jK, b) : p(jK, b)) ? (a = null != b ? k === b.he ? !0 : b.L ? !1 : p(lK, b) : p(lK, b)) ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a : a;
  }() ? Fm : (null != b ? k === b.kf || (b.L ? 0 : p(eL, b)) : p(eL, b)) ? eL : (null != b ? k === b.lf || (b.L ? 0 : p(KK, b)) : p(KK, b)) ? KK : (null != b ? k === b.Wb || (b.L ? 0 : p(aL, b)) : p(aL, b)) ? aL : (null != b ? k === b.Xd || (b.L ? 0 : p(XK, b)) : p(XK, b)) ? XK : (null != b ? k === b.Tf || (b.L ? 0 : p(zx, b)) : p(zx, b)) ? zx : (null != b ? k === b.sd || (b.L ? 0 : p(Bx, b)) : p(Bx, b)) ? Bx : null == b ? null : bm;
}
if ("undefined" === typeof MN) {
  var MN = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.resolution", "resolve"), function() {
      return function(a) {
        return LN(a);
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
function NN(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d;
  d = t.a(c, Cl);
  var e = x(xx(b));
  if (m(e)) {
    var f = Rx(e, "extend-include-fragment-parsed-tag");
    if (le(f)) {
      d = null;
    } else {
      if (e = Cx(e), d = t.a(d, e), null == d) {
        throw Error([q("Cannot find fragment "), q(e), q(" in include relationship "), q(tx(b))].join(""));
      }
    }
  } else {
    d = null;
  }
  return m(d) ? (e = I.c(b, ql, null), d = JN(e, d), MN.a ? MN.a(d, c) : MN.call(null, d, c)) : b;
}
function ON(b, a) {
  var c = t.a(a, nK), c = sK(c), c = m(c) ? c : "", d = HK(b);
  return uz([q(c), q(d)].join(""), "//", "/");
}
function PN(b, a) {
  var c = t.a(a, nK);
  null != c ? (c = gK(c), c = m(c) ? c : null) : c = null;
  var d = gK(b);
  return m(d) ? d : c;
}
function QN(b, a) {
  var c = t.a(a, nK), d = null != c ? function() {
    var a = kK(c);
    return m(a) ? a : E;
  }() : E, e = function() {
    var a = kK(b);
    return m(a) ? a : E;
  }();
  return hg(function() {
    return function(b) {
      return MN.a ? MN.a(b, a) : MN.call(null, b, a);
    };
  }(c, d, e), fh(Cb.c(function() {
    return function(a, b) {
      return I.c(a, ux(b), b);
    };
  }(c, d, e), S, N.a(e, d))));
}
function RN(b, a) {
  var c = t.a(a, nK), d = null != c ? function() {
    var a = hK(c);
    return m(a) ? a : E;
  }() : null, e = function() {
    var a = hK(b);
    return m(a) ? a : E;
  }();
  return m(e) ? e : d;
}
function SN(b, a) {
  var c = t.a(a, nK), d = null != c ? function() {
    var a = iK(c);
    return m(a) ? a : E;
  }() : null, e = function() {
    var a = iK(b);
    return m(a) ? a : E;
  }();
  return m(e) ? e : d;
}
function TN(b, a) {
  var c = Cb.c(function(a, b) {
    return (null != b ? k === b.Ub || (b.L ? 0 : p(ky, b)) : p(ky, b)) ? N.a(a, ly(b)) : a;
  }, a, b), d = jg(sb, hg(function() {
    return function(a) {
      return (null != a ? k === a.Wb || (a.L ? 0 : p(aL, a)) : p(aL, a)) ? bL(a) : null;
    };
  }(c), c));
  return gg.a(S, hg(function() {
    return function(a) {
      return new Q(null, 2, 5, R, [t.a(a, "@id"), a], null);
    };
  }(c, d), d));
}
MN.D(0, $v, function(b, a) {
  var c = NN(b, a), d = gg.a(S, hg(function() {
    return function(b) {
      return new Q(null, 2, 5, R, [ny(b), DN(MN.a ? MN.a(b, a) : MN.call(null, b, a))], null);
    };
  }(c), oy(c))), e = P(N, cg(sb, Tf.a(function() {
    return function(a) {
      return ly(a);
    };
  }(c, d), cg(function() {
    return function(a) {
      return null != a ? k === a.Ub ? !0 : a.L ? !1 : p(ky, a) : p(ky, a);
    };
  }(c, d), oy(c))))), f = TN(fh(d), E), g = gg.a(S, hg(function(b, c, d, e) {
    return function(d) {
      var f = R, g = tx(d), n = I.c(I.c(I.c(I.c(a, Cl, c), jq, b), Ep, e), nK, jy(b));
      d = MN.a ? MN.a(d, n) : MN.call(null, d, n);
      return new Q(null, 2, 5, f, [g, DN(d)], null);
    };
  }(c, d, e, f), N.a(ly(c), e)));
  return I.c(I.c(c, pp, !0), Tj, function() {
    var b = jy(c), e = I.c(I.c(I.c(I.c(a, jq, c), pu, g), Cl, d), Ep, TN(fh(d), fh(g)));
    return MN.a ? MN.a(b, e) : MN.call(null, b, e);
  }());
});
MN.D(0, iy, function(b, a) {
  var c = NN(b, a), d = gg.a(S, hg(function() {
    return function(b) {
      return new Q(null, 2, 5, R, [ny(b), DN(MN.a ? MN.a(b, a) : MN.call(null, b, a))], null);
    };
  }(c), oy(c))), e = P(N, cg(sb, Tf.a(function() {
    return function(a) {
      return ly(a);
    };
  }(c, d), cg(function() {
    return function(a) {
      return null != a ? k === a.Ub ? !0 : a.L ? !1 : p(ky, a) : p(ky, a);
    };
  }(c, d), oy(c)))));
  return I.c(I.c(c, pp, !0), Tj, function() {
    var b = jy(c), g = I.c(I.c(I.c(I.c(a, jq, c), Cl, d), pu, e), Ep, TN(d, E));
    return MN.a ? MN.a(b, g) : MN.call(null, b, g);
  }());
});
MN.D(0, nK, function(b, a) {
  var c = NN(b, a), d = hg(function(b) {
    return function(c) {
      var d = I.c(a, nK, b);
      return MN.a ? MN.a(c, d) : MN.call(null, c, d);
    };
  }(c), tK(c));
  return vK(uJ(new l(null, 5, [Z, tx(c), W, ux(c), Du, qK(c), xq, fK(c), kq, d], null)));
});
MN.D(0, FK, function(b, a) {
  var c = NN(b, a), d = function() {
    var a = xx(c);
    return m(a) ? a : E;
  }(), d = hg(function(b) {
    return function(c) {
      var d = I.c(a, FK, b);
      return MN.a ? MN.a(c, d) : MN.call(null, c, d);
    };
  }(c, d), hg(function(a, b) {
    return function(a) {
      var c = ql.b(a);
      return I.c(a, ql, N.a(c, b));
    };
  }(c, d), GK(c)));
  return JK(uJ(new l(null, 4, [Z, tx(c), W, ux(c), Lj, ON(c, a), ot, d], null)));
});
MN.D(0, RK, function(b, a) {
  var c = NN(b, a), d = I.c(a, RK, c), e = hg(function(a, b) {
    return function(a) {
      return MN.a ? MN.a(a, b) : MN.call(null, a, b);
    };
  }(c, d), xx(c)), f = Cb.c(function() {
    return function(a, b) {
      return JN(a, b);
    };
  }(c, d, e), c, e), g = I.c(d, RK, f), n = function() {
    var a = TK(f);
    return MN.a ? MN.a(a, g) : MN.call(null, a, g);
  }(), c = hg(function(a, b, c, d, e) {
    return function(a) {
      return MN.a ? MN.a(a, e) : MN.call(null, a, e);
    };
  }(c, d, e, f, g, n), UK(f));
  return WK(uJ(new l(null, 8, [Z, tx(f), W, ux(f), xm, SK(f), Hk, n, Cv, PN(f, g), ss, c, wt, RN(f, g), Ss, SN(f, g)], null)));
});
MN.D(0, Fm, function(b, a) {
  var c = NN(b, a), d = I.c(a, Fm, c), e = hg(function(a, b) {
    return function(a) {
      return MN.a ? MN.a(a, b) : MN.call(null, a, b);
    };
  }(c, d), mK(c)), f = QN(c, d), d = Tf.a(function(a, b) {
    return function(a) {
      return MN.a ? MN.a(a, b) : MN.call(null, a, b);
    };
  }(c, d, e, f), QK(c));
  return kL(uJ(new l(null, 5, [Z, tx(c), W, ux(c), iv, e, Hp, f, hl, d], null)));
});
MN.D(0, eL, function(b, a) {
  var c = NN(b, a), d = I.c(a, eL, c), e = bL(c);
  return iL(uJ(new l(null, 5, [Z, tx(c), W, ux(c), Dp, fL(c), Mv, gL(c), ws, MN.a ? MN.a(e, d) : MN.call(null, e, d)], null)));
});
MN.D(0, aL, function(b, a) {
  var c = NN(b, a), d = bL(c);
  return dL(new l(null, 3, [Z, tx(c), W, ux(c), ws, MN.a ? MN.a(d, a) : MN.call(null, d, a)], null));
});
MN.D(0, XK, function(b, a) {
  var c = NN(b, a), d = I.c(a, XK, c), e = Tf.a(function(a, b) {
    return function(a) {
      return MN.a ? MN.a(a, b) : MN.call(null, a, b);
    };
  }(c, d), QK(c));
  return $K(uJ(new l(null, 5, [Z, tx(c), W, ux(c), Wo, YK(c), hl, e, Hp, QN(c, d)], null)));
});
MN.D(0, KK, function(b, a) {
  var c = NN(b, a), d = I.c(a, eL, c), e = LK(c);
  return OK(uJ(new l(null, 4, [Z, tx(c), W, ux(c), gw, MK(c), dk, MN.a ? MN.a(e, d) : MN.call(null, e, d)], null)));
});
MN.D(0, Bx, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Cl), e = t.a(c, pu), f = NN(b, c), g = Cx(f), d = t.a(d, g), e = t.a(e, g), e = m(d) ? d : e;
  if (null == e) {
    throw Error([q("Cannot find fragment "), q(Cx(f)), q(" in include relationship "), q(tx(f))].join(""));
  }
  return MN.a ? MN.a(e, c) : MN.call(null, e, c);
});
MN.D(0, zx, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, pu), e = t.a(c, Cl), f = NN(b, c), d = t.a(d, Cx(f)), e = t.a(e, Cx(f)), e = m(d) ? d : e;
  if (null == e) {
    throw Error([q("Cannot find fragment "), q(Cx(f)), q(" in extend relationship "), q(tx(f))].join(""));
  }
  return MN.a ? MN.a(e, c) : MN.call(null, e, c);
});
MN.D(0, null, function() {
  return null;
});
MN.D(0, bm, function(b) {
  return b;
});
function UN(b) {
  return null != x(cg(function(a) {
    return v.a(a, mC("Scalar"));
  }, t.c(b, "@type", b)));
}
function VN(b) {
  return null != x(cg(function(a) {
    return v.a(a, mC("Array"));
  }, t.c(b, "@type", b)));
}
function WN(b) {
  return null != x(cg(function(a) {
    return v.a(a, nC("property"));
  }, eh(b)));
}
function XN(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Cl), e = t.a(c, pu), f = t.a(c, Ep), c = function() {
    var a = t.a(d, b);
    if (m(a)) {
      return a;
    }
    a = t.a(e, b);
    if (m(a)) {
      return a;
    }
    a = t.a(f, b);
    return m(a) ? a : null;
  }(), g = ws.b(c);
  return m(g) ? g : c;
}
function YN(b, a) {
  return I.c(b, nC("property"), hg(function(b) {
    var c = t.a(b, nC("node"));
    return null != c ? I.c(b, nC("node"), hg(function() {
      return function(b) {
        return ZN.a ? ZN.a(b, a) : ZN.call(null, b, a);
      };
    }(c), c)) : b;
  }, t.c(b, nC("property"), E)));
}
function $N(b, a) {
  return I.c(b, mC("item"), hg(function(b) {
    return ZN.a ? ZN.a(b, a) : ZN.call(null, b, a);
  }, t.a(b, mC("item"))));
}
function aO(b) {
  var a = t.c(b, mC("inherits"), E);
  b = t.c(b, nC("property"), E);
  return v.a(1, B(a)) && v.a(0, B(b));
}
function bO(b) {
  var a = x(t.c(b, QC, E));
  b = x(t.c(b, mC("inherits"), E));
  a = null == a ? t.a(b, QC) : new Q(null, 1, 5, R, [a], null);
  return I.c(b, QC, a);
}
function cO(b, a) {
  var c = t.a(b, mC("inherits"));
  return null != c ? (c = I.c(b, mC("inherits"), hg(function() {
    return function(b) {
      var c;
      if (c = pe(b)) {
        c = t.a(b, "@id"), c = m(c) ? XN(t.a(b, "@id"), a) : c;
      }
      return m(c) ? (b = XN(t.a(b, "@id"), a), ZN.a ? ZN.a(b, a) : ZN.call(null, b, a)) : pe(b) ? ZN.a ? ZN.a(b, a) : ZN.call(null, b, a) : m(XN(b, a)) ? (b = XN(b, a), ZN.a ? ZN.a(b, a) : ZN.call(null, b, a)) : b;
    };
  }(c), c)), m(aO(c)) ? bO(c) : c) : b;
}
function ZN(b, a) {
  var c = null == b ? b : m(UN(b)) ? b : m(VN(b)) ? $N(b, a) : m(WN(b)) ? YN(b, a) : b;
  return cO(c, a);
}
MN.D(0, Ut, function(b, a) {
  return ZN(b, a);
});
var dO = fe([Hj, Kj, Uj, ck, dk, gk, rk, wk, xk, yk, Kk, Rk, Xk, yl, Kl, sm, Cm, dn, Cn, Rn, oo, uo, Bo, To, tp, yp, Hp, Pp, $p, mq, xq, Dr, Qr, is, ls, ss, Cs, Us, kt, rt, Ct, Rt, mu, Bu, Du, iv, lv, Mv, Tv, Zv, hw, rw], [new V(null, new l(null, 4, [Dj, null, In, null, uo, null, Cs, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 2, [In, null, Ct, null], null), null), new V(null, new l(null, 2, [In, null, Ct, null], null), null), new V(null, new l(null, 
1, [Dj, null], null), null), new V(null, new l(null, 1, [Ct, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [Ct, null], null), null), new V(null, new l(null, 1, [xo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [xo, null], null), null), 
new V(null, new l(null, 1, [Cs, null], null), null), new V(null, new l(null, 2, [In, null, Ct, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 2, [In, null, Ct, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 2, [In, null, Ct, null], null), null), new V(null, new l(null, 1, [Ct, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [xo, null], null), null), 
new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 2, [In, null, Ct, null], null), null), new V(null, new l(null, 2, [uo, null, Cs, null], null), null), new V(null, new l(null, 1, [Dj, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [In, null], null), null), new V(null, new l(null, 1, [xo, null], null), null), new V(null, new l(null, 1, [Ct, null], null), null), new V(null, new l(null, 1, [Dj, null], null), null), new V(null, 
new l(null, 1, [In, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 2, [In, null, Ct, null], null), null), new V(null, new l(null, 1, [Ct, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [xo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [Ct, null], null), null), new V(null, new l(null, 1, 
[xo, null], null), null), new V(null, new l(null, 1, [xo, null], null), null), new V(null, new l(null, 1, [Cs, null], null), null), new V(null, new l(null, 1, [Cs, null], null), null), new V(null, new l(null, 3, [In, null, xo, null, Ct, null], null), null), new V(null, new l(null, 1, [Cs, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [In, null], null), null), new V(null, new l(null, 1, [uo, 
null], null), null), new V(null, new l(null, 1, [Ct, null], null), null)]);
function eO(b) {
  return x(jg(sb, hg(function(a) {
    return a.b ? a.b(b) : a.call(null, b);
  }, new Q(null, 2, 5, R, [function(a) {
    return Cz(hJ(a), "/") ? new V(null, new l(null, 1, [oo, null], null), null) : null;
  }, function(a) {
    return null != Ai(/^\d+$/, hJ(a)) ? new V(null, new l(null, 1, [ss, null], null), null) : null;
  }], null))));
}
function fO(b) {
  b = jg(sb, hg(function(a) {
    var b = F(a, 0, null);
    F(a, 1, null);
    return t.c(dO, b, eO(b));
  }, b));
  b = x(le(b) ? E : P(uE, b));
  return m(b) ? b : Xr;
}
if ("undefined" === typeof gO) {
  var gO = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.parser.domain.openapi", "parse-ast"), function() {
      return function(a, b) {
        return null != yy(a) ? zm : null != hq.b(b) ? hq.b(b) : null != t.a(a, $u) ? Lu : null == a ? Xr : fO(a);
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
function hO(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Xu), c = I.c(c, Xu, HJ.j(d, C(["shape"], 0))), c = v.a(b, !0) || v.a(b, !1) ? tM(new l(null, 1, [uo, "boolean"], null), c) : null == b ? tM(new l(null, 1, [uo, "null"], null), c) : "string" === typeof b ? tM(new l(null, 1, [uo, "string"], null), c) : "number" === typeof b ? tM(new l(null, 1, [uo, "float"], null), c) : pe(b) ? tM(new l(null, 1, [uo, "object"], null), c) : me(b) ? tM(new l(null, 1, [uo, "array"], null), c) : 
  null;
  return null != c ? hM(b, dL(new l(null, 1, [ws, c], null))) : null;
}
function iO(b, a, c, d) {
  var e = null != d && (d.l & 64 || k === d.I) ? P(Of, d) : d, f = t.a(e, It), g = t.a(e, Bt), n = t.a(e, Xu), r = uz(hJ(b), /x-/, "");
  c = cg(sb, new Q(null, 1, 5, R, [aK(c)], null));
  var u = null != g ? t.a(A.b ? A.b(g) : A.call(null, g), r) : S, y = HJ.j([q(f), q("#/x-annotationTypes")].join(""), C([IL(r)], 0));
  return !v.a(0, Bz(hJ(b), "x-method-")) && yf(r, "annotationTypes") && yf(r, "merge") && yf(r, "traits") && yf(r, "is") && yf(r, "response-payloads") && yf(r, "media-type") && yf(r, "requests") && yf(r, "abstract-node") && yf(r, "responses") && yf(r, "generated") && yf(r, "media-type") ? (null == u && Rf.a(g, function(b, c, d, e, f, g, n, u, y, r) {
    return function(d) {
      return I.c(d, b, AK(uJ(new l(null, 5, [Z, e, W, b, Rm, iM(b, e, HJ.j(r, C([b], 0))), cu, c, dw, hO(a, I.c(n, Xu, e))], null))));
    };
  }(r, c, u, y, d, e, e, f, g, n)), hM(a, EK(new l(null, 3, [Z, y, W, r, Dv, JJ(a)], null)))) : null;
}
function jO(b, a, c, d) {
  if (function() {
    var a = null != d;
    return a ? null != d ? k === d.ha ? !0 : d.L ? !1 : p(sx, d) : p(sx, d) : a;
  }() && (b = cg(sb, Tf.a(function(b) {
    var d = F(b, 0, null);
    b = F(b, 1, null);
    return iO(d, b, c, a);
  }, cg(function(a) {
    var b = F(a, 0, null);
    F(a, 1, null);
    return Cz(hJ(b), "x-");
  }, b))), 0 < B(b))) {
    var e = function() {
      var a = Ur.b(d);
      return m(a) ? a : E;
    }();
    return I.c(d, Ur, N.a(e, b));
  }
  return d;
}
function kO(b, a, c) {
  a = [q(b), q("/source-map/inline-fragment/"), q(a)].join("");
  a = new ay(a, c, null, null, null);
  return new Q(null, 1, 5, R, [Nx([q(b), q("/source-map")].join(""), c, new Q(null, 1, 5, R, [a], null))], null);
}
function lO(b, a) {
  var c = [q(b), q("/source-map/inline-fragment")].join(""), c = new by(c, a, null, null, null);
  return new Q(null, 1, 5, R, [Nx([q(b), q("/source-map")].join(""), a, new Q(null, 1, 5, R, [c], null))], null);
}
function mO(b, a, c) {
  var d = [q(c), q("/source-map/is-trait")].join("");
  b = new cy(d, b, null, null, null);
  return new Q(null, 1, 5, R, [Nx([q(c), q("/source-map")].join(""), a, new Q(null, 1, 5, R, [b], null))], null);
}
function nO(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = [q(d), q("/traits")].join(""), g = [q(e), q("/x-traits")].join(""), n = I.c(I.c(c, ev, f), Xu, g);
  return Cb.c(function(a, b, c) {
    return function(d, e) {
      var f = F(e, 0, null), g = F(e, 1, null), n = he(f), u = IL(hJ(f)), y = t.c(c, Po, S), r = function() {
        var e = I.c(I.c(I.c(I.c(c, Po, ki.j(C([y, d], 0))), ev, a), Xu, HJ.j(b, C([u], 0))), hq, In);
        return gO.a ? gO.a(g, e) : gO.call(null, g, e);
      }(), D = I.c(I.c(I.c(I.c(r, ho, !0), xm, null), Z, [q(b), q("/"), q(u)].join("")), W, u), r = function() {
        var a = Rm.b(D);
        return m(a) ? a : E;
      }(), r = N.a(r, mO(u, [q(a), q("/"), q(u)].join(""), [q(b), q("/"), q(u)].join(""))), r = I.c(D, Rm, r), n = I.c(r, Ym, n);
      return I.c(d, df.b(f), n);
    };
  }(f, g, n, a, c, c, d, e), S, Kt.a(b, S));
}
function oO(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Nn), f = t.a(c, Po), g = gg.a(S, Tf.a(function(a, b, c, d) {
    return function(a) {
      var b = F(a, 0, null);
      F(a, 1, null);
      a = gM(d, IL(hJ(b)));
      return new Q(null, 2, 5, R, [a, new l(null, 1, [Lk, a], null)], null);
    };
  }(a, c, c, d, e, f), yk.a(b, S))), n = I.c(c, Po, ki.j(C([f, g], 0)));
  return Cb.c(function(a, b, c, d, e, f) {
    return function(a, c) {
      var d = F(c, 0, null), e = F(c, 1, null), g = he(e), n = gM(f, IL(hJ(d))), u = function() {
        var a = I.c(I.c(I.c(I.c(b, ev, HJ.j(f, C(["/definitions/", d], 0))), Xu, n), np, !1), hq, uo);
        return gO.a ? gO.a(e, a) : gO.call(null, e, a);
      }(), y = function() {
        var a = Rm.b(u);
        return m(a) ? a : E;
      }(), y = N.a(y, fM(d, n, n)), y = I.c(I.c(I.c(u, W, hJ(d)), Rm, y), Z, n), g = I.c(y, Wk, g);
      return I.c(a, n, g);
    };
  }(g, n, a, c, c, d, e, f), S, yk.a(b, S));
}
function pO(b, a, c) {
  b = [q(c), q("/source-map/"), q(b)].join("");
  b = new Wx(b, a, null, null, null);
  return new Q(null, 1, 5, R, [Nx([q(c), q("/source-map")].join(""), a, new Q(null, 1, 5, R, [b], null))], null);
}
function qO(b, a, c) {
  b = m(b) ? b : E;
  return ig(function() {
    return function(b, e) {
      var d = [q(c), q("/source-map/api-tags-"), q(b), q("/tag")].join("");
      return Nx([q(d), q("/source-map/api-tags-"), q(b)].join(""), a, new Q(null, 1, 5, R, [new $x(d, e, null, null, null)], null));
    };
  }(b), yi(0, B(b)), b);
}
function rO(b) {
  var a = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, c = t.a(a, ev), d = t.a(a, Xu), e = t.a(a, Po);
  return cg(sb, fg(hg(function(a, b, c, d, e) {
    return function(a) {
      var b = F(a, 0, null);
      a = F(a, 1, null);
      var c = Sl.b(a);
      return m(v.a ? v.a(Jr, c) : v.call(null, Jr, c)) ? kO([q(e), q("/traits")].join(""), ef(b), Z.b(a)) : kO([q(e), q("/declares")].join(""), ef(b), Z.b(a));
    };
  }(b, a, a, c, d, e), e)));
}
function sO(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = t.a(c, np);
  return hg(function() {
    return function(a) {
      return iL(a);
    };
  }(a, c, c, d, e, f), ig(function(a, b, c, d, e) {
    return function(a, b) {
      var f = W.b(b), g = [q(d), q("["), q(a), q("]")].join(""), n = [q(e), q("/"), q(IL(f))].join(""), u = pO("parameter", g, n);
      return hM(b, new l(null, 7, [Z, n, W, v.a(f, "") ? null : f, Hj, Hj.b(b), Rm, u, Dp, fw.b(b), Mv, Mv.b(b), ws, tM(J.a(J.a(J.a(b, W), Hj), fw), I.c(I.c(I.c(c, rq, gO), ev, g), Xu, n))], null));
    };
  }(a, c, c, d, e, f), yi(0, B(b)), jg(function() {
    return function(a) {
      return yf("body", fw.b(a));
    };
  }(a, c, c, d, e, f), m(b) ? b : E)));
}
gO.D(0, Ct, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu);
  t.a(c, np);
  var f = [q(e), q("/api-documentation")].join(""), g = [q(d), q("/")].join(""), d = rO(I.c(I.c(c, ev, g), Xu, f)), d = N.a(pO("root", g, f), d), e = function() {
    var a = oo.b(b), d = I.c(I.c(I.c(c, hq, oo), Xu, f), ev, g);
    return gO.a ? gO.a(a, d) : gO.call(null, a, d);
  }(), n = sO(Zt.b(b), I.c(I.c(I.c(c, np, !1), ev, [q(g), q("/parameters")].join("")), Xu, [q(f), q("/parameters")].join(""))), e = fe([Kl, kq, xq, Z, Wr, Ss, wt, iv, kv, Cv], [null, e, xq.b(b), f, rw.b(b), cg(sb, fg(new Q(null, 1, 5, R, [dn.b(b)], null))), cg(sb, fg(new Q(null, 1, 5, R, [tp.b(b)], null))), n, null, cg(sb, fg(new Q(null, 1, 5, R, [Uj.b(b)], null)))]), n = null != Cs.b(b) ? function() {
    var a = Cs.b(b), d = I.c(I.c(I.c(I.c(c, hq, Cs), np, !0), Xu, f), ev, g);
    return gO.a ? gO.a(a, d) : gO.call(null, a, d);
  }() : S, e = ki.j(C([uJ(e), uJ(n)], 0)), d = I.c(e, Rm, d);
  return hM(b, jO(Cs.b(b), c, "Paths", jO(oo.b(b), c, "Info", jO(b, c, "Swagger", vK(uJ(d))))));
});
gO.D(0, Cs, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu);
  t.a(c, np);
  c = [q(d), q("info")].join("");
  return vK(new l(null, 6, [W, yp.b(b), Sl, Cs, Hj, Hj.b(b), Du, yf("", Du.b(b)) ? Du.b(b) : null, Rm, pO("info", c, e), wp, Bu.b(b)], null));
});
gO.D(0, oo, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = t.a(c, np), g = [q(d), q("paths")].join(""), n = pO("paths", g, e), r = DJ(b);
  return ig(function(a, b, c, d, e, f, g, n) {
    return function(c, d) {
      var e = null != d && (d.l & 64 || k === d.I) ? P(Of, d) : d, g = t.a(e, Lj), e = t.a(e, $r), g = I.c(I.c(I.c(I.c(I.c(f, hq, xo), ev, [q(a), q("/"), q(IL(g))].join("")), Xu, [q(n), q("/end-points/"), q(c)].join("")), Lj, g), Gm, b);
      return gO.a ? gO.a(e, g) : gO.call(null, e, g);
    };
  }(g, n, r, a, c, c, d, e, f), yi(0, B(r)), r);
});
function tO(b, a, c) {
  var d = null != c && (c.l & 64 || k === c.I) ? P(Of, c) : c, e = t.a(d, ev), f = t.a(d, Xu), g = t.a(d, It);
  b = Tf.a(function() {
    return function(a) {
      return t.c(a, $u, yy(a));
    };
  }(c, d, e, f, g), cg(sb, fg(new Q(null, 1, 5, R, [Sj.a(b, E)], null))));
  var n = cg(sb, hg(function(b, c, d, e, f, g) {
    return function(n) {
      return x(hg(function() {
        return function(a) {
          F(a, 0, null);
          return F(a, 1, null);
        };
      }(b, c, d, e, f, g), cg(function() {
        return function(a) {
          F(a, 0, null);
          a = F(a, 1, null);
          return v.a(tx(a), n);
        };
      }(b, c, d, e, f, g), a)));
    };
  }(b, c, d, e, f, g), hg(function(a, b, c, d, e, f) {
    return function(a) {
      return v.a(0, Bz(a, "#")) ? [q(f), q(a)].join("") : a;
    };
  }(b, c, d, e, f, g), b)));
  return ig(function(a, b, c, d, e, f) {
    return function(a, b) {
      var c = ux(b), d = [q(f), q("/extends/"), q(IL(c))].join(""), g = [q(e), q("/x-is/"), q(a)].join(""), n = pO("x-is", e, d), u = [q(d), q("/source-map/extend-trait")].join(""), c = new gy(u, c, null, null, null), g = new Q(null, 1, 5, R, [Nx([q(d), q("/source-map")].join(""), g, new Q(null, 1, 5, R, [c], null))], null);
      return Gx(new l(null, 5, [Z, d, Rm, N.a(n, g), hu, tx(b), Tr, "trait", Am, E], null));
    };
  }(b, n, c, d, e, f, g), yi(0, B(n)), n);
}
gO.D(0, xo, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = t.a(c, np), g = t.a(c, Lj), n = t.a(c, Gm), r = t.a(c, Po);
  if (null == g) {
    throw Error("Cannot parse path-item object without contextual path information");
  }
  var u = [q(d), q("/"), q(IL(g))].join(""), y = [q(e), q("/"), q(IL(g))].join(""), D = tO(b, r, I.c(c, Xu, y)), G = cg(function() {
    return function(a) {
      return Cz(hJ(a), "x-method-");
    };
  }(u, y, D, a, c, c, d, e, f, g, n, r), eh(b)), d = jg(sb, hg(function(a, c, d, e, f, g, n) {
    return function(d) {
      var e = t.a(b, d);
      return m(e) ? (d = I.c(I.c(I.c(I.c(n, hq, In), xm, ef(d)), ev, a), Xu, c), gO.a ? gO.a(e, d) : gO.call(null, e, d)) : null;
    };
  }(u, y, D, G, a, c, c, d, e, f, g, n, r), N.a(G, new Q(null, 7, 5, R, [Kk, mu, kt, Bo, Rt, mq, yl], null)))), e = sO(iv.b(b), I.c(I.c(I.c(c, np, !1), ev, [q(u), q("/parameters")].join("")), Xu, [q(y), q("/parameters")].join(""))), g = new l(null, 7, [Lj, g, Rm, N.a(pO("path-item", u, y), m(n) ? n : E), Z, y, Hj, t.a(b, dt), iv, e, ot, d, ql, D], null);
  return hM(b, jO(b, c, "PathItem", JK(g)));
});
function uO(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = t.a(c, np);
  return x(hg(function() {
    return function(a) {
      var b = F(a, 0, null);
      a = F(a, 1, null);
      return new l(null, 2, [gw, b, Uu, dL(a)], null);
    };
  }(a, c, c, d, e, f), ig(function(a, b, c, d, e) {
    return function(a, b) {
      var f = tk.a(b, "*/*"), g = W.b(b), n = [q(d), q("/parameters["), q(a), q("]")].join(""), u = [q(e), q("/body")].join(""), y = pO("body", n, u);
      return new Q(null, 2, 5, R, [f, hM(b, new l(null, 5, [Z, u, W, v.a(g, "") ? null : g, Hj, Hj.b(b), Rm, y, ws, m(lp.b(dk.b(b))) ? null : tM(dk.b(b), I.c(I.c(I.c(I.c(I.c(c, np, !1), hq, uo), ev, n), rq, gO), Xu, u))], null))], null);
    };
  }(a, c, c, d, e, f), yi(0, B(b)), jg(function() {
    return function(a) {
      return v.a("body", fw.b(a));
    };
  }(a, c, c, d, e, f), m(b) ? b : E))));
}
function vO(b) {
  return cg(function(a) {
    return null != LK(a) && null != bL(LK(a)) || yf("*/*", MK(a)) && null != MK(a);
  }, b);
}
function wO(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = sO(iv.b(b), I.c(I.c(I.c(c, np, !1), ev, [q(d), q("/parameters")].join("")), Xu, [q(e), q("/parameters")].join(""))), g = yf("", Ej.b(b)) ? Ej.b(b) : null, n = jg(function() {
    return function(a) {
      return v.a("header", Dp.b(a));
    };
  }(f, g, a, c, c, d, e), f), r = jg(function() {
    return function(a) {
      return yf("header", Dp.b(a));
    };
  }(f, g, n, a, c, c, d, e), f), u = uO(iv.b(b), I.c(I.c(I.c(c, np, !1), ev, [q(d), q("/parameters")].join("")), Xu, [q(e), q("/body")].join(""))), y = null != u ? hM(u, OK(new l(null, 5, [Z, HJ.j(e, C(["/main-payload"], 0)), gw, gw.b(u), W, W.b(Uu.b(u)), Hj, Hj.b(Uu.b(u)), dk, I.c(I.c(I.c(Uu.b(u), W, null), Hj, null), gw, null)], null))) : null, f = cg(sb, ig(function(a, b, c, d, e, f, g, n, u, y, r) {
    return function(a, b) {
      var c = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, d = t.a(c, dk), e = t.a(c, tk), f = HJ.j(r, C([[q("x-request-payload"), q(a)].join("")], 0)), g = HJ.j(y, C([[q("x-request-payloads["), q(a), q("]")].join("")], 0)), g = I.c(I.c(I.c(u, ev, g), Xu, r), hq, uo), d = gO.a ? gO.a(d, g) : gO.call(null, d, g);
      return hM(c, OK(uJ(new l(null, 3, [Z, f, gw, e, dk, d], null))));
    };
  }(f, g, n, r, u, y, a, c, c, d, e), yi(0, B(t.c(b, rv, E))), t.c(b, rv, E))), f = vO(cg(sb, N.a(new Q(null, 1, 5, R, [y], null), f))), e = [q(e), q("/request")].join("");
  return le(N.j(n, r, C([y], 0))) ? null : hM(b, jO(b, c, "RequestBody", kL(new l(null, 6, [Z, e, Hj, g, Rm, pO("request", d, e), Hp, n, iv, r, hl, f], null))));
}
gO.D(0, In, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev);
  t.a(c, Xu);
  t.a(c, np);
  var e = t.a(c, xm), f = t.a(c, Po), e = hJ(e), e = pa(e, "x-method-") ? be(zz(e, /x-method-/)) : e, g = [q(d), q("/"), q(e)].join(""), d = [q(g), q("/"), q(e)].join(""), n = I.c(I.c(I.c(c, np, !1), Xu, d), ev, g), f = tO(b, f, n), r = pO(e, g, d), u = qO(ck.b(b), g, d), n = wO(b, c), y = Hj.b(b), r = N.a(r, u), u = Zv.b(b), D = ss.b(b), g = I.c(I.c(I.c(I.c(c, hq, ss), ev, g), Xu, d), np, !1), g = gO.a ? gO.a(D, g) : gO.call(null, D, g), e = fe([Hj, Hk, ql, xm, Rm, W, Z, ss, Ss, wt, Cv], [y, n, 
  f, e, r, u, d, g, dn.b(b), cg(sb, fg(new Q(null, 1, 5, R, [tp.b(b)], null))), Uj.b(b)]);
  return hM(b, jO(b, c, "Operation", WK(e)));
});
gO.D(0, ss, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = t.a(c, np), g = t.a(c, vr);
  return cg(sb, hg(function(a, b, c, d, e) {
    return function(a) {
      var b = F(a, 0, null);
      a = F(a, 1, null);
      b = I.c(I.c(I.c(I.c(I.c(c, hq, Dj), tn, b), np, !1), ev, [q(d), q("/responses")].join("")), Xu, [q(e), q("/responses")].join(""));
      return gO.a ? gO.a(a, b) : gO.call(null, a, b);
    };
  }(a, c, c, d, e, f, g), b));
});
gO.D(0, Dj, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = t.a(c, np), g = t.a(c, tn), n = t.a(c, dn);
  if (m(b.b ? b.b(lp) : b.call(null, lp))) {
    return null;
  }
  var r = ef(g), u = [q(e), q("/"), q(r)].join(""), y = [q(d), q("/"), q(r)].join(""), D = null != Bi(/^\d+$/, ef(r)), G = pO([q("response-"), q(r)].join(""), u, e), H = function() {
    var a = dk.b(b), d = I.c(I.c(I.c(c, ev, y), Xu, u), hq, uo);
    return gO.a ? gO.a(a, d) : gO.call(null, a, d);
  }(), M = tk.b(b), O = OK(new l(null, 3, [Z, HJ.j(e, C(["main-payload"], 0)), gw, null != M ? M : "*/*", dk, H], null)), d = cg(sb, ig(function(a, b, c, d, e, f, g, n, u, y, r, D, G) {
    return function(a, b) {
      var d = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, e = t.a(d, dk), d = t.a(d, tk), f = HJ.j(G, C([[q("x-response-payload"), q(a)].join("")], 0)), g = HJ.j(c, C([[q("x-response-payloads["), q(a), q("]")].join("")], 0)), g = I.c(I.c(I.c(r, ev, g), Xu, G), hq, uo), e = gO.a ? gO.a(e, g) : gO.call(null, e, g);
      return OK(uJ(new l(null, 3, [Z, f, gw, d, dk, e], null)));
    };
  }(r, u, y, D, G, H, M, O, a, c, c, d, e, f, g, n), yi(0, B(t.c(b, Jt, E))), t.c(b, Jt, E))), O = vO(N.a(new Q(null, 1, 5, R, [O], null), d)), r = new l(null, 6, [Z, u, Hj, MJ(Hj.b(b)), Rm, G, Wo, D ? ef(r) : null, W, r, hl, O], null);
  return hM(b, jO(b, c, "Response", $K(r)));
});
gO.D(0, uo, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a;
  t.a(c, ev);
  var d = t.a(c, Xu);
  t.a(c, np);
  var d = tM(b, I.c(I.c(c, Xu, d), rq, gO)), e = t.a(d, "@id");
  return hM(b, jO(b, c, "Schema", dL(new l(null, 2, [Z, e, ws, d], null))));
});
function xO(b, a, c, d) {
  var e = null != d && (d.l & 64 || k === d.I) ? P(Of, d) : d, f = t.a(e, ev), g = t.a(e, Xu), n = t.a(e, np), r = t.c(e, Cl, U ? U(S) : Nf.call(null, S)), u = t.a(e, hq), y = t.a(e, Cq), D = Rm.b(a), G = m(v.a ? v.a(In, u) : v.call(null, In, u)) ? I.c(I.c(a, xm, null), Rm, null) : m(v.a ? v.a(xo, u) : v.call(null, xo, u)) ? lg(I.c(a, Lj, null), Rm, null) : a, H = [q(g), q("/includes")].join(""), M = new Q(null, 1, 5, R, [Gx(new l(null, 5, [Z, H, Rm, lO(H, b), hu, b, Tr, "$ref", Am, E], null))], 
  null);
  null != c && Rf.a(r, function(a, d) {
    return function(a) {
      return null != t.a(a, b) ? a : I.c(a, b, I.c(c, Tj, d));
    };
  }(D, G, H, M, d, e, f, g, n, r, u, y));
  return m(v.a ? v.a(In, u) : v.call(null, In, u)) ? WK(new l(null, 4, [Z, H, xm, hJ(xm.b(a)), Rm, D, ql, M], null)) : m(v.a ? v.a(xo, u) : v.call(null, xo, u)) ? JK(new l(null, 4, [Z, H, Lj, Lj.b(a), ql, M, Rm, D], null)) : Ix(new l(null, 3, [Z, H, Tr, "$ref", hu, b], null));
}
gO.D(0, zm, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Cq), e = yy(b), d = d.a ? d.a(b, c) : d.call(null, b, c), f = jy(d);
  return xO(e, f, d, c);
});
gO.D(0, Lu, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a;
  t.a(c, Cl);
  var d = t.a(c, Po), e = t.a(b, $u), d = t.a(d, e);
  if (null == d) {
    throw Error([q("Unknown $ref "), q(t.a(b, $u))].join(""));
  }
  return xO(e, d, null, c);
});
gO.D(0, Xr, function() {
  return null;
});
function yO(b) {
  return function(a) {
    return function(b) {
      b = qi(b);
      return gg.a(E, vE.a(b, a));
    };
  }(qi(fh(A.b ? A.b(b) : A.call(null, b))));
}
;function zO(b, a) {
  var c = t.c(a, Ms, null);
  return m(c) ? I.c((null != b ? k === b.Zc || (b.L ? 0 : p(RK, b)) : p(RK, b)) ? I.c(b, xm, null) : (null != b ? k === b.Wd || (b.L ? 0 : p(FK, b)) : p(FK, b)) ? I.c(b, Lj, null) : (null != b ? k === b.Xd || (b.L ? 0 : p(XK, b)) : p(XK, b)) ? I.c(b, Wo, null) : b, ho, c) : b;
}
function AO(b) {
  if (null != yy(b) && null != zy(b) && null != xy(b) && v.a("Swagger Library", Ct.b(xy(b)))) {
    return Op;
  }
  if (null != yy(b) && null != zy(b) && null != Ct.b(xy(b))) {
    return zr;
  }
  if (null != yy(b)) {
    return zm;
  }
  if (null == yy(b) && null == zy(b)) {
    throw Error("" + q("Unsupported OpenAPI parsing unit, missing @location or @fragment information"));
  }
  return null;
}
if ("undefined" === typeof BO) {
  var BO = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.parser.document.openapi", "parse-ast"), function() {
      return function(a) {
        return AO(a);
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
function CO(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = En.a(xy(b), E), g = Cb.c(function(a, b, c, d) {
    return function(a, b) {
      var c = BO.a ? BO.a(b, d) : BO.call(null, b, d);
      return ce.a(a, c);
    };
  }(f, a, c, c, d, e), E, f), c = Cb.c(function(a, b, c, d, e, f, g) {
    return function(n, u) {
      return ki.j(C([n, gg.a(S, cg(sb, Tf.a(function() {
        return function(a) {
          return new Q(null, 2, 5, R, [tx(a), a], null);
        };
      }(a, b, c, d, e, f, g), ly(u))))], 0));
    };
  }(g, f, a, c, c, d, e), S, g);
  return new l(null, 2, [ol, g, Lo, c], null);
}
function DO(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = En.a(xy(b), E), g = [q(e), q("/source-map/uses")].join(""), c = hg(function(a) {
    return function(b) {
      var c = yy(b);
      b = m(c) ? c : b;
      c = be(zz(b, /\//));
      return new hy(a, c, b, null, null, null);
    };
  }(g, f, a, c, c, d, e), f);
  return new Q(null, 1, 5, R, [Nx(g, d, c)], null);
}
function EO(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, It), e = t.a(c, ev), f = t.a(c, Xu), g = HJ.j(e, C(["/x-annotationTypes"], 0)), n = I.c(I.c(c, ev, g), Xu, [q(d), q("#")].join(""));
  return Cb.c(function(a, c, d, e, f, g, n, O) {
    return function(a, d) {
      var e = F(d, 0, null), f = F(d, 1, null), g = IL(hJ(e)), n = function() {
        var a = I.c(I.c(c, Xu, HJ.j(O, C([[q(g), q("/shape")].join("")], 0))), hq, uo);
        return gO.a ? gO.a(f, a) : gO.call(null, f, a);
      }(), u = vx(n), y = I.c(n, Hj, null), n = function() {
        var a = om.b(f);
        return m(a) ? a : hJ(e);
      }(), y = I.c(y, W, null), r = cg(sb, Tf.a(aK, fg(new Q(null, 1, 5, R, [Um.a(f, E)], null)))), D = rC(g);
      return I.c(a, hJ(e), hM(b, AK(new l(null, 6, [Z, D, W, n, Hj, u, Rm, iM(e, D, O), cu, r, dw, y], null))));
    };
  }(g, n, a, c, c, d, e, f), S, Oq.a(b, S));
}
BO.D(0, zr, function(b, a) {
  var c = yy(b), d = I.c(a, It, c), e = function() {
    var a = Cl.b(d);
    return m(a) ? a : U ? U(S) : Nf.call(null, S);
  }(), f = yO(e), g = CO(b, d), n = null != g && (g.l & 64 || k === g.I) ? P(Of, g) : g, r = t.a(n, ol), u = t.a(n, Lo), y = DO(b, d), D = gg.a(S, hg(function() {
    return function(a) {
      return new Q(null, 2, 5, R, [ux(a), I.c(a, Mn, !0)], null);
    };
  }(c, d, null, e, f, g, n, r, u, y), cg(function() {
    return function(a) {
      F(a, 0, null);
      a = F(a, 1, null);
      return jM(a);
    };
  }(c, d, null, e, f, g, n, r, u, y), u))), G = EO(xy(b), new l(null, 3, [It, c, ev, [q(c), q("#")].join(""), Xu, [q(c), q("#")].join("")], null)), H = function() {
    var a = ki.j(C([G, D], 0));
    return U ? U(a) : Nf.call(null, a);
  }(), M = nO(xy(b), new l(null, 7, [ev, [q(c), q("#")].join(""), Xu, [q(c), q("#")].join(""), It, c, Cl, e, Po, u, Bt, H, Cq, BO], null)), O = oO(xy(b), new l(null, 7, [ev, [q(c), q("#")].join(""), Xu, [q(c), q("#")].join(""), It, c, Cl, e, Po, u, Bt, H, Cq, BO], null)), T = ki.j(C([M, O], 0)), qa = function() {
    var a = xy(b), d = new l(null, 7, [ev, [q(c), q("#")].join(""), It, c, Cl, e, Bt, H, Po, ki.j(C([T, u], 0)), Cq, BO, np, !1], null);
    return gO.a ? gO.a(a, d) : gO.call(null, a, d);
  }(), g = cg(function() {
    return function(a) {
      return null == Mn.b(a);
    };
  }(c, d, null, e, f, g, n, r, u, y, D, G, H, M, O, T, qa), fh(A.b ? A.b(H) : A.call(null, H)));
  return I.c(ry(ki.j(C([d, new l(null, 8, [Z, c, ev, c, It, c, Tj, qa, Np, N.a(fh(T), g), Po, function() {
    var a = N.a(fh(A.b ? A.b(e) : A.call(null, e)), r);
    return f.b ? f.b(a) : f.call(null, a);
  }(), Rm, y, Qp, "OpenAPI"], null)], 0))), Bm, t.a(b, df.b("@raw")));
});
BO.D(0, Op, function(b, a) {
  var c = yy(b), d = function() {
    var b = Cl.b(a);
    return m(b) ? b : U ? U(S) : Nf.call(null, S);
  }(), e = yO(d), f = CO(b, a), g = null != f && (f.l & 64 || k === f.I) ? P(Of, f) : f, n = t.a(g, ol), r = t.a(g, Lo), u = DO(b, a), y = gg.a(S, hg(function() {
    return function(a) {
      return new Q(null, 2, 5, R, [ux(a), I.c(a, Mn, !0)], null);
    };
  }(c, null, d, e, f, g, n, r, u), cg(function() {
    return function(a) {
      F(a, 0, null);
      a = F(a, 1, null);
      return jM(a);
    };
  }(c, null, d, e, f, g, n, r, u), r))), D = EO(xy(b), new l(null, 3, [It, c, ev, [q(c), q("#")].join(""), Xu, [q(c), q("#")].join("")], null)), G = function() {
    var a = ki.j(C([D, y], 0));
    return U ? U(a) : Nf.call(null, a);
  }(), H = nO(xy(b), new l(null, 7, [ev, [q(c), q("#")].join(""), Xu, [q(c), q("#")].join(""), It, c, Cl, d, Po, r, Bt, G, Cq, BO], null)), M = oO(xy(b), new l(null, 7, [ev, [q(c), q("#")].join(""), Xu, [q(c), q("#")].join(""), It, c, Cl, d, Po, r, Bt, G, Cq, BO], null)), O = ki.j(C([H, M], 0)), T = cg(function() {
    return function(a) {
      return null == Mn.b(a);
    };
  }(c, null, d, e, f, g, n, r, u, y, D, G, H, M, O), fh(A.b ? A.b(G) : A.call(null, G)));
  return I.c(ty(ki.j(C([a, new l(null, 7, [Z, c, It, c, ev, c, Np, function() {
    var a = N.a(fh(O), cg(function() {
      return function(a) {
        return null == Mn.b(a);
      };
    }(c, null, d, e, f, g, n, r, u, y, D, G, H, M, O, T), T));
    return e.b ? e.b(a) : e.call(null, a);
  }(), Po, fh(A.b ? A.b(d) : A.call(null, d)), ck, u, Qp, "OpenAPI Library"], null)], 0))), Bm, t.a(b, df.b("@raw")));
});
BO.D(0, zm, function(b, a) {
  var c = m(a) ? a : S, d = yy(b), e = I.c(c, It, d), f = function() {
    var a = Cl.b(e);
    return m(a) ? a : U ? U(S) : Nf.call(null, S);
  }(), g = yO(f), n = CO(b, e), r = null != n && (n.l & 64 || k === n.I) ? P(Of, n) : n, u = t.a(r, ol), y = t.a(r, Lo), D = DO(b, e), G = function() {
    var a = Po.b(e);
    return m(a) ? a : S;
  }(), c = gg.a(S, hg(function() {
    return function(a) {
      return new Q(null, 2, 5, R, [ux(a), a], null);
    };
  }(c, d, e, null, f, g, n, r, u, y, D, G), cg(function() {
    return function(a) {
      F(a, 0, null);
      a = F(a, 1, null);
      return jM(a);
    };
  }(c, d, e, null, f, g, n, r, u, y, D, G), y))), H = U ? U(c) : Nf.call(null, c), c = function() {
    var a = xy(b), c = ki.j(C([e, new l(null, 7, [ev, [q(d), q("#")].join(""), It, d, Cl, f, Bt, H, Po, ki.j(C([G, y], 0)), Cq, BO, np, !1], null)], 0));
    return gO.a ? gO.a(a, c) : gO.call(null, a, c);
  }(), c = zO(c, xy(b));
  return I.c(vy(new l(null, 7, [Z, d, ev, d, It, d, Tj, c, Po, function() {
    var a = N.a(fh(A.b ? A.b(f) : A.call(null, f)), u);
    return g.b ? g.b(a) : g.call(null, a);
  }(), Rm, D, Qp, "OpenApi Fragment"], null)), Bm, t.a(b, df.b("@raw")));
});
var FO = new l(null, 6, ["title", 0, "description", 1, "version", 2, "baseUri", 3, "types", 4, "traits", 5], null);
function GO(b) {
  b = fj(lJ(b));
  var a = fj(new l(null, 1, ["sortKeys", function() {
    return function(a, b) {
      if (pa(a, "/") && pa(b, "/")) {
        return 0;
      }
      if (pa(a, "/")) {
        return 1;
      }
      if (pa(b, "/")) {
        return -1;
      }
      var c = t.c(FO, a, 100), d = t.c(FO, b, 100);
      return Ae(c, d);
    };
  }(b)], null));
  return JS_YAML.dump.a ? JS_YAML.dump.a(b, a) : JS_YAML.dump.call(null, b, a);
}
function HO(b) {
  b = yy(b);
  return [q("!include "), q(b)].join("");
}
function IO(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, fn);
  return pe(b) ? gg.a(S, hg(function(a, b, c, d, e) {
    return function(f) {
      var g = F(f, 0, null), n = F(f, 1, null);
      return v.a(Vr, g) ? new Q(null, 2, 5, R, [g, gg.a(S, hg(function() {
        return function(a) {
          var b = F(a, 0, null);
          a = F(a, 1, null);
          return new Q(null, 2, 5, R, [b, yy(a)], null);
        };
      }(f, g, n, a, b, c, d, e), n))], null) : m(wy(n)) ? new Q(null, 2, 5, R, [g, m(e) ? JO(n) : HO(n)], null) : new Q(null, 2, 5, R, [g, IO(n, c)], null);
    };
  }(a, c, c, d, e), b)) : me(b) ? hg(function(a, b, c) {
    return function(a) {
      return IO(a, c);
    };
  }(a, c, c, d, e), b) : b;
}
function JO(b) {
  var a = xy(b);
  b = yy(b);
  return IO(a, new l(null, 1, [ev, b], null));
}
;function KO(b) {
  return pe(b) && null != Pj.b(b) ? J.a(b, uo) : pe(b) && v.a(new Q(null, 1, 5, R, [uo], null), eh(b)) ? uo.b(b) : b;
}
if ("undefined" === typeof LO) {
  var LO = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.generators.domain.shapes-raml-types", "parse-shape"), function() {
      return function(a) {
        return m(OJ(a)) ? nC("or") : null != t.a(a, mC("ramlTypeExpression")) ? cw : null != t.a(a, mC("inherits")) ? Kp : m(nJ(a, mC("NilValueShape"))) ? mC("NilValueShape") : m(nJ(a, mC("Scalar"))) ? mC("Scalar") : m(nJ(a, mC("Array"))) ? mC("Array") : m(nJ(a, mC("JSONSchema"))) ? mC("JSONSchema") : m(nJ(a, mC("XMLSchema"))) ? mC("XMLSchema") : m(nJ(a, nC("NodeShape"))) ? nC("NodeShape") : m(nJ(a, mC("FileUpload"))) ? mC("FileUpload") : null;
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
function MO(b, a) {
  return Cb.c(function(a, b) {
    return b.b ? b.b(a) : b.call(null, a);
  }, a, Tf.a(function(a) {
    var c = F(a, 0, null), e = F(a, 1, null);
    return m(v.a ? v.a(QC, c) : v.call(null, QC, c)) ? function() {
      return function(a) {
        return I.c(a, om, FJ(b, QC));
      };
    }(v, c, a, c, e) : m(v.a ? v.a(RC, c) : v.call(null, RC, c)) ? function() {
      return function(a) {
        return I.c(a, Hj, FJ(b, RC));
      };
    }(v, c, a, c, e) : Ge;
  }, b));
}
function NO(b, a) {
  return uJ(MO(a, Cb.c(function(a, b) {
    return b.b ? b.b(a) : b.call(null, a);
  }, b, Tf.a(function(b) {
    var c = F(b, 0, null), e = F(b, 1, null);
    return m(function() {
      var a = nC("minLength");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, To, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : m(function() {
      var a = nC("maxLength");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, rt, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : m(function() {
      var a = nC("minCount");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? m(nJ(a, mC("Array"))) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, ls, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : Ge : m(function() {
      var a = nC("maxCount");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? m(nJ(a, mC("Array"))) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, Tv, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : Ge : m(function() {
      var a = nC("pattern");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, hw, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : m(function() {
      var a = nC("closed");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, Wj, rb(iJ(t.a(x(e), "@value"))));
      };
    }(v, c, b, c, e) : m(function() {
      var a = mC("uniqueItems");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, Xk, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : m(function() {
      var a = nC("minExclusive");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, is, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : m(function() {
      var a = mC("multipleOf");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, wk, t.a(x(e), "@value"));
      };
    }(v, c, b, c, e) : m(function() {
      var a = nC("in");
      return v.a ? v.a(a, c) : v.call(null, a, c);
    }()) ? function(a, b, c, d, e) {
      return function(a) {
        return I.c(a, Kj, Tf.a(KJ, t.c(e, "@list", E)));
      };
    }(v, c, b, c, e) : Ge;
  }, a))));
}
LO.D(0, nC("NodeShape"), function(b, a) {
  var c = EJ(b, nC("closed"), function(a) {
    return rb(a);
  }), d = gg.a(S, Tf.a(function(b) {
    return function(c) {
      var d = FJ(c, mC("propertyLabel")), e = EJ(c, nC("minCount"), function() {
        return function(a) {
          return v.a(a, 0) ? !1 : !0;
        };
      }(d, b)), f = m(TJ(c)) ? function() {
        var b = ZJ(c);
        return LO.a ? LO.a(b, a) : LO.call(null, b, a);
      }() : m(OJ(c)) ? function() {
        var b = $J(c);
        return LO.a ? LO.a(b, a) : LO.call(null, b, a);
      }() : m(UJ(c)) ? "nil" : m(null != t.a(c, nC("datatype"))) ? function() {
        var b = SJ(c);
        return LO.a ? LO.a(b, a) : LO.call(null, b, a);
      }() : function() {
        var b = x(t.c(c, nC("node"), E));
        return LO.a ? LO.a(b, a) : LO.call(null, b, a);
      }(), e = uJ(I.c("string" === typeof f ? new l(null, 1, [uo, f], null) : f, Mv, ra(d, "?") ? m(e) ? e : null : v.a(e, !1) ? e : null));
      return new Q(null, 2, 5, R, [d, KO(e)], null);
    };
  }(c), t.c(b, nC("property"), E)));
  return KO(NO(uJ(new l(null, 3, [uo, "object", Pj, d, Wj, c], null)), b));
});
LO.D(0, mC("Scalar"), function(b) {
  if (null != t.a(b, mC("is-number"))) {
    return KO(NO(new l(null, 1, [uo, "number"], null), b));
  }
  var a = t.a(x(t.a(b, nC("datatype"))), "@id"), c = function() {
    if (m(function() {
      var b = qC("string");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 1, [uo, "string"], null);
    }
    if (m(function() {
      var b = qC("float");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 1, [uo, "number"], null);
    }
    if (m(function() {
      var b = qC("integer");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 1, [uo, "integer"], null);
    }
    if (m(function() {
      var b = qC("boolean");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 1, [uo, "boolean"], null);
    }
    if (m(function() {
      var b = mC("null");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 1, [uo, "null"], null);
    }
    if (m(function() {
      var b = qC("time");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 1, [uo, "time-only"], null);
    }
    if (m(function() {
      var b = qC("dateTime");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 1, [uo, "datetime"], null);
    }
    if (m(function() {
      var b = mC("datetime-only");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 1, [uo, "datetime-only"], null);
    }
    if (m(function() {
      var b = qC("date");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 1, [uo, "date-only"], null);
    }
    if (m(function() {
      var b = mC("any");
      return v.a ? v.a(b, a) : v.call(null, b, a);
    }())) {
      return new l(null, 1, [uo, "any"], null);
    }
    throw Error([q("Unknown scalar data type "), q(a)].join(""));
  }();
  return KO(NO(c, b));
});
LO.D(0, mC("Array"), function(b, a) {
  var c = Tf.a(function(b) {
    return LO.a ? LO.a(b, a) : LO.call(null, b, a);
  }, t.a(b, mC("item"))), c = v.a(1, B(c)) ? new l(null, 2, [uo, "array", uu, x(c)], null) : jh([uo, "array", uu, new l(null, 2, [uo, "union", fv, c], null), df.b("(is-tuple)"), !0]);
  return NO(c, b);
});
LO.D(0, mC("JSONSchema"), function(b) {
  return FJ(b, mC("schemaRaw"));
});
LO.D(0, mC("XMLSchema"), function(b) {
  return FJ(b, mC("schemaRaw"));
});
LO.D(0, mC("NilValueShape"), function() {
  return new l(null, 1, [uo, "nil"], null);
});
LO.D(0, mC("FileUpload"), function(b) {
  var a = Tf.a(function(a) {
    return t.a(a, "@value");
  }, t.c(b, mC("fileType"), E)), a = v.a(1, B(a)) ? x(a) : a;
  return NO(uJ(new l(null, 2, [uo, "file", Sr, a], null)), b);
});
function OO(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, c = t.a(c, Cl);
  return t.a(c, b);
}
LO.D(0, Kp, function(b, a) {
  var c = function() {
    var c = J.a(b, mC("inherits"));
    return LO.a ? LO.a(c, a) : LO.call(null, c, a);
  }(), d = hg(function() {
    return function(b) {
      var c = t.a(b, "@id");
      if (m(dN(c, a))) {
        c = dN(c, a), b = x(Rx(c, "is-type-tag")), c = null != b ? df.b(Qx(b)) : null != ux(c) ? ux(c) : be(zz(tx(c), /\//)), c = hJ(c);
      } else {
        if (m(OO(c, a))) {
          b = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a;
          t.a(b, Cl);
          var d = t.a(b, $t), c = OO(c, b), c = null != c ? d.a ? d.a(c, b) : d.call(null, c, b) : null;
        } else {
          c = LO.a ? LO.a(b, a) : LO.call(null, b, a);
        }
      }
      return c;
    };
  }(c), t.a(b, mC("inherits")));
  return v.a(1, B(d)) ? m(RJ(c)) ? x(d) : I.c(c, uo, x(d)) : new l(null, 2, [uo, "union", wl, d], null);
});
LO.D(0, nC("or"), function(b) {
  return KO(NO(new l(null, 1, [uo, "number"], null), b));
});
LO.D(0, cw, function(b) {
  return t.a(x(t.a(b, mC("ramlTypeExpression"))), "@value");
});
LO.D(0, null, function() {
  return null;
});
function PO(b) {
  return null == b ? b : (null != b ? k === b.Pe || (b.L ? 0 : p(wK, b)) : p(wK, b)) ? wK : function() {
    var a = null != b ? k === b.sd ? !0 : b.L ? !1 : p(Bx, b) : p(Bx, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? Bx : function() {
    var a = null != b ? k === b.Oe ? !0 : b.L ? !1 : p(nK, b) : p(nK, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? nK : function() {
    var a = null != b ? k === b.Wd ? !0 : b.L ? !1 : p(FK, b) : p(FK, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? FK : function() {
    var a = null != b ? k === b.Zc ? !0 : b.L ? !1 : p(RK, b) : p(RK, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? RK : function() {
    var a = null != b ? k === b.Se ? !0 : b.L ? !1 : p(PK, b) : p(PK, b);
    return a && (a = null != b ? k === b.ge ? !0 : b.L ? !1 : p(jK, b) : p(jK, b)) ? (a = null != b ? k === b.he ? !0 : b.L ? !1 : p(lK, b) : p(lK, b)) ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a : a;
  }() ? Fm : function() {
    var a = null != b ? k === b.Xd ? !0 : b.L ? !1 : p(XK, b) : p(XK, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? XK : function() {
    var a = null != b ? k === b.Wb ? !0 : b.L ? !1 : p(aL, b) : p(aL, b);
    return a ? null != b ? k === b.ha ? !0 : b.L ? !1 : p(sx, b) : p(sx, b) : a;
  }() ? aL : tb(b);
}
if ("undefined" === typeof QO) {
  var QO = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.generators.domain.raml", "to-raml"), function() {
      return function(a) {
        return PO(a);
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
function RO(b, a) {
  if (pe(a)) {
    var c = yx(b), c = gg.a(S, Tf.a(function() {
      return function(a) {
        return new Q(null, 2, 5, R, [[q("("), q(ux(a)), q(")")].join(""), KJ(CK(a))], null);
      };
    }(c), c));
    return ki.j(C([a, c], 0));
  }
  return a;
}
function SO(b) {
  return null != b && null != xx(b) && v.a(1, B(xx(b))) ? (b = xx(b), null != x(Rx(x(b), "extend-include-fragment-parsed-tag"))) : !1;
}
function TO(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Cl), e = t.a(c, us), f = t.a(c, $t);
  if (m(SO(b))) {
    var g = Cx(x(xx(b))), n = t.a(d, g);
    if (null == n) {
      throw Error([q("Cannot find fragment "), q(g), q(" for generation")].join(""));
    }
    var r = function() {
      var u = t.a(e, g);
      if (m(u)) {
        var y = u
      } else {
        y = eN(b, n, c), Rf.a(e, function(a, b, c) {
          return function(b) {
            return I.c(b, c, a);
          };
        }(y, u, g, n, a, c, c, d, e, f));
      }
      return y;
    }();
    return RO(jy(n), r);
  }
  return RO(b, QO.a ? QO.a(b, c) : QO.call(null, b, c));
}
function UO(b) {
  var a = function() {
    var a = iK(b);
    return m(a) ? a : E;
  }(), c = function() {
    var a = hK(b);
    return m(a) ? a : E;
  }(), a = ri(N.a(a, c));
  return le(a) ? null : null == a ? null : v.a(1, B(a)) ? x(a) : a;
}
function VO(b, a) {
  return cg(function(a) {
    return v.a(x(hg(Qx, Rx(a, "nested-resource-parent-id"))), b);
  }, a);
}
function WO(b, a) {
  return null == b ? null : gg.a(S, Tf.a(function(b) {
    var c = BD(function() {
      var c = bL(b), d = I.c(a, ro, TO);
      return LO.a ? LO.a(c, d) : LO.call(null, c, d);
    }()), e = null != gL(b) && v.a(!1, gL(b)) ? function() {
      var a = pe(c) ? c : new l(null, 1, [uo, c], null);
      return I.c(a, Mv, gL(b));
    }() : c;
    return new Q(null, 2, 5, R, [df.b(ux(b)), e], null);
  }, b));
}
function XO(b, a, c) {
  a = hg(function(a) {
    var b = x(Rx(a, "nested-resource-path-parsed")), b = null != b ? Qx(b) : HK(a);
    return new Q(null, 2, 5, R, [df.b(hJ(b)), TO(a, c)], null);
  }, a);
  a = gg.a(S, a);
  return ki.j(C([b, a], 0));
}
function YO(b) {
  var a = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, c = t.a(a, Po);
  return gg.a(S, Tf.a(function(a, b, c) {
    return function(a) {
      var b = R, d;
      d = W.b(a);
      d = m(d) ? d : Z.b(a);
      return new Q(null, 2, 5, b, [d, TO(a, c)], null);
    };
  }(b, a, a, c), cg(function() {
    return function(a) {
      return rb(WM(a)) && rb(null != x(Rx(a, "is-type-tag"))) && rb(XM(a)) && !(null != a ? k === a.Wb || (a.L ? 0 : p(aL, a)) : p(aL, a));
    };
  }(b, a, a, c), c)));
}
QO.D(0, nK, function(b, a) {
  var c = tK(b), d = I.c(a, Rv, c), e = VO(tx(b), c), c = le(e) ? c : e, e = [Hj, Mm, xp, yp, Ep, Ht, Du, pv, kw, df.b("(declares)"), sw], f = vx(b), g;
  g = gK(b);
  g = null != g && v.a(1, B(g)) ? x(g) : null != g ? g : null;
  var n = UO(b), r = ux(b), u = aN(I.c(d, br, !0), TO), y = Bt.b(d), D = qK(b), G = WO(mK(b), d), H;
  H = fK(b);
  var M = sK(b);
  H = null != H ? [q(H), q(M)].join("") : null != M ? M : null;
  return uJ(kN(b, d, "API", RO(b, XO(fe(e, [f, g, n, r, u, y, D, G, H, YO(d), ZM(I.c(d, en, !0), TO)]), c, d))));
});
QO.D(0, FK, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Rv), e = VO(tx(b), d), d = gg.a(S, Tf.a(function(a, b, c, d) {
    return function(a) {
      var b = TO(a, d);
      return new Q(null, 2, 5, R, [df.b(SK(a)), v.a(b, S) ? null : b], null);
    };
  }(e, a, c, c, d), function() {
    var a = GK(b);
    return m(a) ? a : E;
  }()));
  return uJ(kN(b, c, "Resource", XO(ki.j(C([new l(null, 4, [om, ux(b), Ql, VM(b, nn), Aq, WO(mK(b), c), Hj, vx(b)], null), d], 0)), e, c)));
});
function ZO(b) {
  b = v.a("object", uo.b(b)) && null == Pj.b(b) ? J.a(b, uo) : b;
  return v.a(S, b) ? null : b;
}
function $O(b, a) {
  if (v.a(1, B(b))) {
    var c = x(b), d = TO(LK(c), a), c = MK(c);
    return m(c) ? (c = hJ(c), d = null == d ? S : d, yf(c, "*/*") ? jh([c, ZO(d)]) : ZO(d)) : ZO(d);
  }
  return Cb.c(function(b, c) {
    var d = TO(LK(c), a), d = null == d ? S : d;
    return I.c(b, hJ(MK(c)), ZO(d));
  }, S, b);
}
function aP(b, a) {
  return gg.a(S, hg(function(a) {
    var b = F(a, 0, null);
    a = F(a, 1, null);
    return new Q(null, 2, 5, R, [b, v.a(a, S) ? null : a], null);
  }, hg(function(b) {
    return new Q(null, 2, 5, R, [ux(b), TO(b, a)], null);
  }, b)));
}
QO.D(0, RK, function(b, a) {
  var c = TO(TK(b), a);
  return uJ(kN(b, a, "Operation", ki.j(C([new l(null, 5, [om, m(en.b(a)) ? null : ux(b), Hj, vx(b), Mm, gK(b), ss, aP(UK(b), a), Ql, VM(b, nn)], null), c], 0))));
});
QO.D(0, XK, function(b, a) {
  var c = $O(QK(b), a);
  return uJ(kN(b, a, "Response", new l(null, 3, [Hj, vx(b), Hp, WO(kK(b), a), Uu, c], null)));
});
QO.D(0, Fm, function(b, a) {
  var c = $O(QK(b), a), d;
  null == b ? d = null : (d = mK(b), d = m(d) ? WO(d, a) : null);
  return uJ(kN(b, a, "RequestBody", new l(null, 3, [lk, d, Uu, c, Hp, WO(kK(b), a)], null)));
});
QO.D(0, aL, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, jk);
  if (m(function() {
    var a = rb(br.b(c));
    return a ? null != x(Rx(b, "is-type-tag")) : a;
  }())) {
    return $M(b);
  }
  var e = BD(function() {
    var a = bL(b), d = I.c(c, ro, QO);
    return LO.a ? LO.a(a, d) : LO.call(null, a, d);
  }());
  return m(d) ? (d = pe(e) ? e : new l(null, 1, [uo, e], null), kN(b, c, "TypeDeclaration", d)) : pe(e) ? v.a(new Q(null, 1, 5, R, [uo], null), eh(e)) ? uo.b(e) : e : e;
});
QO.D(0, Bx, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Cl), e = t.c(c, us, U ? U(S) : Nf.call(null, S)), f = t.a(c, Po), g = t.a(c, $t), n = t.a(c, hq), r = Cx(b), u = t.a(d, r), y = x(cg(function(a) {
    return function(b) {
      return v.a(tx(b), a);
    };
  }(r, u, a, c, c, d, e, f, g, n), f));
  if (null != u) {
    var D = t.a(e, r);
    if (m(D)) {
      var G = D
    } else {
      G = g.a ? g.a(u, c) : g.call(null, u, c), Rf.a(e, function(a, b, c) {
        return function(b) {
          return I.c(b, c, a);
        };
      }(G, D, r, u, y, a, c, c, d, e, f, g, n));
    }
    return G;
  }
  if (function() {
    var a = null != y;
    return a ? null != y ? k === y.Wb ? !0 : y.L ? !1 : p(aL, y) : p(aL, y) : a;
  }()) {
    return new l(null, 1, [uo, $M(y)], null);
  }
  if (null != y) {
    return jh([df.b("(reference)"), r]);
  }
  throw Error([q("Cannot find fragment "), q(r), q(" for generation")].join(""));
});
QO.D(0, wK, function(b, a) {
  var c = TO(yK(b), a), c = "string" === typeof c ? new l(null, 1, [uo, c], null) : c, d = ux(b), e = Tf.a(bK, xK(b)), f = vx(b);
  return uJ(kN(b, a, "AnnotationType", ki.j(C([c, new l(null, 3, [om, d, Hj, f, Um, e], null)], 0))));
});
QO.D(0, null, function() {
  return null;
});
function bP(b) {
  var a;
  a = (a = null != b ? k === b.Zc ? !0 : b.L ? !1 : p(RK, b) : p(RK, b)) ? eK(b) : a;
  return m(a) ? "#%RAML 1.0 Trait" : (null != b ? k === b.Wb || (b.L ? 0 : p(aL, b)) : p(aL, b)) ? "#%RAML 1.0 DataType" : null;
}
function cP(b, a) {
  var c;
  if (v.a(a, "#%RAML 1.0 Trait")) {
    c = null;
  } else {
    if (c = null != jy(b)) {
      c = jy(b), c = (c = null != c ? k === c.wc ? !0 : c.L ? !1 : p(dK, c) : p(dK, c)) ? eK(jy(b)) : c;
    }
    c = m(c) ? !0 : null;
  }
  return c;
}
if ("undefined" === typeof dP) {
  var dP = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.generators.document.raml", "to-raml"), function() {
      return function(a) {
        if (null != a) {
          var b = null != a ? k === a.vc ? !0 : a.L ? !1 : p(iy, a) : p(iy, a);
          a = (b ? null != a ? k === a.Ub || (a.L ? 0 : p(ky, a)) : p(ky, a) : b) ? jq : (null != a ? k === a.vc || (a.L ? 0 : p(iy, a)) : p(iy, a)) ? zm : (null != a ? k === a.Ub || (a.L ? 0 : p(ky, a)) : p(ky, a)) ? Op : null;
        }
        return a;
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
dP.D(0, jq, function(b, a) {
  var c = I.c(a, Or, nn), d = Cb.c(function() {
    return function(a, b) {
      return I.c(a, ny(b), b);
    };
  }(c), S, oy(b)), e = gg.a(S, hg(function(a, b) {
    return function(a) {
      var c = F(a, 0, null);
      a = F(a, 1, null);
      return new Q(null, 2, 5, R, [c, t.a(b, a)], null);
    };
  }(c, d), cN(b))), f = gN(e, b), g = ly(b), n = hg(function() {
    return function(a) {
      return I.c(a, Mn, !0);
    };
  }(c, d, e, f, g), fg(hg(function(a, b, c, d, e) {
    return function(f) {
      var g = F(f, 0, null), n = F(f, 1, null);
      return hg(function(a, b) {
        return function(a) {
          return jN(a, b);
        };
      }(f, g, n, a, b, c, d, e), ly(n));
    };
  }(c, d, e, f, g), f))), r = YM(g, c, TO), e = gg.a(S, hg(function(a) {
    return function(b) {
      var c = F(b, 0, null);
      b = F(b, 1, null);
      return new Q(null, 2, 5, R, [df.b(c), dP.a ? dP.a(b, a) : dP.call(null, b, a)], null);
    };
  }(c, d, e, f, g, n, r), f)), u = I.c(I.c(I.c(I.c(I.c(c, Po, N.a(g, n)), Cl, d), us, U ? U(S) : Nf.call(null, S)), $t, dP), Bt, r), c = function() {
    var a = jy(b);
    return QO.a ? QO.a(a, u) : QO.call(null, a, u);
  }(), c = 0 < B(e) ? I.c(c, Vr, e) : c;
  return jh([df.b("@location"), ny(b), df.b("@data"), c, df.b("@fragment"), "#%RAML 1.0"]);
});
dP.D(0, zm, function(b, a) {
  var c = I.c(a, Or, nn), d = m(Cl.b(c)) ? Cl.b(c) : Cb.c(function() {
    return function(a, b) {
      return I.c(a, ny(b), b);
    };
  }(c), S, oy(b)), e = gg.a(S, hg(function(a, b) {
    return function(a) {
      var c = F(a, 0, null);
      a = F(a, 1, null);
      return new Q(null, 2, 5, R, [c, t.a(b, a)], null);
    };
  }(c, d), cN(b))), f = gN(e, b), g = hg(function() {
    return function(a) {
      return I.c(a, Mn, !0);
    };
  }(c, d, e, f), fg(hg(function(a, b, c, d) {
    return function(e) {
      var f = F(e, 0, null), g = F(e, 1, null);
      return hg(function(a, b) {
        return function(a) {
          return jN(a, b);
        };
      }(e, f, g, a, b, c, d), ly(g));
    };
  }(c, d, e, f), f))), e = gg.a(S, hg(function(a) {
    return function(b) {
      var c = F(b, 0, null);
      b = F(b, 1, null);
      return new Q(null, 2, 5, R, [df.b(c), dP.a ? dP.a(b, a) : dP.call(null, b, a)], null);
    };
  }(c, d, e, f, g), f)), e = 0 < B(e) ? e : null, d = I.c(I.c(I.c(I.c(I.c(c, Cl, d), Po, g), us, function() {
    var a = us.b(c);
    return m(a) ? a : U ? U(S) : Nf.call(null, S);
  }()), hq, xm), $t, dP), f = x(Rx(b, "document-type")), g = jy(b), f = null != f ? Qx(f) : bP(g), d = QO.a ? QO.a(g, d) : QO.call(null, g, d);
  return uJ(jh([df.b("@location"), ny(b), df.b("@data"), "string" === typeof d ? d : uJ(ki.j(C([d, jh([Hq, vx(b), df.b("(abstract)"), cP(b, f), Vr, e])], 0))), df.b("@fragment"), f]));
});
dP.D(0, Op, function(b, a) {
  var c = I.c(a, Or, nn), d = ly(b), e = Cb.c(function() {
    return function(a, b) {
      return I.c(a, ny(b), b);
    };
  }(c, d), S, oy(b)), f = gg.a(S, hg(function(a, b, c) {
    return function(a) {
      var b = F(a, 0, null);
      a = F(a, 1, null);
      return new Q(null, 2, 5, R, [b, t.a(c, a)], null);
    };
  }(c, d, e), cN(b))), g = gN(f, b), n = hg(function() {
    return function(a) {
      return I.c(a, Mn, !0);
    };
  }(c, d, e, f, g), fg(hg(function(a, b, c, d, e) {
    return function(f) {
      var g = F(f, 0, null), n = F(f, 1, null);
      return hg(function(a, b) {
        return function(a) {
          return jN(a, b);
        };
      }(f, g, n, a, b, c, d, e), ly(n));
    };
  }(c, d, e, f, g), g))), f = gg.a(S, hg(function(a) {
    return function(b) {
      var c = F(b, 0, null);
      b = F(b, 1, null);
      return new Q(null, 2, 5, R, [df.b(c), dP.a ? dP.a(b, a) : dP.call(null, b, a)], null);
    };
  }(c, d, e, f, g, n), g)), f = 0 < B(f) ? f : null, n = I.c(I.c(I.c(I.c(c, Po, ki.j(C([d, n], 0))), Cl, e), us, U ? U(S) : Nf.call(null, S)), $t, dP), e = aN(I.c(n, br, !0), TO), n = ZM(n, TO), c = YM(d, c, TO);
  return jh([df.b("@location"), ny(b), df.b("@data"), uJ(new l(null, 5, [Hq, vx(b), Vr, f, Ht, c, Ep, e, sw, n], null)), df.b("@fragment"), "#%RAML 1.0 Library"]);
});
var eP = fe("boolean object string null union time-only any number datetime date-only integer datetime-only file array".split(" "), [new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), 
new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [uo, null], null), null)]), fP = fe([Hj, Pj, lk, Kk, yl, Ql, Ul, km, om, uo, Bo, xp, yp, zp, Ep, Hp, mq, Aq, Qq, Rq, hr, Vr, ss, kt, Ht, Rt, mu, Du, Uu, pv, 
kw, nw, sw], [new V(null, new l(null, 5, [Dj, null, xm, null, uo, null, zr, null, $r, null], null), null), new V(null, new l(null, 1, [uo, null], null), null), new V(null, new l(null, 1, [xm, null], null), null), new V(null, new l(null, 1, [$r, null], null), null), new V(null, new l(null, 1, [$r, null], null), null), new V(null, new l(null, 2, [xm, null, $r, null], null), null), new V(null, new l(null, 3, [xm, null, zr, null, $r, null], null), null), new V(null, new l(null, 1, [zr, null], null), 
null), new V(null, new l(null, 3, [xm, null, uo, null, $r, null], null), null), new V(null, new l(null, 2, [uo, null, $r, null], null), null), new V(null, new l(null, 1, [$r, null], null), null), new V(null, new l(null, 1, [zr, null], null), null), new V(null, new l(null, 1, [zr, null], null), null), new V(null, new l(null, 1, [zr, null], null), null), new V(null, new l(null, 1, [zr, null], null), null), new V(null, new l(null, 2, [Dj, null, xm, null], null), null), new V(null, new l(null, 1, [$r, 
null], null), null), new V(null, new l(null, 1, [$r, null], null), null), new V(null, new l(null, 1, [zr, null], null), null), new V(null, new l(null, 1, [xm, null], null), null), new V(null, new l(null, 1, [zr, null], null), null), new V(null, new l(null, 4, [xm, null, uo, null, zr, null, $r, null], null), null), new V(null, new l(null, 1, [xm, null], null), null), new V(null, new l(null, 1, [$r, null], null), null), new V(null, new l(null, 1, [zr, null], null), null), new V(null, new l(null, 1, 
[$r, null], null), null), new V(null, new l(null, 1, [$r, null], null), null), new V(null, new l(null, 1, [zr, null], null), null), new V(null, new l(null, 2, [Dj, null, xm, null], null), null), new V(null, new l(null, 1, [zr, null], null), null), new V(null, new l(null, 1, [zr, null], null), null), new V(null, new l(null, 2, [xm, null, zr, null], null), null), new V(null, new l(null, 1, [zr, null], null), null)]);
function gP(b) {
  return Cb.c(function(a, b) {
    return I.c(a, b, kM(t.a(a, b)));
  }, b, eh(b));
}
var hP = function hP(a) {
  a = kM(a);
  var c;
  c = (c = pe(a)) ? pn.b(a) : c;
  return m(c) ? kM(pn.b(a)) : me(a) ? hg(hP, a) : a;
};
function iP(b) {
  return x(jg(sb, hg(function(a) {
    return a.b ? a.b(b) : a.call(null, b);
  }, new Q(null, 3, 5, R, [function(a) {
    return Cz(hJ(a), "/") ? new V(null, new l(null, 2, [zr, null, $r, null], null), null) : null;
  }, function(a) {
    return null != Ai(/^\d+$/, hJ(a)) ? new V(null, new l(null, 1, [ss, null], null), null) : null;
  }, function(a) {
    return null != Ai(/^[a-z]+\/[a-z+]+$/, hJ(a)) ? new V(null, new l(null, 1, [El, null], null), null) : null;
  }], null))));
}
function jP(b) {
  b = jg(sb, hg(function(a) {
    var b = F(a, 0, null);
    F(a, 1, null);
    return t.c(fP, b, iP(b));
  }, b));
  b = x(le(b) ? E : P(uE, b));
  return m(b) ? b : Xr;
}
if ("undefined" === typeof kP) {
  var kP = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.parser.domain.raml", "parse-ast"), function() {
      return function(a, b) {
        var c;
        m(yf($k, Qs.a(a, $k))) ? c = Xs : null != yy(a) ? c = zm : null != hq.b(b) ? c = hq.b(b) : "string" === typeof a ? (c = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, c = t.a(c, Po), c = null != t.a(c, df.b(hJ(a))) || null != t.a(eP, hJ(a)) ? uo : Xr) : c = jP(a);
        return c;
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
function lP(b, a, c) {
  return pe(b) ? (b = hg(function(b) {
    var c = F(b, 0, null);
    b = F(b, 1, null);
    var d = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, g = t.a(d, Bt);
    t.a(d, ev);
    var d = uz(uz(hJ(c), /\(/, ""), /\)/, ""), n = t.a(g, d), g = m(n) ? n : t.a(g, df.b(d));
    if (null == g) {
      throw Error([q("Cannot find annotation "), q(c)].join(""));
    }
    return hM(b, gP(EK(new l(null, 3, [Z, tx(g), W, d, Dv, JJ(lM(b))], null))));
  }, cg(function(a) {
    var b = F(a, 0, null);
    F(a, 1, null);
    if (a = Cz(hJ(b), "(")) {
      b = hJ(b), a = ra(b, ")");
    }
    return a;
  }, b)), 0 < B(b) ? null != Pj.b(c) ? lg(c, new Q(null, 2, 5, R, [Pj, Ur], null), b) : I.c(c, Ur, b) : c) : c;
}
function mP(b, a) {
  var c = HJ.j(a, C(["/source-map/node-parsed"], 0)), c = new Wx(c, b, null, null, null);
  return new Q(null, 1, 5, R, [Nx(HJ.j(a, C(["/source-map"], 0)), b, new Q(null, 1, 5, R, [c], null))], null);
}
function nP(b, a, c, d) {
  var e = null != d && (d.l & 64 || k === d.I) ? P(Of, d) : d, f = t.a(e, ev), g = t.a(e, Xu), n = t.a(e, np);
  return null == c ? E : hg(function(c, d, e, f) {
    return function(c) {
      var d = F(c, 0, null);
      c = F(c, 1, null);
      c = lM(c);
      c = "string" === typeof c ? new l(null, 1, [uo, c], null) : c;
      var g = t.c(c, uo, "string");
      c = I.c(c, uo, g);
      var g = HJ.j(f, C([a, IL(hJ(d))], 0)), n = HJ.j(f, C([a, IL(hJ(d))], 0)), u = mP(n, g), y = pL(d, c), d = qL(d, c), n = uL(c, I.c(I.c(I.c(e, ev, n), Xu, g), rq, kP)), d = new l(null, 6, [Z, g, W, hJ(d), Rm, u, Mv, y, Dp, b, ws, n], null);
      return lP(c, e, hM(c, gP(iL(d))));
    };
  }(d, e, e, f, g, n), c);
}
function oP(b, a, c, d, e) {
  return fg(hg(function(b) {
    b = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b;
    var f = t.a(b, Lj);
    b = t.a(b, $r);
    f = I.c(I.c(I.c(I.c(I.c(e, gp, [q(a), q(f)].join("")), ev, HJ.j(c, C([IL(f)], 0))), Xu, HJ.j(d, C(["end-points", IL(f)], 0))), um, f), Lj, f);
    f = I.c(f, hq, $r);
    return kP.a ? kP.a(b, f) : kP.call(null, b, f);
  }, b));
}
function pP(b, a, c, d, e, f) {
  f = jg(function(b) {
    b = x(Rx(b, "nested-resource-parent-id"));
    return v.a(a, Qx(b));
  }, f);
  b = m(b) ? hg(Z, f) : hg(function() {
    return function(a) {
      return tx(a);
    };
  }(f), f);
  var g = [q(a), q("/source-map/0/nested-resource-parsed")].join("");
  c = new Xx(g, c, null, null, null);
  e = new Zx(g, e, null, null, null);
  var n = ig(function() {
    return function(b, c) {
      var d = [q(a), q("/source-map/"), q(b + 2), q("/nested-children")].join("");
      return new Yx(d, c, null, null, null);
    };
  }(f, b, g, c, e), yi(0, B(b)), b);
  return fg(new Q(null, 3, 5, R, [Nx(HJ.j(a, C(["/source-map/0"], 0)), d, new Q(null, 1, 5, R, [c], null)), Nx(HJ.j(a, C(["/source-map/1"], 0)), d, new Q(null, 1, 5, R, [e], null)), ig(function() {
    return function(b, c) {
      return Nx([q(a), q("/source-map/"), q(b + 2)].join(""), d, new Q(null, 1, 5, R, [c], null));
    };
  }(f, b, g, c, e, n), yi(0, B(n)), n)], null));
}
function qP(b, a, c) {
  a = HJ.j(b, C(["/source-map/inline-fragment/", a], 0));
  a = new ay(a, c, null, null, null);
  return new Q(null, 1, 5, R, [Nx(HJ.j(b, C(["/source-map"], 0)), c, new Q(null, 1, 5, R, [a], null))], null);
}
function rP(b, a) {
  var c = HJ.j(b, C(["/source-map/inline-fragment"], 0)), c = new by(c, a, null, null, null);
  return new Q(null, 1, 5, R, [Nx(HJ.j(b, C(["/source-map"], 0)), a, new Q(null, 1, 5, R, [c], null))], null);
}
function sP(b, a, c) {
  var d = HJ.j(c, C(["/source-map/is-trait"], 0));
  b = new cy(d, b, null, null, null);
  return new Q(null, 1, 5, R, [Nx(HJ.j(c, C(["/source-map"], 0)), a, new Q(null, 1, 5, R, [b], null))], null);
}
function tP(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, It), e = t.a(c, ev), f = t.a(c, Xu), g = HJ.j(e, C(["/x-annotationTypes"], 0)), n = I.c(I.c(c, ev, g), Xu, [q(d), q("#")].join(""));
  return Cb.c(function(a, b, c, d, e, f, g, n) {
    return function(a, c) {
      var d = F(c, 0, null), e = F(c, 1, null), f = IL(hJ(d)), g = function() {
        var a = I.c(I.c(b, Xu, HJ.j(n, C([[q(f), q("/shape")].join("")], 0))), hq, uo);
        return kP.a ? kP.a(e, a) : kP.call(null, e, a);
      }(), u = vx(g), y = I.c(g, Hj, null), g = function() {
        var a = om.b(e);
        return m(a) ? a : hJ(d);
      }(), y = I.c(y, W, null), r = cg(sb, hg(aK, fg(new Q(null, 1, 5, R, [Um.a(e, E)], null)))), D = rC(f);
      return I.c(a, hJ(d), hM(e, gP(AK(new l(null, 6, [Z, D, W, g, Hj, u, Rm, iM(d, D, HJ.j(n, C([d], 0))), cu, r, dw, y], null)))));
    };
  }(g, n, a, c, c, d, e, f), S, Ht.a(b, S));
}
function uP(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = HJ.j(d, C(["/traits"], 0)), g = HJ.j(e, C(["/x-traits"], 0)), n = I.c(I.c(c, ev, f), Xu, g);
  return Cb.c(function(a, b, c, d, e, f) {
    return function(d, e) {
      var g = F(e, 0, null), n = F(e, 1, null), u = he(n), y = IL(hJ(g)), r = function() {
        var d = I.c(I.c(I.c(c, ev, a), Xu, HJ.j(b, C([y], 0))), hq, xm);
        return kP.a ? kP.a(n, d) : kP.call(null, n, d);
      }(), D = I.c(I.c(I.c(I.c(r, xm, null), Z, HJ.j(b, C([y], 0))), ho, !0), W, y), r = function() {
        var a = Rm.b(D);
        return m(a) ? a : E;
      }(), r = N.a(r, sP(y, HJ.j(a, C([y], 0)), HJ.j(b, C([y], 0)))), r = I.c(D, Rm, r), u = I.c(r, Wk, u);
      return I.c(d, df.b(GJ(g, f)), u);
    };
  }(f, g, n, a, c, c, d, e), S, sw.a(b, S));
}
function vP(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = t.a(c, Nn), g = t.a(c, Po), n = function() {
    var a = Ep.b(b);
    if (m(a)) {
      return a;
    }
    a = hr.b(b);
    return m(a) ? a : S;
  }(), r = null != Ep.b(b) ? "types" : "schemas", u = HJ.j(e, C(["/", r], 0)), y = I.c(I.c(c, ev, u), Xu, e), D = gg.a(S, Tf.a(function(a, b, c, d, e, f, g, n, u) {
    return function(a) {
      var b = F(a, 0, null);
      F(a, 1, null);
      a = IL(hJ(b));
      b = gM(u, a);
      return new Q(null, 2, 5, R, [df.b(a), new l(null, 1, [Lk, b], null)], null);
    };
  }(n, r, u, y, a, c, c, d, e, f, g), n)), G = function() {
    var a = ki.j(C([g, D], 0));
    return U ? U(a) : Nf.call(null, a);
  }();
  return Cb.c(function(a, b, c, d, e, f, g, n, u, y, r, D, G) {
    return function(H, M) {
      var O = F(M, 0, null), T = F(M, 1, null), Y = he(T), la = lM(T), ya = m(wy(la)) ? new l(null, 1, [uo, la], null) : la, qa = IL(hJ(O)), Fa = gM(r, qa), fb = function() {
        var a = I.c(I.c(I.c(I.c(I.c(f, Po, A.b ? A.b(b) : A.call(null, b)), ev, e), Xu, Fa), np, !1), hq, uo);
        return kP.a ? kP.a(ya, a) : kP.call(null, ya, a);
      }(), Ua = function() {
        var a = Rm.b(fb);
        return m(a) ? a : E;
      }(), ib = N.a(Ua, fM(qa, HJ.j(e, C([qa], 0)), Fa)), Va = I.c(fb, Rm, ib), Mb = null == W.b(Va) ? I.c(Va, W, qa) : Va, Sc = I.c(Mb, Wk, Y);
      Rf.a(b, function(a, b, c, d, e, f, g, n, u, y, r) {
        return function(a) {
          return I.c(a, df.b(d), r);
        };
      }(Y, la, ya, qa, Fa, fb, Ua, ib, Va, Mb, Sc, M, O, T, a, b, c, d, e, f, g, n, u, y, r, D, G));
      return I.c(H, df.b(GJ(qa, u)), Sc);
    };
  }(D, G, n, r, u, y, a, c, c, d, e, f, g), S, n);
}
function wP(b) {
  var a = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, c = t.a(a, ev), d = t.a(a, Xu), e = t.a(a, Po);
  return fg(hg(function(a, b, c, d, e) {
    return function(a) {
      var b = F(a, 0, null);
      a = F(a, 1, null);
      var c = Sl.b(a);
      return m(v.a ? v.a(Jr, c) : v.call(null, Jr, c)) ? qP(HJ.j(e, C(["/traits"], 0)), ef(b), Z.b(a)) : qP(HJ.j(e, C(["/declares"], 0)), ef(b), Z.b(a));
    };
  }(b, a, a, c, d, e), e));
}
kP.D(0, zr, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = t.a(c, np);
  t.c(c, Po, S);
  var e = HJ.j(e, C(["/api-documentation"], 0)), g = [q(d), q("/")].join(""), d = oP(DJ(b), "", g, e, I.c(c, ns, e)), n = wP(I.c(I.c(c, ev, g), Xu, e)), r = pP(f, g, "", g, e, d), f = nP("domain", "base-uri", pv.a(b, S), c), u = hP(Hj.b(b)), g = N.j(mP(g, e), r, C([n], 0)), n = hP(yp.b(b));
  r = hP(kw.b(b));
  null != r ? (r = m(Bz(r, "://")) ? r : [q("http://"), q(r)].join(""), r = RL(r), r = null != r && (r.l & 64 || k === r.I) ? P(Of, r) : r, r = t.a(r, xq)) : r = null;
  var r = MJ(r), y;
  y = hP(kw.b(b));
  null != y ? (y = m(Bz(y, "://")) ? y : [q("http://"), q(y)].join(""), y = RL(y), y = null != y && (y.l & 64 || k === y.I) ? P(Of, y) : y, y = t.a(y, Lj)) : y = null;
  y = MJ(y);
  var D = jg(sb, Tf.a(hP, fg(new Q(null, 1, 5, R, [xp.b(b)], null)))), G = jg(sb, fg(new Q(null, 1, 5, R, [hP(xp.b(b))], null))), H = hP(Du.b(b)), M = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b, O = t.a(M, Mm), M = t.a(M, kw), M = hP(M);
  if (null != O) {
    M = hg(xz, hg(hP, fg(new Q(null, 1, 5, R, [O], null))));
  } else {
    if (O = null != M) {
      O = Bz(M, "://"), O = m(O) ? null != Wl.b(RL(M)) : O;
    }
    M = m(O) ? new Q(null, 1, 5, R, [Wl.b(RL(M))], null) : null;
  }
  e = fe([Hj, Kl, Rm, W, wp, kq, xq, Z, Wr, Ss, wt, Du, iv, kv, Cv], [u, null, g, n, null, d, r, e, y, D, G, H, f, null, MJ(M)]);
  return hM(b, lP(b, c, gP(vK(e))));
});
function xP(b, a, c, d) {
  var e = null != d && (d.l & 64 || k === d.I) ? P(Of, d) : d, f = t.a(e, ev), g = t.a(e, Xu);
  a = fg(new Q(null, 1, 5, R, [Ql.a(a, E)], null));
  return ig(function(a, c, d, e, f, g) {
    return function(a, c) {
      var d = F(c, 0, null), n = F(c, 1, null);
      if (null != n) {
        var u = HJ.j(g, C(["/extends/", IL(d)], 0)), y = HJ.j(f, C(["/is/", a], 0)), r = mP(y, u), D = HJ.j(u, C(["/source-map/extend-trait"], 0)), d = new gy(D, d, null, null, null), y = new Q(null, 1, 5, R, [Nx(HJ.j(u, C(["/source-map"], 0)), y, new Q(null, 1, 5, R, [d], null))], null);
        return hM(n, lP(n, e, gP(Gx(new l(null, 5, [Z, u, Rm, N.a(r, y), hu, tx(n), Tr, "trait", Am, E], null)))));
      }
      throw Error([q("Cannot find trait '"), q(d), q("' to extend in node '"), q(b), q("'")].join(""));
    };
  }(a, d, e, e, f, g), yi(0, B(a)), hg(function() {
    return function(a) {
      return new Q(null, 2, 5, R, [a, t.a(c, df.b(a))], null);
    };
  }(a, d, e, e, f, g), hg(kM, a)));
}
kP.D(0, $r, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = t.a(c, np), g = t.a(c, um), n = t.a(c, gp), r = t.a(c, ns), u = t.a(c, Po), y = xP(e, b, u, I.c(c, Xu, e)), D = oP(DJ(b), n, d, e, I.c(c, ns, e)), G = pP(f, e, g, d, r, D), H = nP("path", "pathParameters", Aq.a(b, S), c), f = jg(sb, hg(function(a, c, d, e, f, g, n, u) {
    return function(c) {
      var d = (new V(null, new l(null, 8, [Kk, null, yl, null, Bo, null, mq, null, kt, null, Rt, null, mu, null, su, null], null), null)).call(null, c);
      return m(d) ? I.c(function() {
        var e = t.c(b, d, S), f = I.c(I.c(I.c(u, xm, hJ(c)), Xu, a), hq, xm);
        return kP.a ? kP.a(e, f) : kP.call(null, e, f);
      }(), xm, hJ(d)) : null;
    };
  }(e, y, D, G, H, a, c, c, d, e, f, g, n, r, u), eh(b))), d = uJ(new l(null, 8, [Lj, n, Rm, N.a(mP(d, e), G), Z, e, W, hP(om.b(b)), Hj, hP(Hj.b(b)), ot, f, ql, y, iv, H], null));
  return N.a(new Q(null, 1, 5, R, [hM(b, lP(b, c, gP(JK(d))))], null), m(D) ? D : E);
});
function yP(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = HJ.j(d, C(["/body"], 0)), g = HJ.j(e, C(["/body"], 0)), n = fg(new Q(null, 1, 5, R, [function() {
    var a = J.a(I.c(I.c(c, ev, f), Xu, g), hq);
    return kP.a ? kP.a(b, a) : kP.call(null, b, a);
  }()], null));
  return hg(function(a) {
    return function(b) {
      var c = null != b ? k === b.Wb ? !0 : b.L ? !1 : p(aL, b) : p(aL, b);
      if (c ? null != b ? k === b.ha || (b.L ? 0 : p(sx, b)) : p(sx, b) : c) {
        return new l(null, 4, [gw, null, ev, a, as, tx(b), dk, I.c(b, Z, HJ.j(tx(b), C(["shape"], 0)))], null);
      }
      if (null != gw.b(b)) {
        return b;
      }
      if (null == b) {
        return null;
      }
      throw Error([q("Cannot parse body response at "), q(a), q(", media-type or type declaration expected")].join(""));
    };
  }(f, g, n, a, c, c, d, e), n);
}
function zP(b, a, c) {
  b = null != c && (c.l & 64 || k === c.I) ? P(Of, c) : c;
  var d = t.a(b, ev), e = t.a(b, Xu), f = t.a(b, np), g = yP(Uu.b(a), b);
  return hg(function(b, c, d, e) {
    return function(b) {
      var c = null != b && (b.l & 64 || k === b.I) ? P(Of, b) : b;
      b = t.a(c, gw);
      var d = t.a(c, as), f = t.a(c, ev), c = t.a(c, dk), f = mP(f, d);
      return hM(a, lP(a, e, gP(OK(uJ(new l(null, 4, [Z, d, gw, MJ(hJ(b)), dk, c, Rm, f], null))))));
    };
  }(g, c, b, b, d, e, f), cg(sb, g));
}
kP.D(0, xm, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu);
  t.a(c, np);
  var f = t.a(c, xm), g = t.a(c, Po), e = HJ.j(e, C([f], 0)), d = HJ.j(d, C([f], 0)), n = I.c(I.c(I.c(c, np, !1), Xu, e), ev, d), d = mP(d, e), g = xP(e, b, g, n), r;
  r = null != n && (n.l & 64 || k === n.I) ? P(Of, n) : n;
  var u = t.a(r, ev), y = t.a(r, Xu), y = [q(y), q("/request")].join(""), u = mP(u, y), D = nP("query", "queryParameters", lk.b(b), r), G = nP("header", "headers", Hp.b(b), r), H = zP(HJ.j(y, C(["payload"], 0)), b, r);
  r = le(N.j(G, H, C([E, D], 0))) ? null : hM(b, lP(b, r, gP(kL(new l(null, 5, [Z, y, Rm, u, iv, N.a(D, E), Hp, G, hl, H], null)))));
  y = ss.a(b, S);
  n = I.c(n, hq, ss);
  n = kP.a ? kP.a(y, n) : kP.call(null, y, n);
  f = uJ(fe([Hj, Hk, ql, xm, Rm, W, Z, ss, Cv], [hP(Hj.b(b)), r, g, hJ(f), d, hP(om.b(b)), e, fg(n), hP(Mm.b(b))]));
  return hM(b, lP(b, c, gP(WK(f))));
});
kP.D(0, ss, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = t.a(c, np);
  return hg(function(a, b, c, d) {
    return function(a) {
      var b = F(a, 0, null);
      a = F(a, 1, null);
      b = I.c(I.c(I.c(c, ev, HJ.j(d, C(["/responses"], 0))), hq, Dj), Wo, b);
      return kP.a ? kP.a(a, b) : kP.call(null, a, b);
    };
  }(a, c, c, d, e, f), b);
});
kP.D(0, Dj, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu);
  t.a(c, np);
  var f = t.a(c, Wo), e = HJ.j(e, C([hJ(f)], 0)), g = mP(d, e), d = HJ.j(d, C([f], 0)), d = I.c(I.c(c, ev, d), Xu, e), f = ye(f) ? "" + q(f) : hJ(f), n = hP(Hj.b(b)), d = zP(0, b, d), e = new l(null, 6, [Z, e, Hj, n, Rm, g, Wo, f, W, hJ(f), hl, d], null);
  return hM(b, lP(b, c, gP($K(e))));
});
kP.D(0, El, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = t.a(c, np);
  return hg(function(a, b, c, d, e) {
    return function(a) {
      var b = F(a, 0, null), f = F(a, 1, null);
      a = HJ.j(d, C([IL(hJ(b))], 0));
      var g = HJ.j(e, C([IL(hJ(b))], 0));
      if (null == f || v.a("", f) || v.a(S, f)) {
        a = new l(null, 3, [gw, MJ(hJ(b)), as, g, ev, a], null);
      } else {
        var b = MJ(hJ(b)), n = I.c(I.c(I.c(c, ev, a), Xu, HJ.j(g, C(["shape"], 0))), hq, uo), f = kP.a ? kP.a(f, n) : kP.call(null, f, n);
        a = new l(null, 4, [gw, b, as, g, ev, a, dk, f], null);
      }
      return a;
    };
  }(a, c, c, d, e, f), b);
});
kP.D(0, uo, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a;
  t.a(c, ev);
  var d = t.a(c, Xu);
  t.a(c, np);
  t.a(c, Po);
  var e = lM(b), e = rb("string" === typeof e && pa(e, "{")) && "string" === typeof e ? new l(null, 1, [uo, e], null) : e, c = I.c(I.c(c, Xu, d), rq, kP), c = m("string" === typeof e && pa(e, "{")) ? tM(BD(ij(JSON.parse(e))), c) : uL(e, c), d = t.a(c, "@id");
  return hM(e, gP(dL(new l(null, 2, [Z, d, ws, c], null))));
});
kP.D(0, zm, function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = t.a(c, np), g = t.c(c, Cl, U ? U(S) : Nf.call(null, S)), n = t.a(c, hq), r = t.a(c, Cq), u = yy(b), y = r.a ? r.a(b, c) : r.call(null, b, c), D = jy(y), G = Rm.b(D), H = m(v.a ? v.a(xm, n) : v.call(null, xm, n)) ? I.c(I.c(D, xm, null), Rm, null) : m(v.a ? v.a($r, n) : v.call(null, $r, n)) ? I.c(I.c(D, Lj, null), Rm, null) : D, M = HJ.j(e, C(["/includes"], 0)), O = gP(Gx(new l(null, 5, [Z, M, Rm, rP(M, 
  u), hu, u, Tr, "!includes", Am, E], null)));
  Rf.a(g, function(a, b, c, d, e, f, g) {
    return function(b) {
      return null != t.a(b, g) ? b : I.c(b, g, I.c(a, Tj, d));
    };
  }(y, D, G, H, M, O, u, a, c, c, d, e, f, g, n, r));
  return m(v.a ? v.a(xm, n) : v.call(null, xm, n)) ? lP(b, c, gP(WK(new l(null, 4, [Z, M, xm, hJ(xm.b(D)), Rm, G, ql, new Q(null, 1, 5, R, [O], null)], null)))) : m(v.a ? v.a($r, n) : v.call(null, $r, n)) ? lP(b, c, gP(JK(new l(null, 4, [Z, M, Lj, Lj.b(D), ql, new Q(null, 1, 5, R, [O], null), Rm, G], null)))) : hM(b, lP(b, c, gP(Ix(new l(null, 3, [Z, M, Tr, "!includes", hu, u], null)))));
});
kP.D(0, Xs, function(b, a) {
  var c = kM(b), d = t.a(b, Es), c = kP.a ? kP.a(c, a) : kP.call(null, c, a);
  return pe(c) ? I.c(c, ev, d) : c;
});
kP.D(0, Xr, function() {
  return null;
});
var AP = U ? U(S) : Nf.call(null, S);
function BP() {
  Qf.a ? Qf.a(AP, S) : Qf.call(null, AP, S);
}
function CP(b) {
  return b.o ? b.o() : b.call(null);
}
if ("undefined" === typeof DP) {
  var DP = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.parser.document.raml", "parse-ast"), function() {
      return function(a) {
        if (null != yy(a) && null != zy(a)) {
          a = va(zy(a));
        } else {
          if (null != yy(a)) {
            a = zm;
          } else {
            if (null == yy(a) && null == zy(a)) {
              throw Error("" + q("Unsupported RAML parsing unit, missing @location or @fragment information"));
            }
            a = null;
          }
        }
        return a;
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
function EP(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = Vr.a(xy(b), S), g = Cb.c(function(a, b, c, d) {
    return function(a, b) {
      var c = F(b, 0, null), e = F(b, 1, null), e = DP.a ? DP.a(e, d) : DP.call(null, e, d);
      return I.c(a, c, e);
    };
  }(f, a, c, c, d, e), S, f), c = Cb.c(function(a, b, c, d, e, f, g) {
    return function(n, u) {
      var y = F(u, 0, null), r = F(u, 1, null);
      return ki.j(C([n, gg.a(S, cg(sb, Tf.a(function(a, b, c, d, e, f, g, n) {
        return function(a) {
          var c = x(Rx(a, "is-type-tag")), d = x(Rx(a, "is-trait-tag")), e = x(Rx(a, "is-annotation-tag")), c = null != c ? Qx(c) : null != d ? Qx(d) : null != e ? Qx(e) : null;
          return null != c ? new Q(null, 2, 5, R, [df.b(GJ([q(hJ(b)), q("."), q(hJ(c))].join(""), n)), a], null) : null;
        };
      }(u, y, r, a, b, c, d, e, f, g), ly(r))))], 0));
    };
  }(f, g, a, c, c, d, e), S, g);
  return new l(null, 2, [ol, g, Lo, c], null);
}
function FP(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, ev), e = t.a(c, Xu), f = Vr.a(xy(b), S), g = [q(e), q("/source-map/uses")].join(""), c = Tf.a(function(a) {
    return function(b) {
      var c = F(b, 0, null);
      b = F(b, 1, null);
      c = hJ(c);
      b = yy(b);
      return new hy(a, c, b, null, null, null);
    };
  }(g, f, a, c, d, e), f);
  return new Q(null, 1, 5, R, [Nx(g, d, c)], null);
}
DP.D(0, "#%RAML 1.0", function(b, a) {
  return CP(function() {
    var c = yy(b), d = I.c(a, It, c), e = function() {
      var a = Cl.b(d);
      return m(a) ? a : U ? U(S) : Nf.call(null, S);
    }(), f = yO(e), g = EP(b, new l(null, 4, [ev, [q(c), q("#")].join(""), Cl, e, Cq, DP, Xu, [q(c), q("#/libraries")].join("")], null)), n = null != g && (g.l & 64 || k === g.I) ? P(Of, g) : g, r = t.a(n, ol), u = t.a(n, Lo), y = FP(b, d);
    gg.a(S, hg(function() {
      return function(a) {
        return new Q(null, 2, 5, R, [ux(a), a], null);
      };
    }(c, d, e, f, g, n, r, u, y), cg(function() {
      return function(a) {
        return jM(a);
      };
    }(c, d, e, f, g, n, r, u, y), u)));
    var g = vP(xy(b), new l(null, 5, [ev, [q(c), q("#")].join(""), Cl, e, Po, u, Cq, DP, Xu, c], null)), D = ki.j(C([u, g], 0)), n = tP(xy(b), new l(null, 4, [It, c, Po, D, ev, [q(c), q("#")].join(""), Xu, [q(c), q("#")].join("")], null)), G = ki.j(C([u, n], 0)), u = uP(xy(b), new l(null, 6, [ev, [q(c), q("#")].join(""), Cl, e, Po, D, Cq, DP, Bt, G, Xu, [q(c), q("#")].join("")], null)), H = ki.j(C([D, u], 0)), D = function() {
      var a = xy(b), d = new l(null, 7, [ev, [q(c), q("#")].join(""), Cl, e, Xu, [q(c), q("#")].join(""), Bt, G, Po, H, Cq, DP, np, !1], null);
      return kP.a ? kP.a(a, d) : kP.call(null, a, d);
    }();
    return I.c(ry(new l(null, 7, [Z, c, ev, c, Tj, D, Np, N.j(fh(g), fh(u), C([fh(n)], 0)), Po, function() {
      var a = N.a(fh(A.b ? A.b(e) : A.call(null, e)), fg(fh(r)));
      return f.b ? f.b(a) : f.call(null, a);
    }(), Rm, y, Qp, "#%RAML 1.0"], null)), Bm, t.a(b, df.b("@raw")));
  });
});
DP.D(0, "#%RAML 1.0 Library", function(b, a) {
  var c = null != a && (a.l & 64 || k === a.I) ? P(Of, a) : a, d = t.a(c, Nn);
  return CP(function(a, c, d, n) {
    return function() {
      var e = yy(b), f = I.c(d, It, e), g = function() {
        var a = Cl.b(f);
        return m(a) ? a : U ? U(S) : Nf.call(null, S);
      }(), D = yO(g), G = EP(b, J.a(f, Nn)), H = null != G && (G.l & 64 || k === G.I) ? P(Of, G) : G, M = t.a(H, ol), O = t.a(H, Lo), T = FP(b, f), H = gg.a(S, hg(function() {
        return function(a) {
          return new Q(null, 2, 5, R, [ux(a), a], null);
        };
      }(e, f, null, g, D, G, H, M, O, T, a, c, d, n), cg(function() {
        return function(a) {
          return jM(a);
        };
      }(e, f, null, g, D, G, H, M, O, T, a, c, d, n), O))), G = vP(xy(b), new l(null, 6, [ev, [q(e), q("#")].join(""), Cl, g, Nn, n, Po, O, Cq, DP, Xu, e], null)), qa = ki.j(C([O, G], 0)), O = tP(xy(b), new l(null, 4, [It, e, ev, [q(e), q("#")].join(""), Xu, [q(e), q("#/annotations")].join(""), Po, qa], null)), H = ki.j(C([H, O], 0)), H = uP(xy(b), new l(null, 7, [ev, [q(e), q("#")].join(""), Cl, g, Po, qa, Nn, n, Cq, DP, Bt, H, Xu, [q(e), q("#")].join("")], null)), qa = Hq.b(xy(b));
      return I.c(ty(uJ(new l(null, 7, [Z, e, ev, e, Hj, qa, Np, N.j(fh(G), fh(H), C([fh(O)], 0)), Po, function() {
        var a = N.a(fh(A.b ? A.b(g) : A.call(null, g)), fg(fh(M)));
        return D.b ? D.b(a) : D.call(null, a);
      }(), Rm, T, Qp, "#%RAML 1.0 Library"], null))), Bm, t.a(b, df.b("@raw")));
    };
  }(a, c, c, d));
});
function GP(b, a, c) {
  return CP(function() {
    var d = m(a) ? a : S, e = yy(b), f = I.c(d, It, e), g = function() {
      var a = Cl.b(f);
      return m(a) ? a : U ? U(S) : Nf.call(null, S);
    }(), n = yO(g), r = EP(b, new l(null, 4, [ev, [q(e), q("#")].join(""), Cl, g, Cq, DP, Xu, [q(e), q("#/libraries")].join("")], null)), u = null != r && (r.l & 64 || k === r.I) ? P(Of, r) : r, y = t.a(u, ol), D = t.a(u, Lo), G = gg.a(S, hg(function() {
      return function(a) {
        return new Q(null, 2, 5, R, [ux(a), a], null);
      };
    }(d, e, f, null, g, n, r, u, y, D), cg(function() {
      return function(a) {
        return jM(a);
      };
    }(d, e, f, null, g, n, r, u, y, D), D))), d = FP(b, f), r = py(e, c), H = function() {
      var a = Po.b(f);
      return m(a) ? a : S;
    }(), M = xy(b), u = Hq.b(M), O = function() {
      var a = ki.j(C([f, new l(null, 8, [ev, [q(e), q("#")].join(""), Cl, g, Po, ki.j(C([H, D], 0)), Bt, G, Xu, [q(e), q("#")].join(""), hq, m(v.a ? v.a("#%RAML 1.0 Trait", c) : v.call(null, "#%RAML 1.0 Trait", c)) ? xm : m(v.a ? v.a("#%RAML 1.0 DataType", c) : v.call(null, "#%RAML 1.0 DataType", c)) ? uo : hq.b(f), Cq, DP, np, !1], null)], 0));
      return kP.a ? kP.a(M, a) : kP.call(null, M, a);
    }();
    return I.c(vy(new l(null, 7, [Z, e, Hj, u, ev, e, Tj, O, Po, function() {
      var a = N.a(fh(A.b ? A.b(g) : A.call(null, g)), fg(fh(y)));
      return n.b ? n.b(a) : n.call(null, a);
    }(), Rm, N.a(d, r), Qp, c], null)), Bm, t.a(b, df.b("@raw")));
  });
}
function HP(b, a) {
  var c = null != b;
  return (c ? null != b ? k === b.wc || (b.L ? 0 : p(dK, b)) : p(dK, b) : c) ? I.c(b, ho, t.c(a, df.b("(abstract)"), !1)) : b;
}
DP.D(0, "#%RAML 1.0 DataType", function(b, a) {
  return GP(b, a, "#%RAML 1.0 DataType");
});
DP.D(0, "#%RAML 1.0 Trait", function(b, a) {
  var c = GP(b, a, "#%RAML 1.0 Trait"), d = jy(c), d = I.c(I.c(d, xm, null), ho, !0);
  return I.c(c, Tj, d);
});
DP.D(0, "#%RAML 1.0 Fragment", function(b, a) {
  return HP(GP(b, a, "#%RAML 1.0 Fragment"), xy(b));
});
DP.D(0, zm, function(b, a) {
  return HP(GP(b, a, "#%RAML 1.0 Fragment"), xy(b));
});
var IP;
if ("undefined" === typeof AJ) {
  var AJ = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.parser.domain.jsonld", "from-jsonld"), function() {
      return function(a) {
        return null == a ? null : m(nJ(a, PC)) ? PC : m(nJ(a, uD)) ? uD : m(nJ(a, xD)) ? xD : m(nJ(a, xC)) ? xC : m(nJ(a, wC)) ? wC : m(nJ(a, xC)) ? xC : m(nJ(a, rD)) ? rD : m(nJ(a, bD)) ? bD : m(nJ(a, eD)) ? eD : m(nJ(a, iD)) ? iD : m(nJ(a, pD)) ? pD : m(nJ(a, oD)) ? oD : m(nJ(a, mC("Shape"))) ? oD : m(nJ(a, mC("NodeShape"))) ? oD : m(nJ(a, lD)) ? lD : m(nJ(a, AC)) ? AC : m(nJ(a, zC)) ? zC : bm;
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
AJ.D(0, PC, function(b) {
  var a = zJ(b, BC), c = zJ(b, NC), d = zJ(b, qD), e = zJ(b, aD);
  return vK(fe([Hj, Kl, Rm, W, ho, wp, kq, xq, Ur, Z, Wr, Ss, wt, Du, iv, kv, Cv], [pJ(b, RC), zJ(b, $C), a, pJ(b, QC), pJ(b, OC), pJ(b, YC), e, pJ(b, SC), c, t.a(b, "@id"), pJ(b, UC), rJ(b, WC), rJ(b, VC), pJ(b, ZC), d, zJ(b, XC), rJ(b, TC)]));
});
AJ.D(0, bD, function(b) {
  var a = zJ(b, BC), c = zJ(b, JC), d = zJ(b, NC);
  return JK(fe([Hj, Lj, ql, Rm, W, ho, Ur, Z, ot, iv], [pJ(b, RC), pJ(b, dD), c, a, pJ(b, QC), pJ(b, OC), d, t.a(b, "@id"), zJ(b, cD), zJ(b, qD)]));
});
AJ.D(0, wC, function(b) {
  var a = t.a(b, "@id"), c = t.a(x(t.a(b, CC)), "@id");
  b = Tf.a(AJ, t.c(b, GC, E));
  return Nx(a, c, b);
});
AJ.D(0, xC, function(b) {
  var a = t.a(b, "@id"), c = pJ(b, HC), d = pJ(b, IC);
  if (m(v.a ? v.a("file-parsed", c) : v.call(null, "file-parsed", c))) {
    return new Ux(a, d, null, null, null);
  }
  if (m(v.a ? v.a("document-type", c) : v.call(null, "document-type", c))) {
    return new Vx(a, d, null, null, null);
  }
  if (m(v.a ? v.a("node-parsed", c) : v.call(null, "node-parsed", c))) {
    return new Wx(a, d, null, null, null);
  }
  if (m(v.a ? v.a("nested-resource-nested-children", c) : v.call(null, "nested-resource-nested-children", c))) {
    return new Yx(a, d, null, null, null);
  }
  if (m(v.a ? v.a("nested-resource-parent-id", c) : v.call(null, "nested-resource-parent-id", c))) {
    return new Zx(a, d, null, null, null);
  }
  if (m(v.a ? v.a("nested-resource-path-parsed", c) : v.call(null, "nested-resource-path-parsed", c))) {
    return new Xx(a, d, null, null, null);
  }
  if (m(v.a ? v.a("api-tag-tag", c) : v.call(null, "api-tag-tag", c))) {
    return new $x(a, d, null, null, null);
  }
  if (m(v.a ? v.a("inline-fragment-parsed-tag", c) : v.call(null, "inline-fragment-parsed-tag", c))) {
    return new ay(a, d, null, null, null);
  }
  "undefined" === typeof IP && (IP = function(a, b, c, d, r, u, y) {
    this.xe = a;
    this.id = b;
    this.df = c;
    this.Ga = d;
    this.Rh = r;
    this.wh = u;
    this.Lh = y;
    this.l = 393216;
    this.M = 0;
  }, IP.prototype.U = function() {
    return function(a, b) {
      return new IP(this.xe, this.id, this.df, this.Ga, this.Rh, this.wh, b);
    };
  }(v, c, a, c, d), IP.prototype.S = function() {
    return function() {
      return this.Lh;
    };
  }(v, c, a, c, d), IP.prototype.Vb = k, IP.prototype.Ob = function() {
    return function() {
      return this.df;
    };
  }(v, c, a, c, d), IP.prototype.Pb = function() {
    return function() {
      return this.Ga;
    };
  }(v, c, a, c, d), IP.prototype.ha = k, IP.prototype.Da = function() {
    return function() {
      return this.id;
    };
  }(v, c, a, c, d), IP.prototype.Ea = function() {
    return function() {
      return [q(this.df), q(" tag")].join("");
    };
  }(v, c, a, c, d), IP.prototype.Ca = function() {
    return function() {
      return [q("A "), q(this.df), q(" tag")].join("");
    };
  }(v, c, a, c, d), IP.yc = function() {
    return function() {
      return new Q(null, 7, 5, R, [aq, Ku, kl, kr, Un, jv, Yn], null);
    };
  }(v, c, a, c, d), IP.nc = !0, IP.Xb = "api-modeling-framework.parser.domain.jsonld/t_api_modeling_framework$parser$domain$jsonld52189", IP.rc = function() {
    return function(a, b) {
      return Ac(b, "api-modeling-framework.parser.domain.jsonld/t_api_modeling_framework$parser$domain$jsonld52189");
    };
  }(v, c, a, c, d));
  return new IP(b, a, c, d, v, c, S);
});
AJ.D(0, eD, function(b) {
  var a = zJ(b, BC), c = zJ(b, JC), d = x(zJ(b, hD)), e = zJ(b, NC);
  return WK(fe([Hj, Hk, ql, xm, Rm, W, ho, Ur, Z, ss, Ss, wt, Cv], [pJ(b, RC), d, c, pJ(b, fD), a, pJ(b, QC), pJ(b, OC), e, t.a(b, "@id"), zJ(b, gD), rJ(b, WC), rJ(b, VC), rJ(b, TC)]));
});
AJ.D(0, iD, function(b) {
  var a = zJ(b, BC), c = zJ(b, NC);
  return $K(new l(null, 8, [Z, t.a(b, "@id"), Rm, a, ho, pJ(b, OC), W, pJ(b, QC), Hj, pJ(b, RC), Ur, c, hl, zJ(b, kD), Wo, pJ(b, jD)], null));
});
AJ.D(0, lD, function(b) {
  var a = zJ(b, BC), c = zJ(b, NC), d = t.a(b, "@id"), e = pJ(b, OC), f = pJ(b, QC), g = pJ(b, RC), n = pJ(b, mD);
  b = x(t.a(b, nD));
  b = AJ.b ? AJ.b(b) : AJ.call(null, b);
  return OK(new l(null, 8, [Z, d, Rm, a, ho, e, W, f, Hj, g, gw, n, Ur, c, dk, b], null));
});
AJ.D(0, oD, function(b) {
  zJ(b, BC);
  var a = zJ(b, NC);
  return dL(new l(null, 5, [Z, [q(t.a(b, "@id")), q("/wrapper")].join(""), ho, pJ(b, OC), W, pJ(b, QC), Ur, a, ws, b], null));
});
AJ.D(0, rD, function(b) {
  var a = zJ(b, BC), c = zJ(b, NC), d = pJ(b, RC), e = pJ(b, QC), f = pJ(b, OC), g = pJ(b, tD), n = t.a(b, "@id"), r;
  r = x(t.c(b, nD, E));
  r = null != r ? Ge.b ? Ge.b(r) : Ge.call(null, r) : null;
  return iL(fe([Hj, Rm, W, ho, Dp, Ur, Z, ws, Mv], [d, a, e, f, g, c, n, r, pJ(b, sD)]));
});
AJ.D(0, pD, function(b) {
  var a = zJ(b, BC), c = zJ(b, NC), d = tJ(b, qD), e = Tf.a(function() {
    return function(a) {
      return AJ.b ? AJ.b(a) : AJ.call(null, a);
    };
  }(a, c, d), cg(function() {
    return function(a) {
      return v.a("header", pJ(a, tD));
    };
  }(a, c, d), d)), d = Tf.a(function() {
    return function(a) {
      return AJ.b ? AJ.b(a) : AJ.call(null, a);
    };
  }(a, c, d, e), cg(function() {
    return function(a) {
      return yf("header", pJ(a, tD));
    };
  }(a, c, d, e), d));
  return kL(fe([Hj, hl, Rm, W, ho, Hp, Ur, Z, iv], [pJ(b, RC), zJ(b, kD), a, pJ(b, QC), pJ(b, OC), e, c, t.a(b, "@id"), d]));
});
AJ.D(0, zC, function(b) {
  var a = zJ(b, BC), c = zJ(b, NC);
  return Gx(new l(null, 7, [Z, t.a(b, "@id"), Rm, a, hu, qJ(b), Tr, pJ(b, LC), W, pJ(b, QC), Ur, c, Am, rJ(b, MC)], null));
});
AJ.D(0, AC, function(b) {
  var a = zJ(b, BC);
  zJ(b, NC);
  return Gx(new l(null, 5, [Z, t.a(b, "@id"), Rm, a, hu, qJ(b), Tr, pJ(b, LC), W, pJ(b, QC)], null));
});
AJ.D(0, uD, function(b) {
  var a = zJ(b, BC);
  return AK(new l(null, 6, [Z, t.a(b, "@id"), W, pJ(b, QC), Hj, pJ(b, RC), Rm, a, cu, rJ(b, vD), dw, x(zJ(b, wD))], null));
});
AJ.D(0, xD, function(b) {
  var a = zJ(b, BC);
  return EK(new l(null, 5, [Z, t.a(b, "@id"), W, pJ(b, QC), Hj, pJ(b, RC), Rm, a, Dv, x(tJ(b, yD))], null));
});
AJ.D(0, null, function() {
  return null;
});
AJ.D(0, bm, function() {
  return null;
});
var JP = function JP(a) {
  return null == a ? null : m(nJ(a, sC)) ? sC : m(nJ(a, tC)) ? tC : m(nJ(a, uC)) ? uC : me(a) && v.a(1, B(a)) ? (a = x(a), JP.b ? JP.b(a) : JP.call(null, a)) : bm;
};
if ("undefined" === typeof KP) {
  var KP = function() {
    var b = U ? U(S) : Nf.call(null, S), a = U ? U(S) : Nf.call(null, S), c = U ? U(S) : Nf.call(null, S), d = U ? U(S) : Nf.call(null, S), e = t.c(S, Ou, mj());
    return new yj(od.a("api-modeling-framework.parser.document.jsonld", "from-jsonld"), function() {
      return function(a) {
        return JP(a);
      };
    }(b, a, c, d, e), Cm, e, b, a, c, d);
  }()
}
KP.D(0, sC, function(b) {
  var a;
  null != t.a(b, FC) ? (a = t.a(b, FC), a = me(a) ? x(a) : a) : a = null;
  a = AJ.b ? AJ.b(a) : AJ.call(null, a);
  var c = Tf.a(AJ, t.c(b, DC, E)), d = hg(KP, t.c(b, EC, E)), e = t.a(b, "@id");
  b = x(Tf.a(AJ, t.c(b, BC, E)));
  b = oJ(b);
  b = null != b ? Qx(b) : null;
  return ry(new l(null, 6, [Z, e, ev, e, Tj, a, Po, d, Np, c, Qp, b], null));
});
KP.D(0, tC, function(b) {
  var a = hg(KP, t.c(b, EC, E)), c = fg(cg(sb, Tf.a(function() {
    return function(a) {
      return ly(a);
    };
  }(a), a))), d = x(hg(AJ, t.a(b, FC))), e = x(Tf.a(AJ, t.c(b, BC, E)));
  null != e && x(cg(function() {
    return function(a) {
      return v.a("file-parsed", Px(a));
    };
  }(a, c, d, e), Lx(e)));
  c = t.a(b, "@id");
  b = x(Tf.a(AJ, t.c(b, BC, E)));
  b = oJ(b);
  b = null != b ? Qx(b) : null;
  return vy(new l(null, 5, [Z, c, ev, c, Tj, d, Po, a, Qp, b], null));
});
KP.D(0, uC, function(b) {
  var a = Tf.a(AJ, t.c(b, DC, E)), c = hg(KP, t.c(b, EC, E)), d = t.a(b, "@id");
  b = x(Tf.a(AJ, t.c(b, BC, E)));
  b = oJ(b);
  b = null != b ? Qx(b) : null;
  return ty(new l(null, 5, [Z, d, ev, d, Po, c, Np, a, Qp, b], null));
});
KP.D(0, bm, function(b) {
  return AJ.b ? AJ.b(b) : AJ.call(null, b);
});
KP.D(0, null, function() {
  return null;
});
function LP(b) {
  var a = cg(function(a) {
    return null != t.a(a, "@id");
  }, Tf.a(function(a) {
    return new l(null, 2, ["@id", t.a(a, "@id"), "@type", t.a(a, "@type")], null);
  }, t.c(b, EC, E)));
  return 0 < B(a) ? I.c(b, EC, a) : J.a(b, EC);
}
;var MP;
na("api_modeling_framework.core.fromClj", function(b) {
  return fj(b);
});
na("api_modeling_framework.core.toClj", function(b) {
  return ij(b);
});
function NP(b) {
  return m(my(b)) ? I.c(I.c(I.c(I.c(Tx(b), pp, null), Po, null), Vr, null), Np, null) : b;
}
na("api_modeling_framework.core.unit_kind", function OP(a) {
  if (null != a && null != a.Rf) {
    return a.Rf(a);
  }
  var c = OP[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = OP._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Model.unit-kind", a);
});
na("api_modeling_framework.core.location", function PP(a) {
  if (null != a && null != a.Nf) {
    return a.Nf(a);
  }
  var c = PP[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = PP._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Model.location", a);
});
var QP = function QP(a) {
  if (null != a && null != a.Jf) {
    return a.Jf(a);
  }
  var c = QP[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = QP._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Model.document-model", a);
};
na("api_modeling_framework.core.document_model", QP);
var RP = function RP(a) {
  if (null != a && null != a.Kf) {
    return a.Kf(a);
  }
  var c = RP[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = RP._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Model.domain-model", a);
};
na("api_modeling_framework.core.domain_model", RP);
na("api_modeling_framework.core.reference_model", function SP(a, c) {
  if (null != a && null != a.Pf) {
    return a.Pf(a, c);
  }
  var d = SP[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = SP._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("Model.reference-model", a);
});
na("api_modeling_framework.core.update_reference_model", function TP(a, c, d, e, f) {
  if (null != a && null != a.Sf) {
    return a.Sf(a, c, d, e, f);
  }
  var g = TP[ba(null == a ? null : a)];
  if (null != g) {
    return g.ba ? g.ba(a, c, d, e, f) : g.call(null, a, c, d, e, f);
  }
  g = TP._;
  if (null != g) {
    return g.ba ? g.ba(a, c, d, e, f) : g.call(null, a, c, d, e, f);
  }
  throw ub("Model.update-reference-model", a);
});
na("api_modeling_framework.core.references", function UP(a) {
  if (null != a && null != a.Qf) {
    return a.Qf(a);
  }
  var c = UP[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = UP._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Model.references", a);
});
na("api_modeling_framework.core.find_element", function VP(a, c, d) {
  if (null != a && null != a.Lf) {
    return a.Lf(a, c, d);
  }
  var e = VP[ba(null == a ? null : a)];
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  e = VP._;
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  throw ub("Model.find-element", a);
});
na("api_modeling_framework.core.raw", function WP(a) {
  if (null != a && null != a.Of) {
    return a.Of(a);
  }
  var c = WP[ba(null == a ? null : a)];
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  c = WP._;
  if (null != c) {
    return c.b ? c.b(a) : c.call(null, a);
  }
  throw ub("Model.raw", a);
});
na("api_modeling_framework.core.lexical_info_for_unit", function XP(a, c) {
  if (null != a && null != a.Mf) {
    return a.Mf(a, c);
  }
  var d = XP[ba(null == a ? null : a)];
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  d = XP._;
  if (null != d) {
    return d.a ? d.a(a, c) : d.call(null, a, c);
  }
  throw ub("Model.lexical-info-for-unit", a);
});
na("api_modeling_framework.core.validate", function YP(a, c, d, e, f) {
  if (null != a && null != a.Gf) {
    return a.Gf(0, c, d, e, f);
  }
  var g = YP[ba(null == a ? null : a)];
  if (null != g) {
    return g.ba ? g.ba(a, c, d, e, f) : g.call(null, a, c, d, e, f);
  }
  g = YP._;
  if (null != g) {
    return g.ba ? g.ba(a, c, d, e, f) : g.call(null, a, c, d, e, f);
  }
  throw ub("DataProtocol.validate", a);
});
function ZP(b, a, c) {
  this.h = b;
  this.g = a;
  this.m = c;
  this.l = 2229667594;
  this.M = 8192;
}
h = ZP.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return t.c(this.g, a, c);
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.core.DataValidator{", ", ", "}", c, N.a(E, this.g));
};
h.ea = function() {
  return new Zg(0, this, 0, E, m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 0 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(oi, a) ? J.a(Wd(gg.a(S, this), this.h), a) : new ZP(this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return new ZP(this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(E, this.g));
};
h.U = function(b, a) {
  return new ZP(a, this.g, this.m);
};
h.Gf = function(b, a, c, d, e) {
  b = rx(1);
  Vw(function(b, g) {
    return function() {
      var f = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (T) {
                    if (T instanceof Object) {
                      b[5] = T, ox(b), c = X;
                    } else {
                      throw T;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(b) {
            var f = b[1];
            if (1 === f) {
              return f = GM(a, c, d), jx(b, 2, f);
            }
            if (2 === f) {
              var f = b[2], g = null != bo.b(f);
              b[7] = f;
              b[1] = g ? 3 : 4;
              return X;
            }
            return 3 === f ? (f = b[7], f = bo.b(f), f = fj(f), f = Error(f), f = e.a ? e.a(f, null) : e.call(null, f, null), b[2] = f, b[1] = 5, X) : 4 === f ? (f = b[7], f = fj(f), f = e.a ? e.a(null, f) : e.call(null, null, f), b[2] = f, b[1] = 5, X) : 5 === f ? lx(b, b[2]) : null;
          };
        }(b, g), b, g);
      }(), r = function() {
        var a = f.o ? f.o() : f.call(null);
        a[6] = b;
        return a;
      }();
      return ix(r);
    };
  }(b, this));
  return b;
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
na("api_modeling_framework.core.__GT_DataValidator", function() {
  return new ZP(null, null, null);
});
na("api_modeling_framework.core.map__GT_DataValidator", function(b) {
  return new ZP(null, J.b(b), null);
});
var $P = function $P(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 2:
      return $P.a(arguments[0], arguments[1]);
    case 3:
      return $P.c(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
na("api_modeling_framework.core.parse_file_sync", $P);
$P.a = function(b, a) {
  if (null != b && null != b.He) {
    return b.He(b, a);
  }
  var c = $P[ba(null == b ? null : b)];
  if (null != c) {
    return c.a ? c.a(b, a) : c.call(null, b, a);
  }
  c = $P._;
  if (null != c) {
    return c.a ? c.a(b, a) : c.call(null, b, a);
  }
  throw ub("Parser.parse-file-sync", b);
};
$P.c = function(b, a, c) {
  if (null != b && null != b.Ie) {
    return b.Ie(b, a, c);
  }
  var d = $P[ba(null == b ? null : b)];
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  d = $P._;
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  throw ub("Parser.parse-file-sync", b);
};
$P.N = 3;
var aQ = function aQ(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 3:
      return aQ.c(arguments[0], arguments[1], arguments[2]);
    case 4:
      return aQ.K(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
na("api_modeling_framework.core.parse_file", aQ);
aQ.c = function(b, a, c) {
  if (null != b && null != b.Fe) {
    return b.Fe(b, a, c);
  }
  var d = aQ[ba(null == b ? null : b)];
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  d = aQ._;
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  throw ub("Parser.parse-file", b);
};
aQ.K = function(b, a, c, d) {
  if (null != b && null != b.Ge) {
    return b.Ge(b, a, c, d);
  }
  var e = aQ[ba(null == b ? null : b)];
  if (null != e) {
    return e.K ? e.K(b, a, c, d) : e.call(null, b, a, c, d);
  }
  e = aQ._;
  if (null != e) {
    return e.K ? e.K(b, a, c, d) : e.call(null, b, a, c, d);
  }
  throw ub("Parser.parse-file", b);
};
aQ.N = 4;
var bQ = function bQ(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 4:
      return bQ.K(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return bQ.ba(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
na("api_modeling_framework.core.parse_string", bQ);
bQ.K = function(b, a, c, d) {
  if (null != b && null != b.Je) {
    return b.Je(b, a, c, d);
  }
  var e = bQ[ba(null == b ? null : b)];
  if (null != e) {
    return e.K ? e.K(b, a, c, d) : e.call(null, b, a, c, d);
  }
  e = bQ._;
  if (null != e) {
    return e.K ? e.K(b, a, c, d) : e.call(null, b, a, c, d);
  }
  throw ub("Parser.parse-string", b);
};
bQ.ba = function(b, a, c, d, e) {
  if (null != b && null != b.Vd) {
    return b.Vd(b, a, c, d, e);
  }
  var f = bQ[ba(null == b ? null : b)];
  if (null != f) {
    return f.ba ? f.ba(b, a, c, d, e) : f.call(null, b, a, c, d, e);
  }
  f = bQ._;
  if (null != f) {
    return f.ba ? f.ba(b, a, c, d, e) : f.call(null, b, a, c, d, e);
  }
  throw ub("Parser.parse-string", b);
};
bQ.N = 5;
var cQ = function cQ(a) {
  for (var c = [], d = arguments.length, e = 0;;) {
    if (e < d) {
      c.push(arguments[e]), e += 1;
    } else {
      break;
    }
  }
  switch(c.length) {
    case 3:
      return cQ.c(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cQ.K(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([q("Invalid arity: "), q(c.length)].join(""));;
  }
};
na("api_modeling_framework.core.parse_string_sync", cQ);
cQ.c = function(b, a, c) {
  if (null != b && null != b.Ke) {
    return b.Ke(b, a, c);
  }
  var d = cQ[ba(null == b ? null : b)];
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  d = cQ._;
  if (null != d) {
    return d.c ? d.c(b, a, c) : d.call(null, b, a, c);
  }
  throw ub("Parser.parse-string-sync", b);
};
cQ.K = function(b, a, c, d) {
  if (null != b && null != b.Le) {
    return b.Le(b, a, c, d);
  }
  var e = cQ[ba(null == b ? null : b)];
  if (null != e) {
    return e.K ? e.K(b, a, c, d) : e.call(null, b, a, c, d);
  }
  e = cQ._;
  if (null != e) {
    return e.K ? e.K(b, a, c, d) : e.call(null, b, a, c, d);
  }
  throw ub("Parser.parse-string-sync", b);
};
cQ.N = 4;
na("api_modeling_framework.core.generate_string", function dQ(a, c, d, e, f) {
  if (null != a && null != a.Ee) {
    return a.Ee(a, c, d, e, f);
  }
  var g = dQ[ba(null == a ? null : a)];
  if (null != g) {
    return g.ba ? g.ba(a, c, d, e, f) : g.call(null, a, c, d, e, f);
  }
  g = dQ._;
  if (null != g) {
    return g.ba ? g.ba(a, c, d, e, f) : g.call(null, a, c, d, e, f);
  }
  throw ub("Generator.generate-string", a);
});
na("api_modeling_framework.core.generate_file", function eQ(a, c, d, e, f) {
  if (null != a && null != a.De) {
    return a.De(a, c, d, e, f);
  }
  var g = eQ[ba(null == a ? null : a)];
  if (null != g) {
    return g.ba ? g.ba(a, c, d, e, f) : g.call(null, a, c, d, e, f);
  }
  g = eQ._;
  if (null != g) {
    return g.ba ? g.ba(a, c, d, e, f) : g.call(null, a, c, d, e, f);
  }
  throw ub("Generator.generate-file", a);
});
na("api_modeling_framework.core.build", function fQ(a, c, d) {
  if (null != a && null != a.Hf) {
    return a.Hf(0, c, d);
  }
  var e = fQ[ba(null == a ? null : a)];
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  e = fQ._;
  if (null != e) {
    return e.c ? e.c(a, c, d) : e.call(null, a, c, d);
  }
  throw ub("DomainBuilder.build", a);
});
na("api_modeling_framework.core.update", function gQ(a, c, d, e) {
  if (null != a && null != a.If) {
    return a.If(0, c, d, e);
  }
  var f = gQ[ba(null == a ? null : a)];
  if (null != f) {
    return f.K ? f.K(a, c, d, e) : f.call(null, a, c, d, e);
  }
  f = gQ._;
  if (null != f) {
    return f.K ? f.K(a, c, d, e) : f.call(null, a, c, d, e);
  }
  throw ub("DomainBuilder.update", a);
});
function hQ(b, a, c) {
  this.h = b;
  this.g = a;
  this.m = c;
  this.l = 2229667594;
  this.M = 8192;
}
h = hQ.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return t.c(this.g, a, c);
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.core.JSDomainBuilder{", ", ", "}", c, N.a(E, this.g));
};
h.ea = function() {
  return new Zg(0, this, 0, E, m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 0 + B(this.g);
};
h.Hf = function(b, a, c) {
  b = new l(null, 1, [Z, c], null);
  return a.b ? a.b(b) : a.call(null, b);
};
h.If = function(b, a, c, d) {
  return I.c(a, c, d);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(oi, a) ? J.a(Wd(gg.a(S, this), this.h), a) : new hQ(this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return new hQ(this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(E, this.g));
};
h.U = function(b, a) {
  return new hQ(a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
na("api_modeling_framework.core.__GT_JSDomainBuilder", function() {
  return new hQ(null, null, null);
});
na("api_modeling_framework.core.map__GT_JSDomainBuilder", function(b) {
  return new hQ(null, J.b(b), null);
});
function iQ() {
  throw Error("Synchronous version not supported");
}
function jQ(b, a, c) {
  this.h = b;
  this.g = a;
  this.m = c;
  this.l = 2229667594;
  this.M = 8192;
}
h = jQ.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return t.c(this.g, a, c);
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.core.RAMLParser{", ", ", "}", c, N.a(E, this.g));
};
h.He = function() {
  return iQ();
};
h.Ie = function() {
  return iQ();
};
h.Fe = function(b, a, c) {
  return aQ.K(this, a, S, c);
};
h.Ge = function(b, a, c, d) {
  BP();
  b = rx(1);
  Vw(function(b, f) {
    return function() {
      var e = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (O) {
                    if (O instanceof Object) {
                      b[5] = O, ox(b), c = X;
                    } else {
                      throw O;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(b) {
            var e = b[1];
            if (1 === e) {
              return e = dM(a, c), jx(b, 2, e);
            }
            if (2 === e) {
              var e = b[2], f = DD(e);
              b[7] = e;
              b[1] = m(f) ? 3 : 4;
              return X;
            }
            return 3 === e ? (e = b[7], e = fj(e), e = d.a ? d.a(e, null) : d.call(null, e, null), b[2] = e, b[1] = 5, X) : 4 === e ? (b[2] = null, b[1] = 8, X) : 5 === e ? lx(b, b[2]) : 6 === e ? (b[2] = b[2], b[1] = 5, X) : 7 === e ? (e = fj(b[2]), e = d.a ? d.a(e, null) : d.call(null, e, null), b[2] = e, ox(b), X) : 8 === e ? (e = b[7], nx(b, 7, 6), e = DP.a ? DP.a(e, ih) : DP.call(null, e, ih), e = kQ.b ? kQ.b(e) : kQ.call(null, e), e = d.a ? d.a(null, e) : d.call(null, null, e), b[2] = e, ox(b), 
            X) : null;
          };
        }(b, f), b, f);
      }(), n = function() {
        var a = e.o ? e.o() : e.call(null);
        a[6] = b;
        return a;
      }();
      return ix(n);
    };
  }(b, this));
  return b;
};
h.Ke = function() {
  return iQ();
};
h.Le = function(b, a, c, d) {
  return iQ(Kf(bQ, this, a, c, C([d], 0)));
};
h.Je = function(b, a, c, d) {
  return bQ.ba(this, a, c, S, d);
};
h.Vd = function(b, a, c, d, e) {
  BP();
  b = rx(1);
  Vw(function(b, g) {
    return function() {
      var f = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (T) {
                    if (T instanceof Object) {
                      b[5] = T, ox(b), c = X;
                    } else {
                      throw T;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(b) {
            var f = b[1];
            if (1 === f) {
              return f = eM(a, c, d), jx(b, 2, f);
            }
            if (2 === f) {
              var f = b[2], g = DD(f);
              b[7] = f;
              b[1] = m(g) ? 3 : 4;
              return X;
            }
            return 3 === f ? (f = b[7], f = fj(f), f = e.a ? e.a(f, null) : e.call(null, f, null), b[2] = f, b[1] = 5, X) : 4 === f ? (b[2] = null, b[1] = 8, X) : 5 === f ? lx(b, b[2]) : 6 === f ? (b[2] = b[2], b[1] = 5, X) : 7 === f ? (f = fj(b[2]), f = e.a ? e.a(f, null) : e.call(null, f, null), b[2] = f, ox(b), X) : 8 === f ? (f = b[7], nx(b, 7, 6), f = DP.a ? DP.a(f, ih) : DP.call(null, f, ih), f = kQ.b ? kQ.b(f) : kQ.call(null, f), f = e.a ? e.a(null, f) : e.call(null, null, f), b[2] = f, ox(b), 
            X) : null;
          };
        }(b, g), b, g);
      }(), r = function() {
        var a = f.o ? f.o() : f.call(null);
        a[6] = b;
        return a;
      }();
      return ix(r);
    };
  }(b, this));
  return b;
};
h.ea = function() {
  return new Zg(0, this, 0, E, m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 0 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(oi, a) ? J.a(Wd(gg.a(S, this), this.h), a) : new jQ(this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return new jQ(this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(E, this.g));
};
h.U = function(b, a) {
  return new jQ(a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
na("api_modeling_framework.core.__GT_RAMLParser", function() {
  return new jQ(null, null, null);
});
na("api_modeling_framework.core.map__GT_RAMLParser", function(b) {
  return new jQ(null, J.b(b), null);
});
function lQ(b, a, c) {
  this.h = b;
  this.g = a;
  this.m = c;
  this.l = 2229667594;
  this.M = 8192;
}
h = lQ.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return t.c(this.g, a, c);
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.core.OpenAPIParser{", ", ", "}", c, N.a(E, this.g));
};
h.He = function() {
  return iQ();
};
h.Ie = function() {
  return iQ();
};
h.Fe = function(b, a, c) {
  return aQ.K(this, a, S, c);
};
h.Ge = function(b, a, c, d) {
  b = rx(1);
  Vw(function(b, c) {
    return function() {
      var e = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (O) {
                    if (O instanceof Object) {
                      b[5] = O, ox(b), c = X;
                    } else {
                      throw O;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(b) {
            var c = b[1];
            if (1 === c) {
              return c = bM(a), jx(b, 2, c);
            }
            if (2 === c) {
              var c = b[2], e = DD(c);
              b[7] = c;
              b[1] = m(e) ? 3 : 4;
              return X;
            }
            return 3 === c ? (c = b[7], c = fj(c), c = d.a ? d.a(c, null) : d.call(null, c, null), b[2] = c, b[1] = 5, X) : 4 === c ? (b[2] = null, b[1] = 8, X) : 5 === c ? lx(b, b[2]) : 6 === c ? (b[2] = b[2], b[1] = 5, X) : 7 === c ? (c = fj(b[2]), c = d.a ? d.a(c, null) : d.call(null, c, null), b[2] = c, ox(b), X) : 8 === c ? (c = b[7], nx(b, 7, 6), c = BO.a ? BO.a(c, ih) : BO.call(null, c, ih), c = kQ.b ? kQ.b(c) : kQ.call(null, c), c = d.a ? d.a(null, c) : d.call(null, null, c), b[2] = c, ox(b), 
            X) : null;
          };
        }(b, c), b, c);
      }(), f = function() {
        var a = e.o ? e.o() : e.call(null);
        a[6] = b;
        return a;
      }();
      return ix(f);
    };
  }(b, this));
  return b;
};
h.Ke = function() {
  return iQ();
};
h.Le = function(b, a, c, d) {
  return iQ(Kf(bQ, this, a, c, C([d], 0)));
};
h.Je = function(b, a, c, d) {
  return bQ.ba(this, a, c, S, d);
};
h.Vd = function(b, a, c, d, e) {
  b = rx(1);
  Vw(function(b, d) {
    return function() {
      var f = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (T) {
                    if (T instanceof Object) {
                      b[5] = T, ox(b), c = X;
                    } else {
                      throw T;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(b) {
            var d = b[1];
            if (1 === d) {
              return d = cM(a, c), jx(b, 2, d);
            }
            if (2 === d) {
              var d = b[2], f = DD(d);
              b[7] = d;
              b[1] = m(f) ? 3 : 4;
              return X;
            }
            return 3 === d ? (d = b[7], d = fj(d), d = e.a ? e.a(d, null) : e.call(null, d, null), b[2] = d, b[1] = 5, X) : 4 === d ? (b[2] = null, b[1] = 8, X) : 5 === d ? lx(b, b[2]) : 6 === d ? (b[2] = b[2], b[1] = 5, X) : 7 === d ? (d = fj(b[2]), d = e.a ? e.a(d, null) : e.call(null, d, null), b[2] = d, ox(b), X) : 8 === d ? (d = b[7], nx(b, 7, 6), d = BO.a ? BO.a(d, ih) : BO.call(null, d, ih), d = kQ.b ? kQ.b(d) : kQ.call(null, d), d = e.a ? e.a(null, d) : e.call(null, null, d), b[2] = d, ox(b), 
            X) : null;
          };
        }(b, d), b, d);
      }(), g = function() {
        var a = f.o ? f.o() : f.call(null);
        a[6] = b;
        return a;
      }();
      return ix(g);
    };
  }(b, this));
  return b;
};
h.ea = function() {
  return new Zg(0, this, 0, E, m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 0 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(oi, a) ? J.a(Wd(gg.a(S, this), this.h), a) : new lQ(this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return new lQ(this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(E, this.g));
};
h.U = function(b, a) {
  return new lQ(a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
na("api_modeling_framework.core.__GT_OpenAPIParser", function() {
  return new lQ(null, null, null);
});
na("api_modeling_framework.core.map__GT_OpenAPIParser", function(b) {
  return new lQ(null, J.b(b), null);
});
function mQ(b, a, c) {
  this.h = b;
  this.g = a;
  this.m = c;
  this.l = 2229667594;
  this.M = 8192;
}
h = mQ.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return t.c(this.g, a, c);
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.core.APIModelParser{", ", ", "}", c, N.a(E, this.g));
};
h.He = function() {
  return iQ();
};
h.Ie = function() {
  return iQ();
};
h.Fe = function(b, a, c) {
  return aQ.K(this, a, S, c);
};
h.Ge = function(b, a, c, d) {
  b = rx(1);
  Vw(function(b, c) {
    return function() {
      var e = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (O) {
                    if (O instanceof Object) {
                      b[5] = O, ox(b), c = X;
                    } else {
                      throw O;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(b) {
            var c = b[1];
            if (1 === c) {
              return c = TM(a), jx(b, 2, c);
            }
            if (2 === c) {
              var c = b[2], e = DD(c);
              b[7] = c;
              b[1] = m(e) ? 3 : 4;
              return X;
            }
            return 3 === c ? (c = b[7], c = fj(c), c = d.a ? d.a(c, null) : d.call(null, c, null), b[2] = c, b[1] = 5, X) : 4 === c ? (b[2] = null, b[1] = 8, X) : 5 === c ? lx(b, b[2]) : 6 === c ? (b[2] = b[2], b[1] = 5, X) : 7 === c ? (c = fj(b[2]), c = d.a ? d.a(c, null) : d.call(null, c, null), b[2] = c, ox(b), X) : 8 === c ? (c = b[7], nx(b, 7, 6), c = KP.b ? KP.b(c) : KP.call(null, c), c = kQ.b ? kQ.b(c) : kQ.call(null, c), c = d.a ? d.a(null, c) : d.call(null, null, c), b[2] = c, ox(b), X) : 
            null;
          };
        }(b, c), b, c);
      }(), f = function() {
        var a = e.o ? e.o() : e.call(null);
        a[6] = b;
        return a;
      }();
      return ix(f);
    };
  }(b, this));
  return b;
};
h.Ke = function() {
  return iQ();
};
h.Le = function(b, a, c, d) {
  return iQ(Kf(bQ, this, a, c, C([d], 0)));
};
h.Je = function(b, a, c, d) {
  return bQ.ba(this, a, c, S, d);
};
h.Vd = function(b, a, c, d, e) {
  b = rx(1);
  Vw(function(b, d) {
    return function() {
      var f = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (T) {
                    if (T instanceof Object) {
                      b[5] = T, ox(b), c = X;
                    } else {
                      throw T;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(b) {
            var d = b[1];
            if (1 === d) {
              return d = UM(a, c), jx(b, 2, d);
            }
            if (2 === d) {
              var d = b[2], f = DD(d);
              b[7] = d;
              b[1] = m(f) ? 3 : 4;
              return X;
            }
            return 3 === d ? (d = b[7], d = fj(d), d = e.a ? e.a(d, null) : e.call(null, d, null), b[2] = d, b[1] = 5, X) : 4 === d ? (b[2] = null, b[1] = 8, X) : 5 === d ? lx(b, b[2]) : 6 === d ? (b[2] = b[2], b[1] = 5, X) : 7 === d ? (d = fj(b[2]), d = e.a ? e.a(d, null) : e.call(null, d, null), b[2] = d, ox(b), X) : 8 === d ? (d = b[7], nx(b, 7, 6), d = KP.b ? KP.b(d) : KP.call(null, d), d = kQ.b ? kQ.b(d) : kQ.call(null, d), d = e.a ? e.a(null, d) : e.call(null, null, d), b[2] = d, ox(b), X) : 
            null;
          };
        }(b, d), b, d);
      }(), g = function() {
        var a = f.o ? f.o() : f.call(null);
        a[6] = b;
        return a;
      }();
      return ix(g);
    };
  }(b, this));
  return b;
};
h.ea = function() {
  return new Zg(0, this, 0, E, m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 0 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.ia = function(b, a) {
  return ze(oi, a) ? J.a(Wd(gg.a(S, this), this.h), a) : new mQ(this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return new mQ(this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(E, this.g));
};
h.U = function(b, a) {
  return new mQ(a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
na("api_modeling_framework.core.__GT_APIModelParser", function() {
  return new mQ(null, null, null);
});
na("api_modeling_framework.core.map__GT_APIModelParser", function(b) {
  return new mQ(null, J.b(b), null);
});
function nQ(b, a, c) {
  this.h = b;
  this.g = a;
  this.m = c;
  this.l = 2229667594;
  this.M = 8192;
}
h = nQ.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return t.c(this.g, a, c);
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.core.APIModelGenerator{", ", ", "}", c, N.a(E, this.g));
};
h.ea = function() {
  return new Zg(0, this, 0, E, m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 0 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.Ee = function(b, a, c, d, e) {
  b = rx(1);
  Vw(function(a, b) {
    return function() {
      var f = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (T) {
                    if (T instanceof Object) {
                      b[5] = T, ox(b), c = X;
                    } else {
                      throw T;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(a) {
            var b = a[1];
            if (1 === b) {
              return a[2] = null, a[1] = 4, X;
            }
            if (2 === b) {
              return lx(a, a[2]);
            }
            if (3 === b) {
              return b = fj(a[2]), b = e.a ? e.a(b, null) : e.call(null, b, null), a[2] = b, ox(a), X;
            }
            if (4 === b) {
              nx(a, 3, 2);
              var b = BD(d), f = NP(c), g = t.c(b, "source-maps?", !1), g = t.c(b, Gk, g), f = LM.a ? LM.a(f, g) : LM.call(null, f, g), g = t.c(b, "full-graph?", !0), b = t.c(b, Ln, g), b = ID(m(b) ? f : LP(f)), b = fj(b), b = e.a ? e.a(null, b) : e.call(null, null, b);
              a[2] = b;
              ox(a);
              return X;
            }
            return null;
          };
        }(a, b), a, b);
      }(), g = function() {
        var b = f.o ? f.o() : f.call(null);
        b[6] = a;
        return b;
      }();
      return ix(g);
    };
  }(b, this));
  return b;
};
h.De = function(b, a, c, d, e) {
  b = rx(1);
  Vw(function(a, b) {
    return function() {
      var f = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (T) {
                    if (T instanceof Object) {
                      b[5] = T, ox(b), c = X;
                    } else {
                      throw T;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(a) {
            var b = a[1];
            if (1 === b) {
              var b = BD(d), f = NP(c), g = t.c(b, "source-maps?", !1), g = t.c(b, Gk, g), f = LM.a ? LM.a(f, g) : LM.call(null, f, g), g = t.c(b, "full-graph?", !0), b = t.c(b, Ln, g), b = ID(m(b) ? f : LP(f)), f = DD(b);
              a[7] = b;
              a[1] = m(f) ? 2 : 3;
              return X;
            }
            return 2 === b ? (b = a[7], b = fj(b), b = e.a ? e.a(b, null) : e.call(null, b, null), a[2] = b, a[1] = 4, X) : 3 === b ? (b = a[7], b = fj(b), b = e.a ? e.a(null, b) : e.call(null, null, b), a[2] = b, a[1] = 4, X) : 4 === b ? lx(a, a[2]) : null;
          };
        }(a, b), a, b);
      }(), g = function() {
        var b = f.o ? f.o() : f.call(null);
        b[6] = a;
        return b;
      }();
      return ix(g);
    };
  }(b, this));
  return b;
};
h.ia = function(b, a) {
  return ze(oi, a) ? J.a(Wd(gg.a(S, this), this.h), a) : new nQ(this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return new nQ(this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(E, this.g));
};
h.U = function(b, a) {
  return new nQ(a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
na("api_modeling_framework.core.__GT_APIModelGenerator", function() {
  return new nQ(null, null, null);
});
na("api_modeling_framework.core.map__GT_APIModelGenerator", function(b) {
  return new nQ(null, J.b(b), null);
});
function oQ(b) {
  if ("string" === typeof b) {
    return b;
  }
  v.a(b, zm);
  return "#% RAML 1.0";
}
function pQ(b, a, c) {
  this.h = b;
  this.g = a;
  this.m = c;
  this.l = 2229667594;
  this.M = 8192;
}
h = pQ.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return t.c(this.g, a, c);
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.core.RAMLGenerator{", ", ", "}", c, N.a(E, this.g));
};
h.ea = function() {
  return new Zg(0, this, 0, E, m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 0 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.Ee = function(b, a, c, d, e) {
  b = rx(1);
  Vw(function(b, g) {
    return function() {
      var f = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (T) {
                    if (T instanceof Object) {
                      b[5] = T, ox(b), c = X;
                    } else {
                      throw T;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(b) {
            var f = b[1];
            if (1 === f) {
              return b[2] = null, b[1] = 4, X;
            }
            if (2 === f) {
              return lx(b, b[2]);
            }
            if (3 === f) {
              return f = fj(b[2]), f = e.a ? e.a(f, null) : e.call(null, f, null), b[2] = f, ox(b), X;
            }
            if (4 === f) {
              return nx(b, 3, 2), f = JD(d), b[7] = f, b[1] = m(f) ? 5 : 6, X;
            }
            if (5 === f) {
              return f = b[7], b[2] = f, b[1] = 7, X;
            }
            if (6 === f) {
              return b[2] = ih, b[1] = 7, X;
            }
            if (7 === f) {
              var f = b[2], g = fe([ev, Or], [a, nn]), f = ki.j(C([f, g], 0)), f = BD(f), g = NP(c), n = dP.a ? dP.a(g, f) : dP.call(null, g, f), g = xy(n), n = zy(n), n = oQ(n), f = I.c(f, ep, n), g = GO(IO(g, f)), f = null != ep.b(f) ? [q(ep.b(f)), q("\n"), q(g)].join("") : g, f = fj(f), f = e.a ? e.a(null, f) : e.call(null, null, f);
              b[2] = f;
              ox(b);
              return X;
            }
            return null;
          };
        }(b, g), b, g);
      }(), r = function() {
        var a = f.o ? f.o() : f.call(null);
        a[6] = b;
        return a;
      }();
      return ix(r);
    };
  }(b, this));
  return b;
};
h.De = function(b, a, c, d, e) {
  b = rx(1);
  Vw(function(b, g) {
    return function() {
      var f = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (T) {
                    if (T instanceof Object) {
                      b[5] = T, ox(b), c = X;
                    } else {
                      throw T;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(b) {
            var f = b[1];
            if (1 === f) {
              return f = JD(d), b[7] = f, b[1] = m(f) ? 2 : 3, X;
            }
            if (2 === f) {
              return f = b[7], b[2] = f, b[1] = 4, X;
            }
            if (3 === f) {
              return b[2] = ih, b[1] = 4, X;
            }
            if (4 === f) {
              var g, f = b[2];
              g = fe([ev, Or], [a, nn]);
              f = ki.j(C([f, g], 0));
              f = BD(f);
              g = NP(c);
              g = dP.a ? dP.a(g, f) : dP.call(null, g, f);
              b[8] = f;
              return jx(b, 5, g);
            }
            if (5 === f) {
              g = b[8];
              var n = b[2], f = xy(n), n = zy(n), n = oQ(n);
              g = I.c(g, ep, n);
              f = GD(f, GO(IO(a, g)));
              g = DD(f);
              b[9] = f;
              b[1] = m(g) ? 6 : 7;
              return X;
            }
            return 6 === f ? (f = b[9], f = fj(f), f = e.a ? e.a(f, null) : e.call(null, f, null), b[2] = f, b[1] = 8, X) : 7 === f ? (f = b[9], f = fj(f), f = e.a ? e.a(null, f) : e.call(null, null, f), b[2] = f, b[1] = 8, X) : 8 === f ? lx(b, b[2]) : null;
          };
        }(b, g), b, g);
      }(), r = function() {
        var a = f.o ? f.o() : f.call(null);
        a[6] = b;
        return a;
      }();
      return ix(r);
    };
  }(b, this));
  return b;
};
h.ia = function(b, a) {
  return ze(oi, a) ? J.a(Wd(gg.a(S, this), this.h), a) : new pQ(this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return new pQ(this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(E, this.g));
};
h.U = function(b, a) {
  return new pQ(a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
na("api_modeling_framework.core.__GT_RAMLGenerator", function() {
  return new pQ(null, null, null);
});
na("api_modeling_framework.core.map__GT_RAMLGenerator", function(b) {
  return new pQ(null, J.b(b), null);
});
function qQ(b, a, c) {
  this.h = b;
  this.g = a;
  this.m = c;
  this.l = 2229667594;
  this.M = 8192;
}
h = qQ.prototype;
h.W = function(b, a) {
  return Tb.c(this, a, null);
};
h.T = function(b, a, c) {
  return t.c(this.g, a, c);
};
h.X = function(b, a, c) {
  return Ei(a, function() {
    return function(b) {
      return Ei(a, Mi, "", " ", "", c, b);
    };
  }(this), "#api-modeling-framework.core.OpenAPIGenerator{", ", ", "}", c, N.a(E, this.g));
};
h.ea = function() {
  return new Zg(0, this, 0, E, m(this.g) ? ad(this.g) : Af());
};
h.S = function() {
  return this.h;
};
h.$ = function() {
  return 0 + B(this.g);
};
h.Y = function() {
  var b = this.m;
  return null != b ? b : this.m = b = Te(this);
};
h.O = function(b, a) {
  var c;
  c = m(a) ? (c = this.constructor === a.constructor) ? Yg(this, a) : c : a;
  return m(c) ? !0 : !1;
};
h.Ee = function(b, a, c, d, e) {
  b = rx(1);
  Vw(function(b, g) {
    return function() {
      var f = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (T) {
                    if (T instanceof Object) {
                      b[5] = T, ox(b), c = X;
                    } else {
                      throw T;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(b) {
            var f = b[1];
            if (1 === f) {
              return b[2] = null, b[1] = 4, X;
            }
            if (2 === f) {
              return lx(b, b[2]);
            }
            if (3 === f) {
              return f = fj(b[2]), f = e.a ? e.a(f, null) : e.call(null, f, null), b[2] = f, ox(b), X;
            }
            if (4 === f) {
              return nx(b, 3, 2), f = JD(d), b[7] = f, b[1] = m(f) ? 5 : 6, X;
            }
            if (5 === f) {
              return f = b[7], b[2] = f, b[1] = 7, X;
            }
            if (6 === f) {
              return b[2] = ih, b[1] = 7, X;
            }
            if (7 === f) {
              var f = b[2], g = fe([ev, Or], [a, Hu]), f = ki.j(C([f, g], 0)), f = BD(f), g = NP(c), g = BN.a ? BN.a(g, f) : BN.call(null, g, f), g = xy(g), f = ID(kJ(OM(g, f))), f = fj(f), f = e.a ? e.a(null, f) : e.call(null, null, f);
              b[2] = f;
              ox(b);
              return X;
            }
            return null;
          };
        }(b, g), b, g);
      }(), r = function() {
        var a = f.o ? f.o() : f.call(null);
        a[6] = b;
        return a;
      }();
      return ix(r);
    };
  }(b, this));
  return b;
};
h.De = function(b, a, c, d, e) {
  b = rx(1);
  Vw(function(b, g) {
    return function() {
      var f = function() {
        return function(a) {
          return function() {
            function b(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a(b);
                      if (!L(d, X)) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (T) {
                    if (T instanceof Object) {
                      b[5] = T, ox(b), c = X;
                    } else {
                      throw T;
                    }
                  }
                }
                if (!L(c, X)) {
                  return c;
                }
              }
            }
            function c() {
              var a = [null, null, null, null, null, null, null, null, null];
              a[0] = d;
              a[1] = 1;
              return a;
            }
            var d = null, d = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return b.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            d.o = c;
            d.b = b;
            return d;
          }();
        }(function() {
          return function(b) {
            var f = b[1];
            if (1 === f) {
              return f = JD(d), b[7] = f, b[1] = m(f) ? 2 : 3, X;
            }
            if (2 === f) {
              return f = b[7], b[2] = f, b[1] = 4, X;
            }
            if (3 === f) {
              return b[2] = ih, b[1] = 4, X;
            }
            if (4 === f) {
              var f = b[2], g = fe([ev, Or], [a, Hu]), f = ki.j(C([f, g], 0)), f = BD(f), g = NP(c), g = BN.a ? BN.a(g, f) : BN.call(null, g, f), g = xy(g), f = ID(kJ(OM(g, f))), g = DD(f);
              b[8] = f;
              b[1] = m(g) ? 5 : 6;
              return X;
            }
            return 5 === f ? (f = b[8], f = fj(f), f = e.a ? e.a(f, null) : e.call(null, f, null), b[2] = f, b[1] = 7, X) : 6 === f ? (f = b[8], f = fj(f), f = e.a ? e.a(null, f) : e.call(null, null, f), b[2] = f, b[1] = 7, X) : 7 === f ? lx(b, b[2]) : null;
          };
        }(b, g), b, g);
      }(), r = function() {
        var a = f.o ? f.o() : f.call(null);
        a[6] = b;
        return a;
      }();
      return ix(r);
    };
  }(b, this));
  return b;
};
h.ia = function(b, a) {
  return ze(oi, a) ? J.a(Wd(gg.a(S, this), this.h), a) : new qQ(this.h, zf(J.a(this.g, a)), null);
};
h.fa = function(b, a, c) {
  return new qQ(this.h, I.c(this.g, a, c), null);
};
h.aa = function() {
  return w(N.a(E, this.g));
};
h.U = function(b, a) {
  return new qQ(a, this.g, this.m);
};
h.Z = function(b, a) {
  return re(a) ? Vb(this, Kb.a(a, 0), Kb.a(a, 1)) : Cb.c(Hb, this, a);
};
na("api_modeling_framework.core.__GT_OpenAPIGenerator", function() {
  return new qQ(null, null, null);
});
na("api_modeling_framework.core.map__GT_OpenAPIGenerator", function(b) {
  return new qQ(null, J.b(b), null);
});
var rQ = function rQ(a, c) {
  return m(function() {
    var d = pe(a);
    if (d) {
      var e = Np.b(a);
      return m(e) ? Df(function() {
        return function(a) {
          return v.a(c, Z.b(a));
        };
      }(e, d), Np.b(a)) : e;
    }
    return d;
  }()) ? x(cg(function(a) {
    return v.a(c, Z.b(a));
  }, Np.b(a))) : pe(a) ? v.a(c, function() {
    var c = Z.b(a);
    return m(c) ? c : t.a(a, "@id");
  }()) ? a : x(cg(sb, Tf.a(function(a) {
    return rQ.a ? rQ.a(a, c) : rQ.call(null, a, c);
  }, fh(a)))) : me(a) ? x(cg(sb, Tf.a(function(a) {
    return rQ.a ? rQ.a(a, c) : rQ.call(null, a, c);
  }, a))) : null;
}, kQ = function kQ(a) {
  var c = U ? U(null) : Nf.call(null, null), d = U ? U(S) : Nf.call(null, S);
  "undefined" === typeof MP && (MP = function(a, c, d, n, r, u) {
    this.xa = a;
    this.ef = c;
    this.bf = d;
    this.Jd = n;
    this.Ag = r;
    this.Mh = u;
    this.l = 393216;
    this.M = 0;
  }, MP.prototype.U = function() {
    return function(a, c) {
      return new MP(this.xa, this.ef, this.bf, this.Jd, this.Ag, c);
    };
  }(c, d), MP.prototype.S = function() {
    return function() {
      return this.Mh;
    };
  }(c, d), MP.prototype.Kf = function() {
    return function() {
      if (null != (A.b ? A.b(this.Jd) : A.call(null, this.Jd))) {
        return A.b ? A.b(this.Jd) : A.call(null, this.Jd);
      }
      var a;
      a = this.xa;
      a = MN.a ? MN.a(a, S) : MN.call(null, a, S);
      Qf.a ? Qf.a(this.Jd, a) : Qf.call(null, this.Jd, a);
      return a;
    };
  }(c, d), MP.prototype.Nf = function() {
    return function() {
      return ny(this.xa);
    };
  }(c, d), MP.prototype.Jf = function() {
    return function() {
      return this.xa;
    };
  }(c, d), MP.prototype.Pf = function(a, c) {
    return function(d, e) {
      if (v.a(e, ny(this.xa))) {
        return this;
      }
      var f = x(cg(function() {
        return function(a) {
          return v.a(e, ny(a));
        };
      }(this, a, c), oy(this.xa)));
      if (null != f) {
        return kQ.b ? kQ.b(f) : kQ.call(null, f);
      }
      throw Error([q("Cannot find reference "), q(e), q(" in the model")].join(""));
    };
  }(c, d), MP.prototype.Of = function() {
    return function() {
      return Bm.b(this.xa);
    };
  }(c, d), MP.prototype.Qf = function() {
    return function() {
      return fj(Tf.a(ev, oy(this.xa)));
    };
  }(c, d), MP.prototype.Mf = function(a, c) {
    return function(d, e) {
      var f = this, g = this, n = f.Ag;
      return fj(function() {
        var d = t.a(A.b ? A.b(n) : A.call(null, n), e);
        if (m(d)) {
          var r;
          return d;
        }
        var u = rQ(f.xa, e);
        r = Wk.b(u);
        return null != r ? (Rf.a(n, function(a, c) {
          return function(a) {
            return I.c(a, e, c);
          };
        }(u, r, d, n, g, a, c)), r) : null;
      }());
    };
  }(c, d), MP.prototype.Sf = function(a, c) {
    return function(d, e, f, u, y) {
      var g = this;
      d = rx(1);
      Vw(function(a, c, d, n) {
        return function() {
          var r = function() {
            return function(a) {
              return function() {
                function c(c) {
                  for (;;) {
                    var d;
                    a: {
                      try {
                        for (;;) {
                          var e = a(c);
                          if (!L(e, X)) {
                            d = e;
                            break a;
                          }
                        }
                      } catch (Ua) {
                        if (Ua instanceof Object) {
                          c[5] = Ua, ox(c), d = X;
                        } else {
                          throw Ua;
                        }
                      }
                    }
                    if (!L(d, X)) {
                      return d;
                    }
                  }
                }
                function d() {
                  var a = [null, null, null, null, null, null, null, null];
                  a[0] = e;
                  a[1] = 1;
                  return a;
                }
                var e = null, e = function(a) {
                  switch(arguments.length) {
                    case 0:
                      return d.call(this);
                    case 1:
                      return c.call(this, a);
                  }
                  throw Error("Invalid arity: " + arguments.length);
                };
                e.o = d;
                e.b = c;
                return e;
              }();
            }(function() {
              return function(a) {
                var c = a[1];
                if (1 === c) {
                  var c = v.a(f, "raml"), d = v.a(f, "open-api");
                  a[1] = m(c || d) ? 2 : 3;
                  return X;
                }
                return 2 === c ? (c = g.bf.c ? g.bf.c(f, e, u) : g.bf.call(null, f, e, u), jx(a, 5, c)) : 3 === c ? (c = [bo], d = [q("Unsupported spec "), q(f), q(" only 'raml' and 'openapi' supported")].join(""), c = fe(c, [Error(d)]), c = y.a ? y.a(c, null) : y.call(null, c, null), a[2] = c, a[1] = 4, X) : 4 === c ? lx(a, a[2]) : 5 === c ? (c = a[2], d = ny(g.xa), d = v.a(d, e), a[7] = c, a[1] = d ? 6 : 7, X) : 6 === c ? (c = a[7], c = y.a ? y.a(null, c) : y.call(null, null, c), a[2] = c, a[1] = 
                8, X) : 7 === c ? (c = a[7], c = g.ef.a ? g.ef.a(g.xa, c) : g.ef.call(null, g.xa, c), c = y.a ? y.a(null, c) : y.call(null, null, c), a[2] = c, a[1] = 8, X) : 8 === c ? (a[2] = a[2], a[1] = 4, X) : null;
              };
            }(a, c, d, n), a, c, d, n);
          }(), D = function() {
            var c = r.o ? r.o() : r.call(null);
            c[6] = a;
            return c;
          }();
          return ix(D);
        };
      }(d, this, a, c));
      return d;
    };
  }(c, d), MP.prototype.Rf = function() {
    return function() {
      var a = null != this.xa ? k === this.xa.Ub ? !0 : this.xa.L ? !1 : p(ky, this.xa) : p(ky, this.xa);
      return (a ? null != this.xa ? k === this.xa.vc || (this.xa.L ? 0 : p(iy, this.xa)) : p(iy, this.xa) : a) ? "document" : (null != this.xa ? k === this.xa.Ub || (this.xa.L ? 0 : p(ky, this.xa)) : p(ky, this.xa)) ? "module" : (null != this.xa ? k === this.xa.vc || (this.xa.L ? 0 : p(iy, this.xa)) : p(iy, this.xa)) ? "fragment" : "unit";
    };
  }(c, d), MP.prototype.Lf = function() {
    return function(a, c, d) {
      a = v.a(c, "document") ? this.xa : RP(this);
      a = rQ(a, d);
      return null != a ? (d = ry(new l(null, 5, [ev, d, Tj, a, pp, v.a(a, "domain"), Po, Po.b(this.xa), Np, Np.b(this.xa)], null)), kQ.b ? kQ.b(d) : kQ.call(null, d)) : null;
    };
  }(c, d), MP.yc = function() {
    return function() {
      return new Q(null, 6, 5, R, [Fj, Et, ou, Zr, Js, Er], null);
    };
  }(c, d), MP.nc = !0, MP.Xb = "api-modeling-framework.core/t_api_modeling_framework$core53919", MP.rc = function() {
    return function(a, c) {
      return Ac(c, "api-modeling-framework.core/t_api_modeling_framework$core53919");
    };
  }(c, d));
  return new MP(a, function(a, c) {
    var d = cg(function(a) {
      return yf(ny(a), ny(c));
    }, oy(a)), d = N.a(d, new Q(null, 1, 5, R, [QP(c)], null)), d = I.c(a, Po, d);
    return kQ.b ? kQ.b(d) : kQ.call(null, d);
  }, function(a, c, d) {
    var e = rx(null);
    if (m(v.a ? v.a("raml", a) : v.call(null, "raml", a))) {
      (new jQ(null, null, null)).Vd(null, c, d, S, function(a, c, d) {
        return function(e, f) {
          var g = rx(1);
          Vw(function(a, c, d, e) {
            return function() {
              var g = function() {
                return function(a) {
                  return function() {
                    function c(c) {
                      for (;;) {
                        var d;
                        a: {
                          try {
                            for (;;) {
                              var e = a(c);
                              if (!L(e, X)) {
                                d = e;
                                break a;
                              }
                            }
                          } catch (Va) {
                            if (Va instanceof Object) {
                              c[5] = Va, ox(c), d = X;
                            } else {
                              throw Va;
                            }
                          }
                        }
                        if (!L(d, X)) {
                          return d;
                        }
                      }
                    }
                    function d() {
                      var a = [null, null, null, null, null, null, null];
                      a[0] = e;
                      a[1] = 1;
                      return a;
                    }
                    var e = null, e = function(a) {
                      switch(arguments.length) {
                        case 0:
                          return d.call(this);
                        case 1:
                          return c.call(this, a);
                      }
                      throw Error("Invalid arity: " + arguments.length);
                    };
                    e.o = d;
                    e.b = c;
                    return e;
                  }();
                }(function(a, c, d, e) {
                  return function(a) {
                    var c = a[1];
                    return 1 === c ? kx(a, 2, e, f) : 2 === c ? lx(a, a[2]) : null;
                  };
                }(a, c, d, e), a, c, d, e);
              }(), n = function() {
                var c = g.o ? g.o() : g.call(null);
                c[6] = a;
                return c;
              }();
              return ix(n);
            };
          }(g, a, c, d));
          return g;
        };
      }(v, a, e));
    } else {
      if (m(v.a ? v.a("open-api", a) : v.call(null, "open-api", a))) {
        (new lQ(null, null, null)).Vd(null, c, d, S, function(a, c, d) {
          return function(e, f) {
            var g = rx(1);
            Vw(function(a, c, d, e) {
              return function() {
                var g = function() {
                  return function(a) {
                    return function() {
                      function c(c) {
                        for (;;) {
                          var d;
                          a: {
                            try {
                              for (;;) {
                                var e = a(c);
                                if (!L(e, X)) {
                                  d = e;
                                  break a;
                                }
                              }
                            } catch (Va) {
                              if (Va instanceof Object) {
                                c[5] = Va, ox(c), d = X;
                              } else {
                                throw Va;
                              }
                            }
                          }
                          if (!L(d, X)) {
                            return d;
                          }
                        }
                      }
                      function d() {
                        var a = [null, null, null, null, null, null, null];
                        a[0] = e;
                        a[1] = 1;
                        return a;
                      }
                      var e = null, e = function(a) {
                        switch(arguments.length) {
                          case 0:
                            return d.call(this);
                          case 1:
                            return c.call(this, a);
                        }
                        throw Error("Invalid arity: " + arguments.length);
                      };
                      e.o = d;
                      e.b = c;
                      return e;
                    }();
                  }(function(a, c, d, e) {
                    return function(a) {
                      var c = a[1];
                      return 1 === c ? kx(a, 2, e, f) : 2 === c ? lx(a, a[2]) : null;
                    };
                  }(a, c, d, e), a, c, d, e);
                }(), n = function() {
                  var c = g.o ? g.o() : g.call(null);
                  c[6] = a;
                  return c;
                }();
                return ix(n);
              };
            }(g, a, c, d));
            return g;
          };
        }(v, a, e));
      } else {
        throw Error([q("No matching clause: "), q(a)].join(""));
      }
    }
    return e;
  }, c, d, S);
};

})();
